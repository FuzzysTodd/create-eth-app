{
	"id": "ce0cf02b3e35cbfef9e61a057652ba64",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.27",
	"solcLongVersion": "0.8.27+commit.40a35a09",
	"input": {
		"language": "Solidity",
		"sources": {
			"Compound(copy)(copy)/contracts/Governance/Comp.sol": {
				"content": "/*\n    \n   ██████  ██████   ██████  ██   ██ ██████   ██████   ██████  ██   ██    ██████  ███████ ██    ██\n  ██      ██    ██ ██    ██ ██  ██  ██   ██ ██    ██ ██    ██ ██  ██     ██   ██ ██      ██    ██\n  ██      ██    ██ ██    ██ █████   ██████  ██    ██ ██    ██ █████      ██   ██ █████   ██    ██\n  ██      ██    ██ ██    ██ ██  ██  ██   ██ ██    ██ ██    ██ ██  ██     ██   ██ ██       ██  ██\n   ██████  ██████   ██████  ██   ██ ██████   ██████   ██████  ██   ██ ██ ██████  ███████   ████\n  \n  Find any smart contract, and build your project faster: https://www.cookbook.dev\n  Twitter: https://twitter.com/cookbook_dev\n  Discord: https://discord.gg/cookbookdev\n  \n  Find this contract on Cookbook: https://www.cookbook.dev/protocols/Compound?utm=code\n  */\n  \n  // SPDX-License-Identifier: BSD-3-Clause\npragma solidity ^0.8.10;\n\ncontract Comp {\n    /// @notice EIP-20 token name for this token\n    string public constant name = \"Compound\";\n\n    /// @notice EIP-20 token symbol for this token\n    string public constant symbol = \"COMP\";\n\n    /// @notice EIP-20 token decimals for this token\n    uint8 public constant decimals = 18;\n\n    /// @notice Total number of tokens in circulation\n    uint public constant totalSupply = 10000000e18; // 10 million Comp\n\n    /// @notice Allowance amounts on behalf of others\n    mapping (address => mapping (address => uint96)) internal allowances;\n\n    /// @notice Official record of token balances for each account\n    mapping (address => uint96) internal balances;\n\n    /// @notice A record of each accounts delegate\n    mapping (address => address) public delegates;\n\n    /// @notice A checkpoint for marking number of votes from a given block\n    struct Checkpoint {\n        uint32 fromBlock;\n        uint96 votes;\n    }\n\n    /// @notice A record of votes checkpoints for each account, by index\n    mapping (address => mapping (uint32 => Checkpoint)) public checkpoints;\n\n    /// @notice The number of checkpoints for each account\n    mapping (address => uint32) public numCheckpoints;\n\n    /// @notice The EIP-712 typehash for the contract's domain\n    bytes32 public constant DOMAIN_TYPEHASH = keccak256(\"EIP712Domain(string name,uint256 chainId,address verifyingContract)\");\n\n    /// @notice The EIP-712 typehash for the delegation struct used by the contract\n    bytes32 public constant DELEGATION_TYPEHASH = keccak256(\"Delegation(address delegatee,uint256 nonce,uint256 expiry)\");\n\n    /// @notice A record of states for signing / validating signatures\n    mapping (address => uint) public nonces;\n\n    /// @notice An event thats emitted when an account changes its delegate\n    event DelegateChanged(address indexed delegator, address indexed fromDelegate, address indexed toDelegate);\n\n    /// @notice An event thats emitted when a delegate account's vote balance changes\n    event DelegateVotesChanged(address indexed delegate, uint previousBalance, uint newBalance);\n\n    /// @notice The standard EIP-20 transfer event\n    event Transfer(address indexed from, address indexed to, uint256 amount);\n\n    /// @notice The standard EIP-20 approval event\n    event Approval(address indexed owner, address indexed spender, uint256 amount);\n\n    /**\n     * @notice Construct a new Comp token\n     * @param account The initial account to grant all the tokens\n     */\n    constructor(address account) public {\n        balances[account] = uint96(totalSupply);\n        emit Transfer(address(0), account, totalSupply);\n    }\n\n    /**\n     * @notice Get the number of tokens `spender` is approved to spend on behalf of `account`\n     * @param account The address of the account holding the funds\n     * @param spender The address of the account spending the funds\n     * @return The number of tokens approved\n     */\n    function allowance(address account, address spender) external view returns (uint) {\n        return allowances[account][spender];\n    }\n\n    /**\n     * @notice Approve `spender` to transfer up to `amount` from `src`\n     * @dev This will overwrite the approval amount for `spender`\n     *  and is subject to issues noted [here](https://eips.ethereum.org/EIPS/eip-20#approve)\n     * @param spender The address of the account which may transfer tokens\n     * @param rawAmount The number of tokens that are approved (2^256-1 means infinite)\n     * @return Whether or not the approval succeeded\n     */\n    function approve(address spender, uint rawAmount) external returns (bool) {\n        uint96 amount;\n        if (rawAmount == type(uint).max) {\n            amount = type(uint96).max;\n        } else {\n            amount = safe96(rawAmount, \"Comp::approve: amount exceeds 96 bits\");\n        }\n\n        allowances[msg.sender][spender] = amount;\n\n        emit Approval(msg.sender, spender, amount);\n        return true;\n    }\n\n    /**\n     * @notice Get the number of tokens held by the `account`\n     * @param account The address of the account to get the balance of\n     * @return The number of tokens held\n     */\n    function balanceOf(address account) external view returns (uint) {\n        return balances[account];\n    }\n\n    /**\n     * @notice Transfer `amount` tokens from `msg.sender` to `dst`\n     * @param dst The address of the destination account\n     * @param rawAmount The number of tokens to transfer\n     * @return Whether or not the transfer succeeded\n     */\n    function transfer(address dst, uint rawAmount) external returns (bool) {\n        uint96 amount = safe96(rawAmount, \"Comp::transfer: amount exceeds 96 bits\");\n        _transferTokens(msg.sender, dst, amount);\n        return true;\n    }\n\n    /**\n     * @notice Transfer `amount` tokens from `src` to `dst`\n     * @param src The address of the source account\n     * @param dst The address of the destination account\n     * @param rawAmount The number of tokens to transfer\n     * @return Whether or not the transfer succeeded\n     */\n    function transferFrom(address src, address dst, uint rawAmount) external returns (bool) {\n        address spender = msg.sender;\n        uint96 spenderAllowance = allowances[src][spender];\n        uint96 amount = safe96(rawAmount, \"Comp::approve: amount exceeds 96 bits\");\n\n        if (spender != src && spenderAllowance != type(uint96).max) {\n            uint96 newAllowance = sub96(spenderAllowance, amount, \"Comp::transferFrom: transfer amount exceeds spender allowance\");\n            allowances[src][spender] = newAllowance;\n\n            emit Approval(src, spender, newAllowance);\n        }\n\n        _transferTokens(src, dst, amount);\n        return true;\n    }\n\n    /**\n     * @notice Delegate votes from `msg.sender` to `delegatee`\n     * @param delegatee The address to delegate votes to\n     */\n    function delegate(address delegatee) public {\n        return _delegate(msg.sender, delegatee);\n    }\n\n    /**\n     * @notice Delegates votes from signatory to `delegatee`\n     * @param delegatee The address to delegate votes to\n     * @param nonce The contract state required to match the signature\n     * @param expiry The time at which to expire the signature\n     * @param v The recovery byte of the signature\n     * @param r Half of the ECDSA signature pair\n     * @param s Half of the ECDSA signature pair\n     */\n    function delegateBySig(address delegatee, uint nonce, uint expiry, uint8 v, bytes32 r, bytes32 s) public {\n        bytes32 domainSeparator = keccak256(abi.encode(DOMAIN_TYPEHASH, keccak256(bytes(name)), getChainId(), address(this)));\n        bytes32 structHash = keccak256(abi.encode(DELEGATION_TYPEHASH, delegatee, nonce, expiry));\n        bytes32 digest = keccak256(abi.encodePacked(\"\\x19\\x01\", domainSeparator, structHash));\n        address signatory = ecrecover(digest, v, r, s);\n        require(signatory != address(0), \"Comp::delegateBySig: invalid signature\");\n        require(nonce == nonces[signatory]++, \"Comp::delegateBySig: invalid nonce\");\n        require(block.timestamp <= expiry, \"Comp::delegateBySig: signature expired\");\n        return _delegate(signatory, delegatee);\n    }\n\n    /**\n     * @notice Gets the current votes balance for `account`\n     * @param account The address to get votes balance\n     * @return The number of current votes for `account`\n     */\n    function getCurrentVotes(address account) external view returns (uint96) {\n        uint32 nCheckpoints = numCheckpoints[account];\n        return nCheckpoints > 0 ? checkpoints[account][nCheckpoints - 1].votes : 0;\n    }\n\n    /**\n     * @notice Determine the prior number of votes for an account as of a block number\n     * @dev Block number must be a finalized block or else this function will revert to prevent misinformation.\n     * @param account The address of the account to check\n     * @param blockNumber The block number to get the vote balance at\n     * @return The number of votes the account had as of the given block\n     */\n    function getPriorVotes(address account, uint blockNumber) public view returns (uint96) {\n        require(blockNumber < block.number, \"Comp::getPriorVotes: not yet determined\");\n\n        uint32 nCheckpoints = numCheckpoints[account];\n        if (nCheckpoints == 0) {\n            return 0;\n        }\n\n        // First check most recent balance\n        if (checkpoints[account][nCheckpoints - 1].fromBlock <= blockNumber) {\n            return checkpoints[account][nCheckpoints - 1].votes;\n        }\n\n        // Next check implicit zero balance\n        if (checkpoints[account][0].fromBlock > blockNumber) {\n            return 0;\n        }\n\n        uint32 lower = 0;\n        uint32 upper = nCheckpoints - 1;\n        while (upper > lower) {\n            uint32 center = upper - (upper - lower) / 2; // ceil, avoiding overflow\n            Checkpoint memory cp = checkpoints[account][center];\n            if (cp.fromBlock == blockNumber) {\n                return cp.votes;\n            } else if (cp.fromBlock < blockNumber) {\n                lower = center;\n            } else {\n                upper = center - 1;\n            }\n        }\n        return checkpoints[account][lower].votes;\n    }\n\n    function _delegate(address delegator, address delegatee) internal {\n        address currentDelegate = delegates[delegator];\n        uint96 delegatorBalance = balances[delegator];\n        delegates[delegator] = delegatee;\n\n        emit DelegateChanged(delegator, currentDelegate, delegatee);\n\n        _moveDelegates(currentDelegate, delegatee, delegatorBalance);\n    }\n\n    function _transferTokens(address src, address dst, uint96 amount) internal {\n        require(src != address(0), \"Comp::_transferTokens: cannot transfer from the zero address\");\n        require(dst != address(0), \"Comp::_transferTokens: cannot transfer to the zero address\");\n\n        balances[src] = sub96(balances[src], amount, \"Comp::_transferTokens: transfer amount exceeds balance\");\n        balances[dst] = add96(balances[dst], amount, \"Comp::_transferTokens: transfer amount overflows\");\n        emit Transfer(src, dst, amount);\n\n        _moveDelegates(delegates[src], delegates[dst], amount);\n    }\n\n    function _moveDelegates(address srcRep, address dstRep, uint96 amount) internal {\n        if (srcRep != dstRep && amount > 0) {\n            if (srcRep != address(0)) {\n                uint32 srcRepNum = numCheckpoints[srcRep];\n                uint96 srcRepOld = srcRepNum > 0 ? checkpoints[srcRep][srcRepNum - 1].votes : 0;\n                uint96 srcRepNew = sub96(srcRepOld, amount, \"Comp::_moveVotes: vote amount underflows\");\n                _writeCheckpoint(srcRep, srcRepNum, srcRepOld, srcRepNew);\n            }\n\n            if (dstRep != address(0)) {\n                uint32 dstRepNum = numCheckpoints[dstRep];\n                uint96 dstRepOld = dstRepNum > 0 ? checkpoints[dstRep][dstRepNum - 1].votes : 0;\n                uint96 dstRepNew = add96(dstRepOld, amount, \"Comp::_moveVotes: vote amount overflows\");\n                _writeCheckpoint(dstRep, dstRepNum, dstRepOld, dstRepNew);\n            }\n        }\n    }\n\n    function _writeCheckpoint(address delegatee, uint32 nCheckpoints, uint96 oldVotes, uint96 newVotes) internal {\n      uint32 blockNumber = safe32(block.number, \"Comp::_writeCheckpoint: block number exceeds 32 bits\");\n\n      if (nCheckpoints > 0 && checkpoints[delegatee][nCheckpoints - 1].fromBlock == blockNumber) {\n          checkpoints[delegatee][nCheckpoints - 1].votes = newVotes;\n      } else {\n          checkpoints[delegatee][nCheckpoints] = Checkpoint(blockNumber, newVotes);\n          numCheckpoints[delegatee] = nCheckpoints + 1;\n      }\n\n      emit DelegateVotesChanged(delegatee, oldVotes, newVotes);\n    }\n\n    function safe32(uint n, string memory errorMessage) internal pure returns (uint32) {\n        require(n < 2**32, errorMessage);\n        return uint32(n);\n    }\n\n    function safe96(uint n, string memory errorMessage) internal pure returns (uint96) {\n        require(n < 2**96, errorMessage);\n        return uint96(n);\n    }\n\n    function add96(uint96 a, uint96 b, string memory errorMessage) internal pure returns (uint96) {\n        uint96 c = a + b;\n        require(c >= a, errorMessage);\n        return c;\n    }\n\n    function sub96(uint96 a, uint96 b, string memory errorMessage) internal pure returns (uint96) {\n        require(b <= a, errorMessage);\n        return a - b;\n    }\n\n    function getChainId() internal view returns (uint) {\n        uint256 chainId;\n        assembly { chainId := chainid() }\n        return chainId;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"Compound(copy)(copy)/contracts/Governance/Comp.sol": {
				"Comp": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "delegator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "fromDelegate",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "toDelegate",
									"type": "address"
								}
							],
							"name": "DelegateChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "delegate",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "previousBalance",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newBalance",
									"type": "uint256"
								}
							],
							"name": "DelegateVotesChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DELEGATION_TYPEHASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "DOMAIN_TYPEHASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "rawAmount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint32",
									"name": "",
									"type": "uint32"
								}
							],
							"name": "checkpoints",
							"outputs": [
								{
									"internalType": "uint32",
									"name": "fromBlock",
									"type": "uint32"
								},
								{
									"internalType": "uint96",
									"name": "votes",
									"type": "uint96"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "delegatee",
									"type": "address"
								}
							],
							"name": "delegate",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "delegatee",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "nonce",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "expiry",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "delegateBySig",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "delegates",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "getCurrentVotes",
							"outputs": [
								{
									"internalType": "uint96",
									"name": "",
									"type": "uint96"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "blockNumber",
									"type": "uint256"
								}
							],
							"name": "getPriorVotes",
							"outputs": [
								{
									"internalType": "uint96",
									"name": "",
									"type": "uint96"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "numCheckpoints",
							"outputs": [
								{
									"internalType": "uint32",
									"name": "",
									"type": "uint32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "dst",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "rawAmount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "src",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "dst",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "rawAmount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"params": {
									"account": "The address of the account holding the funds",
									"spender": "The address of the account spending the funds"
								},
								"returns": {
									"_0": "The number of tokens approved"
								}
							},
							"approve(address,uint256)": {
								"details": "This will overwrite the approval amount for `spender`  and is subject to issues noted [here](https://eips.ethereum.org/EIPS/eip-20#approve)",
								"params": {
									"rawAmount": "The number of tokens that are approved (2^256-1 means infinite)",
									"spender": "The address of the account which may transfer tokens"
								},
								"returns": {
									"_0": "Whether or not the approval succeeded"
								}
							},
							"balanceOf(address)": {
								"params": {
									"account": "The address of the account to get the balance of"
								},
								"returns": {
									"_0": "The number of tokens held"
								}
							},
							"constructor": {
								"params": {
									"account": "The initial account to grant all the tokens"
								}
							},
							"delegate(address)": {
								"params": {
									"delegatee": "The address to delegate votes to"
								}
							},
							"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)": {
								"params": {
									"delegatee": "The address to delegate votes to",
									"expiry": "The time at which to expire the signature",
									"nonce": "The contract state required to match the signature",
									"r": "Half of the ECDSA signature pair",
									"s": "Half of the ECDSA signature pair",
									"v": "The recovery byte of the signature"
								}
							},
							"getCurrentVotes(address)": {
								"params": {
									"account": "The address to get votes balance"
								},
								"returns": {
									"_0": "The number of current votes for `account`"
								}
							},
							"getPriorVotes(address,uint256)": {
								"details": "Block number must be a finalized block or else this function will revert to prevent misinformation.",
								"params": {
									"account": "The address of the account to check",
									"blockNumber": "The block number to get the vote balance at"
								},
								"returns": {
									"_0": "The number of votes the account had as of the given block"
								}
							},
							"transfer(address,uint256)": {
								"params": {
									"dst": "The address of the destination account",
									"rawAmount": "The number of tokens to transfer"
								},
								"returns": {
									"_0": "Whether or not the transfer succeeded"
								}
							},
							"transferFrom(address,address,uint256)": {
								"params": {
									"dst": "The address of the destination account",
									"rawAmount": "The number of tokens to transfer",
									"src": "The address of the source account"
								},
								"returns": {
									"_0": "Whether or not the transfer succeeded"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":1336:13901  contract Comp {... */\n  mstore(0x40, 0x80)\n    /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":3820:3969  constructor(address account) public {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":3866:3883  balances[account] */\n  dup2\n  and\n  0x00\n  dup2\n  dup2\n  mstore\n    /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":3866:3874  balances */\n  0x01\n    /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":3866:3883  balances[account] */\n  0x20\n  mstore\n  0x40\n  dup1\n  dup3\n  keccak256\n    /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":3866:3905  balances[account] = uint96(totalSupply) */\n  dup1\n  sload\n  not(sub(shl(0x60, 0x01), 0x01))\n  and\n    /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":1732:1743  10000000e18 */\n  0x084595161401484a000000\n    /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":3866:3905  balances[account] = uint96(totalSupply) */\n  swap1\n  dup2\n  or\n  swap1\n  swap2\n  sstore\n    /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":3920:3962  Transfer(address(0), account, totalSupply) */\n  swap1\n  mload\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n  swap2\n  tag_6\n  swap2\n    /* \"#utility.yul\":455:480   */\n  swap1\n  dup2\n  mstore\n    /* \"#utility.yul\":443:445   */\n  0x20\n    /* \"#utility.yul\":428:446   */\n  add\n  swap1\n    /* \"#utility.yul\":309:486   */\n  jump\n    /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":3920:3962  Transfer(address(0), account, totalSupply) */\ntag_6:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":3820:3969  constructor(address account) public {... */\n  pop\n    /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":1336:13901  contract Comp {... */\n  jump(tag_9)\n    /* \"#utility.yul\":14:304   */\ntag_3:\n    /* \"#utility.yul\":84:90   */\n  0x00\n    /* \"#utility.yul\":137:139   */\n  0x20\n    /* \"#utility.yul\":125:134   */\n  dup3\n    /* \"#utility.yul\":116:123   */\n  dup5\n    /* \"#utility.yul\":112:135   */\n  sub\n    /* \"#utility.yul\":108:140   */\n  slt\n    /* \"#utility.yul\":105:157   */\n  iszero\n  tag_11\n  jumpi\n    /* \"#utility.yul\":153:154   */\n  0x00\n    /* \"#utility.yul\":150:151   */\n  0x00\n    /* \"#utility.yul\":143:155   */\n  revert\n    /* \"#utility.yul\":105:157   */\ntag_11:\n    /* \"#utility.yul\":179:195   */\n  dup2\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":224:255   */\n  dup2\n  and\n    /* \"#utility.yul\":214:256   */\n  dup2\n  eq\n    /* \"#utility.yul\":204:274   */\n  tag_12\n  jumpi\n    /* \"#utility.yul\":270:271   */\n  0x00\n    /* \"#utility.yul\":267:268   */\n  0x00\n    /* \"#utility.yul\":260:272   */\n  revert\n    /* \"#utility.yul\":204:274   */\ntag_12:\n    /* \"#utility.yul\":293:298   */\n  swap4\n    /* \"#utility.yul\":14:304   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":309:486   */\ntag_9:\n    /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":1336:13901  contract Comp {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":1336:13901  contract Comp {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x70a08231\n      gt\n      tag_22\n      jumpi\n      dup1\n      0xb4b5ea57\n      gt\n      tag_23\n      jumpi\n      dup1\n      0xb4b5ea57\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xc3cda520\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xe7a324dc\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xf1127ed8\n      eq\n      tag_21\n      jumpi\n      revert(0x00, 0x00)\n    tag_23:\n      dup1\n      0x70a08231\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x782d6fe1\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x7ecebe00\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_16\n      jumpi\n      revert(0x00, 0x00)\n    tag_22:\n      dup1\n      0x23b872dd\n      gt\n      tag_24\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x587cde1e\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x5c19a95c\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x6fcfff45\n      eq\n      tag_11\n      jumpi\n      revert(0x00, 0x00)\n    tag_24:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x20606b70\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":1405:1445  string public constant name = \"Compound\" */\n    tag_3:\n      tag_25\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x08\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xc2, 0x10dbdb5c1bdd5b99)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\n    tag_25:\n      mload(0x40)\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":4867:5286  function approve(address spender, uint rawAmount) external returns (bool) {... */\n    tag_4:\n      tag_29\n      tag_30\n      calldatasize\n      0x04\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n    tag_29:\n      mload(0x40)\n        /* \"#utility.yul\":1085:1099   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1078:1100   */\n      iszero\n        /* \"#utility.yul\":1060:1101   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1048:1050   */\n      0x20\n        /* \"#utility.yul\":1033:1051   */\n      add\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":4867:5286  function approve(address spender, uint rawAmount) external returns (bool) {... */\n      tag_27\n        /* \"#utility.yul\":920:1107   */\n      jump\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":1697:1743  uint public constant totalSupply = 10000000e18 */\n    tag_5:\n      tag_35\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":1732:1743  10000000e18 */\n      0x084595161401484a000000\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":1697:1743  uint public constant totalSupply = 10000000e18 */\n      dup2\n      jump\n    tag_35:\n      mload(0x40)\n        /* \"#utility.yul\":1258:1283   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1246:1248   */\n      0x20\n        /* \"#utility.yul\":1231:1249   */\n      add\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":1697:1743  uint public constant totalSupply = 10000000e18 */\n      tag_27\n        /* \"#utility.yul\":1112:1289   */\n      jump\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":2603:2725  bytes32 public constant DOMAIN_TYPEHASH = keccak256(\"EIP712Domain(string name,uint256 chainId,address verifyingContract)\") */\n    tag_6:\n      tag_35\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":2645:2725  keccak256(\"EIP712Domain(string name,uint256 chainId,address verifyingContract)\") */\n      0x8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a866\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":2603:2725  bytes32 public constant DOMAIN_TYPEHASH = keccak256(\"EIP712Domain(string name,uint256 chainId,address verifyingContract)\") */\n      dup2\n      jump\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":6379:7043  function transferFrom(address src, address dst, uint rawAmount) external returns (bool) {... */\n    tag_7:\n      tag_29\n      tag_44\n      calldatasize\n      0x04\n      tag_45\n      jump\t// in\n    tag_44:\n      tag_46\n      jump\t// in\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":1601:1636  uint8 public constant decimals = 18 */\n    tag_8:\n      tag_48\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":1634:1636  18 */\n      0x12\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":1601:1636  uint8 public constant decimals = 18 */\n      dup2\n      jump\n    tag_48:\n      mload(0x40)\n        /* \"#utility.yul\":2027:2031   */\n      0xff\n        /* \"#utility.yul\":2015:2032   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1997:2033   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1985:1987   */\n      0x20\n        /* \"#utility.yul\":1970:1988   */\n      add\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":1601:1636  uint8 public constant decimals = 18 */\n      tag_27\n        /* \"#utility.yul\":1855:2039   */\n      jump\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":2068:2113  mapping (address => address) public delegates */\n    tag_9:\n      tag_52\n      tag_53\n      calldatasize\n      0x04\n      tag_54\n      jump\t// in\n    tag_53:\n      mstore(0x20, 0x02)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_52:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2399:2431   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2381:2432   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2369:2371   */\n      0x20\n        /* \"#utility.yul\":2354:2372   */\n      add\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":2068:2113  mapping (address => address) public delegates */\n      tag_27\n        /* \"#utility.yul\":2235:2438   */\n      jump\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":7185:7285  function delegate(address delegatee) public {... */\n    tag_10:\n      tag_58\n      tag_59\n      calldatasize\n      0x04\n      tag_54\n      jump\t// in\n    tag_59:\n      tag_60\n      jump\t// in\n    tag_58:\n      stop\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":2484:2533  mapping (address => uint32) public numCheckpoints */\n    tag_11:\n      tag_61\n      tag_62\n      calldatasize\n      0x04\n      tag_54\n      jump\t// in\n    tag_62:\n      mstore(0x20, 0x04)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xffffffff\n      and\n      dup2\n      jump\n    tag_61:\n      mload(0x40)\n        /* \"#utility.yul\":2617:2627   */\n      0xffffffff\n        /* \"#utility.yul\":2605:2628   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2587:2629   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2575:2577   */\n      0x20\n        /* \"#utility.yul\":2560:2578   */\n      add\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":2484:2533  mapping (address => uint32) public numCheckpoints */\n      tag_27\n        /* \"#utility.yul\":2443:2635   */\n      jump\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":5482:5588  function balanceOf(address account) external view returns (uint) {... */\n    tag_12:\n      tag_35\n      tag_67\n      calldatasize\n      0x04\n      tag_54\n      jump\t// in\n    tag_67:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":5564:5581  balances[account] */\n      and\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":5541:5545  uint */\n      0x00\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":5564:5581  balances[account] */\n      swap1\n      dup2\n      mstore\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":5564:5572  balances */\n      0x01\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":5564:5581  balances[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0x60, 0x01), 0x01)\n      and\n      swap1\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":5482:5588  function balanceOf(address account) external view returns (uint) {... */\n      jump\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":9335:10521  function getPriorVotes(address account, uint blockNumber) public view returns (uint96) {... */\n    tag_13:\n      tag_70\n      tag_71\n      calldatasize\n      0x04\n      tag_31\n      jump\t// in\n    tag_71:\n      tag_72\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      sub(shl(0x60, 0x01), 0x01)\n        /* \"#utility.yul\":2802:2841   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2784:2842   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2772:2774   */\n      0x20\n        /* \"#utility.yul\":2757:2775   */\n      add\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":9335:10521  function getPriorVotes(address account, uint blockNumber) public view returns (uint96) {... */\n      tag_27\n        /* \"#utility.yul\":2640:2848   */\n      jump\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":3011:3050  mapping (address => uint) public nonces */\n    tag_14:\n      tag_35\n      tag_76\n      calldatasize\n      0x04\n      tag_54\n      jump\t// in\n    tag_76:\n      mstore(0x20, 0x05)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":1503:1541  string public constant symbol = \"COMP\" */\n    tag_15:\n      tag_25\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x04\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xe4, 0x0434f4d5)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":5844:6078  function transfer(address dst, uint rawAmount) external returns (bool) {... */\n    tag_16:\n      tag_29\n      tag_83\n      calldatasize\n      0x04\n      tag_31\n      jump\t// in\n    tag_83:\n      tag_84\n      jump\t// in\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":8694:8913  function getCurrentVotes(address account) external view returns (uint96) {... */\n    tag_17:\n      tag_70\n      tag_87\n      calldatasize\n      0x04\n      tag_54\n      jump\t// in\n    tag_87:\n      tag_88\n      jump\t// in\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":7708:8500  function delegateBySig(address delegatee, uint nonce, uint expiry, uint8 v, bytes32 r, bytes32 s) public {... */\n    tag_18:\n      tag_58\n      tag_91\n      calldatasize\n      0x04\n      tag_92\n      jump\t// in\n    tag_91:\n      tag_93\n      jump\t// in\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":4265:4399  function allowance(address account, address spender) external view returns (uint) {... */\n    tag_19:\n      tag_35\n      tag_95\n      calldatasize\n      0x04\n      tag_96\n      jump\t// in\n    tag_95:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":4364:4383  allowances[account] */\n      swap2\n      dup3\n      and\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":4341:4345  uint */\n      0x00\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":4364:4383  allowances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":4364:4392  allowances[account][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      sub(shl(0x60, 0x01), 0x01)\n      and\n      swap1\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":4265:4399  function allowance(address account, address spender) external view returns (uint) {... */\n      jump\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":2816:2933  bytes32 public constant DELEGATION_TYPEHASH = keccak256(\"Delegation(address delegatee,uint256 nonce,uint256 expiry)\") */\n    tag_20:\n      tag_35\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":2862:2933  keccak256(\"Delegation(address delegatee,uint256 nonce,uint256 expiry)\") */\n      0xe48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":2816:2933  bytes32 public constant DELEGATION_TYPEHASH = keccak256(\"Delegation(address delegatee,uint256 nonce,uint256 expiry)\") */\n      dup2\n      jump\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":2348:2418  mapping (address => mapping (uint32 => Checkpoint)) public checkpoints */\n    tag_21:\n      tag_102\n      tag_103\n      calldatasize\n      0x04\n      tag_104\n      jump\t// in\n    tag_103:\n      0x03\n      0x20\n      swap1\n      dup2\n      mstore\n      0x00\n      swap3\n      dup4\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n      swap1\n      swap2\n      mstore\n      swap1\n      dup3\n      mstore\n      swap1\n      keccak256\n      sload\n      0xffffffff\n      dup2\n      and\n      swap1\n      shl(0x20, 0x01)\n      swap1\n      div\n      sub(shl(0x60, 0x01), 0x01)\n      and\n      dup3\n      jump\n    tag_102:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":4506:4516   */\n      0xffffffff\n        /* \"#utility.yul\":4494:4517   */\n      swap1\n      swap4\n      and\n        /* \"#utility.yul\":4476:4518   */\n      dup4\n      mstore\n      sub(shl(0x60, 0x01), 0x01)\n        /* \"#utility.yul\":4554:4593   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":4549:4551   */\n      0x20\n        /* \"#utility.yul\":4534:4552   */\n      dup4\n      add\n        /* \"#utility.yul\":4527:4594   */\n      mstore\n        /* \"#utility.yul\":4449:4467   */\n      add\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":2348:2418  mapping (address => mapping (uint32 => Checkpoint)) public checkpoints */\n      tag_27\n        /* \"#utility.yul\":4306:4600   */\n      jump\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":4867:5286  function approve(address spender, uint rawAmount) external returns (bool) {... */\n    tag_32:\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":4935:4939  bool */\n      0x00\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":4951:4964  uint96 amount */\n      0x00\n      not(0x00)\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":4978:4987  rawAmount */\n      dup4\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":4978:5005  rawAmount == type(uint).max */\n      sub\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":4974:5155  if (rawAmount == type(uint).max) {... */\n      tag_109\n      jumpi\n      pop\n      sub(shl(0x60, 0x01), 0x01)\n      jump(tag_110)\n    tag_109:\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":5086:5144  safe96(rawAmount, \"Comp::approve: amount exceeds 96 bits\") */\n      tag_111\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":5093:5102  rawAmount */\n      dup4\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":5086:5144  safe96(rawAmount, \"Comp::approve: amount exceeds 96 bits\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      data_32dab9ece0397c38c85244ed755f6110088fb13d43a7e9d6809da7619813d0fe\n      0x25\n      swap2\n      codecopy\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":5086:5092  safe96 */\n      tag_112\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":5086:5144  safe96(rawAmount, \"Comp::approve: amount exceeds 96 bits\") */\n      jump\t// in\n    tag_111:\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":5077:5144  amount = safe96(rawAmount, \"Comp::approve: amount exceeds 96 bits\") */\n      swap1\n      pop\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":4974:5155  if (rawAmount == type(uint).max) {... */\n    tag_110:\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":5176:5186  msg.sender */\n      caller\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":5165:5175  allowances */\n      0x00\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":5165:5187  allowances[msg.sender] */\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":5165:5196  allowances[msg.sender][spender] */\n      dup10\n      and\n      dup1\n      dup6\n      mstore\n      swap1\n      dup4\n      mstore\n      swap3\n      dup2\n      swap1\n      keccak256\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":5165:5205  allowances[msg.sender][spender] = amount */\n      dup1\n      sload\n      not(sub(shl(0x60, 0x01), 0x01))\n      and\n      sub(shl(0x60, 0x01), 0x01)\n      dup8\n      and\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":5221:5258  Approval(msg.sender, spender, amount) */\n      swap1\n      mload\n        /* \"#utility.yul\":2784:2842   */\n      swap1\n      dup2\n      mstore\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":5165:5196  allowances[msg.sender][spender] */\n      swap2\n      swap3\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":5176:5186  msg.sender */\n      swap2\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":5221:5258  Approval(msg.sender, spender, amount) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n        /* \"#utility.yul\":2757:2775   */\n      add\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":5221:5258  Approval(msg.sender, spender, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":5275:5279  true */\n      0x01\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":5268:5279  return true */\n      swap2\n      pop\n      pop\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":4867:5286  function approve(address spender, uint rawAmount) external returns (bool) {... */\n    tag_108:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":6379:7043  function transferFrom(address src, address dst, uint rawAmount) external returns (bool) {... */\n    tag_46:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":6541:6556  allowances[src] */\n      dup4\n      and\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":6461:6465  bool */\n      0x00\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":6541:6556  allowances[src] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":6495:6505  msg.sender */\n      caller\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":6541:6565  allowances[src][spender] */\n      dup1\n      dup6\n      mstore\n      swap1\n      dup4\n      mstore\n      dup2\n      dup5\n      keccak256\n      sload\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":6591:6649  safe96(rawAmount, \"Comp::approve: amount exceeds 96 bits\") */\n      dup3\n      mload\n      0x60\n      dup2\n      add\n      swap1\n      swap4\n      mstore\n      0x25\n      dup1\n      dup5\n      mstore\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":6495:6505  msg.sender */\n      swap2\n      swap4\n      sub(shl(0x60, 0x01), 0x01)\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":6541:6565  allowances[src][spender] */\n      swap1\n      swap2\n      and\n      swap3\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":6461:6465  bool */\n      dup6\n      swap3\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":6591:6649  safe96(rawAmount, \"Comp::approve: amount exceeds 96 bits\") */\n      tag_116\n      swap3\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":6598:6607  rawAmount */\n      dup9\n      swap3\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":6591:6649  safe96(rawAmount, \"Comp::approve: amount exceeds 96 bits\") */\n      swap2\n      swap1\n      data_32dab9ece0397c38c85244ed755f6110088fb13d43a7e9d6809da7619813d0fe\n      swap1\n      dup4\n      add\n      codecopy\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":6591:6597  safe96 */\n      tag_112\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":6591:6649  safe96(rawAmount, \"Comp::approve: amount exceeds 96 bits\") */\n      jump\t// in\n    tag_116:\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":6575:6649  uint96 amount = safe96(rawAmount, \"Comp::approve: amount exceeds 96 bits\") */\n      swap1\n      pop\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":6675:6678  src */\n      dup7\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":6664:6678  spender != src */\n      and\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":6664:6671  spender */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":6664:6678  spender != src */\n      and\n      eq\n      iszero\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":6664:6718  spender != src && spenderAllowance != type(uint96).max */\n      dup1\n      iszero\n      tag_117\n      jumpi\n      pop\n      sub(shl(0x60, 0x01), 0x01)\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":6682:6718  spenderAllowance != type(uint96).max */\n      dup3\n      dup2\n      and\n      eq\n      iszero\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":6664:6718  spender != src && spenderAllowance != type(uint96).max */\n    tag_117:\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":6660:6972  if (spender != src && spenderAllowance != type(uint96).max) {... */\n      iszero\n      tag_118\n      jumpi\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":6734:6753  uint96 newAllowance */\n      0x00\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":6756:6852  sub96(spenderAllowance, amount, \"Comp::transferFrom: transfer amount exceeds spender allowance\") */\n      tag_119\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":6762:6778  spenderAllowance */\n      dup4\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":6780:6786  amount */\n      dup4\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":6756:6852  sub96(spenderAllowance, amount, \"Comp::transferFrom: transfer amount exceeds spender allowance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x3d\n      dup2\n      mstore\n      0x20\n      add\n      data_b7ac833594da1df58fd15c3b6b55eb20762dba088c48b65ce9d522a789ff2495\n      0x3d\n      swap2\n      codecopy\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":6756:6761  sub96 */\n      tag_120\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":6756:6852  sub96(spenderAllowance, amount, \"Comp::transferFrom: transfer amount exceeds spender allowance\") */\n      jump\t// in\n    tag_119:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":6866:6881  allowances[src] */\n      dup10\n      dup2\n      and\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":6866:6876  allowances */\n      0x00\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":6866:6881  allowances[src] */\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":6866:6890  allowances[src][spender] */\n      swap5\n      dup11\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":6866:6905  allowances[src][spender] = newAllowance */\n      dup1\n      sload\n      not(sub(shl(0x60, 0x01), 0x01))\n      and\n      sub(shl(0x60, 0x01), 0x01)\n      dup8\n      and\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":6925:6961  Approval(src, spender, newAllowance) */\n      swap2\n      mload\n        /* \"#utility.yul\":2784:2842   */\n      swap2\n      dup3\n      mstore\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":6866:6905  allowances[src][spender] = newAllowance */\n      swap4\n      swap5\n      pop\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":6866:6890  allowances[src][spender] */\n      swap2\n      swap3\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":6866:6881  allowances[src] */\n      swap1\n      swap2\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":6925:6961  Approval(src, spender, newAllowance) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n        /* \"#utility.yul\":2757:2775   */\n      add\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":6925:6961  Approval(src, spender, newAllowance) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":6720:6972  {... */\n      pop\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":6660:6972  if (spender != src && spenderAllowance != type(uint96).max) {... */\n    tag_118:\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":6982:7015  _transferTokens(src, dst, amount) */\n      tag_122\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":6998:7001  src */\n      dup8\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":7003:7006  dst */\n      dup8\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":7008:7014  amount */\n      dup4\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":6982:6997  _transferTokens */\n      tag_123\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":6982:7015  _transferTokens(src, dst, amount) */\n      jump\t// in\n    tag_122:\n      pop\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":7032:7036  true */\n      0x01\n      swap7\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":6379:7043  function transferFrom(address src, address dst, uint rawAmount) external returns (bool) {... */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":7185:7285  function delegate(address delegatee) public {... */\n    tag_60:\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":7246:7278  _delegate(msg.sender, delegatee) */\n      tag_125\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":7256:7266  msg.sender */\n      caller\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":7268:7277  delegatee */\n      dup3\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":7246:7255  _delegate */\n      tag_126\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":7246:7278  _delegate(msg.sender, delegatee) */\n      jump\t// in\n    tag_125:\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":7185:7285  function delegate(address delegatee) public {... */\n      pop\n      jump\t// out\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":9335:10521  function getPriorVotes(address account, uint blockNumber) public view returns (uint96) {... */\n    tag_72:\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":9414:9420  uint96 */\n      0x00\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":9454:9466  block.number */\n      number\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":9440:9451  blockNumber */\n      dup3\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":9440:9466  blockNumber < block.number */\n      lt\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":9432:9510  require(blockNumber < block.number, \"Comp::getPriorVotes: not yet determined\") */\n      tag_129\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5021:5023   */\n      0x20\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":9432:9510  require(blockNumber < block.number, \"Comp::getPriorVotes: not yet determined\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5003:5024   */\n      mstore\n        /* \"#utility.yul\":5060:5062   */\n      0x27\n        /* \"#utility.yul\":5040:5058   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5033:5063   */\n      mstore\n        /* \"#utility.yul\":5099:5133   */\n      0x436f6d703a3a6765745072696f72566f7465733a206e6f742079657420646574\n        /* \"#utility.yul\":5079:5097   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5072:5134   */\n      mstore\n      shl(0xca, 0x195c9b5a5b9959)\n        /* \"#utility.yul\":5150:5168   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5143:5180   */\n      mstore\n        /* \"#utility.yul\":5197:5216   */\n      0x84\n      add\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":9432:9510  require(blockNumber < block.number, \"Comp::getPriorVotes: not yet determined\") */\n    tag_130:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_129:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":9543:9566  numCheckpoints[account] */\n      dup4\n      and\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":9521:9540  uint32 nCheckpoints */\n      0x00\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":9543:9566  numCheckpoints[account] */\n      swap1\n      dup2\n      mstore\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":9543:9557  numCheckpoints */\n      0x04\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":9543:9566  numCheckpoints[account] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n      0xffffffff\n      and\n      swap1\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":9580:9597  nCheckpoints == 0 */\n      dup2\n      swap1\n      sub\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":9576:9632  if (nCheckpoints == 0) {... */\n      tag_132\n      jumpi\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":9620:9621  0 */\n      0x00\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":9613:9621  return 0 */\n      swap2\n      pop\n      pop\n      jump(tag_108)\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":9576:9632  if (nCheckpoints == 0) {... */\n    tag_132:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":9689:9709  checkpoints[account] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":9689:9700  checkpoints */\n      0x03\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":9689:9709  checkpoints[account] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":9741:9752  blockNumber */\n      dup5\n      swap2\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":9710:9726  nCheckpoints - 1 */\n      tag_133\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":9725:9726  1 */\n      0x01\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":9710:9722  nCheckpoints */\n      dup6\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":9710:9726  nCheckpoints - 1 */\n      tag_134\n      jump\t// in\n    tag_133:\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":9689:9727  checkpoints[account][nCheckpoints - 1] */\n      0xffffffff\n      swap1\n      dup2\n      and\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      0x40\n      add\n      0x00\n      keccak256\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":9689:9737  checkpoints[account][nCheckpoints - 1].fromBlock */\n      sload\n      and\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":9689:9752  checkpoints[account][nCheckpoints - 1].fromBlock <= blockNumber */\n      gt\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":9685:9830  if (checkpoints[account][nCheckpoints - 1].fromBlock <= blockNumber) {... */\n      tag_135\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":9775:9795  checkpoints[account] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":9775:9786  checkpoints */\n      0x03\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":9775:9795  checkpoints[account] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      swap1\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":9796:9812  nCheckpoints - 1 */\n      tag_136\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":9811:9812  1 */\n      0x01\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":9796:9808  nCheckpoints */\n      dup5\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":9796:9812  nCheckpoints - 1 */\n      tag_134\n      jump\t// in\n    tag_136:\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":9775:9813  checkpoints[account][nCheckpoints - 1] */\n      0xffffffff\n      and\n      dup2\n      mstore\n      0x20\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      0x40\n      add\n      0x00\n      keccak256\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":9775:9819  checkpoints[account][nCheckpoints - 1].votes */\n      sload\n      shl(0x20, 0x01)\n      swap1\n      div\n      sub(shl(0x60, 0x01), 0x01)\n      and\n      swap2\n      pop\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":9768:9819  return checkpoints[account][nCheckpoints - 1].votes */\n      tag_108\n      swap1\n      pop\n      jump\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":9685:9830  if (checkpoints[account][nCheckpoints - 1].fromBlock <= blockNumber) {... */\n    tag_135:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":9888:9908  checkpoints[account] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":9888:9899  checkpoints */\n      0x03\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":9888:9908  checkpoints[account] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":9888:9911  checkpoints[account][0] */\n      dup4\n      dup1\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":9888:9921  checkpoints[account][0].fromBlock */\n      sload\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":9888:9911  checkpoints[account][0] */\n      0xffffffff\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":9888:9921  checkpoints[account][0].fromBlock */\n      and\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":9888:9935  checkpoints[account][0].fromBlock > blockNumber */\n      dup4\n      lt\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":9884:9970  if (checkpoints[account][0].fromBlock > blockNumber) {... */\n      iszero\n      tag_137\n      jumpi\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":9958:9959  0 */\n      0x00\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":9951:9959  return 0 */\n      swap2\n      pop\n      pop\n      jump(tag_108)\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":9884:9970  if (checkpoints[account][0].fromBlock > blockNumber) {... */\n    tag_137:\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":9980:9992  uint32 lower */\n      0x00\n      dup1\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":10021:10037  nCheckpoints - 1 */\n      tag_138\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":10036:10037  1 */\n      0x01\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":10021:10033  nCheckpoints */\n      dup5\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":10021:10037  nCheckpoints - 1 */\n      tag_134\n      jump\t// in\n    tag_138:\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":10006:10037  uint32 upper = nCheckpoints - 1 */\n      swap1\n      pop\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":10047:10465  while (upper > lower) {... */\n    tag_139:\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":10062:10067  lower */\n      dup2\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":10054:10067  upper > lower */\n      0xffffffff\n      and\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":10054:10059  upper */\n      dup2\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":10054:10067  upper > lower */\n      0xffffffff\n      and\n      gt\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":10047:10465  while (upper > lower) {... */\n      iszero\n      tag_140\n      jumpi\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":10083:10096  uint32 center */\n      0x00\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":10125:10126  2 */\n      0x02\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":10108:10121  upper - lower */\n      tag_141\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":10116:10121  lower */\n      dup5\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":10108:10113  upper */\n      dup5\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":10108:10121  upper - lower */\n      tag_134\n      jump\t// in\n    tag_141:\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":10107:10126  (upper - lower) / 2 */\n      tag_142\n      swap2\n      swap1\n      tag_143\n      jump\t// in\n    tag_142:\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":10099:10126  upper - (upper - lower) / 2 */\n      tag_144\n      swap1\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":10099:10104  upper */\n      dup4\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":10099:10126  upper - (upper - lower) / 2 */\n      tag_134\n      jump\t// in\n    tag_144:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":10190:10210  checkpoints[account] */\n      dup9\n      and\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":10167:10187  Checkpoint memory cp */\n      0x00\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":10190:10210  checkpoints[account] */\n      swap1\n      dup2\n      mstore\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":10190:10201  checkpoints */\n      0x03\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":10190:10210  checkpoints[account] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":10190:10218  checkpoints[account][center] */\n      0xffffffff\n      dup6\n      dup2\n      and\n      dup6\n      mstore\n      swap1\n      dup4\n      mstore\n      swap3\n      dup2\n      swap1\n      keccak256\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":10167:10218  Checkpoint memory cp = checkpoints[account][center] */\n      dup2\n      mload\n      dup1\n      dup4\n      add\n      swap1\n      swap3\n      mstore\n      sload\n      swap3\n      dup4\n      and\n      dup1\n      dup3\n      mstore\n      shl(0x20, 0x01)\n      swap1\n      swap4\n      div\n      sub(shl(0x60, 0x01), 0x01)\n      and\n      swap2\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":10190:10218  checkpoints[account][center] */\n      swap2\n      swap3\n      pop\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":10236:10263  cp.fromBlock == blockNumber */\n      dup8\n      swap1\n      sub\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":10232:10455  if (cp.fromBlock == blockNumber) {... */\n      tag_145\n      jumpi\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":10290:10298  cp.votes */\n      0x20\n      add\n      mload\n      swap5\n      pop\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":10283:10298  return cp.votes */\n      tag_108\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":10232:10455  if (cp.fromBlock == blockNumber) {... */\n    tag_145:\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":10323:10335  cp.fromBlock */\n      dup1\n      mload\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":10323:10349  cp.fromBlock < blockNumber */\n      0xffffffff\n      and\n      dup8\n      gt\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":10319:10455  if (cp.fromBlock < blockNumber) {... */\n      iszero\n      tag_147\n      jumpi\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":10377:10383  center */\n      dup2\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":10369:10383  lower = center */\n      swap4\n      pop\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":10319:10455  if (cp.fromBlock < blockNumber) {... */\n      jump(tag_148)\n    tag_147:\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":10430:10440  center - 1 */\n      tag_149\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":10439:10440  1 */\n      0x01\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":10430:10436  center */\n      dup4\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":10430:10440  center - 1 */\n      tag_134\n      jump\t// in\n    tag_149:\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":10422:10440  upper = center - 1 */\n      swap3\n      pop\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":10319:10455  if (cp.fromBlock < blockNumber) {... */\n    tag_148:\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":10069:10465  {... */\n      pop\n      pop\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":10047:10465  while (upper > lower) {... */\n      jump(tag_139)\n    tag_140:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":10481:10501  checkpoints[account] */\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":10481:10492  checkpoints */\n      0x03\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":10481:10501  checkpoints[account] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":10481:10508  checkpoints[account][lower] */\n      0xffffffff\n      swap1\n      swap5\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":10481:10514  checkpoints[account][lower].votes */\n      sload\n      sub(shl(0x60, 0x01), 0x01)\n      shl(0x20, 0x01)\n      swap1\n      swap2\n      div\n      and\n      swap2\n      pop\n      pop\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":9335:10521  function getPriorVotes(address account, uint blockNumber) public view returns (uint96) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":5844:6078  function transfer(address dst, uint rawAmount) external returns (bool) {... */\n    tag_84:\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":5909:5913  bool */\n      0x00\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":5925:5938  uint96 amount */\n      0x00\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":5941:6000  safe96(rawAmount, \"Comp::transfer: amount exceeds 96 bits\") */\n      tag_151\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":5948:5957  rawAmount */\n      dup4\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":5941:6000  safe96(rawAmount, \"Comp::transfer: amount exceeds 96 bits\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      data_5bdeafae4aaace0ed9b7df6e60f285c9e8e84a3ceac05af6b6259bfed8e161f5\n      0x26\n      swap2\n      codecopy\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":5941:5947  safe96 */\n      tag_112\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":5941:6000  safe96(rawAmount, \"Comp::transfer: amount exceeds 96 bits\") */\n      jump\t// in\n    tag_151:\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":5925:6000  uint96 amount = safe96(rawAmount, \"Comp::transfer: amount exceeds 96 bits\") */\n      swap1\n      pop\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":6010:6050  _transferTokens(msg.sender, dst, amount) */\n      tag_152\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":6026:6036  msg.sender */\n      caller\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":6038:6041  dst */\n      dup6\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":6043:6049  amount */\n      dup4\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":6010:6025  _transferTokens */\n      tag_123\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":6010:6050  _transferTokens(msg.sender, dst, amount) */\n      jump\t// in\n    tag_152:\n      pop\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":6067:6071  true */\n      0x01\n      swap4\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":5844:6078  function transfer(address dst, uint rawAmount) external returns (bool) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":8694:8913  function getCurrentVotes(address account) external view returns (uint96) {... */\n    tag_88:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":8799:8822  numCheckpoints[account] */\n      dup2\n      and\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":8759:8765  uint96 */\n      0x00\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":8799:8822  numCheckpoints[account] */\n      swap1\n      dup2\n      mstore\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":8799:8813  numCheckpoints */\n      0x04\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":8799:8822  numCheckpoints[account] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n      0xffffffff\n      and\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":8839:8855  nCheckpoints > 0 */\n      dup1\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":8839:8906  nCheckpoints > 0 ? checkpoints[account][nCheckpoints - 1].votes : 0 */\n      tag_154\n      jumpi\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":8905:8906  0 */\n      0x00\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":8839:8906  nCheckpoints > 0 ? checkpoints[account][nCheckpoints - 1].votes : 0 */\n      jump(tag_155)\n    tag_154:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":8858:8878  checkpoints[account] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":8858:8869  checkpoints */\n      0x03\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":8858:8878  checkpoints[account] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      swap1\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":8879:8895  nCheckpoints - 1 */\n      tag_156\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":8894:8895  1 */\n      0x01\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":8879:8891  nCheckpoints */\n      dup5\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":8879:8895  nCheckpoints - 1 */\n      tag_134\n      jump\t// in\n    tag_156:\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":8858:8896  checkpoints[account][nCheckpoints - 1] */\n      0xffffffff\n      and\n      dup2\n      mstore\n      0x20\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      0x40\n      add\n      0x00\n      keccak256\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":8858:8902  checkpoints[account][nCheckpoints - 1].votes */\n      sload\n      shl(0x20, 0x01)\n      swap1\n      div\n      sub(shl(0x60, 0x01), 0x01)\n      and\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":8839:8906  nCheckpoints > 0 ? checkpoints[account][nCheckpoints - 1].votes : 0 */\n    tag_155:\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":8832:8906  return nCheckpoints > 0 ? checkpoints[account][nCheckpoints - 1].votes : 0 */\n      swap4\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":8694:8913  function getCurrentVotes(address account) external view returns (uint96) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":7708:8500  function delegateBySig(address delegatee, uint nonce, uint expiry, uint8 v, bytes32 r, bytes32 s) public {... */\n    tag_93:\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":7903:7907  name */\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      dup3\n      mstore\n      0x08\n      dup2\n      mstore\n      shl(0xc2, 0x10dbdb5c1bdd5b99)\n      0x20\n      swap2\n      dup3\n      add\n      mstore\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":7859:7939  abi.encode(DOMAIN_TYPEHASH, keccak256(bytes(name)), getChainId(), address(this)) */\n      dup2\n      mload\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":2645:2725  keccak256(\"EIP712Domain(string name,uint256 chainId,address verifyingContract)\") */\n      0x8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a866\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":7859:7939  abi.encode(DOMAIN_TYPEHASH, keccak256(bytes(name)), getChainId(), address(this)) */\n      dup2\n      dup4\n      add\n        /* \"#utility.yul\":6045:6070   */\n      mstore\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":7887:7909  keccak256(bytes(name)) */\n      0x561ca898cce9f021c15a441ef41899706e923541cee724530075d1a1144761c7\n        /* \"#utility.yul\":6086:6104   */\n      dup2\n      dup5\n      add\n        /* \"#utility.yul\":6079:6113   */\n      mstore\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":13858:13867  chainid() */\n      chainid\n        /* \"#utility.yul\":6129:6147   */\n      0x60\n      dup3\n      add\n        /* \"#utility.yul\":6122:6156   */\n      mstore\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":7933:7937  this */\n      address\n        /* \"#utility.yul\":6172:6190   */\n      0x80\n      dup1\n      dup4\n      add\n        /* \"#utility.yul\":6165:6225   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":7859:7939  abi.encode(DOMAIN_TYPEHASH, keccak256(bytes(name)), getChainId(), address(this)) */\n      dup4\n      mload\n      dup1\n      dup4\n      sub\n      swap1\n      swap2\n      add\n      dup2\n      mstore\n        /* \"#utility.yul\":6017:6036   */\n      0xa0\n      dup3\n      add\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":7859:7939  abi.encode(DOMAIN_TYPEHASH, keccak256(bytes(name)), getChainId(), address(this)) */\n      dup5\n      mstore\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":7849:7940  keccak256(abi.encode(DOMAIN_TYPEHASH, keccak256(bytes(name)), getChainId(), address(this))) */\n      dup1\n      mload\n      swap1\n      dup4\n      add\n      keccak256\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":2862:2933  keccak256(\"Delegation(address delegatee,uint256 nonce,uint256 expiry)\") */\n      0xe48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":7981:8038  abi.encode(DELEGATION_TYPEHASH, delegatee, nonce, expiry) */\n      0xc0\n      dup4\n      add\n        /* \"#utility.yul\":6467:6492   */\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":6528:6560   */\n      dup11\n      and\n        /* \"#utility.yul\":6508:6526   */\n      0xe0\n      dup4\n      add\n        /* \"#utility.yul\":6501:6561   */\n      mstore\n        /* \"#utility.yul\":6577:6595   */\n      0x0100\n      dup3\n      add\n        /* \"#utility.yul\":6570:6604   */\n      dup10\n      swap1\n      mstore\n        /* \"#utility.yul\":6620:6638   */\n      0x0120\n      dup1\n      dup4\n      add\n        /* \"#utility.yul\":6613:6647   */\n      dup10\n      swap1\n      mstore\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":7981:8038  abi.encode(DELEGATION_TYPEHASH, delegatee, nonce, expiry) */\n      dup5\n      mload\n      dup1\n      dup5\n      sub\n      swap1\n      swap2\n      add\n      dup2\n      mstore\n        /* \"#utility.yul\":6439:6458   */\n      0x0140\n      dup4\n      add\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":7981:8038  abi.encode(DELEGATION_TYPEHASH, delegatee, nonce, expiry) */\n      swap1\n      swap5\n      mstore\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":7971:8039  keccak256(abi.encode(DELEGATION_TYPEHASH, delegatee, nonce, expiry)) */\n      dup4\n      mload\n      swap4\n      swap1\n      swap3\n      add\n      swap3\n      swap1\n      swap3\n      keccak256\n      shl(0xf0, 0x1901)\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":8076:8133  abi.encodePacked(\"\\x19\\x01\", domainSeparator, structHash) */\n      0x0160\n      dup5\n      add\n        /* \"#utility.yul\":6916:6943   */\n      mstore\n        /* \"#utility.yul\":6959:6970   */\n      0x0162\n      dup4\n      add\n        /* \"#utility.yul\":6952:6979   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":6995:7007   */\n      0x0182\n      dup4\n      add\n        /* \"#utility.yul\":6988:7016   */\n      dup2\n      swap1\n      mstore\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":7849:7940  keccak256(abi.encode(DOMAIN_TYPEHASH, keccak256(bytes(name)), getChainId(), address(this))) */\n      swap1\n      swap2\n      0x00\n      swap1\n        /* \"#utility.yul\":7032:7044   */\n      0x01a2\n      add\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":8076:8133  abi.encodePacked(\"\\x19\\x01\", domainSeparator, structHash) */\n      0x40\n      dup1\n      mload\n      not(0x1f)\n      dup2\n      dup5\n      sub\n      add\n      dup2\n      mstore\n      dup3\n      dup3\n      mstore\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":8066:8134  keccak256(abi.encodePacked(\"\\x19\\x01\", domainSeparator, structHash)) */\n      dup1\n      mload\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":8076:8133  abi.encodePacked(\"\\x19\\x01\", domainSeparator, structHash) */\n      0x20\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":8066:8134  keccak256(abi.encodePacked(\"\\x19\\x01\", domainSeparator, structHash)) */\n      swap2\n      dup3\n      add\n      keccak256\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":8144:8161  address signatory */\n      0x00\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":8164:8190  ecrecover(digest, v, r, s) */\n      dup1\n      dup6\n      mstore\n      swap2\n      dup5\n      add\n      dup1\n      dup5\n      mstore\n        /* \"#utility.yul\":7282:7307   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":7355:7359   */\n      0xff\n        /* \"#utility.yul\":7343:7360   */\n      dup11\n      and\n        /* \"#utility.yul\":7323:7341   */\n      swap3\n      dup5\n      add\n        /* \"#utility.yul\":7316:7361   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":7377:7395   */\n      0x60\n      dup4\n      add\n        /* \"#utility.yul\":7370:7404   */\n      dup9\n      swap1\n      mstore\n        /* \"#utility.yul\":7420:7438   */\n      0x80\n      dup4\n      add\n        /* \"#utility.yul\":7413:7447   */\n      dup8\n      swap1\n      mstore\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":8066:8134  keccak256(abi.encodePacked(\"\\x19\\x01\", domainSeparator, structHash)) */\n      swap1\n      swap3\n      pop\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":8144:8161  address signatory */\n      swap1\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":8164:8190  ecrecover(digest, v, r, s) */\n      0x01\n      swap1\n        /* \"#utility.yul\":7254:7273   */\n      0xa0\n      add\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":8164:8190  ecrecover(digest, v, r, s) */\n      0x20\n      mload(0x40)\n      0x20\n      dup2\n      sub\n      swap1\n      dup1\n      dup5\n      sub\n      swap1\n      dup6\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_169\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_169:\n      pop\n      pop\n      mload(add(not(0x1f), mload(0x40)))\n      swap2\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":8208:8231  signatory != address(0) */\n      dup2\n      and\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":8200:8274  require(signatory != address(0), \"Comp::delegateBySig: invalid signature\") */\n      tag_170\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7660:7662   */\n      0x20\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":8200:8274  require(signatory != address(0), \"Comp::delegateBySig: invalid signature\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7642:7663   */\n      mstore\n        /* \"#utility.yul\":7699:7701   */\n      0x26\n        /* \"#utility.yul\":7679:7697   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7672:7702   */\n      mstore\n        /* \"#utility.yul\":7738:7772   */\n      0x436f6d703a3a64656c656761746542795369673a20696e76616c696420736967\n        /* \"#utility.yul\":7718:7736   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7711:7773   */\n      mstore\n      shl(0xd0, 0x6e6174757265)\n        /* \"#utility.yul\":7789:7807   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":7782:7818   */\n      mstore\n        /* \"#utility.yul\":7835:7854   */\n      0x84\n      add\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":8200:8274  require(signatory != address(0), \"Comp::delegateBySig: invalid signature\") */\n      tag_130\n        /* \"#utility.yul\":7458:7860   */\n      jump\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":8200:8274  require(signatory != address(0), \"Comp::delegateBySig: invalid signature\") */\n    tag_170:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":8301:8318  nonces[signatory] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":8301:8307  nonces */\n      0x05\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":8301:8318  nonces[signatory] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":8301:8320  nonces[signatory]++ */\n      dup1\n      sload\n      swap2\n      tag_173\n      dup4\n      tag_174\n      jump\t// in\n    tag_173:\n      swap2\n      swap1\n      pop\n      sstore\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":8292:8297  nonce */\n      dup10\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":8292:8320  nonce == nonces[signatory]++ */\n      eq\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":8284:8359  require(nonce == nonces[signatory]++, \"Comp::delegateBySig: invalid nonce\") */\n      tag_175\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8207:8209   */\n      0x20\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":8284:8359  require(nonce == nonces[signatory]++, \"Comp::delegateBySig: invalid nonce\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8189:8210   */\n      mstore\n        /* \"#utility.yul\":8246:8248   */\n      0x22\n        /* \"#utility.yul\":8226:8244   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8219:8249   */\n      mstore\n        /* \"#utility.yul\":8285:8319   */\n      0x436f6d703a3a64656c656761746542795369673a20696e76616c6964206e6f6e\n        /* \"#utility.yul\":8265:8283   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8258:8320   */\n      mstore\n      shl(0xf0, 0x6365)\n        /* \"#utility.yul\":8336:8354   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8329:8361   */\n      mstore\n        /* \"#utility.yul\":8378:8397   */\n      0x84\n      add\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":8284:8359  require(nonce == nonces[signatory]++, \"Comp::delegateBySig: invalid nonce\") */\n      tag_130\n        /* \"#utility.yul\":8005:8403   */\n      jump\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":8284:8359  require(nonce == nonces[signatory]++, \"Comp::delegateBySig: invalid nonce\") */\n    tag_175:\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":8396:8402  expiry */\n      dup8\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":8377:8392  block.timestamp */\n      timestamp\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":8377:8402  block.timestamp <= expiry */\n      gt\n      iszero\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":8369:8445  require(block.timestamp <= expiry, \"Comp::delegateBySig: signature expired\") */\n      tag_178\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8610:8612   */\n      0x20\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":8369:8445  require(block.timestamp <= expiry, \"Comp::delegateBySig: signature expired\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8592:8613   */\n      mstore\n        /* \"#utility.yul\":8649:8651   */\n      0x26\n        /* \"#utility.yul\":8629:8647   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8622:8652   */\n      mstore\n        /* \"#utility.yul\":8688:8722   */\n      0x436f6d703a3a64656c656761746542795369673a207369676e61747572652065\n        /* \"#utility.yul\":8668:8686   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8661:8723   */\n      mstore\n      shl(0xd2, 0x1e1c1a5c9959)\n        /* \"#utility.yul\":8739:8757   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8732:8768   */\n      mstore\n        /* \"#utility.yul\":8785:8804   */\n      0x84\n      add\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":8369:8445  require(block.timestamp <= expiry, \"Comp::delegateBySig: signature expired\") */\n      tag_130\n        /* \"#utility.yul\":8408:8810   */\n      jump\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":8369:8445  require(block.timestamp <= expiry, \"Comp::delegateBySig: signature expired\") */\n    tag_178:\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":8462:8493  _delegate(signatory, delegatee) */\n      tag_181\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":8472:8481  signatory */\n      dup2\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":8483:8492  delegatee */\n      dup12\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":8462:8471  _delegate */\n      tag_126\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":8462:8493  _delegate(signatory, delegatee) */\n      jump\t// in\n    tag_181:\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":8455:8493  return _delegate(signatory, delegatee) */\n      pop\n      pop\n      pop\n      pop\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":7708:8500  function delegateBySig(address delegatee, uint nonce, uint expiry, uint8 v, bytes32 r, bytes32 s) public {... */\n    tag_157:\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":13228:13386  function safe96(uint n, string memory errorMessage) internal pure returns (uint96) {... */\n    tag_112:\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":13303:13309  uint96 */\n      0x00\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":13340:13352  errorMessage */\n      dup2\n      shl(0x60, 0x01)\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":13329:13338  n < 2**96 */\n      dup5\n      lt\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":13321:13353  require(n < 2**96, errorMessage) */\n      tag_184\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_130\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_184:\n      pop\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":13377:13378  n */\n      swap2\n      swap3\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":13228:13386  function safe96(uint n, string memory errorMessage) internal pure returns (uint96) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":13582:13744  function sub96(uint96 a, uint96 b, string memory errorMessage) internal pure returns (uint96) {... */\n    tag_120:\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":13668:13674  uint96 */\n      0x00\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":13699:13700  a */\n      dup4\n      sub(shl(0x60, 0x01), 0x01)\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":13694:13700  b <= a */\n      and\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":13694:13695  b */\n      dup4\n      sub(shl(0x60, 0x01), 0x01)\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":13694:13700  b <= a */\n      and\n      gt\n      iszero\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":13702:13714  errorMessage */\n      dup3\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":13686:13715  require(b <= a, errorMessage) */\n      swap1\n      tag_187\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_130\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_187:\n      pop\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":13732:13737  a - b */\n      tag_189\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":13736:13737  b */\n      dup4\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":13732:13733  a */\n      dup6\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":13732:13737  a - b */\n      tag_190\n      jump\t// in\n    tag_189:\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":13725:13737  return a - b */\n      swap5\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":13582:13744  function sub96(uint96 a, uint96 b, string memory errorMessage) internal pure returns (uint96) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":10900:11505  function _transferTokens(address src, address dst, uint96 amount) internal {... */\n    tag_123:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":10993:11010  src != address(0) */\n      dup4\n      and\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":10985:11075  require(src != address(0), \"Comp::_transferTokens: cannot transfer from the zero address\") */\n      tag_192\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9240:9242   */\n      0x20\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":10985:11075  require(src != address(0), \"Comp::_transferTokens: cannot transfer from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9222:9243   */\n      mstore\n        /* \"#utility.yul\":9279:9281   */\n      0x3c\n        /* \"#utility.yul\":9259:9277   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9252:9282   */\n      mstore\n        /* \"#utility.yul\":9318:9352   */\n      0x436f6d703a3a5f7472616e73666572546f6b656e733a2063616e6e6f74207472\n        /* \"#utility.yul\":9298:9316   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9291:9353   */\n      mstore\n        /* \"#utility.yul\":9389:9419   */\n      0x616e736665722066726f6d20746865207a65726f206164647265737300000000\n        /* \"#utility.yul\":9369:9387   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":9362:9420   */\n      mstore\n        /* \"#utility.yul\":9437:9456   */\n      0x84\n      add\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":10985:11075  require(src != address(0), \"Comp::_transferTokens: cannot transfer from the zero address\") */\n      tag_130\n        /* \"#utility.yul\":9038:9462   */\n      jump\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":10985:11075  require(src != address(0), \"Comp::_transferTokens: cannot transfer from the zero address\") */\n    tag_192:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":11093:11110  dst != address(0) */\n      dup3\n      and\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":11085:11173  require(dst != address(0), \"Comp::_transferTokens: cannot transfer to the zero address\") */\n      tag_195\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9669:9671   */\n      0x20\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":11085:11173  require(dst != address(0), \"Comp::_transferTokens: cannot transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9651:9672   */\n      mstore\n        /* \"#utility.yul\":9708:9710   */\n      0x3a\n        /* \"#utility.yul\":9688:9706   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9681:9711   */\n      mstore\n        /* \"#utility.yul\":9747:9781   */\n      0x436f6d703a3a5f7472616e73666572546f6b656e733a2063616e6e6f74207472\n        /* \"#utility.yul\":9727:9745   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9720:9782   */\n      mstore\n        /* \"#utility.yul\":9818:9846   */\n      0x616e7366657220746f20746865207a65726f2061646472657373000000000000\n        /* \"#utility.yul\":9798:9816   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":9791:9847   */\n      mstore\n        /* \"#utility.yul\":9864:9883   */\n      0x84\n      add\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":11085:11173  require(dst != address(0), \"Comp::_transferTokens: cannot transfer to the zero address\") */\n      tag_130\n        /* \"#utility.yul\":9467:9889   */\n      jump\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":11085:11173  require(dst != address(0), \"Comp::_transferTokens: cannot transfer to the zero address\") */\n    tag_195:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":11206:11219  balances[src] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":11206:11214  balances */\n      0x01\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":11206:11219  balances[src] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n      sload\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":11200:11286  sub96(balances[src], amount, \"Comp::_transferTokens: transfer amount exceeds balance\") */\n      dup3\n      mload\n      0x60\n      dup2\n      add\n      swap1\n      swap4\n      mstore\n      0x36\n      dup1\n      dup5\n      mstore\n      tag_198\n      swap4\n      sub(shl(0x60, 0x01), 0x01)\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":11206:11219  balances[src] */\n      swap1\n      swap3\n      and\n      swap3\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":11221:11227  amount */\n      dup6\n      swap3\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":11200:11286  sub96(balances[src], amount, \"Comp::_transferTokens: transfer amount exceeds balance\") */\n      swap2\n      swap1\n      data_20f75e61dae66bd43cc4d6e74412a2a0dfc4c34b4746776eb4e12c627179461c\n      swap1\n      dup4\n      add\n      codecopy\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":11200:11205  sub96 */\n      tag_120\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":11200:11286  sub96(balances[src], amount, \"Comp::_transferTokens: transfer amount exceeds balance\") */\n      jump\t// in\n    tag_198:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":11184:11197  balances[src] */\n      dup5\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":11184:11192  balances */\n      0x01\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":11184:11197  balances[src] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":11184:11286  balances[src] = sub96(balances[src], amount, \"Comp::_transferTokens: transfer amount exceeds balance\") */\n      dup1\n      sload\n      not(sub(shl(0x60, 0x01), 0x01))\n      and\n      sub(shl(0x60, 0x01), 0x01)\n      swap7\n      dup8\n      and\n      or\n      swap1\n      sstore\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":11318:11331  balances[dst] */\n      swap3\n      dup7\n      and\n      dup3\n      mstore\n      swap1\n      dup3\n      swap1\n      keccak256\n      sload\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":11312:11392  add96(balances[dst], amount, \"Comp::_transferTokens: transfer amount overflows\") */\n      dup3\n      mload\n      0x60\n      dup2\n      add\n      swap1\n      swap4\n      mstore\n      0x30\n      dup1\n      dup5\n      mstore\n      tag_199\n      swap5\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":11318:11331  balances[dst] */\n      swap2\n      swap1\n      swap2\n      and\n      swap3\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":11333:11339  amount */\n      dup6\n      swap3\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":11312:11392  add96(balances[dst], amount, \"Comp::_transferTokens: transfer amount overflows\") */\n      swap1\n      swap2\n      swap1\n      data_838ec7826d8a7e194a0b4c14b8572b8a97cbf1ec9a1dd8f0dc2ca0dbf889365c\n      swap1\n      dup4\n      add\n      codecopy\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":11312:11317  add96 */\n      tag_200\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":11312:11392  add96(balances[dst], amount, \"Comp::_transferTokens: transfer amount overflows\") */\n      jump\t// in\n    tag_199:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":11296:11309  balances[dst] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":11296:11304  balances */\n      0x01\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":11296:11309  balances[dst] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":11296:11392  balances[dst] = add96(balances[dst], amount, \"Comp::_transferTokens: transfer amount overflows\") */\n      dup1\n      sload\n      not(sub(shl(0x60, 0x01), 0x01))\n      and\n      sub(shl(0x60, 0x01), 0x01)\n      swap7\n      dup8\n      and\n      or\n      swap1\n      sstore\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":11407:11433  Transfer(src, dst, amount) */\n      swap1\n      mload\n        /* \"#utility.yul\":2802:2841   */\n      swap4\n      dup6\n      and\n        /* \"#utility.yul\":2784:2842   */\n      dup5\n      mstore\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":11296:11309  balances[dst] */\n      swap1\n      swap3\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":11407:11433  Transfer(src, dst, amount) */\n      swap2\n      dup7\n      and\n      swap2\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap2\n        /* \"#utility.yul\":2757:2775   */\n      add\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":11407:11433  Transfer(src, dst, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":11459:11473  delegates[src] */\n      dup1\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":11459:11468  delegates */\n      0x02\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":11459:11473  delegates[src] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n      sload\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":11475:11489  delegates[dst] */\n      dup6\n      dup5\n      and\n      dup4\n      mstore\n      swap2\n      keccak256\n      sload\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":11444:11498  _moveDelegates(delegates[src], delegates[dst], amount) */\n      tag_202\n      swap3\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":11459:11473  delegates[src] */\n      swap2\n      dup3\n      and\n      swap2\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":11475:11489  delegates[dst] */\n      and\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":11491:11497  amount */\n      dup4\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":11444:11458  _moveDelegates */\n      tag_203\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":11444:11498  _moveDelegates(delegates[src], delegates[dst], amount) */\n      jump\t// in\n    tag_202:\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":10900:11505  function _transferTokens(address src, address dst, uint96 amount) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":10527:10894  function _delegate(address delegator, address delegatee) internal {... */\n    tag_126:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":10629:10649  delegates[delegator] */\n      dup1\n      dup4\n      and\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":10603:10626  address currentDelegate */\n      0x00\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":10629:10649  delegates[delegator] */\n      dup2\n      dup2\n      mstore\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":10629:10638  delegates */\n      0x02\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":10629:10649  delegates[delegator] */\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n      dup1\n      sload\n      0x01\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":10685:10704  balances[delegator] */\n      dup5\n      mstore\n      dup3\n      dup7\n      keccak256\n      sload\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":10714:10734  delegates[delegator] */\n      swap5\n      swap1\n      swap4\n      mstore\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":10714:10746  delegates[delegator] = delegatee */\n      dup8\n      dup8\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup5\n      and\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":10762:10816  DelegateChanged(delegator, currentDelegate, delegatee) */\n      swap1\n      mload\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":10629:10649  delegates[delegator] */\n      swap2\n      swap1\n      swap6\n      and\n      swap5\n      sub(shl(0x60, 0x01), 0x01)\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":10685:10704  balances[delegator] */\n      swap1\n      swap3\n      and\n      swap4\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":10714:10746  delegates[delegator] = delegatee */\n      swap2\n      swap3\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":10629:10649  delegates[delegator] */\n      dup6\n      swap3\n      swap2\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":10762:10816  DelegateChanged(delegator, currentDelegate, delegatee) */\n      0x3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f\n      swap2\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":10603:10626  address currentDelegate */\n      swap1\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":10762:10816  DelegateChanged(delegator, currentDelegate, delegatee) */\n      log4\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":10827:10887  _moveDelegates(currentDelegate, delegatee, delegatorBalance) */\n      tag_205\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":10842:10857  currentDelegate */\n      dup3\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":10859:10868  delegatee */\n      dup5\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":10870:10886  delegatorBalance */\n      dup4\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":10827:10841  _moveDelegates */\n      tag_203\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":10827:10887  _moveDelegates(currentDelegate, delegatee, delegatorBalance) */\n      jump\t// in\n    tag_205:\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":10593:10894  {... */\n      pop\n      pop\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":10527:10894  function _delegate(address delegator, address delegatee) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":13392:13576  function add96(uint96 a, uint96 b, string memory errorMessage) internal pure returns (uint96) {... */\n    tag_200:\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":13478:13484  uint96 */\n      0x00\n      dup1\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":13507:13512  a + b */\n      tag_208\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":13511:13512  b */\n      dup5\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":13507:13508  a */\n      dup7\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":13507:13512  a + b */\n      tag_209\n      jump\t// in\n    tag_208:\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":13496:13512  uint96 c = a + b */\n      swap1\n      pop\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":13535:13536  a */\n      dup5\n      sub(shl(0x60, 0x01), 0x01)\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":13530:13536  c >= a */\n      and\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":13530:13531  c */\n      dup2\n      sub(shl(0x60, 0x01), 0x01)\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":13530:13536  c >= a */\n      and\n      lt\n      iszero\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":13538:13550  errorMessage */\n      dup4\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":13522:13551  require(c >= a, errorMessage) */\n      swap1\n      tag_210\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_130\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_210:\n      pop\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":13568:13569  c */\n      swap5\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":13392:13576  function add96(uint96 a, uint96 b, string memory errorMessage) internal pure returns (uint96) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":11511:12434  function _moveDelegates(address srcRep, address dstRep, uint96 amount) internal {... */\n    tag_203:\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":11615:11621  dstRep */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":11605:11621  srcRep != dstRep */\n      and\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":11605:11611  srcRep */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":11605:11621  srcRep != dstRep */\n      and\n      eq\n      iszero\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":11605:11635  srcRep != dstRep && amount > 0 */\n      dup1\n      iszero\n      tag_213\n      jumpi\n      pop\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":11634:11635  0 */\n      0x00\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":11625:11631  amount */\n      dup2\n      sub(shl(0x60, 0x01), 0x01)\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":11625:11635  amount > 0 */\n      and\n      gt\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":11605:11635  srcRep != dstRep && amount > 0 */\n    tag_213:\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":11601:12428  if (srcRep != dstRep && amount > 0) {... */\n      iszero\n      tag_202\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":11655:11675  srcRep != address(0) */\n      dup4\n      and\n      iszero\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":11651:12028  if (srcRep != address(0)) {... */\n      tag_215\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":11714:11736  numCheckpoints[srcRep] */\n      dup4\n      and\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":11695:11711  uint32 srcRepNum */\n      0x00\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":11714:11736  numCheckpoints[srcRep] */\n      swap1\n      dup2\n      mstore\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":11714:11728  numCheckpoints */\n      0x04\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":11714:11736  numCheckpoints[srcRep] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n      0xffffffff\n      and\n      swap1\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":11773:11786  srcRepNum > 0 */\n      dup2\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":11773:11833  srcRepNum > 0 ? checkpoints[srcRep][srcRepNum - 1].votes : 0 */\n      tag_216\n      jumpi\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":11832:11833  0 */\n      0x00\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":11773:11833  srcRepNum > 0 ? checkpoints[srcRep][srcRepNum - 1].votes : 0 */\n      jump(tag_217)\n    tag_216:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":11789:11808  checkpoints[srcRep] */\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":11789:11800  checkpoints */\n      0x03\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":11789:11808  checkpoints[srcRep] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      swap1\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":11809:11822  srcRepNum - 1 */\n      tag_218\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":11821:11822  1 */\n      0x01\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":11809:11818  srcRepNum */\n      dup6\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":11809:11822  srcRepNum - 1 */\n      tag_134\n      jump\t// in\n    tag_218:\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":11789:11823  checkpoints[srcRep][srcRepNum - 1] */\n      0xffffffff\n      and\n      dup2\n      mstore\n      0x20\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      0x40\n      add\n      0x00\n      keccak256\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":11789:11829  checkpoints[srcRep][srcRepNum - 1].votes */\n      sload\n      shl(0x20, 0x01)\n      swap1\n      div\n      sub(shl(0x60, 0x01), 0x01)\n      and\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":11773:11833  srcRepNum > 0 ? checkpoints[srcRep][srcRepNum - 1].votes : 0 */\n    tag_217:\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":11754:11833  uint96 srcRepOld = srcRepNum > 0 ? checkpoints[srcRep][srcRepNum - 1].votes : 0 */\n      swap1\n      pop\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":11851:11867  uint96 srcRepNew */\n      0x00\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":11870:11938  sub96(srcRepOld, amount, \"Comp::_moveVotes: vote amount underflows\") */\n      tag_219\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":11876:11885  srcRepOld */\n      dup3\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":11887:11893  amount */\n      dup6\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":11870:11938  sub96(srcRepOld, amount, \"Comp::_moveVotes: vote amount underflows\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x28\n      dup2\n      mstore\n      0x20\n      add\n      data_79bf2f3c2009651b33d37efb8a65657c3e203b2c36f61068863922cb9e64a77a\n      0x28\n      swap2\n      codecopy\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":11870:11875  sub96 */\n      tag_120\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":11870:11938  sub96(srcRepOld, amount, \"Comp::_moveVotes: vote amount underflows\") */\n      jump\t// in\n    tag_219:\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":11851:11938  uint96 srcRepNew = sub96(srcRepOld, amount, \"Comp::_moveVotes: vote amount underflows\") */\n      swap1\n      pop\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":11956:12013  _writeCheckpoint(srcRep, srcRepNum, srcRepOld, srcRepNew) */\n      tag_220\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":11973:11979  srcRep */\n      dup7\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":11981:11990  srcRepNum */\n      dup5\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":11992:12001  srcRepOld */\n      dup5\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":12003:12012  srcRepNew */\n      dup5\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":11956:11972  _writeCheckpoint */\n      tag_221\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":11956:12013  _writeCheckpoint(srcRep, srcRepNum, srcRepOld, srcRepNew) */\n      jump\t// in\n    tag_220:\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":11677:12028  {... */\n      pop\n      pop\n      pop\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":11651:12028  if (srcRep != address(0)) {... */\n    tag_215:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":12046:12066  dstRep != address(0) */\n      dup3\n      and\n      iszero\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":12042:12418  if (dstRep != address(0)) {... */\n      tag_202\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":12105:12127  numCheckpoints[dstRep] */\n      dup3\n      and\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":12086:12102  uint32 dstRepNum */\n      0x00\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":12105:12127  numCheckpoints[dstRep] */\n      swap1\n      dup2\n      mstore\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":12105:12119  numCheckpoints */\n      0x04\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":12105:12127  numCheckpoints[dstRep] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n      0xffffffff\n      and\n      swap1\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":12164:12177  dstRepNum > 0 */\n      dup2\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":12164:12224  dstRepNum > 0 ? checkpoints[dstRep][dstRepNum - 1].votes : 0 */\n      tag_223\n      jumpi\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":12223:12224  0 */\n      0x00\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":12164:12224  dstRepNum > 0 ? checkpoints[dstRep][dstRepNum - 1].votes : 0 */\n      jump(tag_224)\n    tag_223:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":12180:12199  checkpoints[dstRep] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":12180:12191  checkpoints */\n      0x03\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":12180:12199  checkpoints[dstRep] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      swap1\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":12200:12213  dstRepNum - 1 */\n      tag_225\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":12212:12213  1 */\n      0x01\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":12200:12209  dstRepNum */\n      dup6\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":12200:12213  dstRepNum - 1 */\n      tag_134\n      jump\t// in\n    tag_225:\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":12180:12214  checkpoints[dstRep][dstRepNum - 1] */\n      0xffffffff\n      and\n      dup2\n      mstore\n      0x20\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      0x40\n      add\n      0x00\n      keccak256\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":12180:12220  checkpoints[dstRep][dstRepNum - 1].votes */\n      sload\n      shl(0x20, 0x01)\n      swap1\n      div\n      sub(shl(0x60, 0x01), 0x01)\n      and\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":12164:12224  dstRepNum > 0 ? checkpoints[dstRep][dstRepNum - 1].votes : 0 */\n    tag_224:\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":12145:12224  uint96 dstRepOld = dstRepNum > 0 ? checkpoints[dstRep][dstRepNum - 1].votes : 0 */\n      swap1\n      pop\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":12242:12258  uint96 dstRepNew */\n      0x00\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":12261:12328  add96(dstRepOld, amount, \"Comp::_moveVotes: vote amount overflows\") */\n      tag_226\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":12267:12276  dstRepOld */\n      dup3\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":12278:12284  amount */\n      dup6\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":12261:12328  add96(dstRepOld, amount, \"Comp::_moveVotes: vote amount overflows\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x27\n      dup2\n      mstore\n      0x20\n      add\n      data_cac5f7635b67aba587752f385d4aaa6fe7d1615e382cd95e6c1ae76525be695e\n      0x27\n      swap2\n      codecopy\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":12261:12266  add96 */\n      tag_200\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":12261:12328  add96(dstRepOld, amount, \"Comp::_moveVotes: vote amount overflows\") */\n      jump\t// in\n    tag_226:\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":12242:12328  uint96 dstRepNew = add96(dstRepOld, amount, \"Comp::_moveVotes: vote amount overflows\") */\n      swap1\n      pop\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":12346:12403  _writeCheckpoint(dstRep, dstRepNum, dstRepOld, dstRepNew) */\n      tag_157\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":12363:12369  dstRep */\n      dup6\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":12371:12380  dstRepNum */\n      dup5\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":12382:12391  dstRepOld */\n      dup5\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":12393:12402  dstRepNew */\n      dup5\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":12440:13058  function _writeCheckpoint(address delegatee, uint32 nCheckpoints, uint96 oldVotes, uint96 newVotes) internal {... */\n    tag_221:\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":12557:12575  uint32 blockNumber */\n      0x00\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":12578:12654  safe32(block.number, \"Comp::_writeCheckpoint: block number exceeds 32 bits\") */\n      tag_229\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":12585:12597  block.number */\n      number\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":12578:12654  safe32(block.number, \"Comp::_writeCheckpoint: block number exceeds 32 bits\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x34\n      dup2\n      mstore\n      0x20\n      add\n      data_6426c6c63f7c8daecf0b8a35bfe8c0f43dc9621d39cb2bf0c2cd35cc9db8742f\n      0x34\n      swap2\n      codecopy\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":12578:12584  safe32 */\n      tag_230\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":12578:12654  safe32(block.number, \"Comp::_writeCheckpoint: block number exceeds 32 bits\") */\n      jump\t// in\n    tag_229:\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":12557:12654  uint32 blockNumber = safe32(block.number, \"Comp::_writeCheckpoint: block number exceeds 32 bits\") */\n      swap1\n      pop\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":12682:12683  0 */\n      0x00\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":12667:12679  nCheckpoints */\n      dup5\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":12667:12683  nCheckpoints > 0 */\n      0xffffffff\n      and\n      gt\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":12667:12752  nCheckpoints > 0 && checkpoints[delegatee][nCheckpoints - 1].fromBlock == blockNumber */\n      dup1\n      iszero\n      tag_231\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":12687:12709  checkpoints[delegatee] */\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":12687:12698  checkpoints */\n      0x03\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":12687:12709  checkpoints[delegatee] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":12687:12752  checkpoints[delegatee][nCheckpoints - 1].fromBlock == blockNumber */\n      0xffffffff\n      dup4\n      and\n      swap2\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":12710:12726  nCheckpoints - 1 */\n      tag_232\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":12725:12726  1 */\n      0x01\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":12710:12722  nCheckpoints */\n      dup9\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":12710:12726  nCheckpoints - 1 */\n      tag_134\n      jump\t// in\n    tag_232:\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":12687:12727  checkpoints[delegatee][nCheckpoints - 1] */\n      0xffffffff\n      swap1\n      dup2\n      and\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      0x40\n      add\n      0x00\n      keccak256\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":12687:12737  checkpoints[delegatee][nCheckpoints - 1].fromBlock */\n      sload\n      and\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":12687:12752  checkpoints[delegatee][nCheckpoints - 1].fromBlock == blockNumber */\n      eq\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":12667:12752  nCheckpoints > 0 && checkpoints[delegatee][nCheckpoints - 1].fromBlock == blockNumber */\n    tag_231:\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":12663:12987  if (nCheckpoints > 0 && checkpoints[delegatee][nCheckpoints - 1].fromBlock == blockNumber) {... */\n      iszero\n      tag_233\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":12766:12788  checkpoints[delegatee] */\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":12766:12777  checkpoints */\n      0x03\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":12766:12788  checkpoints[delegatee] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":12815:12823  newVotes */\n      dup4\n      swap2\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":12789:12805  nCheckpoints - 1 */\n      tag_234\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":12804:12805  1 */\n      0x01\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":12789:12801  nCheckpoints */\n      dup9\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":12789:12805  nCheckpoints - 1 */\n      tag_134\n      jump\t// in\n    tag_234:\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":12766:12806  checkpoints[delegatee][nCheckpoints - 1] */\n      0xffffffff\n      and\n      dup2\n      mstore\n      0x20\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      0x40\n      add\n      0x00\n      keccak256\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":12766:12823  checkpoints[delegatee][nCheckpoints - 1].votes = newVotes */\n      dup1\n      sload\n      sub(shl(0x60, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      shl(0x20, 0x01)\n      mul\n      not(0xffffffffffffffffffffffff00000000)\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":12663:12987  if (nCheckpoints > 0 && checkpoints[delegatee][nCheckpoints - 1].fromBlock == blockNumber) {... */\n      jump(tag_235)\n    tag_233:\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":12889:12922  Checkpoint(blockNumber, newVotes) */\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      dup3\n      mstore\n      0xffffffff\n      dup1\n      dup5\n      and\n      dup3\n      mstore\n      sub(shl(0x60, 0x01), 0x01)\n      dup1\n      dup7\n      and\n      0x20\n      dup1\n      dup6\n      add\n      swap2\n      dup3\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":12850:12872  checkpoints[delegatee] */\n      dup12\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":12850:12861  checkpoints */\n      0x03\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":12850:12872  checkpoints[delegatee] */\n      dup3\n      mstore\n      dup7\n      dup2\n      keccak256\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":12850:12886  checkpoints[delegatee][nCheckpoints] */\n      dup12\n      dup7\n      and\n      dup3\n      mstore\n      swap1\n      swap2\n      mstore\n      swap5\n      swap1\n      swap5\n      keccak256\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":12850:12922  checkpoints[delegatee][nCheckpoints] = Checkpoint(blockNumber, newVotes) */\n      swap3\n      mload\n      dup4\n      sload\n      swap5\n      mload\n      swap1\n      swap2\n      and\n      shl(0x20, 0x01)\n      mul\n      not(0xffffffffffffffffffffffffffffffff)\n      swap1\n      swap5\n      and\n      swap2\n      and\n      or\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":12962:12978  nCheckpoints + 1 */\n      tag_236\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":12873:12885  nCheckpoints */\n      dup5\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":12850:12922  checkpoints[delegatee][nCheckpoints] = Checkpoint(blockNumber, newVotes) */\n      0x01\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":12962:12978  nCheckpoints + 1 */\n      tag_237\n      jump\t// in\n    tag_236:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":12934:12959  numCheckpoints[delegatee] */\n      dup7\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":12934:12948  numCheckpoints */\n      0x04\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":12934:12959  numCheckpoints[delegatee] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":12934:12978  numCheckpoints[delegatee] = nCheckpoints + 1 */\n      dup1\n      sload\n      not(0xffffffff)\n      and\n      0xffffffff\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":12663:12987  if (nCheckpoints > 0 && checkpoints[delegatee][nCheckpoints - 1].fromBlock == blockNumber) {... */\n    tag_235:\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":13000:13051  DelegateVotesChanged(delegatee, oldVotes, newVotes) */\n      0x40\n      dup1\n      mload\n      sub(shl(0x60, 0x01), 0x01)\n        /* \"#utility.yul\":10476:10515   */\n      dup1\n      dup7\n      and\n        /* \"#utility.yul\":10458:10516   */\n      dup3\n      mstore\n        /* \"#utility.yul\":10552:10591   */\n      dup5\n      and\n        /* \"#utility.yul\":10547:10549   */\n      0x20\n        /* \"#utility.yul\":10532:10550   */\n      dup3\n      add\n        /* \"#utility.yul\":10525:10592   */\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":13000:13051  DelegateVotesChanged(delegatee, oldVotes, newVotes) */\n      dup8\n      and\n      swap2\n      0xdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a724\n      swap2\n        /* \"#utility.yul\":10431:10449   */\n      add\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":13000:13051  DelegateVotesChanged(delegatee, oldVotes, newVotes) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":12549:13058  {... */\n      pop\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":12440:13058  function _writeCheckpoint(address delegatee, uint32 nCheckpoints, uint96 oldVotes, uint96 newVotes) internal {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":13064:13222  function safe32(uint n, string memory errorMessage) internal pure returns (uint32) {... */\n    tag_230:\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":13139:13145  uint32 */\n      0x00\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":13176:13188  errorMessage */\n      dup2\n      shl(0x20, 0x01)\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":13165:13174  n < 2**32 */\n      dup5\n      lt\n        /* \"Compound(copy)(copy)/contracts/Governance/Comp.sol\":13157:13189  require(n < 2**32, errorMessage) */\n      tag_184\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_130\n      swap2\n      swap1\n        /* \"#utility.yul\":14:432   */\n    tag_28:\n        /* \"#utility.yul\":163:165   */\n      0x20\n        /* \"#utility.yul\":152:161   */\n      dup2\n        /* \"#utility.yul\":145:166   */\n      mstore\n        /* \"#utility.yul\":126:130   */\n      0x00\n        /* \"#utility.yul\":195:201   */\n      dup3\n        /* \"#utility.yul\":189:202   */\n      mload\n        /* \"#utility.yul\":238:244   */\n      dup1\n        /* \"#utility.yul\":233:235   */\n      0x20\n        /* \"#utility.yul\":222:231   */\n      dup5\n        /* \"#utility.yul\":218:236   */\n      add\n        /* \"#utility.yul\":211:245   */\n      mstore\n        /* \"#utility.yul\":297:303   */\n      dup1\n        /* \"#utility.yul\":292:294   */\n      0x20\n        /* \"#utility.yul\":284:290   */\n      dup6\n        /* \"#utility.yul\":280:295   */\n      add\n        /* \"#utility.yul\":275:277   */\n      0x40\n        /* \"#utility.yul\":264:273   */\n      dup6\n        /* \"#utility.yul\":260:278   */\n      add\n        /* \"#utility.yul\":254:304   */\n      mcopy\n        /* \"#utility.yul\":353:354   */\n      0x00\n        /* \"#utility.yul\":348:350   */\n      0x40\n        /* \"#utility.yul\":339:345   */\n      dup3\n        /* \"#utility.yul\":328:337   */\n      dup6\n        /* \"#utility.yul\":324:346   */\n      add\n        /* \"#utility.yul\":320:351   */\n      add\n        /* \"#utility.yul\":313:355   */\n      mstore\n        /* \"#utility.yul\":423:425   */\n      0x40\n        /* \"#utility.yul\":416:418   */\n      0x1f\n        /* \"#utility.yul\":412:419   */\n      not\n        /* \"#utility.yul\":407:409   */\n      0x1f\n        /* \"#utility.yul\":399:405   */\n      dup4\n        /* \"#utility.yul\":395:410   */\n      add\n        /* \"#utility.yul\":391:420   */\n      and\n        /* \"#utility.yul\":380:389   */\n      dup5\n        /* \"#utility.yul\":376:421   */\n      add\n        /* \"#utility.yul\":372:426   */\n      add\n        /* \"#utility.yul\":364:426   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":14:432   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":437:610   */\n    tag_243:\n        /* \"#utility.yul\":505:525   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":554:585   */\n      dup2\n      and\n        /* \"#utility.yul\":544:586   */\n      dup2\n      eq\n        /* \"#utility.yul\":534:604   */\n      tag_248\n      jumpi\n        /* \"#utility.yul\":600:601   */\n      0x00\n        /* \"#utility.yul\":597:598   */\n      0x00\n        /* \"#utility.yul\":590:602   */\n      revert\n        /* \"#utility.yul\":534:604   */\n    tag_248:\n        /* \"#utility.yul\":437:610   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:915   */\n    tag_31:\n        /* \"#utility.yul\":683:689   */\n      0x00\n        /* \"#utility.yul\":691:697   */\n      0x00\n        /* \"#utility.yul\":744:746   */\n      0x40\n        /* \"#utility.yul\":732:741   */\n      dup4\n        /* \"#utility.yul\":723:730   */\n      dup6\n        /* \"#utility.yul\":719:742   */\n      sub\n        /* \"#utility.yul\":715:747   */\n      slt\n        /* \"#utility.yul\":712:764   */\n      iszero\n      tag_250\n      jumpi\n        /* \"#utility.yul\":760:761   */\n      0x00\n        /* \"#utility.yul\":757:758   */\n      0x00\n        /* \"#utility.yul\":750:762   */\n      revert\n        /* \"#utility.yul\":712:764   */\n    tag_250:\n        /* \"#utility.yul\":783:812   */\n      tag_251\n        /* \"#utility.yul\":802:811   */\n      dup4\n        /* \"#utility.yul\":783:812   */\n      tag_243\n      jump\t// in\n    tag_251:\n        /* \"#utility.yul\":773:812   */\n      swap5\n        /* \"#utility.yul\":881:883   */\n      0x20\n        /* \"#utility.yul\":866:884   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":853:885   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":615:915   */\n      jump\t// out\n        /* \"#utility.yul\":1476:1850   */\n    tag_45:\n        /* \"#utility.yul\":1553:1559   */\n      0x00\n        /* \"#utility.yul\":1561:1567   */\n      0x00\n        /* \"#utility.yul\":1569:1575   */\n      0x00\n        /* \"#utility.yul\":1622:1624   */\n      0x60\n        /* \"#utility.yul\":1610:1619   */\n      dup5\n        /* \"#utility.yul\":1601:1608   */\n      dup7\n        /* \"#utility.yul\":1597:1620   */\n      sub\n        /* \"#utility.yul\":1593:1625   */\n      slt\n        /* \"#utility.yul\":1590:1642   */\n      iszero\n      tag_256\n      jumpi\n        /* \"#utility.yul\":1638:1639   */\n      0x00\n        /* \"#utility.yul\":1635:1636   */\n      0x00\n        /* \"#utility.yul\":1628:1640   */\n      revert\n        /* \"#utility.yul\":1590:1642   */\n    tag_256:\n        /* \"#utility.yul\":1661:1690   */\n      tag_257\n        /* \"#utility.yul\":1680:1689   */\n      dup5\n        /* \"#utility.yul\":1661:1690   */\n      tag_243\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":1651:1690   */\n      swap3\n      pop\n        /* \"#utility.yul\":1709:1747   */\n      tag_258\n        /* \"#utility.yul\":1743:1745   */\n      0x20\n        /* \"#utility.yul\":1732:1741   */\n      dup6\n        /* \"#utility.yul\":1728:1746   */\n      add\n        /* \"#utility.yul\":1709:1747   */\n      tag_243\n      jump\t// in\n    tag_258:\n        /* \"#utility.yul\":1476:1850   */\n      swap3\n      swap6\n        /* \"#utility.yul\":1699:1747   */\n      swap3\n      swap5\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1816:1818   */\n      0x40\n        /* \"#utility.yul\":1801:1819   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":1788:1820   */\n      calldataload\n      swap1\n        /* \"#utility.yul\":1476:1850   */\n      jump\t// out\n        /* \"#utility.yul\":2044:2230   */\n    tag_54:\n        /* \"#utility.yul\":2103:2109   */\n      0x00\n        /* \"#utility.yul\":2156:2158   */\n      0x20\n        /* \"#utility.yul\":2144:2153   */\n      dup3\n        /* \"#utility.yul\":2135:2142   */\n      dup5\n        /* \"#utility.yul\":2131:2154   */\n      sub\n        /* \"#utility.yul\":2127:2159   */\n      slt\n        /* \"#utility.yul\":2124:2176   */\n      iszero\n      tag_261\n      jumpi\n        /* \"#utility.yul\":2172:2173   */\n      0x00\n        /* \"#utility.yul\":2169:2170   */\n      0x00\n        /* \"#utility.yul\":2162:2174   */\n      revert\n        /* \"#utility.yul\":2124:2176   */\n    tag_261:\n        /* \"#utility.yul\":2195:2224   */\n      tag_155\n        /* \"#utility.yul\":2214:2223   */\n      dup3\n        /* \"#utility.yul\":2195:2224   */\n      tag_243\n      jump\t// in\n        /* \"#utility.yul\":2853:3681   */\n    tag_92:\n        /* \"#utility.yul\":2955:2961   */\n      0x00\n        /* \"#utility.yul\":2963:2969   */\n      0x00\n        /* \"#utility.yul\":2971:2977   */\n      0x00\n        /* \"#utility.yul\":2979:2985   */\n      0x00\n        /* \"#utility.yul\":2987:2993   */\n      0x00\n        /* \"#utility.yul\":2995:3001   */\n      0x00\n        /* \"#utility.yul\":3048:3051   */\n      0xc0\n        /* \"#utility.yul\":3036:3045   */\n      dup8\n        /* \"#utility.yul\":3027:3034   */\n      dup10\n        /* \"#utility.yul\":3023:3046   */\n      sub\n        /* \"#utility.yul\":3019:3052   */\n      slt\n        /* \"#utility.yul\":3016:3069   */\n      iszero\n      tag_267\n      jumpi\n        /* \"#utility.yul\":3065:3066   */\n      0x00\n        /* \"#utility.yul\":3062:3063   */\n      0x00\n        /* \"#utility.yul\":3055:3067   */\n      revert\n        /* \"#utility.yul\":3016:3069   */\n    tag_267:\n        /* \"#utility.yul\":3088:3117   */\n      tag_268\n        /* \"#utility.yul\":3107:3116   */\n      dup8\n        /* \"#utility.yul\":3088:3117   */\n      tag_243\n      jump\t// in\n    tag_268:\n        /* \"#utility.yul\":3078:3117   */\n      swap6\n      pop\n        /* \"#utility.yul\":3186:3188   */\n      0x20\n        /* \"#utility.yul\":3171:3189   */\n      dup8\n      add\n        /* \"#utility.yul\":3158:3190   */\n      calldataload\n      swap5\n      pop\n        /* \"#utility.yul\":3287:3289   */\n      0x40\n        /* \"#utility.yul\":3272:3290   */\n      dup8\n      add\n        /* \"#utility.yul\":3259:3291   */\n      calldataload\n      swap4\n      pop\n        /* \"#utility.yul\":3369:3371   */\n      0x60\n        /* \"#utility.yul\":3354:3372   */\n      dup8\n      add\n        /* \"#utility.yul\":3341:3373   */\n      calldataload\n        /* \"#utility.yul\":3417:3421   */\n      0xff\n        /* \"#utility.yul\":3404:3422   */\n      dup2\n      and\n        /* \"#utility.yul\":3392:3423   */\n      dup2\n      eq\n        /* \"#utility.yul\":3382:3441   */\n      tag_269\n      jumpi\n        /* \"#utility.yul\":3437:3438   */\n      0x00\n        /* \"#utility.yul\":3434:3435   */\n      0x00\n        /* \"#utility.yul\":3427:3439   */\n      revert\n        /* \"#utility.yul\":3382:3441   */\n    tag_269:\n        /* \"#utility.yul\":2853:3681   */\n      swap6\n      swap9\n      swap5\n      swap8\n      pop\n      swap3\n      swap6\n        /* \"#utility.yul\":3540:3543   */\n      0x80\n        /* \"#utility.yul\":3525:3544   */\n      dup2\n      add\n        /* \"#utility.yul\":3512:3545   */\n      calldataload\n      swap5\n        /* \"#utility.yul\":3644:3647   */\n      0xa0\n        /* \"#utility.yul\":3629:3648   */\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":3616:3649   */\n      calldataload\n      swap4\n      pop\n        /* \"#utility.yul\":2853:3681   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3686:3946   */\n    tag_96:\n        /* \"#utility.yul\":3754:3760   */\n      0x00\n        /* \"#utility.yul\":3762:3768   */\n      0x00\n        /* \"#utility.yul\":3815:3817   */\n      0x40\n        /* \"#utility.yul\":3803:3812   */\n      dup4\n        /* \"#utility.yul\":3794:3801   */\n      dup6\n        /* \"#utility.yul\":3790:3813   */\n      sub\n        /* \"#utility.yul\":3786:3818   */\n      slt\n        /* \"#utility.yul\":3783:3835   */\n      iszero\n      tag_271\n      jumpi\n        /* \"#utility.yul\":3831:3832   */\n      0x00\n        /* \"#utility.yul\":3828:3829   */\n      0x00\n        /* \"#utility.yul\":3821:3833   */\n      revert\n        /* \"#utility.yul\":3783:3835   */\n    tag_271:\n        /* \"#utility.yul\":3854:3883   */\n      tag_272\n        /* \"#utility.yul\":3873:3882   */\n      dup4\n        /* \"#utility.yul\":3854:3883   */\n      tag_243\n      jump\t// in\n    tag_272:\n        /* \"#utility.yul\":3844:3883   */\n      swap2\n      pop\n        /* \"#utility.yul\":3902:3940   */\n      tag_273\n        /* \"#utility.yul\":3936:3938   */\n      0x20\n        /* \"#utility.yul\":3925:3934   */\n      dup5\n        /* \"#utility.yul\":3921:3939   */\n      add\n        /* \"#utility.yul\":3902:3940   */\n      tag_243\n      jump\t// in\n    tag_273:\n        /* \"#utility.yul\":3892:3940   */\n      swap1\n      pop\n        /* \"#utility.yul\":3686:3946   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3951:4301   */\n    tag_104:\n        /* \"#utility.yul\":4018:4024   */\n      0x00\n        /* \"#utility.yul\":4026:4032   */\n      0x00\n        /* \"#utility.yul\":4079:4081   */\n      0x40\n        /* \"#utility.yul\":4067:4076   */\n      dup4\n        /* \"#utility.yul\":4058:4065   */\n      dup6\n        /* \"#utility.yul\":4054:4077   */\n      sub\n        /* \"#utility.yul\":4050:4082   */\n      slt\n        /* \"#utility.yul\":4047:4099   */\n      iszero\n      tag_275\n      jumpi\n        /* \"#utility.yul\":4095:4096   */\n      0x00\n        /* \"#utility.yul\":4092:4093   */\n      0x00\n        /* \"#utility.yul\":4085:4097   */\n      revert\n        /* \"#utility.yul\":4047:4099   */\n    tag_275:\n        /* \"#utility.yul\":4118:4147   */\n      tag_276\n        /* \"#utility.yul\":4137:4146   */\n      dup4\n        /* \"#utility.yul\":4118:4147   */\n      tag_243\n      jump\t// in\n    tag_276:\n        /* \"#utility.yul\":4108:4147   */\n      swap2\n      pop\n        /* \"#utility.yul\":4197:4199   */\n      0x20\n        /* \"#utility.yul\":4186:4195   */\n      dup4\n        /* \"#utility.yul\":4182:4200   */\n      add\n        /* \"#utility.yul\":4169:4201   */\n      calldataload\n        /* \"#utility.yul\":4241:4251   */\n      0xffffffff\n        /* \"#utility.yul\":4234:4239   */\n      dup2\n        /* \"#utility.yul\":4230:4252   */\n      and\n        /* \"#utility.yul\":4223:4228   */\n      dup2\n        /* \"#utility.yul\":4220:4253   */\n      eq\n        /* \"#utility.yul\":4210:4271   */\n      tag_277\n      jumpi\n        /* \"#utility.yul\":4267:4268   */\n      0x00\n        /* \"#utility.yul\":4264:4265   */\n      0x00\n        /* \"#utility.yul\":4257:4269   */\n      revert\n        /* \"#utility.yul\":4210:4271   */\n    tag_277:\n        /* \"#utility.yul\":4290:4295   */\n      dup1\n        /* \"#utility.yul\":4280:4295   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":3951:4301   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5227:5354   */\n    tag_244:\n        /* \"#utility.yul\":5288:5298   */\n      0x4e487b71\n        /* \"#utility.yul\":5283:5286   */\n      0xe0\n        /* \"#utility.yul\":5279:5299   */\n      shl\n        /* \"#utility.yul\":5276:5277   */\n      0x00\n        /* \"#utility.yul\":5269:5300   */\n      mstore\n        /* \"#utility.yul\":5319:5323   */\n      0x11\n        /* \"#utility.yul\":5316:5317   */\n      0x04\n        /* \"#utility.yul\":5309:5324   */\n      mstore\n        /* \"#utility.yul\":5343:5347   */\n      0x24\n        /* \"#utility.yul\":5340:5341   */\n      0x00\n        /* \"#utility.yul\":5333:5348   */\n      revert\n        /* \"#utility.yul\":5359:5529   */\n    tag_134:\n        /* \"#utility.yul\":5456:5466   */\n      0xffffffff\n        /* \"#utility.yul\":5449:5467   */\n      dup3\n      dup2\n      and\n        /* \"#utility.yul\":5429:5447   */\n      dup3\n      dup3\n      and\n        /* \"#utility.yul\":5425:5468   */\n      sub\n      swap1\n        /* \"#utility.yul\":5480:5500   */\n      dup2\n      gt\n        /* \"#utility.yul\":5477:5523   */\n      iszero\n      tag_108\n      jumpi\n        /* \"#utility.yul\":5503:5521   */\n      tag_108\n      tag_244\n      jump\t// in\n        /* \"#utility.yul\":5534:5809   */\n    tag_143:\n        /* \"#utility.yul\":5573:5574   */\n      0x00\n        /* \"#utility.yul\":5607:5617   */\n      0xffffffff\n        /* \"#utility.yul\":5604:5605   */\n      dup4\n        /* \"#utility.yul\":5600:5618   */\n      and\n        /* \"#utility.yul\":5637:5640   */\n      dup1\n        /* \"#utility.yul\":5627:5761   */\n      tag_286\n      jumpi\n        /* \"#utility.yul\":5683:5693   */\n      0x4e487b71\n        /* \"#utility.yul\":5678:5681   */\n      0xe0\n        /* \"#utility.yul\":5674:5694   */\n      shl\n        /* \"#utility.yul\":5671:5672   */\n      0x00\n        /* \"#utility.yul\":5664:5695   */\n      mstore\n        /* \"#utility.yul\":5718:5722   */\n      0x12\n        /* \"#utility.yul\":5715:5716   */\n      0x04\n        /* \"#utility.yul\":5708:5723   */\n      mstore\n        /* \"#utility.yul\":5746:5750   */\n      0x24\n        /* \"#utility.yul\":5743:5744   */\n      0x00\n        /* \"#utility.yul\":5736:5751   */\n      revert\n        /* \"#utility.yul\":5627:5761   */\n    tag_286:\n        /* \"#utility.yul\":5799:5802   */\n      dup1\n        /* \"#utility.yul\":5786:5796   */\n      0xffffffff\n        /* \"#utility.yul\":5783:5784   */\n      dup5\n        /* \"#utility.yul\":5779:5797   */\n      and\n        /* \"#utility.yul\":5775:5803   */\n      div\n        /* \"#utility.yul\":5770:5803   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":5534:5809   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7865:8000   */\n    tag_174:\n        /* \"#utility.yul\":7904:7907   */\n      0x00\n        /* \"#utility.yul\":7925:7942   */\n      0x01\n      dup3\n      add\n        /* \"#utility.yul\":7922:7965   */\n      tag_294\n      jumpi\n        /* \"#utility.yul\":7945:7963   */\n      tag_294\n      tag_244\n      jump\t// in\n    tag_294:\n      pop\n        /* \"#utility.yul\":7992:7993   */\n      0x01\n        /* \"#utility.yul\":7981:7994   */\n      add\n      swap1\n        /* \"#utility.yul\":7865:8000   */\n      jump\t// out\n        /* \"#utility.yul\":8815:9033   */\n    tag_190:\n      sub(shl(0x60, 0x01), 0x01)\n        /* \"#utility.yul\":8921:8955   */\n      dup3\n      dup2\n      and\n        /* \"#utility.yul\":8885:8919   */\n      dup3\n      dup3\n      and\n        /* \"#utility.yul\":8881:8956   */\n      sub\n      swap1\n        /* \"#utility.yul\":8968:9004   */\n      dup2\n      gt\n        /* \"#utility.yul\":8965:9027   */\n      iszero\n      tag_108\n      jumpi\n        /* \"#utility.yul\":9007:9025   */\n      tag_108\n      tag_244\n      jump\t// in\n        /* \"#utility.yul\":9894:10109   */\n    tag_209:\n      sub(shl(0x60, 0x01), 0x01)\n        /* \"#utility.yul\":9962:9996   */\n      dup2\n      dup2\n      and\n        /* \"#utility.yul\":9998:10032   */\n      dup4\n      dup3\n      and\n        /* \"#utility.yul\":9958:10033   */\n      add\n      swap1\n        /* \"#utility.yul\":10045:10080   */\n      dup2\n      gt\n        /* \"#utility.yul\":10042:10103   */\n      iszero\n      tag_108\n      jumpi\n        /* \"#utility.yul\":10083:10101   */\n      tag_108\n      tag_244\n      jump\t// in\n        /* \"#utility.yul\":10114:10281   */\n    tag_237:\n        /* \"#utility.yul\":10209:10219   */\n      0xffffffff\n        /* \"#utility.yul\":10182:10200   */\n      dup2\n      dup2\n      and\n        /* \"#utility.yul\":10202:10220   */\n      dup4\n      dup3\n      and\n        /* \"#utility.yul\":10178:10221   */\n      add\n      swap1\n        /* \"#utility.yul\":10233:10252   */\n      dup2\n      gt\n        /* \"#utility.yul\":10230:10275   */\n      iszero\n      tag_108\n      jumpi\n        /* \"#utility.yul\":10255:10273   */\n      tag_108\n      tag_244\n      jump\t// in\n    stop\n    data_20f75e61dae66bd43cc4d6e74412a2a0dfc4c34b4746776eb4e12c627179461c 436f6d703a3a5f7472616e73666572546f6b656e733a207472616e7366657220616d6f756e7420657863656564732062616c616e6365\n    data_32dab9ece0397c38c85244ed755f6110088fb13d43a7e9d6809da7619813d0fe 436f6d703a3a617070726f76653a20616d6f756e7420657863656564732039362062697473\n    data_5bdeafae4aaace0ed9b7df6e60f285c9e8e84a3ceac05af6b6259bfed8e161f5 436f6d703a3a7472616e736665723a20616d6f756e7420657863656564732039362062697473\n    data_6426c6c63f7c8daecf0b8a35bfe8c0f43dc9621d39cb2bf0c2cd35cc9db8742f 436f6d703a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d62657220657863656564732033322062697473\n    data_79bf2f3c2009651b33d37efb8a65657c3e203b2c36f61068863922cb9e64a77a 436f6d703a3a5f6d6f7665566f7465733a20766f746520616d6f756e7420756e646572666c6f7773\n    data_838ec7826d8a7e194a0b4c14b8572b8a97cbf1ec9a1dd8f0dc2ca0dbf889365c 436f6d703a3a5f7472616e73666572546f6b656e733a207472616e7366657220616d6f756e74206f766572666c6f7773\n    data_b7ac833594da1df58fd15c3b6b55eb20762dba088c48b65ce9d522a789ff2495 436f6d703a3a7472616e7366657246726f6d3a207472616e7366657220616d6f756e742065786365656473207370656e64657220616c6c6f77616e6365\n    data_cac5f7635b67aba587752f385d4aaa6fe7d1615e382cd95e6c1ae76525be695e 436f6d703a3a5f6d6f7665566f7465733a20766f746520616d6f756e74206f766572666c6f7773\n\n    auxdata: 0xa2646970667358221220c490d27b0c19a0f3a562fccea3b17408c5b6cfd2015c4cfce5b8ffa444df05bd64736f6c634300081b0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_131": {
									"entryPoint": null,
									"id": 131,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 158,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:488:1",
										"nodeType": "YulBlock",
										"src": "0:488:1",
										"statements": [
											{
												"nativeSrc": "6:3:1",
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "95:209:1",
													"nodeType": "YulBlock",
													"src": "95:209:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "141:16:1",
																"nodeType": "YulBlock",
																"src": "141:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "150:1:1",
																					"nodeType": "YulLiteral",
																					"src": "150:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "153:1:1",
																					"nodeType": "YulLiteral",
																					"src": "153:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "143:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "143:6:1"
																			},
																			"nativeSrc": "143:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "143:12:1"
																		},
																		"nativeSrc": "143:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "143:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "116:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "116:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "125:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "125:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "112:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "112:3:1"
																		},
																		"nativeSrc": "112:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "112:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "137:2:1",
																		"nodeType": "YulLiteral",
																		"src": "137:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "108:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "108:3:1"
																},
																"nativeSrc": "108:32:1",
																"nodeType": "YulFunctionCall",
																"src": "108:32:1"
															},
															"nativeSrc": "105:52:1",
															"nodeType": "YulIf",
															"src": "105:52:1"
														},
														{
															"nativeSrc": "166:29:1",
															"nodeType": "YulVariableDeclaration",
															"src": "166:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "185:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "185:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "179:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "179:5:1"
																},
																"nativeSrc": "179:16:1",
																"nodeType": "YulFunctionCall",
																"src": "179:16:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "170:5:1",
																	"nodeType": "YulTypedName",
																	"src": "170:5:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "258:16:1",
																"nodeType": "YulBlock",
																"src": "258:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "267:1:1",
																					"nodeType": "YulLiteral",
																					"src": "267:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "270:1:1",
																					"nodeType": "YulLiteral",
																					"src": "270:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "260:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "260:6:1"
																			},
																			"nativeSrc": "260:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "260:12:1"
																		},
																		"nativeSrc": "260:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "260:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "217:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "217:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "228:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "228:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "243:3:1",
																										"nodeType": "YulLiteral",
																										"src": "243:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "248:1:1",
																										"nodeType": "YulLiteral",
																										"src": "248:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "239:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "239:3:1"
																								},
																								"nativeSrc": "239:11:1",
																								"nodeType": "YulFunctionCall",
																								"src": "239:11:1"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "252:1:1",
																								"nodeType": "YulLiteral",
																								"src": "252:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "235:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "235:3:1"
																						},
																						"nativeSrc": "235:19:1",
																						"nodeType": "YulFunctionCall",
																						"src": "235:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "224:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "224:3:1"
																				},
																				"nativeSrc": "224:31:1",
																				"nodeType": "YulFunctionCall",
																				"src": "224:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "214:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "214:2:1"
																		},
																		"nativeSrc": "214:42:1",
																		"nodeType": "YulFunctionCall",
																		"src": "214:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "207:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "207:6:1"
																},
																"nativeSrc": "207:50:1",
																"nodeType": "YulFunctionCall",
																"src": "207:50:1"
															},
															"nativeSrc": "204:70:1",
															"nodeType": "YulIf",
															"src": "204:70:1"
														},
														{
															"nativeSrc": "283:15:1",
															"nodeType": "YulAssignment",
															"src": "283:15:1",
															"value": {
																"name": "value",
																"nativeSrc": "293:5:1",
																"nodeType": "YulIdentifier",
																"src": "293:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "283:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "283:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "14:290:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "61:9:1",
														"nodeType": "YulTypedName",
														"src": "61:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "72:7:1",
														"nodeType": "YulTypedName",
														"src": "72:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "84:6:1",
														"nodeType": "YulTypedName",
														"src": "84:6:1",
														"type": ""
													}
												],
												"src": "14:290:1"
											},
											{
												"body": {
													"nativeSrc": "410:76:1",
													"nodeType": "YulBlock",
													"src": "410:76:1",
													"statements": [
														{
															"nativeSrc": "420:26:1",
															"nodeType": "YulAssignment",
															"src": "420:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "432:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "432:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "443:2:1",
																		"nodeType": "YulLiteral",
																		"src": "443:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "428:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "428:3:1"
																},
																"nativeSrc": "428:18:1",
																"nodeType": "YulFunctionCall",
																"src": "428:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "420:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "420:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "462:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "462:9:1"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "473:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "473:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "455:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "455:6:1"
																},
																"nativeSrc": "455:25:1",
																"nodeType": "YulFunctionCall",
																"src": "455:25:1"
															},
															"nativeSrc": "455:25:1",
															"nodeType": "YulExpressionStatement",
															"src": "455:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "309:177:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "379:9:1",
														"nodeType": "YulTypedName",
														"src": "379:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "390:6:1",
														"nodeType": "YulTypedName",
														"src": "390:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "401:4:1",
														"nodeType": "YulTypedName",
														"src": "401:4:1",
														"type": ""
													}
												],
												"src": "309:177:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "6080604052348015600e575f5ffd5b50604051611878380380611878833981016040819052602b91609e565b6001600160a01b0381165f8181526001602052604080822080546001600160601b0319166a084595161401484a00000090811790915590517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9160919190815260200190565b60405180910390a35060c9565b5f6020828403121560ad575f5ffd5b81516001600160a01b038116811460c2575f5ffd5b9392505050565b6117a2806100d65f395ff3fe608060405234801561000f575f5ffd5b506004361061011c575f3560e01c806370a08231116100a9578063b4b5ea571161006e578063b4b5ea5714610334578063c3cda52014610347578063dd62ed3e1461035a578063e7a324dc14610399578063f1127ed8146103c0575f5ffd5b806370a0823114610283578063782d6fe1146102b45780637ecebe00146102df57806395d89b41146102fe578063a9059cbb14610321575f5ffd5b806323b872dd116100ef57806323b872dd146101c7578063313ce567146101da578063587cde1e146101f45780635c19a95c146102345780636fcfff4514610249575f5ffd5b806306fdde0314610120578063095ea7b31461015d57806318160ddd1461018057806320606b70146101a0575b5f5ffd5b6101476040518060400160405280600881526020016710dbdb5c1bdd5b9960c21b81525081565b6040516101549190611392565b60405180910390f35b61017061016b3660046113e2565b610426565b6040519015158152602001610154565b6101926a084595161401484a00000081565b604051908152602001610154565b6101927f8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a86681565b6101706101d536600461140a565b6104e1565b6101e2601281565b60405160ff9091168152602001610154565b61021c610202366004611444565b60026020525f90815260409020546001600160a01b031681565b6040516001600160a01b039091168152602001610154565b610247610242366004611444565b61061f565b005b61026e610257366004611444565b60046020525f908152604090205463ffffffff1681565b60405163ffffffff9091168152602001610154565b610192610291366004611444565b6001600160a01b03165f908152600160205260409020546001600160601b031690565b6102c76102c23660046113e2565b61062c565b6040516001600160601b039091168152602001610154565b6101926102ed366004611444565b60056020525f908152604090205481565b610147604051806040016040528060048152602001630434f4d560e41b81525081565b61017061032f3660046113e2565b6108ae565b6102c7610342366004611444565b6108e9565b61024761035536600461145d565b610963565b6101926103683660046114b8565b6001600160a01b039182165f908152602081815260408083209390941682529190915220546001600160601b031690565b6101927fe48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf81565b6104026103ce3660046114e9565b600360209081525f928352604080842090915290825290205463ffffffff811690600160201b90046001600160601b031682565b6040805163ffffffff90931683526001600160601b03909116602083015201610154565b5f5f5f19830361043e57506001600160601b03610463565b6104608360405180606001604052806025815260200161163260259139610c4a565b90505b335f818152602081815260408083206001600160a01b0389168085529083529281902080546001600160601b0319166001600160601b03871690811790915590519081529192917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a360019150505b92915050565b6001600160a01b0383165f908152602081815260408083203380855290835281842054825160608101909352602580845291936001600160601b03909116928592610536928892919061163290830139610c4a565b9050866001600160a01b0316836001600160a01b03161415801561056357506001600160601b0382811614155b15610607575f61058c83836040518060600160405280603d8152602001611709603d9139610c78565b6001600160a01b038981165f81815260208181526040808320948a168084529482529182902080546001600160601b0319166001600160601b0387169081179091559151918252939450919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505b610612878783610cc1565b5060019695505050505050565b6106293382610f0e565b50565b5f4382106106915760405162461bcd60e51b815260206004820152602760248201527f436f6d703a3a6765745072696f72566f7465733a206e6f742079657420646574604482015266195c9b5a5b995960ca1b60648201526084015b60405180910390fd5b6001600160a01b0383165f9081526004602052604081205463ffffffff16908190036106c0575f9150506104db565b6001600160a01b0384165f90815260036020526040812084916106e460018561153a565b63ffffffff908116825260208201929092526040015f20541611610754576001600160a01b0384165f9081526003602052604081209061072560018461153a565b63ffffffff16815260208101919091526040015f2054600160201b90046001600160601b031691506104db9050565b6001600160a01b0384165f90815260036020908152604080832083805290915290205463ffffffff1683101561078d575f9150506104db565b5f8061079a60018461153a565b90505b8163ffffffff168163ffffffff16111561086a575f60026107be848461153a565b6107c89190611556565b6107d2908361153a565b6001600160a01b0388165f90815260036020908152604080832063ffffffff858116855290835292819020815180830190925254928316808252600160201b9093046001600160601b03169181019190915291925087900361083e576020015194506104db9350505050565b805163ffffffff1687111561085557819350610863565b61086060018361153a565b92505b505061079d565b506001600160a01b0385165f90815260036020908152604080832063ffffffff909416835292905220546001600160601b03600160201b9091041691505092915050565b5f5f6108d28360405180606001604052806026815260200161165760269139610c4a565b90506108df338583610cc1565b5060019392505050565b6001600160a01b0381165f9081526004602052604081205463ffffffff1680610912575f61095c565b6001600160a01b0383165f9081526003602052604081209061093560018461153a565b63ffffffff16815260208101919091526040015f2054600160201b90046001600160601b03165b9392505050565b604080518082018252600881526710dbdb5c1bdd5b9960c21b60209182015281517f8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a866818301527f561ca898cce9f021c15a441ef41899706e923541cee724530075d1a1144761c781840152466060820152306080808301919091528351808303909101815260a0820184528051908301207fe48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf60c08301526001600160a01b038a1660e083015261010082018990526101208083018990528451808403909101815261014083019094528351939092019290922061190160f01b6101608401526101628301829052610182830181905290915f906101a20160408051601f1981840301815282825280516020918201205f80855291840180845281905260ff8a169284019290925260608301889052608083018790529092509060019060a0016020604051602081039080840390855afa158015610ae2573d5f5f3e3d5ffd5b5050604051601f1901519150506001600160a01b038116610b545760405162461bcd60e51b815260206004820152602660248201527f436f6d703a3a64656c656761746542795369673a20696e76616c6964207369676044820152656e617475726560d01b6064820152608401610688565b6001600160a01b0381165f908152600560205260408120805491610b7783611589565b919050558914610bd45760405162461bcd60e51b815260206004820152602260248201527f436f6d703a3a64656c656761746542795369673a20696e76616c6964206e6f6e604482015261636560f01b6064820152608401610688565b87421115610c335760405162461bcd60e51b815260206004820152602660248201527f436f6d703a3a64656c656761746542795369673a207369676e617475726520656044820152651e1c1a5c995960d21b6064820152608401610688565b610c3d818b610f0e565b505050505b505050505050565b5f81600160601b8410610c705760405162461bcd60e51b81526004016106889190611392565b509192915050565b5f836001600160601b0316836001600160601b031611158290610cae5760405162461bcd60e51b81526004016106889190611392565b50610cb983856115a1565b949350505050565b6001600160a01b038316610d3d5760405162461bcd60e51b815260206004820152603c60248201527f436f6d703a3a5f7472616e73666572546f6b656e733a2063616e6e6f7420747260448201527f616e736665722066726f6d20746865207a65726f2061646472657373000000006064820152608401610688565b6001600160a01b038216610db95760405162461bcd60e51b815260206004820152603a60248201527f436f6d703a3a5f7472616e73666572546f6b656e733a2063616e6e6f7420747260448201527f616e7366657220746f20746865207a65726f20616464726573730000000000006064820152608401610688565b6001600160a01b0383165f90815260016020908152604091829020548251606081019093526036808452610e03936001600160601b0390921692859291906115fc90830139610c78565b6001600160a01b038481165f90815260016020908152604080832080546001600160601b0319166001600160601b03968716179055928616825290829020548251606081019093526030808452610e6a94919091169285929091906116d990830139610f97565b6001600160a01b038381165f8181526001602090815260409182902080546001600160601b0319166001600160601b03968716179055905193851684529092918616917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36001600160a01b038084165f90815260026020526040808220548584168352912054610f0992918216911683610fe3565b505050565b6001600160a01b038083165f81815260026020818152604080842080546001845282862054949093528787166001600160a01b031984168117909155905191909516946001600160601b039092169391928592917f3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f9190a4610f91828483610fe3565b50505050565b5f80610fa384866115c0565b9050846001600160601b0316816001600160601b031610158390610fda5760405162461bcd60e51b81526004016106889190611392565b50949350505050565b816001600160a01b0316836001600160a01b03161415801561100d57505f816001600160601b0316115b15610f09576001600160a01b038316156110cd576001600160a01b0383165f9081526004602052604081205463ffffffff16908161104b575f611095565b6001600160a01b0385165f9081526003602052604081209061106e60018561153a565b63ffffffff16815260208101919091526040015f2054600160201b90046001600160601b03165b90505f6110bb82856040518060600160405280602881526020016116b160289139610c78565b90506110c986848484611180565b5050505b6001600160a01b03821615610f09576001600160a01b0382165f9081526004602052604081205463ffffffff169081611106575f611150565b6001600160a01b0384165f9081526003602052604081209061112960018561153a565b63ffffffff16815260208101919091526040015f2054600160201b90046001600160601b03165b90505f611176828560405180606001604052806027815260200161174660279139610f97565b9050610c42858484845b5f6111a34360405180606001604052806034815260200161167d60349139611370565b90505f8463ffffffff161180156111fa57506001600160a01b0385165f90815260036020526040812063ffffffff8316916111df60018861153a565b63ffffffff908116825260208201929092526040015f205416145b1561126c576001600160a01b0385165f908152600360205260408120839161122360018861153a565b63ffffffff16815260208101919091526040015f2080546001600160601b0392909216600160201b026fffffffffffffffffffffffff000000001990921691909117905561131b565b60408051808201825263ffffffff80841682526001600160601b0380861660208085019182526001600160a01b038b165f908152600382528681208b8616825290915294909420925183549451909116600160201b026fffffffffffffffffffffffffffffffff199094169116179190911790556112eb8460016115df565b6001600160a01b0386165f908152600460205260409020805463ffffffff191663ffffffff929092169190911790555b604080516001600160601b038086168252841660208201526001600160a01b038716917fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a724910160405180910390a25050505050565b5f81600160201b8410610c705760405162461bcd60e51b815260040161068891905b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b80356001600160a01b03811681146113dd575f5ffd5b919050565b5f5f604083850312156113f3575f5ffd5b6113fc836113c7565b946020939093013593505050565b5f5f5f6060848603121561141c575f5ffd5b611425846113c7565b9250611433602085016113c7565b929592945050506040919091013590565b5f60208284031215611454575f5ffd5b61095c826113c7565b5f5f5f5f5f5f60c08789031215611472575f5ffd5b61147b876113c7565b95506020870135945060408701359350606087013560ff8116811461149e575f5ffd5b9598949750929560808101359460a0909101359350915050565b5f5f604083850312156114c9575f5ffd5b6114d2836113c7565b91506114e0602084016113c7565b90509250929050565b5f5f604083850312156114fa575f5ffd5b611503836113c7565b9150602083013563ffffffff8116811461151b575f5ffd5b809150509250929050565b634e487b7160e01b5f52601160045260245ffd5b63ffffffff82811682821603908111156104db576104db611526565b5f63ffffffff83168061157757634e487b7160e01b5f52601260045260245ffd5b8063ffffffff84160491505092915050565b5f6001820161159a5761159a611526565b5060010190565b6001600160601b0382811682821603908111156104db576104db611526565b6001600160601b0381811683821601908111156104db576104db611526565b63ffffffff81811683821601908111156104db576104db61152656fe436f6d703a3a5f7472616e73666572546f6b656e733a207472616e7366657220616d6f756e7420657863656564732062616c616e6365436f6d703a3a617070726f76653a20616d6f756e7420657863656564732039362062697473436f6d703a3a7472616e736665723a20616d6f756e7420657863656564732039362062697473436f6d703a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d62657220657863656564732033322062697473436f6d703a3a5f6d6f7665566f7465733a20766f746520616d6f756e7420756e646572666c6f7773436f6d703a3a5f7472616e73666572546f6b656e733a207472616e7366657220616d6f756e74206f766572666c6f7773436f6d703a3a7472616e7366657246726f6d3a207472616e7366657220616d6f756e742065786365656473207370656e64657220616c6c6f77616e6365436f6d703a3a5f6d6f7665566f7465733a20766f746520616d6f756e74206f766572666c6f7773a2646970667358221220c490d27b0c19a0f3a562fccea3b17408c5b6cfd2015c4cfce5b8ffa444df05bd64736f6c634300081b0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x1878 CODESIZE SUB DUP1 PUSH2 0x1878 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH1 0x2B SWAP2 PUSH1 0x9E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT AND PUSH11 0x84595161401484A000000 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 PUSH1 0x91 SWAP2 SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0xC9 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH1 0xAD JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH1 0xC2 JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x17A2 DUP1 PUSH2 0xD6 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x11C JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xA9 JUMPI DUP1 PUSH4 0xB4B5EA57 GT PUSH2 0x6E JUMPI DUP1 PUSH4 0xB4B5EA57 EQ PUSH2 0x334 JUMPI DUP1 PUSH4 0xC3CDA520 EQ PUSH2 0x347 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x35A JUMPI DUP1 PUSH4 0xE7A324DC EQ PUSH2 0x399 JUMPI DUP1 PUSH4 0xF1127ED8 EQ PUSH2 0x3C0 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x283 JUMPI DUP1 PUSH4 0x782D6FE1 EQ PUSH2 0x2B4 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x2DF JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2FE JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x321 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xEF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1C7 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1DA JUMPI DUP1 PUSH4 0x587CDE1E EQ PUSH2 0x1F4 JUMPI DUP1 PUSH4 0x5C19A95C EQ PUSH2 0x234 JUMPI DUP1 PUSH4 0x6FCFFF45 EQ PUSH2 0x249 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x120 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x15D JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x180 JUMPI DUP1 PUSH4 0x20606B70 EQ PUSH2 0x1A0 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x147 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x8 DUP2 MSTORE PUSH1 0x20 ADD PUSH8 0x10DBDB5C1BDD5B99 PUSH1 0xC2 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x154 SWAP2 SWAP1 PUSH2 0x1392 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x170 PUSH2 0x16B CALLDATASIZE PUSH1 0x4 PUSH2 0x13E2 JUMP JUMPDEST PUSH2 0x426 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x154 JUMP JUMPDEST PUSH2 0x192 PUSH11 0x84595161401484A000000 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x154 JUMP JUMPDEST PUSH2 0x192 PUSH32 0x8CAD95687BA82C2CE50E74F7B754645E5117C3A5BEC8151C0726D5857980A866 DUP2 JUMP JUMPDEST PUSH2 0x170 PUSH2 0x1D5 CALLDATASIZE PUSH1 0x4 PUSH2 0x140A JUMP JUMPDEST PUSH2 0x4E1 JUMP JUMPDEST PUSH2 0x1E2 PUSH1 0x12 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x154 JUMP JUMPDEST PUSH2 0x21C PUSH2 0x202 CALLDATASIZE PUSH1 0x4 PUSH2 0x1444 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x154 JUMP JUMPDEST PUSH2 0x247 PUSH2 0x242 CALLDATASIZE PUSH1 0x4 PUSH2 0x1444 JUMP JUMPDEST PUSH2 0x61F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x26E PUSH2 0x257 CALLDATASIZE PUSH1 0x4 PUSH2 0x1444 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH4 0xFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x154 JUMP JUMPDEST PUSH2 0x192 PUSH2 0x291 CALLDATASIZE PUSH1 0x4 PUSH2 0x1444 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x2C7 PUSH2 0x2C2 CALLDATASIZE PUSH1 0x4 PUSH2 0x13E2 JUMP JUMPDEST PUSH2 0x62C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x154 JUMP JUMPDEST PUSH2 0x192 PUSH2 0x2ED CALLDATASIZE PUSH1 0x4 PUSH2 0x1444 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x147 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH4 0x434F4D5 PUSH1 0xE4 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH2 0x170 PUSH2 0x32F CALLDATASIZE PUSH1 0x4 PUSH2 0x13E2 JUMP JUMPDEST PUSH2 0x8AE JUMP JUMPDEST PUSH2 0x2C7 PUSH2 0x342 CALLDATASIZE PUSH1 0x4 PUSH2 0x1444 JUMP JUMPDEST PUSH2 0x8E9 JUMP JUMPDEST PUSH2 0x247 PUSH2 0x355 CALLDATASIZE PUSH1 0x4 PUSH2 0x145D JUMP JUMPDEST PUSH2 0x963 JUMP JUMPDEST PUSH2 0x192 PUSH2 0x368 CALLDATASIZE PUSH1 0x4 PUSH2 0x14B8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x192 PUSH32 0xE48329057BFD03D55E49B547132E39CFFD9C1820AD7B9D4C5307691425D15ADF DUP2 JUMP JUMPDEST PUSH2 0x402 PUSH2 0x3CE CALLDATASIZE PUSH1 0x4 PUSH2 0x14E9 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD PUSH4 0xFFFFFFFF DUP2 AND SWAP1 PUSH1 0x1 PUSH1 0x20 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND DUP3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0xFFFFFFFF SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP1 SWAP2 AND PUSH1 0x20 DUP4 ADD MSTORE ADD PUSH2 0x154 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 NOT DUP4 SUB PUSH2 0x43E JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH2 0x463 JUMP JUMPDEST PUSH2 0x460 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1632 PUSH1 0x25 SWAP2 CODECOPY PUSH2 0xC4A JUMP JUMPDEST SWAP1 POP JUMPDEST CALLER PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP8 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD SWAP1 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE DUP2 DUP5 KECCAK256 SLOAD DUP3 MLOAD PUSH1 0x60 DUP2 ADD SWAP1 SWAP4 MSTORE PUSH1 0x25 DUP1 DUP5 MSTORE SWAP2 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP1 SWAP2 AND SWAP3 DUP6 SWAP3 PUSH2 0x536 SWAP3 DUP9 SWAP3 SWAP2 SWAP1 PUSH2 0x1632 SWAP1 DUP4 ADD CODECOPY PUSH2 0xC4A JUMP JUMPDEST SWAP1 POP DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO DUP1 ISZERO PUSH2 0x563 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP3 DUP2 AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x607 JUMPI PUSH0 PUSH2 0x58C DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3D DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1709 PUSH1 0x3D SWAP2 CODECOPY PUSH2 0xC78 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP11 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP8 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE SWAP4 SWAP5 POP SWAP2 SWAP3 SWAP1 SWAP2 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMPDEST PUSH2 0x612 DUP8 DUP8 DUP4 PUSH2 0xCC1 JUMP JUMPDEST POP PUSH1 0x1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x629 CALLER DUP3 PUSH2 0xF0E JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 NUMBER DUP3 LT PUSH2 0x691 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6D703A3A6765745072696F72566F7465733A206E6F742079657420646574 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x195C9B5A5B9959 PUSH1 0xCA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH4 0xFFFFFFFF AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x6C0 JUMPI PUSH0 SWAP2 POP POP PUSH2 0x4DB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP5 SWAP2 PUSH2 0x6E4 PUSH1 0x1 DUP6 PUSH2 0x153A JUMP JUMPDEST PUSH4 0xFFFFFFFF SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD PUSH0 KECCAK256 SLOAD AND GT PUSH2 0x754 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0x725 PUSH1 0x1 DUP5 PUSH2 0x153A JUMP JUMPDEST PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH0 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x20 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND SWAP2 POP PUSH2 0x4DB SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP4 DUP1 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH4 0xFFFFFFFF AND DUP4 LT ISZERO PUSH2 0x78D JUMPI PUSH0 SWAP2 POP POP PUSH2 0x4DB JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x79A PUSH1 0x1 DUP5 PUSH2 0x153A JUMP JUMPDEST SWAP1 POP JUMPDEST DUP2 PUSH4 0xFFFFFFFF AND DUP2 PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x86A JUMPI PUSH0 PUSH1 0x2 PUSH2 0x7BE DUP5 DUP5 PUSH2 0x153A JUMP JUMPDEST PUSH2 0x7C8 SWAP2 SWAP1 PUSH2 0x1556 JUMP JUMPDEST PUSH2 0x7D2 SWAP1 DUP4 PUSH2 0x153A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH4 0xFFFFFFFF DUP6 DUP2 AND DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP2 MLOAD DUP1 DUP4 ADD SWAP1 SWAP3 MSTORE SLOAD SWAP3 DUP4 AND DUP1 DUP3 MSTORE PUSH1 0x1 PUSH1 0x20 SHL SWAP1 SWAP4 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP2 SWAP3 POP DUP8 SWAP1 SUB PUSH2 0x83E JUMPI PUSH1 0x20 ADD MLOAD SWAP5 POP PUSH2 0x4DB SWAP4 POP POP POP POP JUMP JUMPDEST DUP1 MLOAD PUSH4 0xFFFFFFFF AND DUP8 GT ISZERO PUSH2 0x855 JUMPI DUP2 SWAP4 POP PUSH2 0x863 JUMP JUMPDEST PUSH2 0x860 PUSH1 0x1 DUP4 PUSH2 0x153A JUMP JUMPDEST SWAP3 POP JUMPDEST POP POP PUSH2 0x79D JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH4 0xFFFFFFFF SWAP1 SWAP5 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0x1 PUSH1 0x20 SHL SWAP1 SWAP2 DIV AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x8D2 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1657 PUSH1 0x26 SWAP2 CODECOPY PUSH2 0xC4A JUMP JUMPDEST SWAP1 POP PUSH2 0x8DF CALLER DUP6 DUP4 PUSH2 0xCC1 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH4 0xFFFFFFFF AND DUP1 PUSH2 0x912 JUMPI PUSH0 PUSH2 0x95C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0x935 PUSH1 0x1 DUP5 PUSH2 0x153A JUMP JUMPDEST PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH0 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x20 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0x8 DUP2 MSTORE PUSH8 0x10DBDB5C1BDD5B99 PUSH1 0xC2 SHL PUSH1 0x20 SWAP2 DUP3 ADD MSTORE DUP2 MLOAD PUSH32 0x8CAD95687BA82C2CE50E74F7B754645E5117C3A5BEC8151C0726D5857980A866 DUP2 DUP4 ADD MSTORE PUSH32 0x561CA898CCE9F021C15A441EF41899706E923541CEE724530075D1A1144761C7 DUP2 DUP5 ADD MSTORE CHAINID PUSH1 0x60 DUP3 ADD MSTORE ADDRESS PUSH1 0x80 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP4 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xA0 DUP3 ADD DUP5 MSTORE DUP1 MLOAD SWAP1 DUP4 ADD KECCAK256 PUSH32 0xE48329057BFD03D55E49B547132E39CFFD9C1820AD7B9D4C5307691425D15ADF PUSH1 0xC0 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0xE0 DUP4 ADD MSTORE PUSH2 0x100 DUP3 ADD DUP10 SWAP1 MSTORE PUSH2 0x120 DUP1 DUP4 ADD DUP10 SWAP1 MSTORE DUP5 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH2 0x140 DUP4 ADD SWAP1 SWAP5 MSTORE DUP4 MLOAD SWAP4 SWAP1 SWAP3 ADD SWAP3 SWAP1 SWAP3 KECCAK256 PUSH2 0x1901 PUSH1 0xF0 SHL PUSH2 0x160 DUP5 ADD MSTORE PUSH2 0x162 DUP4 ADD DUP3 SWAP1 MSTORE PUSH2 0x182 DUP4 ADD DUP2 SWAP1 MSTORE SWAP1 SWAP2 PUSH0 SWAP1 PUSH2 0x1A2 ADD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE DUP3 DUP3 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 PUSH0 DUP1 DUP6 MSTORE SWAP2 DUP5 ADD DUP1 DUP5 MSTORE DUP2 SWAP1 MSTORE PUSH1 0xFF DUP11 AND SWAP3 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP4 ADD DUP9 SWAP1 MSTORE PUSH1 0x80 DUP4 ADD DUP8 SWAP1 MSTORE SWAP1 SWAP3 POP SWAP1 PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xAE2 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xB54 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6D703A3A64656C656761746542795369673A20696E76616C696420736967 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x6E6174757265 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x688 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP2 PUSH2 0xB77 DUP4 PUSH2 0x1589 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE DUP10 EQ PUSH2 0xBD4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6D703A3A64656C656761746542795369673A20696E76616C6964206E6F6E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6365 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x688 JUMP JUMPDEST DUP8 TIMESTAMP GT ISZERO PUSH2 0xC33 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6D703A3A64656C656761746542795369673A207369676E61747572652065 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1E1C1A5C9959 PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x688 JUMP JUMPDEST PUSH2 0xC3D DUP2 DUP12 PUSH2 0xF0E JUMP JUMPDEST POP POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x1 PUSH1 0x60 SHL DUP5 LT PUSH2 0xC70 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x688 SWAP2 SWAP1 PUSH2 0x1392 JUMP JUMPDEST POP SWAP2 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND GT ISZERO DUP3 SWAP1 PUSH2 0xCAE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x688 SWAP2 SWAP1 PUSH2 0x1392 JUMP JUMPDEST POP PUSH2 0xCB9 DUP4 DUP6 PUSH2 0x15A1 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xD3D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6D703A3A5F7472616E73666572546F6B656E733A2063616E6E6F74207472 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x616E736665722066726F6D20746865207A65726F206164647265737300000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x688 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xDB9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6D703A3A5F7472616E73666572546F6B656E733A2063616E6E6F74207472 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x616E7366657220746F20746865207A65726F2061646472657373000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x688 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SLOAD DUP3 MLOAD PUSH1 0x60 DUP2 ADD SWAP1 SWAP4 MSTORE PUSH1 0x36 DUP1 DUP5 MSTORE PUSH2 0xE03 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP1 SWAP3 AND SWAP3 DUP6 SWAP3 SWAP2 SWAP1 PUSH2 0x15FC SWAP1 DUP4 ADD CODECOPY PUSH2 0xC78 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP7 DUP8 AND OR SWAP1 SSTORE SWAP3 DUP7 AND DUP3 MSTORE SWAP1 DUP3 SWAP1 KECCAK256 SLOAD DUP3 MLOAD PUSH1 0x60 DUP2 ADD SWAP1 SWAP4 MSTORE PUSH1 0x30 DUP1 DUP5 MSTORE PUSH2 0xE6A SWAP5 SWAP2 SWAP1 SWAP2 AND SWAP3 DUP6 SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0x16D9 SWAP1 DUP4 ADD CODECOPY PUSH2 0xF97 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP7 DUP8 AND OR SWAP1 SSTORE SWAP1 MLOAD SWAP4 DUP6 AND DUP5 MSTORE SWAP1 SWAP3 SWAP2 DUP7 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SLOAD DUP6 DUP5 AND DUP4 MSTORE SWAP2 KECCAK256 SLOAD PUSH2 0xF09 SWAP3 SWAP2 DUP3 AND SWAP2 AND DUP4 PUSH2 0xFE3 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP5 MSTORE DUP3 DUP7 KECCAK256 SLOAD SWAP5 SWAP1 SWAP4 MSTORE DUP8 DUP8 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP5 AND DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD SWAP2 SWAP1 SWAP6 AND SWAP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP1 SWAP3 AND SWAP4 SWAP2 SWAP3 DUP6 SWAP3 SWAP2 PUSH32 0x3134E8A2E6D97E929A7E54011EA5485D7D196DD5F0BA4D4EF95803E8E3FC257F SWAP2 SWAP1 LOG4 PUSH2 0xF91 DUP3 DUP5 DUP4 PUSH2 0xFE3 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xFA3 DUP5 DUP7 PUSH2 0x15C0 JUMP JUMPDEST SWAP1 POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND LT ISZERO DUP4 SWAP1 PUSH2 0xFDA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x688 SWAP2 SWAP1 PUSH2 0x1392 JUMP JUMPDEST POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO DUP1 ISZERO PUSH2 0x100D JUMPI POP PUSH0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND GT JUMPDEST ISZERO PUSH2 0xF09 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO PUSH2 0x10CD JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH4 0xFFFFFFFF AND SWAP1 DUP2 PUSH2 0x104B JUMPI PUSH0 PUSH2 0x1095 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0x106E PUSH1 0x1 DUP6 PUSH2 0x153A JUMP JUMPDEST PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH0 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x20 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND JUMPDEST SWAP1 POP PUSH0 PUSH2 0x10BB DUP3 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x16B1 PUSH1 0x28 SWAP2 CODECOPY PUSH2 0xC78 JUMP JUMPDEST SWAP1 POP PUSH2 0x10C9 DUP7 DUP5 DUP5 DUP5 PUSH2 0x1180 JUMP JUMPDEST POP POP POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO PUSH2 0xF09 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH4 0xFFFFFFFF AND SWAP1 DUP2 PUSH2 0x1106 JUMPI PUSH0 PUSH2 0x1150 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0x1129 PUSH1 0x1 DUP6 PUSH2 0x153A JUMP JUMPDEST PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH0 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x20 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND JUMPDEST SWAP1 POP PUSH0 PUSH2 0x1176 DUP3 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1746 PUSH1 0x27 SWAP2 CODECOPY PUSH2 0xF97 JUMP JUMPDEST SWAP1 POP PUSH2 0xC42 DUP6 DUP5 DUP5 DUP5 JUMPDEST PUSH0 PUSH2 0x11A3 NUMBER PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x34 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x167D PUSH1 0x34 SWAP2 CODECOPY PUSH2 0x1370 JUMP JUMPDEST SWAP1 POP PUSH0 DUP5 PUSH4 0xFFFFFFFF AND GT DUP1 ISZERO PUSH2 0x11FA JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH4 0xFFFFFFFF DUP4 AND SWAP2 PUSH2 0x11DF PUSH1 0x1 DUP9 PUSH2 0x153A JUMP JUMPDEST PUSH4 0xFFFFFFFF SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD PUSH0 KECCAK256 SLOAD AND EQ JUMPDEST ISZERO PUSH2 0x126C JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP4 SWAP2 PUSH2 0x1223 PUSH1 0x1 DUP9 PUSH2 0x153A JUMP JUMPDEST PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH0 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP3 SWAP1 SWAP3 AND PUSH1 0x1 PUSH1 0x20 SHL MUL PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFF00000000 NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x131B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH4 0xFFFFFFFF DUP1 DUP5 AND DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP1 DUP7 AND PUSH1 0x20 DUP1 DUP6 ADD SWAP2 DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 DUP3 MSTORE DUP7 DUP2 KECCAK256 DUP12 DUP7 AND DUP3 MSTORE SWAP1 SWAP2 MSTORE SWAP5 SWAP1 SWAP5 KECCAK256 SWAP3 MLOAD DUP4 SLOAD SWAP5 MLOAD SWAP1 SWAP2 AND PUSH1 0x1 PUSH1 0x20 SHL MUL PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT SWAP1 SWAP5 AND SWAP2 AND OR SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x12EB DUP5 PUSH1 0x1 PUSH2 0x15DF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH4 0xFFFFFFFF NOT AND PUSH4 0xFFFFFFFF SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP1 DUP7 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP2 PUSH32 0xDEC2BACDD2F05B59DE34DA9B523DFF8BE42E5E38E818C82FDB0BAE774387A724 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x1 PUSH1 0x20 SHL DUP5 LT PUSH2 0xC70 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x688 SWAP2 SWAP1 JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE DUP1 PUSH1 0x20 DUP6 ADD PUSH1 0x40 DUP6 ADD MCOPY PUSH0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x13DD JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x13F3 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x13FC DUP4 PUSH2 0x13C7 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x141C JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x1425 DUP5 PUSH2 0x13C7 JUMP JUMPDEST SWAP3 POP PUSH2 0x1433 PUSH1 0x20 DUP6 ADD PUSH2 0x13C7 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1454 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x95C DUP3 PUSH2 0x13C7 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x1472 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x147B DUP8 PUSH2 0x13C7 JUMP JUMPDEST SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x149E JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP SWAP3 SWAP6 PUSH1 0x80 DUP2 ADD CALLDATALOAD SWAP5 PUSH1 0xA0 SWAP1 SWAP2 ADD CALLDATALOAD SWAP4 POP SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x14C9 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x14D2 DUP4 PUSH2 0x13C7 JUMP JUMPDEST SWAP2 POP PUSH2 0x14E0 PUSH1 0x20 DUP5 ADD PUSH2 0x13C7 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x14FA JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x1503 DUP4 PUSH2 0x13C7 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH4 0xFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x151B JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH4 0xFFFFFFFF DUP3 DUP2 AND DUP3 DUP3 AND SUB SWAP1 DUP2 GT ISZERO PUSH2 0x4DB JUMPI PUSH2 0x4DB PUSH2 0x1526 JUMP JUMPDEST PUSH0 PUSH4 0xFFFFFFFF DUP4 AND DUP1 PUSH2 0x1577 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0xFFFFFFFF DUP5 AND DIV SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 DUP3 ADD PUSH2 0x159A JUMPI PUSH2 0x159A PUSH2 0x1526 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP3 DUP2 AND DUP3 DUP3 AND SUB SWAP1 DUP2 GT ISZERO PUSH2 0x4DB JUMPI PUSH2 0x4DB PUSH2 0x1526 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP2 DUP2 AND DUP4 DUP3 AND ADD SWAP1 DUP2 GT ISZERO PUSH2 0x4DB JUMPI PUSH2 0x4DB PUSH2 0x1526 JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP2 DUP2 AND DUP4 DUP3 AND ADD SWAP1 DUP2 GT ISZERO PUSH2 0x4DB JUMPI PUSH2 0x4DB PUSH2 0x1526 JUMP INVALID NUMBER PUSH16 0x6D703A3A5F7472616E73666572546F6B PUSH6 0x6E733A207472 PUSH2 0x6E73 PUSH7 0x657220616D6F75 PUSH15 0x7420657863656564732062616C616E PUSH4 0x65436F6D PUSH17 0x3A3A617070726F76653A20616D6F756E74 KECCAK256 PUSH6 0x786365656473 KECCAK256 CODECOPY CALLDATASIZE KECCAK256 PUSH3 0x697473 NUMBER PUSH16 0x6D703A3A7472616E736665723A20616D PUSH16 0x756E7420657863656564732039362062 PUSH10 0x7473436F6D703A3A5F77 PUSH19 0x697465436865636B706F696E743A20626C6F63 PUSH12 0x206E756D6265722065786365 PUSH6 0x647320333220 PUSH3 0x697473 NUMBER PUSH16 0x6D703A3A5F6D6F7665566F7465733A20 PUSH23 0x6F746520616D6F756E7420756E646572666C6F7773436F PUSH14 0x703A3A5F7472616E73666572546F PUSH12 0x656E733A207472616E736665 PUSH19 0x20616D6F756E74206F766572666C6F7773436F PUSH14 0x703A3A7472616E7366657246726F PUSH14 0x3A207472616E7366657220616D6F PUSH22 0x6E742065786365656473207370656E64657220616C6C PUSH16 0x77616E6365436F6D703A3A5F6D6F7665 JUMP PUSH16 0x7465733A20766F746520616D6F756E74 KECCAK256 PUSH16 0x766572666C6F7773A264697066735822 SLT KECCAK256 0xC4 SWAP1 0xD2 PUSH28 0xC19A0F3A562FCCEA3B17408C5B6CFD2015C4CFCE5B8FFA444DF05BD PUSH5 0x736F6C6343 STOP ADDMOD SHL STOP CALLER ",
							"sourceMap": "1336:12565:0:-:0;;;3820:149;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;3866:17:0;;;;;;:8;:17;;;;;;:39;;-1:-1:-1;;;;;;3866:39:0;1732:11;3866:39;;;;;;3920:42;;;;;;455:25:1;;;443:2;428:18;;309:177;3920:42:0;;;;;;;;3820:149;1336:12565;;14:290:1;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:1;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:1:o;309:177::-;1336:12565:0;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@DELEGATION_TYPEHASH_65": {
									"entryPoint": null,
									"id": 65,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@DOMAIN_TYPEHASH_59": {
									"entryPoint": null,
									"id": 59,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_delegate_637": {
									"entryPoint": 3854,
									"id": 637,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_moveDelegates_816": {
									"entryPoint": 4067,
									"id": 816,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferTokens_707": {
									"entryPoint": 3265,
									"id": 707,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_writeCheckpoint_889": {
									"entryPoint": 4480,
									"id": 889,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@add96_964": {
									"entryPoint": 3991,
									"id": 964,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@allowance_148": {
									"entryPoint": null,
									"id": 148,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_205": {
									"entryPoint": 1062,
									"id": 205,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_218": {
									"entryPoint": null,
									"id": 218,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@checkpoints_48": {
									"entryPoint": null,
									"id": 48,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@decimals_13": {
									"entryPoint": null,
									"id": 13,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@delegateBySig_437": {
									"entryPoint": 2403,
									"id": 437,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@delegate_334": {
									"entryPoint": 1567,
									"id": 334,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@delegates_34": {
									"entryPoint": null,
									"id": 34,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getChainId_999": {
									"entryPoint": null,
									"id": 999,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getCurrentVotes_466": {
									"entryPoint": 2281,
									"id": 466,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getPriorVotes_599": {
									"entryPoint": 1580,
									"id": 599,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_5": {
									"entryPoint": null,
									"id": 5,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@nonces_70": {
									"entryPoint": null,
									"id": 70,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@numCheckpoints_53": {
									"entryPoint": null,
									"id": 53,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safe32_913": {
									"entryPoint": 4976,
									"id": 913,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@safe96_937": {
									"entryPoint": 3146,
									"id": 937,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@sub96_987": {
									"entryPoint": 3192,
									"id": 987,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@symbol_9": {
									"entryPoint": null,
									"id": 9,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalSupply_17": {
									"entryPoint": null,
									"id": 17,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferFrom_321": {
									"entryPoint": 1249,
									"id": 321,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_245": {
									"entryPoint": 2222,
									"id": 245,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 5063,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 5188,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 5304,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 5130,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 5090,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32": {
									"entryPoint": 5213,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 6
								},
								"abi_decode_tuple_t_addresst_uint32": {
									"entryPoint": 5353,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_packed_t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541_t_bytes32_t_bytes32__to_t_string_memory_ptr_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_address_t_uint256_t_uint256__to_t_bytes32_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5010,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2af9d25b44c3e789cf7d12e941fc7ef1e32cecdd98da61996de7571027751bd3__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2e8a87756e5afc73b82eff32f16bb6b10740f4f70e3e129eab06194e30ad3059__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_49387db7fef935f0f28be8b61df0527ef3c11db5acad132a74e4fb5d480e55d0__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_646cb63637df51b5cf3e35b8d418574ca2fa5dde981ba9f8f5779cfcbbc8a355__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6dfd73e095121fac86dfcecda88ee2e5a2c4c80da47692a4520dec08a942eef4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a1f9ee8b9464145aa6c6c80f5dd3de0ed75b63050c7ed5dda64f4dfa66ae889e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint32_t_uint96__to_t_uint32_t_uint96__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint96__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint96__to_t_uint96__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint96_t_uint96__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"checked_add_t_uint32": {
									"entryPoint": 5599,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint96": {
									"entryPoint": 5568,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint32": {
									"entryPoint": 5462,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint32": {
									"entryPoint": 5434,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint96": {
									"entryPoint": 5537,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 5513,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 5414,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:10600:1",
										"nodeType": "YulBlock",
										"src": "0:10600:1",
										"statements": [
											{
												"nativeSrc": "6:3:1",
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "135:297:1",
													"nodeType": "YulBlock",
													"src": "135:297:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "152:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "152:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "163:2:1",
																		"nodeType": "YulLiteral",
																		"src": "163:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "145:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "145:6:1"
																},
																"nativeSrc": "145:21:1",
																"nodeType": "YulFunctionCall",
																"src": "145:21:1"
															},
															"nativeSrc": "145:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "145:21:1"
														},
														{
															"nativeSrc": "175:27:1",
															"nodeType": "YulVariableDeclaration",
															"src": "175:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "195:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "195:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "189:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "189:5:1"
																},
																"nativeSrc": "189:13:1",
																"nodeType": "YulFunctionCall",
																"src": "189:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "179:6:1",
																	"nodeType": "YulTypedName",
																	"src": "179:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "222:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "222:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "233:2:1",
																				"nodeType": "YulLiteral",
																				"src": "233:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "218:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "218:3:1"
																		},
																		"nativeSrc": "218:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "218:18:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "238:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "238:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "211:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "211:6:1"
																},
																"nativeSrc": "211:34:1",
																"nodeType": "YulFunctionCall",
																"src": "211:34:1"
															},
															"nativeSrc": "211:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "211:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "264:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "264:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "275:2:1",
																				"nodeType": "YulLiteral",
																				"src": "275:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "260:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "260:3:1"
																		},
																		"nativeSrc": "260:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "260:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "284:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "284:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "292:2:1",
																				"nodeType": "YulLiteral",
																				"src": "292:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "280:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "280:3:1"
																		},
																		"nativeSrc": "280:15:1",
																		"nodeType": "YulFunctionCall",
																		"src": "280:15:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "297:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "297:6:1"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "254:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "254:5:1"
																},
																"nativeSrc": "254:50:1",
																"nodeType": "YulFunctionCall",
																"src": "254:50:1"
															},
															"nativeSrc": "254:50:1",
															"nodeType": "YulExpressionStatement",
															"src": "254:50:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "328:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "328:9:1"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "339:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "339:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "324:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "324:3:1"
																				},
																				"nativeSrc": "324:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "324:22:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "348:2:1",
																				"nodeType": "YulLiteral",
																				"src": "348:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "320:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "320:3:1"
																		},
																		"nativeSrc": "320:31:1",
																		"nodeType": "YulFunctionCall",
																		"src": "320:31:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "353:1:1",
																		"nodeType": "YulLiteral",
																		"src": "353:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "313:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "313:6:1"
																},
																"nativeSrc": "313:42:1",
																"nodeType": "YulFunctionCall",
																"src": "313:42:1"
															},
															"nativeSrc": "313:42:1",
															"nodeType": "YulExpressionStatement",
															"src": "313:42:1"
														},
														{
															"nativeSrc": "364:62:1",
															"nodeType": "YulAssignment",
															"src": "364:62:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "380:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "380:9:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "399:6:1",
																								"nodeType": "YulIdentifier",
																								"src": "399:6:1"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "407:2:1",
																								"nodeType": "YulLiteral",
																								"src": "407:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "395:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "395:3:1"
																						},
																						"nativeSrc": "395:15:1",
																						"nodeType": "YulFunctionCall",
																						"src": "395:15:1"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "416:2:1",
																								"nodeType": "YulLiteral",
																								"src": "416:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "412:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "412:3:1"
																						},
																						"nativeSrc": "412:7:1",
																						"nodeType": "YulFunctionCall",
																						"src": "412:7:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "391:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "391:3:1"
																				},
																				"nativeSrc": "391:29:1",
																				"nodeType": "YulFunctionCall",
																				"src": "391:29:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "376:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "376:3:1"
																		},
																		"nativeSrc": "376:45:1",
																		"nodeType": "YulFunctionCall",
																		"src": "376:45:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "423:2:1",
																		"nodeType": "YulLiteral",
																		"src": "423:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "372:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "372:3:1"
																},
																"nativeSrc": "372:54:1",
																"nodeType": "YulFunctionCall",
																"src": "372:54:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "364:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "364:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14:418:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "104:9:1",
														"nodeType": "YulTypedName",
														"src": "104:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "115:6:1",
														"nodeType": "YulTypedName",
														"src": "115:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "126:4:1",
														"nodeType": "YulTypedName",
														"src": "126:4:1",
														"type": ""
													}
												],
												"src": "14:418:1"
											},
											{
												"body": {
													"nativeSrc": "486:124:1",
													"nodeType": "YulBlock",
													"src": "486:124:1",
													"statements": [
														{
															"nativeSrc": "496:29:1",
															"nodeType": "YulAssignment",
															"src": "496:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "518:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "518:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "505:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "505:12:1"
																},
																"nativeSrc": "505:20:1",
																"nodeType": "YulFunctionCall",
																"src": "505:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "496:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "496:5:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "588:16:1",
																"nodeType": "YulBlock",
																"src": "588:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "597:1:1",
																					"nodeType": "YulLiteral",
																					"src": "597:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "600:1:1",
																					"nodeType": "YulLiteral",
																					"src": "600:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "590:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "590:6:1"
																			},
																			"nativeSrc": "590:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "590:12:1"
																		},
																		"nativeSrc": "590:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "590:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "547:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "547:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "558:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "558:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "573:3:1",
																										"nodeType": "YulLiteral",
																										"src": "573:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "578:1:1",
																										"nodeType": "YulLiteral",
																										"src": "578:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "569:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "569:3:1"
																								},
																								"nativeSrc": "569:11:1",
																								"nodeType": "YulFunctionCall",
																								"src": "569:11:1"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "582:1:1",
																								"nodeType": "YulLiteral",
																								"src": "582:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "565:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "565:3:1"
																						},
																						"nativeSrc": "565:19:1",
																						"nodeType": "YulFunctionCall",
																						"src": "565:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "554:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "554:3:1"
																				},
																				"nativeSrc": "554:31:1",
																				"nodeType": "YulFunctionCall",
																				"src": "554:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "544:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "544:2:1"
																		},
																		"nativeSrc": "544:42:1",
																		"nodeType": "YulFunctionCall",
																		"src": "544:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "537:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "537:6:1"
																},
																"nativeSrc": "537:50:1",
																"nodeType": "YulFunctionCall",
																"src": "537:50:1"
															},
															"nativeSrc": "534:70:1",
															"nodeType": "YulIf",
															"src": "534:70:1"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "437:173:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "465:6:1",
														"nodeType": "YulTypedName",
														"src": "465:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "476:5:1",
														"nodeType": "YulTypedName",
														"src": "476:5:1",
														"type": ""
													}
												],
												"src": "437:173:1"
											},
											{
												"body": {
													"nativeSrc": "702:213:1",
													"nodeType": "YulBlock",
													"src": "702:213:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "748:16:1",
																"nodeType": "YulBlock",
																"src": "748:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "757:1:1",
																					"nodeType": "YulLiteral",
																					"src": "757:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "760:1:1",
																					"nodeType": "YulLiteral",
																					"src": "760:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "750:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "750:6:1"
																			},
																			"nativeSrc": "750:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "750:12:1"
																		},
																		"nativeSrc": "750:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "750:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "723:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "723:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "732:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "732:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "719:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "719:3:1"
																		},
																		"nativeSrc": "719:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "719:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "744:2:1",
																		"nodeType": "YulLiteral",
																		"src": "744:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "715:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "715:3:1"
																},
																"nativeSrc": "715:32:1",
																"nodeType": "YulFunctionCall",
																"src": "715:32:1"
															},
															"nativeSrc": "712:52:1",
															"nodeType": "YulIf",
															"src": "712:52:1"
														},
														{
															"nativeSrc": "773:39:1",
															"nodeType": "YulAssignment",
															"src": "773:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "802:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "802:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "783:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "783:18:1"
																},
																"nativeSrc": "783:29:1",
																"nodeType": "YulFunctionCall",
																"src": "783:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "773:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "773:6:1"
																}
															]
														},
														{
															"nativeSrc": "821:14:1",
															"nodeType": "YulVariableDeclaration",
															"src": "821:14:1",
															"value": {
																"kind": "number",
																"nativeSrc": "834:1:1",
																"nodeType": "YulLiteral",
																"src": "834:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "825:5:1",
																	"nodeType": "YulTypedName",
																	"src": "825:5:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "844:41:1",
															"nodeType": "YulAssignment",
															"src": "844:41:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "870:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "870:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "881:2:1",
																				"nodeType": "YulLiteral",
																				"src": "881:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "866:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "866:3:1"
																		},
																		"nativeSrc": "866:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "866:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "853:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "853:12:1"
																},
																"nativeSrc": "853:32:1",
																"nodeType": "YulFunctionCall",
																"src": "853:32:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "844:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "844:5:1"
																}
															]
														},
														{
															"nativeSrc": "894:15:1",
															"nodeType": "YulAssignment",
															"src": "894:15:1",
															"value": {
																"name": "value",
																"nativeSrc": "904:5:1",
																"nodeType": "YulIdentifier",
																"src": "904:5:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "894:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "894:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "615:300:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "660:9:1",
														"nodeType": "YulTypedName",
														"src": "660:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "671:7:1",
														"nodeType": "YulTypedName",
														"src": "671:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "683:6:1",
														"nodeType": "YulTypedName",
														"src": "683:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "691:6:1",
														"nodeType": "YulTypedName",
														"src": "691:6:1",
														"type": ""
													}
												],
												"src": "615:300:1"
											},
											{
												"body": {
													"nativeSrc": "1015:92:1",
													"nodeType": "YulBlock",
													"src": "1015:92:1",
													"statements": [
														{
															"nativeSrc": "1025:26:1",
															"nodeType": "YulAssignment",
															"src": "1025:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1037:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1037:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1048:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1048:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1033:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1033:3:1"
																},
																"nativeSrc": "1033:18:1",
																"nodeType": "YulFunctionCall",
																"src": "1033:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1025:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1025:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1067:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1067:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "1092:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "1092:6:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "1085:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "1085:6:1"
																				},
																				"nativeSrc": "1085:14:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1085:14:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1078:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "1078:6:1"
																		},
																		"nativeSrc": "1078:22:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1078:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1060:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1060:6:1"
																},
																"nativeSrc": "1060:41:1",
																"nodeType": "YulFunctionCall",
																"src": "1060:41:1"
															},
															"nativeSrc": "1060:41:1",
															"nodeType": "YulExpressionStatement",
															"src": "1060:41:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "920:187:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "984:9:1",
														"nodeType": "YulTypedName",
														"src": "984:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "995:6:1",
														"nodeType": "YulTypedName",
														"src": "995:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1006:4:1",
														"nodeType": "YulTypedName",
														"src": "1006:4:1",
														"type": ""
													}
												],
												"src": "920:187:1"
											},
											{
												"body": {
													"nativeSrc": "1213:76:1",
													"nodeType": "YulBlock",
													"src": "1213:76:1",
													"statements": [
														{
															"nativeSrc": "1223:26:1",
															"nodeType": "YulAssignment",
															"src": "1223:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1235:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1235:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1246:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1246:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1231:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1231:3:1"
																},
																"nativeSrc": "1231:18:1",
																"nodeType": "YulFunctionCall",
																"src": "1231:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1223:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1223:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1265:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1265:9:1"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "1276:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1276:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1258:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1258:6:1"
																},
																"nativeSrc": "1258:25:1",
																"nodeType": "YulFunctionCall",
																"src": "1258:25:1"
															},
															"nativeSrc": "1258:25:1",
															"nodeType": "YulExpressionStatement",
															"src": "1258:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1112:177:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1182:9:1",
														"nodeType": "YulTypedName",
														"src": "1182:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1193:6:1",
														"nodeType": "YulTypedName",
														"src": "1193:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1204:4:1",
														"nodeType": "YulTypedName",
														"src": "1204:4:1",
														"type": ""
													}
												],
												"src": "1112:177:1"
											},
											{
												"body": {
													"nativeSrc": "1395:76:1",
													"nodeType": "YulBlock",
													"src": "1395:76:1",
													"statements": [
														{
															"nativeSrc": "1405:26:1",
															"nodeType": "YulAssignment",
															"src": "1405:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1417:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1417:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1428:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1428:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1413:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1413:3:1"
																},
																"nativeSrc": "1413:18:1",
																"nodeType": "YulFunctionCall",
																"src": "1413:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1405:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1405:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1447:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1447:9:1"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "1458:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1458:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1440:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1440:6:1"
																},
																"nativeSrc": "1440:25:1",
																"nodeType": "YulFunctionCall",
																"src": "1440:25:1"
															},
															"nativeSrc": "1440:25:1",
															"nodeType": "YulExpressionStatement",
															"src": "1440:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nativeSrc": "1294:177:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1364:9:1",
														"nodeType": "YulTypedName",
														"src": "1364:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1375:6:1",
														"nodeType": "YulTypedName",
														"src": "1375:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1386:4:1",
														"nodeType": "YulTypedName",
														"src": "1386:4:1",
														"type": ""
													}
												],
												"src": "1294:177:1"
											},
											{
												"body": {
													"nativeSrc": "1580:270:1",
													"nodeType": "YulBlock",
													"src": "1580:270:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "1626:16:1",
																"nodeType": "YulBlock",
																"src": "1626:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1635:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1635:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1638:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1638:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1628:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1628:6:1"
																			},
																			"nativeSrc": "1628:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1628:12:1"
																		},
																		"nativeSrc": "1628:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1628:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1601:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "1601:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1610:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1610:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1597:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1597:3:1"
																		},
																		"nativeSrc": "1597:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1597:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1622:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1622:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1593:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1593:3:1"
																},
																"nativeSrc": "1593:32:1",
																"nodeType": "YulFunctionCall",
																"src": "1593:32:1"
															},
															"nativeSrc": "1590:52:1",
															"nodeType": "YulIf",
															"src": "1590:52:1"
														},
														{
															"nativeSrc": "1651:39:1",
															"nodeType": "YulAssignment",
															"src": "1651:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1680:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1680:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1661:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "1661:18:1"
																},
																"nativeSrc": "1661:29:1",
																"nodeType": "YulFunctionCall",
																"src": "1661:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1651:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1651:6:1"
																}
															]
														},
														{
															"nativeSrc": "1699:48:1",
															"nodeType": "YulAssignment",
															"src": "1699:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1732:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1732:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1743:2:1",
																				"nodeType": "YulLiteral",
																				"src": "1743:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1728:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1728:3:1"
																		},
																		"nativeSrc": "1728:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1728:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1709:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "1709:18:1"
																},
																"nativeSrc": "1709:38:1",
																"nodeType": "YulFunctionCall",
																"src": "1709:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1699:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1699:6:1"
																}
															]
														},
														{
															"nativeSrc": "1756:14:1",
															"nodeType": "YulVariableDeclaration",
															"src": "1756:14:1",
															"value": {
																"kind": "number",
																"nativeSrc": "1769:1:1",
																"nodeType": "YulLiteral",
																"src": "1769:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1760:5:1",
																	"nodeType": "YulTypedName",
																	"src": "1760:5:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1779:41:1",
															"nodeType": "YulAssignment",
															"src": "1779:41:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1805:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1805:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1816:2:1",
																				"nodeType": "YulLiteral",
																				"src": "1816:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1801:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1801:3:1"
																		},
																		"nativeSrc": "1801:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1801:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1788:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "1788:12:1"
																},
																"nativeSrc": "1788:32:1",
																"nodeType": "YulFunctionCall",
																"src": "1788:32:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1779:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "1779:5:1"
																}
															]
														},
														{
															"nativeSrc": "1829:15:1",
															"nodeType": "YulAssignment",
															"src": "1829:15:1",
															"value": {
																"name": "value",
																"nativeSrc": "1839:5:1",
																"nodeType": "YulIdentifier",
																"src": "1839:5:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "1829:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1829:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "1476:374:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1530:9:1",
														"nodeType": "YulTypedName",
														"src": "1530:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1541:7:1",
														"nodeType": "YulTypedName",
														"src": "1541:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1553:6:1",
														"nodeType": "YulTypedName",
														"src": "1553:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1561:6:1",
														"nodeType": "YulTypedName",
														"src": "1561:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1569:6:1",
														"nodeType": "YulTypedName",
														"src": "1569:6:1",
														"type": ""
													}
												],
												"src": "1476:374:1"
											},
											{
												"body": {
													"nativeSrc": "1952:87:1",
													"nodeType": "YulBlock",
													"src": "1952:87:1",
													"statements": [
														{
															"nativeSrc": "1962:26:1",
															"nodeType": "YulAssignment",
															"src": "1962:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1974:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1974:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1985:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1985:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1970:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1970:3:1"
																},
																"nativeSrc": "1970:18:1",
																"nodeType": "YulFunctionCall",
																"src": "1970:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1962:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1962:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2004:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2004:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2019:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2019:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2027:4:1",
																				"nodeType": "YulLiteral",
																				"src": "2027:4:1",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2015:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2015:3:1"
																		},
																		"nativeSrc": "2015:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2015:17:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1997:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1997:6:1"
																},
																"nativeSrc": "1997:36:1",
																"nodeType": "YulFunctionCall",
																"src": "1997:36:1"
															},
															"nativeSrc": "1997:36:1",
															"nodeType": "YulExpressionStatement",
															"src": "1997:36:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "1855:184:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1921:9:1",
														"nodeType": "YulTypedName",
														"src": "1921:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1932:6:1",
														"nodeType": "YulTypedName",
														"src": "1932:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1943:4:1",
														"nodeType": "YulTypedName",
														"src": "1943:4:1",
														"type": ""
													}
												],
												"src": "1855:184:1"
											},
											{
												"body": {
													"nativeSrc": "2114:116:1",
													"nodeType": "YulBlock",
													"src": "2114:116:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "2160:16:1",
																"nodeType": "YulBlock",
																"src": "2160:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2169:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2169:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2172:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2172:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2162:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2162:6:1"
																			},
																			"nativeSrc": "2162:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2162:12:1"
																		},
																		"nativeSrc": "2162:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2162:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2135:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "2135:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2144:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2144:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2131:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2131:3:1"
																		},
																		"nativeSrc": "2131:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2131:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2156:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2156:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2127:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2127:3:1"
																},
																"nativeSrc": "2127:32:1",
																"nodeType": "YulFunctionCall",
																"src": "2127:32:1"
															},
															"nativeSrc": "2124:52:1",
															"nodeType": "YulIf",
															"src": "2124:52:1"
														},
														{
															"nativeSrc": "2185:39:1",
															"nodeType": "YulAssignment",
															"src": "2185:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2214:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2214:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2195:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "2195:18:1"
																},
																"nativeSrc": "2195:29:1",
																"nodeType": "YulFunctionCall",
																"src": "2195:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2185:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2185:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "2044:186:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2080:9:1",
														"nodeType": "YulTypedName",
														"src": "2080:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2091:7:1",
														"nodeType": "YulTypedName",
														"src": "2091:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2103:6:1",
														"nodeType": "YulTypedName",
														"src": "2103:6:1",
														"type": ""
													}
												],
												"src": "2044:186:1"
											},
											{
												"body": {
													"nativeSrc": "2336:102:1",
													"nodeType": "YulBlock",
													"src": "2336:102:1",
													"statements": [
														{
															"nativeSrc": "2346:26:1",
															"nodeType": "YulAssignment",
															"src": "2346:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2358:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2358:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2369:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2369:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2354:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2354:3:1"
																},
																"nativeSrc": "2354:18:1",
																"nodeType": "YulFunctionCall",
																"src": "2354:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2346:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "2346:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2388:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2388:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2403:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2403:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "2419:3:1",
																								"nodeType": "YulLiteral",
																								"src": "2419:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2424:1:1",
																								"nodeType": "YulLiteral",
																								"src": "2424:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "2415:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "2415:3:1"
																						},
																						"nativeSrc": "2415:11:1",
																						"nodeType": "YulFunctionCall",
																						"src": "2415:11:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2428:1:1",
																						"nodeType": "YulLiteral",
																						"src": "2428:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "2411:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "2411:3:1"
																				},
																				"nativeSrc": "2411:19:1",
																				"nodeType": "YulFunctionCall",
																				"src": "2411:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2399:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2399:3:1"
																		},
																		"nativeSrc": "2399:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2399:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2381:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2381:6:1"
																},
																"nativeSrc": "2381:51:1",
																"nodeType": "YulFunctionCall",
																"src": "2381:51:1"
															},
															"nativeSrc": "2381:51:1",
															"nodeType": "YulExpressionStatement",
															"src": "2381:51:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "2235:203:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2305:9:1",
														"nodeType": "YulTypedName",
														"src": "2305:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2316:6:1",
														"nodeType": "YulTypedName",
														"src": "2316:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2327:4:1",
														"nodeType": "YulTypedName",
														"src": "2327:4:1",
														"type": ""
													}
												],
												"src": "2235:203:1"
											},
											{
												"body": {
													"nativeSrc": "2542:93:1",
													"nodeType": "YulBlock",
													"src": "2542:93:1",
													"statements": [
														{
															"nativeSrc": "2552:26:1",
															"nodeType": "YulAssignment",
															"src": "2552:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2564:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2564:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2575:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2575:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2560:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2560:3:1"
																},
																"nativeSrc": "2560:18:1",
																"nodeType": "YulFunctionCall",
																"src": "2560:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2552:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "2552:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2594:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2594:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2609:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2609:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2617:10:1",
																				"nodeType": "YulLiteral",
																				"src": "2617:10:1",
																				"type": "",
																				"value": "0xffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2605:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2605:3:1"
																		},
																		"nativeSrc": "2605:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2605:23:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2587:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2587:6:1"
																},
																"nativeSrc": "2587:42:1",
																"nodeType": "YulFunctionCall",
																"src": "2587:42:1"
															},
															"nativeSrc": "2587:42:1",
															"nodeType": "YulExpressionStatement",
															"src": "2587:42:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed",
												"nativeSrc": "2443:192:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2511:9:1",
														"nodeType": "YulTypedName",
														"src": "2511:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2522:6:1",
														"nodeType": "YulTypedName",
														"src": "2522:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2533:4:1",
														"nodeType": "YulTypedName",
														"src": "2533:4:1",
														"type": ""
													}
												],
												"src": "2443:192:1"
											},
											{
												"body": {
													"nativeSrc": "2739:109:1",
													"nodeType": "YulBlock",
													"src": "2739:109:1",
													"statements": [
														{
															"nativeSrc": "2749:26:1",
															"nodeType": "YulAssignment",
															"src": "2749:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2761:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2761:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2772:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2772:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2757:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2757:3:1"
																},
																"nativeSrc": "2757:18:1",
																"nodeType": "YulFunctionCall",
																"src": "2757:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2749:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "2749:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2791:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2791:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2806:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2806:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2814:26:1",
																				"nodeType": "YulLiteral",
																				"src": "2814:26:1",
																				"type": "",
																				"value": "0xffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2802:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2802:3:1"
																		},
																		"nativeSrc": "2802:39:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2802:39:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2784:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2784:6:1"
																},
																"nativeSrc": "2784:58:1",
																"nodeType": "YulFunctionCall",
																"src": "2784:58:1"
															},
															"nativeSrc": "2784:58:1",
															"nodeType": "YulExpressionStatement",
															"src": "2784:58:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint96__to_t_uint96__fromStack_reversed",
												"nativeSrc": "2640:208:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2708:9:1",
														"nodeType": "YulTypedName",
														"src": "2708:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2719:6:1",
														"nodeType": "YulTypedName",
														"src": "2719:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2730:4:1",
														"nodeType": "YulTypedName",
														"src": "2730:4:1",
														"type": ""
													}
												],
												"src": "2640:208:1"
											},
											{
												"body": {
													"nativeSrc": "3006:675:1",
													"nodeType": "YulBlock",
													"src": "3006:675:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "3053:16:1",
																"nodeType": "YulBlock",
																"src": "3053:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3062:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3062:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3065:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3065:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3055:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3055:6:1"
																			},
																			"nativeSrc": "3055:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3055:12:1"
																		},
																		"nativeSrc": "3055:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3055:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3027:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "3027:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3036:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3036:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3023:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3023:3:1"
																		},
																		"nativeSrc": "3023:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3023:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3048:3:1",
																		"nodeType": "YulLiteral",
																		"src": "3048:3:1",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3019:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3019:3:1"
																},
																"nativeSrc": "3019:33:1",
																"nodeType": "YulFunctionCall",
																"src": "3019:33:1"
															},
															"nativeSrc": "3016:53:1",
															"nodeType": "YulIf",
															"src": "3016:53:1"
														},
														{
															"nativeSrc": "3078:39:1",
															"nodeType": "YulAssignment",
															"src": "3078:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3107:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3107:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "3088:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "3088:18:1"
																},
																"nativeSrc": "3088:29:1",
																"nodeType": "YulFunctionCall",
																"src": "3088:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3078:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3078:6:1"
																}
															]
														},
														{
															"nativeSrc": "3126:14:1",
															"nodeType": "YulVariableDeclaration",
															"src": "3126:14:1",
															"value": {
																"kind": "number",
																"nativeSrc": "3139:1:1",
																"nodeType": "YulLiteral",
																"src": "3139:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "3130:5:1",
																	"nodeType": "YulTypedName",
																	"src": "3130:5:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3149:41:1",
															"nodeType": "YulAssignment",
															"src": "3149:41:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3175:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3175:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3186:2:1",
																				"nodeType": "YulLiteral",
																				"src": "3186:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3171:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3171:3:1"
																		},
																		"nativeSrc": "3171:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3171:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3158:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "3158:12:1"
																},
																"nativeSrc": "3158:32:1",
																"nodeType": "YulFunctionCall",
																"src": "3158:32:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3149:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "3149:5:1"
																}
															]
														},
														{
															"nativeSrc": "3199:15:1",
															"nodeType": "YulAssignment",
															"src": "3199:15:1",
															"value": {
																"name": "value",
																"nativeSrc": "3209:5:1",
																"nodeType": "YulIdentifier",
																"src": "3209:5:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "3199:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3199:6:1"
																}
															]
														},
														{
															"nativeSrc": "3223:16:1",
															"nodeType": "YulVariableDeclaration",
															"src": "3223:16:1",
															"value": {
																"kind": "number",
																"nativeSrc": "3238:1:1",
																"nodeType": "YulLiteral",
																"src": "3238:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "3227:7:1",
																	"nodeType": "YulTypedName",
																	"src": "3227:7:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3248:43:1",
															"nodeType": "YulAssignment",
															"src": "3248:43:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3276:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3276:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3287:2:1",
																				"nodeType": "YulLiteral",
																				"src": "3287:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3272:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3272:3:1"
																		},
																		"nativeSrc": "3272:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3272:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3259:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "3259:12:1"
																},
																"nativeSrc": "3259:32:1",
																"nodeType": "YulFunctionCall",
																"src": "3259:32:1"
															},
															"variableNames": [
																{
																	"name": "value_1",
																	"nativeSrc": "3248:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "3248:7:1"
																}
															]
														},
														{
															"nativeSrc": "3300:17:1",
															"nodeType": "YulAssignment",
															"src": "3300:17:1",
															"value": {
																"name": "value_1",
																"nativeSrc": "3310:7:1",
																"nodeType": "YulIdentifier",
																"src": "3310:7:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "3300:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3300:6:1"
																}
															]
														},
														{
															"nativeSrc": "3326:47:1",
															"nodeType": "YulVariableDeclaration",
															"src": "3326:47:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3358:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3358:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3369:2:1",
																				"nodeType": "YulLiteral",
																				"src": "3369:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3354:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3354:3:1"
																		},
																		"nativeSrc": "3354:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3354:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3341:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "3341:12:1"
																},
																"nativeSrc": "3341:32:1",
																"nodeType": "YulFunctionCall",
																"src": "3341:32:1"
															},
															"variables": [
																{
																	"name": "value_2",
																	"nativeSrc": "3330:7:1",
																	"nodeType": "YulTypedName",
																	"src": "3330:7:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3425:16:1",
																"nodeType": "YulBlock",
																"src": "3425:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3434:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3434:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3437:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3437:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3427:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3427:6:1"
																			},
																			"nativeSrc": "3427:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3427:12:1"
																		},
																		"nativeSrc": "3427:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3427:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value_2",
																				"nativeSrc": "3395:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "3395:7:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value_2",
																						"nativeSrc": "3408:7:1",
																						"nodeType": "YulIdentifier",
																						"src": "3408:7:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3417:4:1",
																						"nodeType": "YulLiteral",
																						"src": "3417:4:1",
																						"type": "",
																						"value": "0xff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "3404:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "3404:3:1"
																				},
																				"nativeSrc": "3404:18:1",
																				"nodeType": "YulFunctionCall",
																				"src": "3404:18:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3392:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "3392:2:1"
																		},
																		"nativeSrc": "3392:31:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3392:31:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3385:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3385:6:1"
																},
																"nativeSrc": "3385:39:1",
																"nodeType": "YulFunctionCall",
																"src": "3385:39:1"
															},
															"nativeSrc": "3382:59:1",
															"nodeType": "YulIf",
															"src": "3382:59:1"
														},
														{
															"nativeSrc": "3450:17:1",
															"nodeType": "YulAssignment",
															"src": "3450:17:1",
															"value": {
																"name": "value_2",
																"nativeSrc": "3460:7:1",
																"nodeType": "YulIdentifier",
																"src": "3460:7:1"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nativeSrc": "3450:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3450:6:1"
																}
															]
														},
														{
															"nativeSrc": "3476:16:1",
															"nodeType": "YulVariableDeclaration",
															"src": "3476:16:1",
															"value": {
																"kind": "number",
																"nativeSrc": "3491:1:1",
																"nodeType": "YulLiteral",
																"src": "3491:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_3",
																	"nativeSrc": "3480:7:1",
																	"nodeType": "YulTypedName",
																	"src": "3480:7:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3501:44:1",
															"nodeType": "YulAssignment",
															"src": "3501:44:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3529:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3529:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3540:3:1",
																				"nodeType": "YulLiteral",
																				"src": "3540:3:1",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3525:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3525:3:1"
																		},
																		"nativeSrc": "3525:19:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3525:19:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3512:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "3512:12:1"
																},
																"nativeSrc": "3512:33:1",
																"nodeType": "YulFunctionCall",
																"src": "3512:33:1"
															},
															"variableNames": [
																{
																	"name": "value_3",
																	"nativeSrc": "3501:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "3501:7:1"
																}
															]
														},
														{
															"nativeSrc": "3554:17:1",
															"nodeType": "YulAssignment",
															"src": "3554:17:1",
															"value": {
																"name": "value_3",
																"nativeSrc": "3564:7:1",
																"nodeType": "YulIdentifier",
																"src": "3564:7:1"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nativeSrc": "3554:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3554:6:1"
																}
															]
														},
														{
															"nativeSrc": "3580:16:1",
															"nodeType": "YulVariableDeclaration",
															"src": "3580:16:1",
															"value": {
																"kind": "number",
																"nativeSrc": "3595:1:1",
																"nodeType": "YulLiteral",
																"src": "3595:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_4",
																	"nativeSrc": "3584:7:1",
																	"nodeType": "YulTypedName",
																	"src": "3584:7:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3605:44:1",
															"nodeType": "YulAssignment",
															"src": "3605:44:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3633:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3633:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3644:3:1",
																				"nodeType": "YulLiteral",
																				"src": "3644:3:1",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3629:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3629:3:1"
																		},
																		"nativeSrc": "3629:19:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3629:19:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3616:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "3616:12:1"
																},
																"nativeSrc": "3616:33:1",
																"nodeType": "YulFunctionCall",
																"src": "3616:33:1"
															},
															"variableNames": [
																{
																	"name": "value_4",
																	"nativeSrc": "3605:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "3605:7:1"
																}
															]
														},
														{
															"nativeSrc": "3658:17:1",
															"nodeType": "YulAssignment",
															"src": "3658:17:1",
															"value": {
																"name": "value_4",
																"nativeSrc": "3668:7:1",
																"nodeType": "YulIdentifier",
																"src": "3668:7:1"
															},
															"variableNames": [
																{
																	"name": "value5",
																	"nativeSrc": "3658:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3658:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32",
												"nativeSrc": "2853:828:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2932:9:1",
														"nodeType": "YulTypedName",
														"src": "2932:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2943:7:1",
														"nodeType": "YulTypedName",
														"src": "2943:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2955:6:1",
														"nodeType": "YulTypedName",
														"src": "2955:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2963:6:1",
														"nodeType": "YulTypedName",
														"src": "2963:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "2971:6:1",
														"nodeType": "YulTypedName",
														"src": "2971:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "2979:6:1",
														"nodeType": "YulTypedName",
														"src": "2979:6:1",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "2987:6:1",
														"nodeType": "YulTypedName",
														"src": "2987:6:1",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "2995:6:1",
														"nodeType": "YulTypedName",
														"src": "2995:6:1",
														"type": ""
													}
												],
												"src": "2853:828:1"
											},
											{
												"body": {
													"nativeSrc": "3773:173:1",
													"nodeType": "YulBlock",
													"src": "3773:173:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "3819:16:1",
																"nodeType": "YulBlock",
																"src": "3819:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3828:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3828:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3831:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3831:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3821:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3821:6:1"
																			},
																			"nativeSrc": "3821:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3821:12:1"
																		},
																		"nativeSrc": "3821:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3821:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3794:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "3794:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3803:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3803:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3790:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3790:3:1"
																		},
																		"nativeSrc": "3790:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3790:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3815:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3815:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3786:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3786:3:1"
																},
																"nativeSrc": "3786:32:1",
																"nodeType": "YulFunctionCall",
																"src": "3786:32:1"
															},
															"nativeSrc": "3783:52:1",
															"nodeType": "YulIf",
															"src": "3783:52:1"
														},
														{
															"nativeSrc": "3844:39:1",
															"nodeType": "YulAssignment",
															"src": "3844:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3873:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3873:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "3854:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "3854:18:1"
																},
																"nativeSrc": "3854:29:1",
																"nodeType": "YulFunctionCall",
																"src": "3854:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3844:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3844:6:1"
																}
															]
														},
														{
															"nativeSrc": "3892:48:1",
															"nodeType": "YulAssignment",
															"src": "3892:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3925:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3925:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3936:2:1",
																				"nodeType": "YulLiteral",
																				"src": "3936:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3921:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3921:3:1"
																		},
																		"nativeSrc": "3921:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3921:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "3902:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "3902:18:1"
																},
																"nativeSrc": "3902:38:1",
																"nodeType": "YulFunctionCall",
																"src": "3902:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "3892:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3892:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "3686:260:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3731:9:1",
														"nodeType": "YulTypedName",
														"src": "3731:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3742:7:1",
														"nodeType": "YulTypedName",
														"src": "3742:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3754:6:1",
														"nodeType": "YulTypedName",
														"src": "3754:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3762:6:1",
														"nodeType": "YulTypedName",
														"src": "3762:6:1",
														"type": ""
													}
												],
												"src": "3686:260:1"
											},
											{
												"body": {
													"nativeSrc": "4037:264:1",
													"nodeType": "YulBlock",
													"src": "4037:264:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "4083:16:1",
																"nodeType": "YulBlock",
																"src": "4083:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4092:1:1",
																					"nodeType": "YulLiteral",
																					"src": "4092:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4095:1:1",
																					"nodeType": "YulLiteral",
																					"src": "4095:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4085:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "4085:6:1"
																			},
																			"nativeSrc": "4085:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4085:12:1"
																		},
																		"nativeSrc": "4085:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "4085:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4058:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "4058:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4067:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4067:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4054:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4054:3:1"
																		},
																		"nativeSrc": "4054:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4054:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4079:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4079:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4050:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4050:3:1"
																},
																"nativeSrc": "4050:32:1",
																"nodeType": "YulFunctionCall",
																"src": "4050:32:1"
															},
															"nativeSrc": "4047:52:1",
															"nodeType": "YulIf",
															"src": "4047:52:1"
														},
														{
															"nativeSrc": "4108:39:1",
															"nodeType": "YulAssignment",
															"src": "4108:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4137:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "4137:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "4118:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "4118:18:1"
																},
																"nativeSrc": "4118:29:1",
																"nodeType": "YulFunctionCall",
																"src": "4118:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "4108:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4108:6:1"
																}
															]
														},
														{
															"nativeSrc": "4156:45:1",
															"nodeType": "YulVariableDeclaration",
															"src": "4156:45:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4186:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4186:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4197:2:1",
																				"nodeType": "YulLiteral",
																				"src": "4197:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4182:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4182:3:1"
																		},
																		"nativeSrc": "4182:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4182:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4169:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "4169:12:1"
																},
																"nativeSrc": "4169:32:1",
																"nodeType": "YulFunctionCall",
																"src": "4169:32:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "4160:5:1",
																	"nodeType": "YulTypedName",
																	"src": "4160:5:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4255:16:1",
																"nodeType": "YulBlock",
																"src": "4255:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4264:1:1",
																					"nodeType": "YulLiteral",
																					"src": "4264:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4267:1:1",
																					"nodeType": "YulLiteral",
																					"src": "4267:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4257:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "4257:6:1"
																			},
																			"nativeSrc": "4257:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4257:12:1"
																		},
																		"nativeSrc": "4257:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "4257:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4223:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "4223:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4234:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "4234:5:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4241:10:1",
																						"nodeType": "YulLiteral",
																						"src": "4241:10:1",
																						"type": "",
																						"value": "0xffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "4230:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "4230:3:1"
																				},
																				"nativeSrc": "4230:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "4230:22:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "4220:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "4220:2:1"
																		},
																		"nativeSrc": "4220:33:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4220:33:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4213:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4213:6:1"
																},
																"nativeSrc": "4213:41:1",
																"nodeType": "YulFunctionCall",
																"src": "4213:41:1"
															},
															"nativeSrc": "4210:61:1",
															"nodeType": "YulIf",
															"src": "4210:61:1"
														},
														{
															"nativeSrc": "4280:15:1",
															"nodeType": "YulAssignment",
															"src": "4280:15:1",
															"value": {
																"name": "value",
																"nativeSrc": "4290:5:1",
																"nodeType": "YulIdentifier",
																"src": "4290:5:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "4280:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4280:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint32",
												"nativeSrc": "3951:350:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3995:9:1",
														"nodeType": "YulTypedName",
														"src": "3995:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4006:7:1",
														"nodeType": "YulTypedName",
														"src": "4006:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4018:6:1",
														"nodeType": "YulTypedName",
														"src": "4018:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4026:6:1",
														"nodeType": "YulTypedName",
														"src": "4026:6:1",
														"type": ""
													}
												],
												"src": "3951:350:1"
											},
											{
												"body": {
													"nativeSrc": "4431:169:1",
													"nodeType": "YulBlock",
													"src": "4431:169:1",
													"statements": [
														{
															"nativeSrc": "4441:26:1",
															"nodeType": "YulAssignment",
															"src": "4441:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4453:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "4453:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4464:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4464:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4449:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4449:3:1"
																},
																"nativeSrc": "4449:18:1",
																"nodeType": "YulFunctionCall",
																"src": "4449:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4441:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "4441:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4483:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "4483:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "4498:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "4498:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4506:10:1",
																				"nodeType": "YulLiteral",
																				"src": "4506:10:1",
																				"type": "",
																				"value": "0xffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4494:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4494:3:1"
																		},
																		"nativeSrc": "4494:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4494:23:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4476:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4476:6:1"
																},
																"nativeSrc": "4476:42:1",
																"nodeType": "YulFunctionCall",
																"src": "4476:42:1"
															},
															"nativeSrc": "4476:42:1",
															"nodeType": "YulExpressionStatement",
															"src": "4476:42:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4538:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4538:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4549:2:1",
																				"nodeType": "YulLiteral",
																				"src": "4549:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4534:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4534:3:1"
																		},
																		"nativeSrc": "4534:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4534:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "4558:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "4558:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4566:26:1",
																				"nodeType": "YulLiteral",
																				"src": "4566:26:1",
																				"type": "",
																				"value": "0xffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4554:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4554:3:1"
																		},
																		"nativeSrc": "4554:39:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4554:39:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4527:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4527:6:1"
																},
																"nativeSrc": "4527:67:1",
																"nodeType": "YulFunctionCall",
																"src": "4527:67:1"
															},
															"nativeSrc": "4527:67:1",
															"nodeType": "YulExpressionStatement",
															"src": "4527:67:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint32_t_uint96__to_t_uint32_t_uint96__fromStack_reversed",
												"nativeSrc": "4306:294:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4392:9:1",
														"nodeType": "YulTypedName",
														"src": "4392:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4403:6:1",
														"nodeType": "YulTypedName",
														"src": "4403:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4411:6:1",
														"nodeType": "YulTypedName",
														"src": "4411:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4422:4:1",
														"nodeType": "YulTypedName",
														"src": "4422:4:1",
														"type": ""
													}
												],
												"src": "4306:294:1"
											},
											{
												"body": {
													"nativeSrc": "4705:109:1",
													"nodeType": "YulBlock",
													"src": "4705:109:1",
													"statements": [
														{
															"nativeSrc": "4715:26:1",
															"nodeType": "YulAssignment",
															"src": "4715:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4727:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "4727:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4738:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4738:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4723:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4723:3:1"
																},
																"nativeSrc": "4723:18:1",
																"nodeType": "YulFunctionCall",
																"src": "4723:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4715:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "4715:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4757:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "4757:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "4772:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "4772:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4780:26:1",
																				"nodeType": "YulLiteral",
																				"src": "4780:26:1",
																				"type": "",
																				"value": "0xffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4768:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4768:3:1"
																		},
																		"nativeSrc": "4768:39:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4768:39:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4750:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4750:6:1"
																},
																"nativeSrc": "4750:58:1",
																"nodeType": "YulFunctionCall",
																"src": "4750:58:1"
															},
															"nativeSrc": "4750:58:1",
															"nodeType": "YulExpressionStatement",
															"src": "4750:58:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint96__to_t_uint256__fromStack_reversed",
												"nativeSrc": "4605:209:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4674:9:1",
														"nodeType": "YulTypedName",
														"src": "4674:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4685:6:1",
														"nodeType": "YulTypedName",
														"src": "4685:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4696:4:1",
														"nodeType": "YulTypedName",
														"src": "4696:4:1",
														"type": ""
													}
												],
												"src": "4605:209:1"
											},
											{
												"body": {
													"nativeSrc": "4993:229:1",
													"nodeType": "YulBlock",
													"src": "4993:229:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5010:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "5010:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5021:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5021:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5003:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5003:6:1"
																},
																"nativeSrc": "5003:21:1",
																"nodeType": "YulFunctionCall",
																"src": "5003:21:1"
															},
															"nativeSrc": "5003:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "5003:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5044:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "5044:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5055:2:1",
																				"nodeType": "YulLiteral",
																				"src": "5055:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5040:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5040:3:1"
																		},
																		"nativeSrc": "5040:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5040:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5060:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5060:2:1",
																		"type": "",
																		"value": "39"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5033:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5033:6:1"
																},
																"nativeSrc": "5033:30:1",
																"nodeType": "YulFunctionCall",
																"src": "5033:30:1"
															},
															"nativeSrc": "5033:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "5033:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5083:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "5083:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5094:2:1",
																				"nodeType": "YulLiteral",
																				"src": "5094:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5079:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5079:3:1"
																		},
																		"nativeSrc": "5079:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5079:18:1"
																	},
																	{
																		"hexValue": "436f6d703a3a6765745072696f72566f7465733a206e6f742079657420646574",
																		"kind": "string",
																		"nativeSrc": "5099:34:1",
																		"nodeType": "YulLiteral",
																		"src": "5099:34:1",
																		"type": "",
																		"value": "Comp::getPriorVotes: not yet det"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5072:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5072:6:1"
																},
																"nativeSrc": "5072:62:1",
																"nodeType": "YulFunctionCall",
																"src": "5072:62:1"
															},
															"nativeSrc": "5072:62:1",
															"nodeType": "YulExpressionStatement",
															"src": "5072:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5154:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "5154:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5165:2:1",
																				"nodeType": "YulLiteral",
																				"src": "5165:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5150:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5150:3:1"
																		},
																		"nativeSrc": "5150:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5150:18:1"
																	},
																	{
																		"hexValue": "65726d696e6564",
																		"kind": "string",
																		"nativeSrc": "5170:9:1",
																		"nodeType": "YulLiteral",
																		"src": "5170:9:1",
																		"type": "",
																		"value": "ermined"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5143:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5143:6:1"
																},
																"nativeSrc": "5143:37:1",
																"nodeType": "YulFunctionCall",
																"src": "5143:37:1"
															},
															"nativeSrc": "5143:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "5143:37:1"
														},
														{
															"nativeSrc": "5189:27:1",
															"nodeType": "YulAssignment",
															"src": "5189:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5201:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "5201:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5212:3:1",
																		"nodeType": "YulLiteral",
																		"src": "5212:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5197:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5197:3:1"
																},
																"nativeSrc": "5197:19:1",
																"nodeType": "YulFunctionCall",
																"src": "5197:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5189:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "5189:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_49387db7fef935f0f28be8b61df0527ef3c11db5acad132a74e4fb5d480e55d0__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4819:403:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4970:9:1",
														"nodeType": "YulTypedName",
														"src": "4970:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4984:4:1",
														"nodeType": "YulTypedName",
														"src": "4984:4:1",
														"type": ""
													}
												],
												"src": "4819:403:1"
											},
											{
												"body": {
													"nativeSrc": "5259:95:1",
													"nodeType": "YulBlock",
													"src": "5259:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5276:1:1",
																		"nodeType": "YulLiteral",
																		"src": "5276:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "5283:3:1",
																				"nodeType": "YulLiteral",
																				"src": "5283:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5288:10:1",
																				"nodeType": "YulLiteral",
																				"src": "5288:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "5279:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5279:3:1"
																		},
																		"nativeSrc": "5279:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5279:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5269:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5269:6:1"
																},
																"nativeSrc": "5269:31:1",
																"nodeType": "YulFunctionCall",
																"src": "5269:31:1"
															},
															"nativeSrc": "5269:31:1",
															"nodeType": "YulExpressionStatement",
															"src": "5269:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5316:1:1",
																		"nodeType": "YulLiteral",
																		"src": "5316:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5319:4:1",
																		"nodeType": "YulLiteral",
																		"src": "5319:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5309:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5309:6:1"
																},
																"nativeSrc": "5309:15:1",
																"nodeType": "YulFunctionCall",
																"src": "5309:15:1"
															},
															"nativeSrc": "5309:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "5309:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5340:1:1",
																		"nodeType": "YulLiteral",
																		"src": "5340:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5343:4:1",
																		"nodeType": "YulLiteral",
																		"src": "5343:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5333:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5333:6:1"
																},
																"nativeSrc": "5333:15:1",
																"nodeType": "YulFunctionCall",
																"src": "5333:15:1"
															},
															"nativeSrc": "5333:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "5333:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "5227:127:1",
												"nodeType": "YulFunctionDefinition",
												"src": "5227:127:1"
											},
											{
												"body": {
													"nativeSrc": "5407:122:1",
													"nodeType": "YulBlock",
													"src": "5407:122:1",
													"statements": [
														{
															"nativeSrc": "5417:51:1",
															"nodeType": "YulAssignment",
															"src": "5417:51:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "5433:1:1",
																				"nodeType": "YulIdentifier",
																				"src": "5433:1:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5436:10:1",
																				"nodeType": "YulLiteral",
																				"src": "5436:10:1",
																				"type": "",
																				"value": "0xffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5429:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5429:3:1"
																		},
																		"nativeSrc": "5429:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5429:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nativeSrc": "5453:1:1",
																				"nodeType": "YulIdentifier",
																				"src": "5453:1:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5456:10:1",
																				"nodeType": "YulLiteral",
																				"src": "5456:10:1",
																				"type": "",
																				"value": "0xffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5449:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5449:3:1"
																		},
																		"nativeSrc": "5449:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5449:18:1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "5425:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5425:3:1"
																},
																"nativeSrc": "5425:43:1",
																"nodeType": "YulFunctionCall",
																"src": "5425:43:1"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "5417:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "5417:4:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5501:22:1",
																"nodeType": "YulBlock",
																"src": "5501:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "5503:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "5503:16:1"
																			},
																			"nativeSrc": "5503:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "5503:18:1"
																		},
																		"nativeSrc": "5503:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "5503:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "5483:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "5483:4:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5489:10:1",
																		"nodeType": "YulLiteral",
																		"src": "5489:10:1",
																		"type": "",
																		"value": "0xffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5480:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "5480:2:1"
																},
																"nativeSrc": "5480:20:1",
																"nodeType": "YulFunctionCall",
																"src": "5480:20:1"
															},
															"nativeSrc": "5477:46:1",
															"nodeType": "YulIf",
															"src": "5477:46:1"
														}
													]
												},
												"name": "checked_sub_t_uint32",
												"nativeSrc": "5359:170:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "5389:1:1",
														"nodeType": "YulTypedName",
														"src": "5389:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "5392:1:1",
														"nodeType": "YulTypedName",
														"src": "5392:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "5398:4:1",
														"nodeType": "YulTypedName",
														"src": "5398:4:1",
														"type": ""
													}
												],
												"src": "5359:170:1"
											},
											{
												"body": {
													"nativeSrc": "5579:230:1",
													"nodeType": "YulBlock",
													"src": "5579:230:1",
													"statements": [
														{
															"nativeSrc": "5589:29:1",
															"nodeType": "YulVariableDeclaration",
															"src": "5589:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "5604:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "5604:1:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5607:10:1",
																		"nodeType": "YulLiteral",
																		"src": "5607:10:1",
																		"type": "",
																		"value": "0xffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5600:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5600:3:1"
																},
																"nativeSrc": "5600:18:1",
																"nodeType": "YulFunctionCall",
																"src": "5600:18:1"
															},
															"variables": [
																{
																	"name": "y_1",
																	"nativeSrc": "5593:3:1",
																	"nodeType": "YulTypedName",
																	"src": "5593:3:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5650:111:1",
																"nodeType": "YulBlock",
																"src": "5650:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5671:1:1",
																					"nodeType": "YulLiteral",
																					"src": "5671:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "5678:3:1",
																							"nodeType": "YulLiteral",
																							"src": "5678:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "5683:10:1",
																							"nodeType": "YulLiteral",
																							"src": "5683:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "5674:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "5674:3:1"
																					},
																					"nativeSrc": "5674:20:1",
																					"nodeType": "YulFunctionCall",
																					"src": "5674:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "5664:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "5664:6:1"
																			},
																			"nativeSrc": "5664:31:1",
																			"nodeType": "YulFunctionCall",
																			"src": "5664:31:1"
																		},
																		"nativeSrc": "5664:31:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "5664:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5715:1:1",
																					"nodeType": "YulLiteral",
																					"src": "5715:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5718:4:1",
																					"nodeType": "YulLiteral",
																					"src": "5718:4:1",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "5708:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "5708:6:1"
																			},
																			"nativeSrc": "5708:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "5708:15:1"
																		},
																		"nativeSrc": "5708:15:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "5708:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5743:1:1",
																					"nodeType": "YulLiteral",
																					"src": "5743:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5746:4:1",
																					"nodeType": "YulLiteral",
																					"src": "5746:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5736:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "5736:6:1"
																			},
																			"nativeSrc": "5736:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "5736:15:1"
																		},
																		"nativeSrc": "5736:15:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "5736:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y_1",
																		"nativeSrc": "5637:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "5637:3:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5630:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5630:6:1"
																},
																"nativeSrc": "5630:11:1",
																"nodeType": "YulFunctionCall",
																"src": "5630:11:1"
															},
															"nativeSrc": "5627:134:1",
															"nodeType": "YulIf",
															"src": "5627:134:1"
														},
														{
															"nativeSrc": "5770:33:1",
															"nodeType": "YulAssignment",
															"src": "5770:33:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "5783:1:1",
																				"nodeType": "YulIdentifier",
																				"src": "5783:1:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5786:10:1",
																				"nodeType": "YulLiteral",
																				"src": "5786:10:1",
																				"type": "",
																				"value": "0xffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5779:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5779:3:1"
																		},
																		"nativeSrc": "5779:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5779:18:1"
																	},
																	{
																		"name": "y_1",
																		"nativeSrc": "5799:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "5799:3:1"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "5775:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5775:3:1"
																},
																"nativeSrc": "5775:28:1",
																"nodeType": "YulFunctionCall",
																"src": "5775:28:1"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "5770:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "5770:1:1"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint32",
												"nativeSrc": "5534:275:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "5564:1:1",
														"nodeType": "YulTypedName",
														"src": "5564:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "5567:1:1",
														"nodeType": "YulTypedName",
														"src": "5567:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "5573:1:1",
														"nodeType": "YulTypedName",
														"src": "5573:1:1",
														"type": ""
													}
												],
												"src": "5534:275:1"
											},
											{
												"body": {
													"nativeSrc": "5999:232:1",
													"nodeType": "YulBlock",
													"src": "5999:232:1",
													"statements": [
														{
															"nativeSrc": "6009:27:1",
															"nodeType": "YulAssignment",
															"src": "6009:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6021:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "6021:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6032:3:1",
																		"nodeType": "YulLiteral",
																		"src": "6032:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6017:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "6017:3:1"
																},
																"nativeSrc": "6017:19:1",
																"nodeType": "YulFunctionCall",
																"src": "6017:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6009:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "6009:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6052:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "6052:9:1"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "6063:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "6063:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6045:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6045:6:1"
																},
																"nativeSrc": "6045:25:1",
																"nodeType": "YulFunctionCall",
																"src": "6045:25:1"
															},
															"nativeSrc": "6045:25:1",
															"nodeType": "YulExpressionStatement",
															"src": "6045:25:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6090:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "6090:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6101:2:1",
																				"nodeType": "YulLiteral",
																				"src": "6101:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6086:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6086:3:1"
																		},
																		"nativeSrc": "6086:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6086:18:1"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "6106:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "6106:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6079:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6079:6:1"
																},
																"nativeSrc": "6079:34:1",
																"nodeType": "YulFunctionCall",
																"src": "6079:34:1"
															},
															"nativeSrc": "6079:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "6079:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6133:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "6133:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6144:2:1",
																				"nodeType": "YulLiteral",
																				"src": "6144:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6129:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6129:3:1"
																		},
																		"nativeSrc": "6129:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6129:18:1"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "6149:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "6149:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6122:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6122:6:1"
																},
																"nativeSrc": "6122:34:1",
																"nodeType": "YulFunctionCall",
																"src": "6122:34:1"
															},
															"nativeSrc": "6122:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "6122:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6176:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "6176:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6187:2:1",
																				"nodeType": "YulLiteral",
																				"src": "6187:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6172:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6172:3:1"
																		},
																		"nativeSrc": "6172:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6172:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value3",
																				"nativeSrc": "6196:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "6196:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "6212:3:1",
																								"nodeType": "YulLiteral",
																								"src": "6212:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "6217:1:1",
																								"nodeType": "YulLiteral",
																								"src": "6217:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "6208:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "6208:3:1"
																						},
																						"nativeSrc": "6208:11:1",
																						"nodeType": "YulFunctionCall",
																						"src": "6208:11:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6221:1:1",
																						"nodeType": "YulLiteral",
																						"src": "6221:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "6204:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "6204:3:1"
																				},
																				"nativeSrc": "6204:19:1",
																				"nodeType": "YulFunctionCall",
																				"src": "6204:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "6192:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6192:3:1"
																		},
																		"nativeSrc": "6192:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6192:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6165:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6165:6:1"
																},
																"nativeSrc": "6165:60:1",
																"nodeType": "YulFunctionCall",
																"src": "6165:60:1"
															},
															"nativeSrc": "6165:60:1",
															"nodeType": "YulExpressionStatement",
															"src": "6165:60:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed",
												"nativeSrc": "5814:417:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5944:9:1",
														"nodeType": "YulTypedName",
														"src": "5944:9:1",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "5955:6:1",
														"nodeType": "YulTypedName",
														"src": "5955:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "5963:6:1",
														"nodeType": "YulTypedName",
														"src": "5963:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5971:6:1",
														"nodeType": "YulTypedName",
														"src": "5971:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5979:6:1",
														"nodeType": "YulTypedName",
														"src": "5979:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5990:4:1",
														"nodeType": "YulTypedName",
														"src": "5990:4:1",
														"type": ""
													}
												],
												"src": "5814:417:1"
											},
											{
												"body": {
													"nativeSrc": "6421:232:1",
													"nodeType": "YulBlock",
													"src": "6421:232:1",
													"statements": [
														{
															"nativeSrc": "6431:27:1",
															"nodeType": "YulAssignment",
															"src": "6431:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6443:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "6443:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6454:3:1",
																		"nodeType": "YulLiteral",
																		"src": "6454:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6439:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "6439:3:1"
																},
																"nativeSrc": "6439:19:1",
																"nodeType": "YulFunctionCall",
																"src": "6439:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6431:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "6431:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6474:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "6474:9:1"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "6485:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "6485:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6467:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6467:6:1"
																},
																"nativeSrc": "6467:25:1",
																"nodeType": "YulFunctionCall",
																"src": "6467:25:1"
															},
															"nativeSrc": "6467:25:1",
															"nodeType": "YulExpressionStatement",
															"src": "6467:25:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6512:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "6512:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6523:2:1",
																				"nodeType": "YulLiteral",
																				"src": "6523:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6508:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6508:3:1"
																		},
																		"nativeSrc": "6508:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6508:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "6532:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "6532:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "6548:3:1",
																								"nodeType": "YulLiteral",
																								"src": "6548:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "6553:1:1",
																								"nodeType": "YulLiteral",
																								"src": "6553:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "6544:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "6544:3:1"
																						},
																						"nativeSrc": "6544:11:1",
																						"nodeType": "YulFunctionCall",
																						"src": "6544:11:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6557:1:1",
																						"nodeType": "YulLiteral",
																						"src": "6557:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "6540:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "6540:3:1"
																				},
																				"nativeSrc": "6540:19:1",
																				"nodeType": "YulFunctionCall",
																				"src": "6540:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "6528:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6528:3:1"
																		},
																		"nativeSrc": "6528:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6528:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6501:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6501:6:1"
																},
																"nativeSrc": "6501:60:1",
																"nodeType": "YulFunctionCall",
																"src": "6501:60:1"
															},
															"nativeSrc": "6501:60:1",
															"nodeType": "YulExpressionStatement",
															"src": "6501:60:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6581:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "6581:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6592:2:1",
																				"nodeType": "YulLiteral",
																				"src": "6592:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6577:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6577:3:1"
																		},
																		"nativeSrc": "6577:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6577:18:1"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "6597:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "6597:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6570:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6570:6:1"
																},
																"nativeSrc": "6570:34:1",
																"nodeType": "YulFunctionCall",
																"src": "6570:34:1"
															},
															"nativeSrc": "6570:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "6570:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6624:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "6624:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6635:2:1",
																				"nodeType": "YulLiteral",
																				"src": "6635:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6620:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6620:3:1"
																		},
																		"nativeSrc": "6620:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6620:18:1"
																	},
																	{
																		"name": "value3",
																		"nativeSrc": "6640:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "6640:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6613:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6613:6:1"
																},
																"nativeSrc": "6613:34:1",
																"nodeType": "YulFunctionCall",
																"src": "6613:34:1"
															},
															"nativeSrc": "6613:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "6613:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_address_t_uint256_t_uint256__to_t_bytes32_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "6236:417:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6366:9:1",
														"nodeType": "YulTypedName",
														"src": "6366:9:1",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "6377:6:1",
														"nodeType": "YulTypedName",
														"src": "6377:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6385:6:1",
														"nodeType": "YulTypedName",
														"src": "6385:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6393:6:1",
														"nodeType": "YulTypedName",
														"src": "6393:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6401:6:1",
														"nodeType": "YulTypedName",
														"src": "6401:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6412:4:1",
														"nodeType": "YulTypedName",
														"src": "6412:4:1",
														"type": ""
													}
												],
												"src": "6236:417:1"
											},
											{
												"body": {
													"nativeSrc": "6906:144:1",
													"nodeType": "YulBlock",
													"src": "6906:144:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6923:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "6923:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "6932:3:1",
																				"nodeType": "YulLiteral",
																				"src": "6932:3:1",
																				"type": "",
																				"value": "240"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6937:4:1",
																				"nodeType": "YulLiteral",
																				"src": "6937:4:1",
																				"type": "",
																				"value": "6401"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "6928:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6928:3:1"
																		},
																		"nativeSrc": "6928:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6928:14:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6916:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6916:6:1"
																},
																"nativeSrc": "6916:27:1",
																"nodeType": "YulFunctionCall",
																"src": "6916:27:1"
															},
															"nativeSrc": "6916:27:1",
															"nodeType": "YulExpressionStatement",
															"src": "6916:27:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "6963:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "6963:3:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6968:1:1",
																				"nodeType": "YulLiteral",
																				"src": "6968:1:1",
																				"type": "",
																				"value": "2"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6959:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6959:3:1"
																		},
																		"nativeSrc": "6959:11:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6959:11:1"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "6972:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "6972:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6952:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6952:6:1"
																},
																"nativeSrc": "6952:27:1",
																"nodeType": "YulFunctionCall",
																"src": "6952:27:1"
															},
															"nativeSrc": "6952:27:1",
															"nodeType": "YulExpressionStatement",
															"src": "6952:27:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "6999:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "6999:3:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7004:2:1",
																				"nodeType": "YulLiteral",
																				"src": "7004:2:1",
																				"type": "",
																				"value": "34"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6995:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6995:3:1"
																		},
																		"nativeSrc": "6995:12:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6995:12:1"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "7009:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "7009:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6988:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6988:6:1"
																},
																"nativeSrc": "6988:28:1",
																"nodeType": "YulFunctionCall",
																"src": "6988:28:1"
															},
															"nativeSrc": "6988:28:1",
															"nodeType": "YulExpressionStatement",
															"src": "6988:28:1"
														},
														{
															"nativeSrc": "7025:19:1",
															"nodeType": "YulAssignment",
															"src": "7025:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7036:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "7036:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7041:2:1",
																		"nodeType": "YulLiteral",
																		"src": "7041:2:1",
																		"type": "",
																		"value": "66"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7032:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "7032:3:1"
																},
																"nativeSrc": "7032:12:1",
																"nodeType": "YulFunctionCall",
																"src": "7032:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7025:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "7025:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541_t_bytes32_t_bytes32__to_t_string_memory_ptr_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "6658:392:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6874:3:1",
														"nodeType": "YulTypedName",
														"src": "6874:3:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6879:6:1",
														"nodeType": "YulTypedName",
														"src": "6879:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6887:6:1",
														"nodeType": "YulTypedName",
														"src": "6887:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6898:3:1",
														"nodeType": "YulTypedName",
														"src": "6898:3:1",
														"type": ""
													}
												],
												"src": "6658:392:1"
											},
											{
												"body": {
													"nativeSrc": "7236:217:1",
													"nodeType": "YulBlock",
													"src": "7236:217:1",
													"statements": [
														{
															"nativeSrc": "7246:27:1",
															"nodeType": "YulAssignment",
															"src": "7246:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7258:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "7258:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7269:3:1",
																		"nodeType": "YulLiteral",
																		"src": "7269:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7254:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "7254:3:1"
																},
																"nativeSrc": "7254:19:1",
																"nodeType": "YulFunctionCall",
																"src": "7254:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7246:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "7246:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7289:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "7289:9:1"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "7300:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "7300:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7282:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7282:6:1"
																},
																"nativeSrc": "7282:25:1",
																"nodeType": "YulFunctionCall",
																"src": "7282:25:1"
															},
															"nativeSrc": "7282:25:1",
															"nodeType": "YulExpressionStatement",
															"src": "7282:25:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7327:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "7327:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7338:2:1",
																				"nodeType": "YulLiteral",
																				"src": "7338:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7323:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7323:3:1"
																		},
																		"nativeSrc": "7323:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7323:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "7347:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "7347:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7355:4:1",
																				"nodeType": "YulLiteral",
																				"src": "7355:4:1",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "7343:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7343:3:1"
																		},
																		"nativeSrc": "7343:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7343:17:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7316:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7316:6:1"
																},
																"nativeSrc": "7316:45:1",
																"nodeType": "YulFunctionCall",
																"src": "7316:45:1"
															},
															"nativeSrc": "7316:45:1",
															"nodeType": "YulExpressionStatement",
															"src": "7316:45:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7381:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "7381:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7392:2:1",
																				"nodeType": "YulLiteral",
																				"src": "7392:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7377:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7377:3:1"
																		},
																		"nativeSrc": "7377:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7377:18:1"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "7397:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "7397:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7370:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7370:6:1"
																},
																"nativeSrc": "7370:34:1",
																"nodeType": "YulFunctionCall",
																"src": "7370:34:1"
															},
															"nativeSrc": "7370:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "7370:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7424:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "7424:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7435:2:1",
																				"nodeType": "YulLiteral",
																				"src": "7435:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7420:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7420:3:1"
																		},
																		"nativeSrc": "7420:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7420:18:1"
																	},
																	{
																		"name": "value3",
																		"nativeSrc": "7440:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "7440:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7413:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7413:6:1"
																},
																"nativeSrc": "7413:34:1",
																"nodeType": "YulFunctionCall",
																"src": "7413:34:1"
															},
															"nativeSrc": "7413:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "7413:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed",
												"nativeSrc": "7055:398:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7181:9:1",
														"nodeType": "YulTypedName",
														"src": "7181:9:1",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "7192:6:1",
														"nodeType": "YulTypedName",
														"src": "7192:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "7200:6:1",
														"nodeType": "YulTypedName",
														"src": "7200:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7208:6:1",
														"nodeType": "YulTypedName",
														"src": "7208:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7216:6:1",
														"nodeType": "YulTypedName",
														"src": "7216:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7227:4:1",
														"nodeType": "YulTypedName",
														"src": "7227:4:1",
														"type": ""
													}
												],
												"src": "7055:398:1"
											},
											{
												"body": {
													"nativeSrc": "7632:228:1",
													"nodeType": "YulBlock",
													"src": "7632:228:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7649:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "7649:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7660:2:1",
																		"nodeType": "YulLiteral",
																		"src": "7660:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7642:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7642:6:1"
																},
																"nativeSrc": "7642:21:1",
																"nodeType": "YulFunctionCall",
																"src": "7642:21:1"
															},
															"nativeSrc": "7642:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "7642:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7683:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "7683:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7694:2:1",
																				"nodeType": "YulLiteral",
																				"src": "7694:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7679:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7679:3:1"
																		},
																		"nativeSrc": "7679:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7679:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7699:2:1",
																		"nodeType": "YulLiteral",
																		"src": "7699:2:1",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7672:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7672:6:1"
																},
																"nativeSrc": "7672:30:1",
																"nodeType": "YulFunctionCall",
																"src": "7672:30:1"
															},
															"nativeSrc": "7672:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "7672:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7722:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "7722:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7733:2:1",
																				"nodeType": "YulLiteral",
																				"src": "7733:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7718:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7718:3:1"
																		},
																		"nativeSrc": "7718:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7718:18:1"
																	},
																	{
																		"hexValue": "436f6d703a3a64656c656761746542795369673a20696e76616c696420736967",
																		"kind": "string",
																		"nativeSrc": "7738:34:1",
																		"nodeType": "YulLiteral",
																		"src": "7738:34:1",
																		"type": "",
																		"value": "Comp::delegateBySig: invalid sig"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7711:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7711:6:1"
																},
																"nativeSrc": "7711:62:1",
																"nodeType": "YulFunctionCall",
																"src": "7711:62:1"
															},
															"nativeSrc": "7711:62:1",
															"nodeType": "YulExpressionStatement",
															"src": "7711:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7793:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "7793:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7804:2:1",
																				"nodeType": "YulLiteral",
																				"src": "7804:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7789:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7789:3:1"
																		},
																		"nativeSrc": "7789:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7789:18:1"
																	},
																	{
																		"hexValue": "6e6174757265",
																		"kind": "string",
																		"nativeSrc": "7809:8:1",
																		"nodeType": "YulLiteral",
																		"src": "7809:8:1",
																		"type": "",
																		"value": "nature"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7782:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7782:6:1"
																},
																"nativeSrc": "7782:36:1",
																"nodeType": "YulFunctionCall",
																"src": "7782:36:1"
															},
															"nativeSrc": "7782:36:1",
															"nodeType": "YulExpressionStatement",
															"src": "7782:36:1"
														},
														{
															"nativeSrc": "7827:27:1",
															"nodeType": "YulAssignment",
															"src": "7827:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7839:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "7839:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7850:3:1",
																		"nodeType": "YulLiteral",
																		"src": "7850:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7835:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "7835:3:1"
																},
																"nativeSrc": "7835:19:1",
																"nodeType": "YulFunctionCall",
																"src": "7835:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7827:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "7827:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2af9d25b44c3e789cf7d12e941fc7ef1e32cecdd98da61996de7571027751bd3__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7458:402:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7609:9:1",
														"nodeType": "YulTypedName",
														"src": "7609:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7623:4:1",
														"nodeType": "YulTypedName",
														"src": "7623:4:1",
														"type": ""
													}
												],
												"src": "7458:402:1"
											},
											{
												"body": {
													"nativeSrc": "7912:88:1",
													"nodeType": "YulBlock",
													"src": "7912:88:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "7943:22:1",
																"nodeType": "YulBlock",
																"src": "7943:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "7945:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "7945:16:1"
																			},
																			"nativeSrc": "7945:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "7945:18:1"
																		},
																		"nativeSrc": "7945:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "7945:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7928:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "7928:5:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "7939:1:1",
																				"nodeType": "YulLiteral",
																				"src": "7939:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "7935:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7935:3:1"
																		},
																		"nativeSrc": "7935:6:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7935:6:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "7925:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "7925:2:1"
																},
																"nativeSrc": "7925:17:1",
																"nodeType": "YulFunctionCall",
																"src": "7925:17:1"
															},
															"nativeSrc": "7922:43:1",
															"nodeType": "YulIf",
															"src": "7922:43:1"
														},
														{
															"nativeSrc": "7974:20:1",
															"nodeType": "YulAssignment",
															"src": "7974:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7985:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "7985:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7992:1:1",
																		"nodeType": "YulLiteral",
																		"src": "7992:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7981:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "7981:3:1"
																},
																"nativeSrc": "7981:13:1",
																"nodeType": "YulFunctionCall",
																"src": "7981:13:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "7974:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "7974:3:1"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nativeSrc": "7865:135:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7894:5:1",
														"nodeType": "YulTypedName",
														"src": "7894:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "7904:3:1",
														"nodeType": "YulTypedName",
														"src": "7904:3:1",
														"type": ""
													}
												],
												"src": "7865:135:1"
											},
											{
												"body": {
													"nativeSrc": "8179:224:1",
													"nodeType": "YulBlock",
													"src": "8179:224:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8196:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "8196:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8207:2:1",
																		"nodeType": "YulLiteral",
																		"src": "8207:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8189:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8189:6:1"
																},
																"nativeSrc": "8189:21:1",
																"nodeType": "YulFunctionCall",
																"src": "8189:21:1"
															},
															"nativeSrc": "8189:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "8189:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8230:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "8230:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8241:2:1",
																				"nodeType": "YulLiteral",
																				"src": "8241:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8226:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8226:3:1"
																		},
																		"nativeSrc": "8226:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8226:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8246:2:1",
																		"nodeType": "YulLiteral",
																		"src": "8246:2:1",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8219:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8219:6:1"
																},
																"nativeSrc": "8219:30:1",
																"nodeType": "YulFunctionCall",
																"src": "8219:30:1"
															},
															"nativeSrc": "8219:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "8219:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8269:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "8269:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8280:2:1",
																				"nodeType": "YulLiteral",
																				"src": "8280:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8265:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8265:3:1"
																		},
																		"nativeSrc": "8265:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8265:18:1"
																	},
																	{
																		"hexValue": "436f6d703a3a64656c656761746542795369673a20696e76616c6964206e6f6e",
																		"kind": "string",
																		"nativeSrc": "8285:34:1",
																		"nodeType": "YulLiteral",
																		"src": "8285:34:1",
																		"type": "",
																		"value": "Comp::delegateBySig: invalid non"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8258:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8258:6:1"
																},
																"nativeSrc": "8258:62:1",
																"nodeType": "YulFunctionCall",
																"src": "8258:62:1"
															},
															"nativeSrc": "8258:62:1",
															"nodeType": "YulExpressionStatement",
															"src": "8258:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8340:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "8340:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8351:2:1",
																				"nodeType": "YulLiteral",
																				"src": "8351:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8336:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8336:3:1"
																		},
																		"nativeSrc": "8336:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8336:18:1"
																	},
																	{
																		"hexValue": "6365",
																		"kind": "string",
																		"nativeSrc": "8356:4:1",
																		"nodeType": "YulLiteral",
																		"src": "8356:4:1",
																		"type": "",
																		"value": "ce"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8329:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8329:6:1"
																},
																"nativeSrc": "8329:32:1",
																"nodeType": "YulFunctionCall",
																"src": "8329:32:1"
															},
															"nativeSrc": "8329:32:1",
															"nodeType": "YulExpressionStatement",
															"src": "8329:32:1"
														},
														{
															"nativeSrc": "8370:27:1",
															"nodeType": "YulAssignment",
															"src": "8370:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8382:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "8382:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8393:3:1",
																		"nodeType": "YulLiteral",
																		"src": "8393:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8378:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "8378:3:1"
																},
																"nativeSrc": "8378:19:1",
																"nodeType": "YulFunctionCall",
																"src": "8378:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8370:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "8370:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_646cb63637df51b5cf3e35b8d418574ca2fa5dde981ba9f8f5779cfcbbc8a355__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8005:398:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8156:9:1",
														"nodeType": "YulTypedName",
														"src": "8156:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8170:4:1",
														"nodeType": "YulTypedName",
														"src": "8170:4:1",
														"type": ""
													}
												],
												"src": "8005:398:1"
											},
											{
												"body": {
													"nativeSrc": "8582:228:1",
													"nodeType": "YulBlock",
													"src": "8582:228:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8599:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "8599:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8610:2:1",
																		"nodeType": "YulLiteral",
																		"src": "8610:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8592:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8592:6:1"
																},
																"nativeSrc": "8592:21:1",
																"nodeType": "YulFunctionCall",
																"src": "8592:21:1"
															},
															"nativeSrc": "8592:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "8592:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8633:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "8633:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8644:2:1",
																				"nodeType": "YulLiteral",
																				"src": "8644:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8629:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8629:3:1"
																		},
																		"nativeSrc": "8629:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8629:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8649:2:1",
																		"nodeType": "YulLiteral",
																		"src": "8649:2:1",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8622:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8622:6:1"
																},
																"nativeSrc": "8622:30:1",
																"nodeType": "YulFunctionCall",
																"src": "8622:30:1"
															},
															"nativeSrc": "8622:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "8622:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8672:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "8672:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8683:2:1",
																				"nodeType": "YulLiteral",
																				"src": "8683:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8668:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8668:3:1"
																		},
																		"nativeSrc": "8668:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8668:18:1"
																	},
																	{
																		"hexValue": "436f6d703a3a64656c656761746542795369673a207369676e61747572652065",
																		"kind": "string",
																		"nativeSrc": "8688:34:1",
																		"nodeType": "YulLiteral",
																		"src": "8688:34:1",
																		"type": "",
																		"value": "Comp::delegateBySig: signature e"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8661:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8661:6:1"
																},
																"nativeSrc": "8661:62:1",
																"nodeType": "YulFunctionCall",
																"src": "8661:62:1"
															},
															"nativeSrc": "8661:62:1",
															"nodeType": "YulExpressionStatement",
															"src": "8661:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8743:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "8743:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8754:2:1",
																				"nodeType": "YulLiteral",
																				"src": "8754:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8739:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8739:3:1"
																		},
																		"nativeSrc": "8739:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8739:18:1"
																	},
																	{
																		"hexValue": "787069726564",
																		"kind": "string",
																		"nativeSrc": "8759:8:1",
																		"nodeType": "YulLiteral",
																		"src": "8759:8:1",
																		"type": "",
																		"value": "xpired"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8732:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8732:6:1"
																},
																"nativeSrc": "8732:36:1",
																"nodeType": "YulFunctionCall",
																"src": "8732:36:1"
															},
															"nativeSrc": "8732:36:1",
															"nodeType": "YulExpressionStatement",
															"src": "8732:36:1"
														},
														{
															"nativeSrc": "8777:27:1",
															"nodeType": "YulAssignment",
															"src": "8777:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8789:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "8789:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8800:3:1",
																		"nodeType": "YulLiteral",
																		"src": "8800:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8785:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "8785:3:1"
																},
																"nativeSrc": "8785:19:1",
																"nodeType": "YulFunctionCall",
																"src": "8785:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8777:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "8777:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2e8a87756e5afc73b82eff32f16bb6b10740f4f70e3e129eab06194e30ad3059__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8408:402:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8559:9:1",
														"nodeType": "YulTypedName",
														"src": "8559:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8573:4:1",
														"nodeType": "YulTypedName",
														"src": "8573:4:1",
														"type": ""
													}
												],
												"src": "8408:402:1"
											},
											{
												"body": {
													"nativeSrc": "8863:170:1",
													"nodeType": "YulBlock",
													"src": "8863:170:1",
													"statements": [
														{
															"nativeSrc": "8873:83:1",
															"nodeType": "YulAssignment",
															"src": "8873:83:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "8889:1:1",
																				"nodeType": "YulIdentifier",
																				"src": "8889:1:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8892:26:1",
																				"nodeType": "YulLiteral",
																				"src": "8892:26:1",
																				"type": "",
																				"value": "0xffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "8885:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8885:3:1"
																		},
																		"nativeSrc": "8885:34:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8885:34:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nativeSrc": "8925:1:1",
																				"nodeType": "YulIdentifier",
																				"src": "8925:1:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8928:26:1",
																				"nodeType": "YulLiteral",
																				"src": "8928:26:1",
																				"type": "",
																				"value": "0xffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "8921:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8921:3:1"
																		},
																		"nativeSrc": "8921:34:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8921:34:1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "8881:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "8881:3:1"
																},
																"nativeSrc": "8881:75:1",
																"nodeType": "YulFunctionCall",
																"src": "8881:75:1"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "8873:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "8873:4:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9005:22:1",
																"nodeType": "YulBlock",
																"src": "9005:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9007:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "9007:16:1"
																			},
																			"nativeSrc": "9007:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "9007:18:1"
																		},
																		"nativeSrc": "9007:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "9007:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "8971:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "8971:4:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8977:26:1",
																		"nodeType": "YulLiteral",
																		"src": "8977:26:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8968:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "8968:2:1"
																},
																"nativeSrc": "8968:36:1",
																"nodeType": "YulFunctionCall",
																"src": "8968:36:1"
															},
															"nativeSrc": "8965:62:1",
															"nodeType": "YulIf",
															"src": "8965:62:1"
														}
													]
												},
												"name": "checked_sub_t_uint96",
												"nativeSrc": "8815:218:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "8845:1:1",
														"nodeType": "YulTypedName",
														"src": "8845:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "8848:1:1",
														"nodeType": "YulTypedName",
														"src": "8848:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "8854:4:1",
														"nodeType": "YulTypedName",
														"src": "8854:4:1",
														"type": ""
													}
												],
												"src": "8815:218:1"
											},
											{
												"body": {
													"nativeSrc": "9212:250:1",
													"nodeType": "YulBlock",
													"src": "9212:250:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9229:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "9229:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9240:2:1",
																		"nodeType": "YulLiteral",
																		"src": "9240:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9222:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9222:6:1"
																},
																"nativeSrc": "9222:21:1",
																"nodeType": "YulFunctionCall",
																"src": "9222:21:1"
															},
															"nativeSrc": "9222:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "9222:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9263:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "9263:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9274:2:1",
																				"nodeType": "YulLiteral",
																				"src": "9274:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9259:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "9259:3:1"
																		},
																		"nativeSrc": "9259:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9259:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9279:2:1",
																		"nodeType": "YulLiteral",
																		"src": "9279:2:1",
																		"type": "",
																		"value": "60"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9252:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9252:6:1"
																},
																"nativeSrc": "9252:30:1",
																"nodeType": "YulFunctionCall",
																"src": "9252:30:1"
															},
															"nativeSrc": "9252:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "9252:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9302:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "9302:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9313:2:1",
																				"nodeType": "YulLiteral",
																				"src": "9313:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9298:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "9298:3:1"
																		},
																		"nativeSrc": "9298:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9298:18:1"
																	},
																	{
																		"hexValue": "436f6d703a3a5f7472616e73666572546f6b656e733a2063616e6e6f74207472",
																		"kind": "string",
																		"nativeSrc": "9318:34:1",
																		"nodeType": "YulLiteral",
																		"src": "9318:34:1",
																		"type": "",
																		"value": "Comp::_transferTokens: cannot tr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9291:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9291:6:1"
																},
																"nativeSrc": "9291:62:1",
																"nodeType": "YulFunctionCall",
																"src": "9291:62:1"
															},
															"nativeSrc": "9291:62:1",
															"nodeType": "YulExpressionStatement",
															"src": "9291:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9373:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "9373:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9384:2:1",
																				"nodeType": "YulLiteral",
																				"src": "9384:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9369:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "9369:3:1"
																		},
																		"nativeSrc": "9369:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9369:18:1"
																	},
																	{
																		"hexValue": "616e736665722066726f6d20746865207a65726f2061646472657373",
																		"kind": "string",
																		"nativeSrc": "9389:30:1",
																		"nodeType": "YulLiteral",
																		"src": "9389:30:1",
																		"type": "",
																		"value": "ansfer from the zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9362:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9362:6:1"
																},
																"nativeSrc": "9362:58:1",
																"nodeType": "YulFunctionCall",
																"src": "9362:58:1"
															},
															"nativeSrc": "9362:58:1",
															"nodeType": "YulExpressionStatement",
															"src": "9362:58:1"
														},
														{
															"nativeSrc": "9429:27:1",
															"nodeType": "YulAssignment",
															"src": "9429:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9441:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "9441:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9452:3:1",
																		"nodeType": "YulLiteral",
																		"src": "9452:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9437:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "9437:3:1"
																},
																"nativeSrc": "9437:19:1",
																"nodeType": "YulFunctionCall",
																"src": "9437:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9429:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "9429:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a1f9ee8b9464145aa6c6c80f5dd3de0ed75b63050c7ed5dda64f4dfa66ae889e__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9038:424:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9189:9:1",
														"nodeType": "YulTypedName",
														"src": "9189:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9203:4:1",
														"nodeType": "YulTypedName",
														"src": "9203:4:1",
														"type": ""
													}
												],
												"src": "9038:424:1"
											},
											{
												"body": {
													"nativeSrc": "9641:248:1",
													"nodeType": "YulBlock",
													"src": "9641:248:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9658:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "9658:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9669:2:1",
																		"nodeType": "YulLiteral",
																		"src": "9669:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9651:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9651:6:1"
																},
																"nativeSrc": "9651:21:1",
																"nodeType": "YulFunctionCall",
																"src": "9651:21:1"
															},
															"nativeSrc": "9651:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "9651:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9692:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "9692:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9703:2:1",
																				"nodeType": "YulLiteral",
																				"src": "9703:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9688:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "9688:3:1"
																		},
																		"nativeSrc": "9688:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9688:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9708:2:1",
																		"nodeType": "YulLiteral",
																		"src": "9708:2:1",
																		"type": "",
																		"value": "58"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9681:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9681:6:1"
																},
																"nativeSrc": "9681:30:1",
																"nodeType": "YulFunctionCall",
																"src": "9681:30:1"
															},
															"nativeSrc": "9681:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "9681:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9731:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "9731:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9742:2:1",
																				"nodeType": "YulLiteral",
																				"src": "9742:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9727:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "9727:3:1"
																		},
																		"nativeSrc": "9727:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9727:18:1"
																	},
																	{
																		"hexValue": "436f6d703a3a5f7472616e73666572546f6b656e733a2063616e6e6f74207472",
																		"kind": "string",
																		"nativeSrc": "9747:34:1",
																		"nodeType": "YulLiteral",
																		"src": "9747:34:1",
																		"type": "",
																		"value": "Comp::_transferTokens: cannot tr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9720:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9720:6:1"
																},
																"nativeSrc": "9720:62:1",
																"nodeType": "YulFunctionCall",
																"src": "9720:62:1"
															},
															"nativeSrc": "9720:62:1",
															"nodeType": "YulExpressionStatement",
															"src": "9720:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9802:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "9802:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9813:2:1",
																				"nodeType": "YulLiteral",
																				"src": "9813:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9798:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "9798:3:1"
																		},
																		"nativeSrc": "9798:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9798:18:1"
																	},
																	{
																		"hexValue": "616e7366657220746f20746865207a65726f2061646472657373",
																		"kind": "string",
																		"nativeSrc": "9818:28:1",
																		"nodeType": "YulLiteral",
																		"src": "9818:28:1",
																		"type": "",
																		"value": "ansfer to the zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9791:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9791:6:1"
																},
																"nativeSrc": "9791:56:1",
																"nodeType": "YulFunctionCall",
																"src": "9791:56:1"
															},
															"nativeSrc": "9791:56:1",
															"nodeType": "YulExpressionStatement",
															"src": "9791:56:1"
														},
														{
															"nativeSrc": "9856:27:1",
															"nodeType": "YulAssignment",
															"src": "9856:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9868:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "9868:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9879:3:1",
																		"nodeType": "YulLiteral",
																		"src": "9879:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9864:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "9864:3:1"
																},
																"nativeSrc": "9864:19:1",
																"nodeType": "YulFunctionCall",
																"src": "9864:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9856:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "9856:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6dfd73e095121fac86dfcecda88ee2e5a2c4c80da47692a4520dec08a942eef4__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9467:422:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9618:9:1",
														"nodeType": "YulTypedName",
														"src": "9618:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9632:4:1",
														"nodeType": "YulTypedName",
														"src": "9632:4:1",
														"type": ""
													}
												],
												"src": "9467:422:1"
											},
											{
												"body": {
													"nativeSrc": "9941:168:1",
													"nodeType": "YulBlock",
													"src": "9941:168:1",
													"statements": [
														{
															"nativeSrc": "9951:82:1",
															"nodeType": "YulAssignment",
															"src": "9951:82:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "9966:1:1",
																				"nodeType": "YulIdentifier",
																				"src": "9966:1:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9969:26:1",
																				"nodeType": "YulLiteral",
																				"src": "9969:26:1",
																				"type": "",
																				"value": "0xffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "9962:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "9962:3:1"
																		},
																		"nativeSrc": "9962:34:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9962:34:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nativeSrc": "10002:1:1",
																				"nodeType": "YulIdentifier",
																				"src": "10002:1:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10005:26:1",
																				"nodeType": "YulLiteral",
																				"src": "10005:26:1",
																				"type": "",
																				"value": "0xffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "9998:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "9998:3:1"
																		},
																		"nativeSrc": "9998:34:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9998:34:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9958:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "9958:3:1"
																},
																"nativeSrc": "9958:75:1",
																"nodeType": "YulFunctionCall",
																"src": "9958:75:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "9951:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "9951:3:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10081:22:1",
																"nodeType": "YulBlock",
																"src": "10081:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "10083:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "10083:16:1"
																			},
																			"nativeSrc": "10083:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "10083:18:1"
																		},
																		"nativeSrc": "10083:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "10083:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "sum",
																		"nativeSrc": "10048:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "10048:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10053:26:1",
																		"nodeType": "YulLiteral",
																		"src": "10053:26:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10045:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "10045:2:1"
																},
																"nativeSrc": "10045:35:1",
																"nodeType": "YulFunctionCall",
																"src": "10045:35:1"
															},
															"nativeSrc": "10042:61:1",
															"nodeType": "YulIf",
															"src": "10042:61:1"
														}
													]
												},
												"name": "checked_add_t_uint96",
												"nativeSrc": "9894:215:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9924:1:1",
														"nodeType": "YulTypedName",
														"src": "9924:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9927:1:1",
														"nodeType": "YulTypedName",
														"src": "9927:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "9933:3:1",
														"nodeType": "YulTypedName",
														"src": "9933:3:1",
														"type": ""
													}
												],
												"src": "9894:215:1"
											},
											{
												"body": {
													"nativeSrc": "10161:120:1",
													"nodeType": "YulBlock",
													"src": "10161:120:1",
													"statements": [
														{
															"nativeSrc": "10171:50:1",
															"nodeType": "YulAssignment",
															"src": "10171:50:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "10186:1:1",
																				"nodeType": "YulIdentifier",
																				"src": "10186:1:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10189:10:1",
																				"nodeType": "YulLiteral",
																				"src": "10189:10:1",
																				"type": "",
																				"value": "0xffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "10182:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "10182:3:1"
																		},
																		"nativeSrc": "10182:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10182:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nativeSrc": "10206:1:1",
																				"nodeType": "YulIdentifier",
																				"src": "10206:1:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10209:10:1",
																				"nodeType": "YulLiteral",
																				"src": "10209:10:1",
																				"type": "",
																				"value": "0xffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "10202:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "10202:3:1"
																		},
																		"nativeSrc": "10202:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10202:18:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10178:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "10178:3:1"
																},
																"nativeSrc": "10178:43:1",
																"nodeType": "YulFunctionCall",
																"src": "10178:43:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "10171:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "10171:3:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10253:22:1",
																"nodeType": "YulBlock",
																"src": "10253:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "10255:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "10255:16:1"
																			},
																			"nativeSrc": "10255:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "10255:18:1"
																		},
																		"nativeSrc": "10255:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "10255:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "sum",
																		"nativeSrc": "10236:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "10236:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10241:10:1",
																		"nodeType": "YulLiteral",
																		"src": "10241:10:1",
																		"type": "",
																		"value": "0xffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10233:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "10233:2:1"
																},
																"nativeSrc": "10233:19:1",
																"nodeType": "YulFunctionCall",
																"src": "10233:19:1"
															},
															"nativeSrc": "10230:45:1",
															"nodeType": "YulIf",
															"src": "10230:45:1"
														}
													]
												},
												"name": "checked_add_t_uint32",
												"nativeSrc": "10114:167:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "10144:1:1",
														"nodeType": "YulTypedName",
														"src": "10144:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "10147:1:1",
														"nodeType": "YulTypedName",
														"src": "10147:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "10153:3:1",
														"nodeType": "YulTypedName",
														"src": "10153:3:1",
														"type": ""
													}
												],
												"src": "10114:167:1"
											},
											{
												"body": {
													"nativeSrc": "10413:185:1",
													"nodeType": "YulBlock",
													"src": "10413:185:1",
													"statements": [
														{
															"nativeSrc": "10423:26:1",
															"nodeType": "YulAssignment",
															"src": "10423:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10435:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "10435:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10446:2:1",
																		"nodeType": "YulLiteral",
																		"src": "10446:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10431:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "10431:3:1"
																},
																"nativeSrc": "10431:18:1",
																"nodeType": "YulFunctionCall",
																"src": "10431:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10423:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "10423:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10465:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "10465:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "10480:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "10480:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10488:26:1",
																				"nodeType": "YulLiteral",
																				"src": "10488:26:1",
																				"type": "",
																				"value": "0xffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "10476:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "10476:3:1"
																		},
																		"nativeSrc": "10476:39:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10476:39:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10458:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "10458:6:1"
																},
																"nativeSrc": "10458:58:1",
																"nodeType": "YulFunctionCall",
																"src": "10458:58:1"
															},
															"nativeSrc": "10458:58:1",
															"nodeType": "YulExpressionStatement",
															"src": "10458:58:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10536:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "10536:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10547:2:1",
																				"nodeType": "YulLiteral",
																				"src": "10547:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10532:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "10532:3:1"
																		},
																		"nativeSrc": "10532:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10532:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "10556:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "10556:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10564:26:1",
																				"nodeType": "YulLiteral",
																				"src": "10564:26:1",
																				"type": "",
																				"value": "0xffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "10552:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "10552:3:1"
																		},
																		"nativeSrc": "10552:39:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10552:39:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10525:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "10525:6:1"
																},
																"nativeSrc": "10525:67:1",
																"nodeType": "YulFunctionCall",
																"src": "10525:67:1"
															},
															"nativeSrc": "10525:67:1",
															"nodeType": "YulExpressionStatement",
															"src": "10525:67:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint96_t_uint96__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "10286:312:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10374:9:1",
														"nodeType": "YulTypedName",
														"src": "10374:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10385:6:1",
														"nodeType": "YulTypedName",
														"src": "10385:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10393:6:1",
														"nodeType": "YulTypedName",
														"src": "10393:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10404:4:1",
														"nodeType": "YulTypedName",
														"src": "10404:4:1",
														"type": ""
													}
												],
												"src": "10286:312:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        mcopy(add(headStart, 64), add(value0, 32), length)\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := 0\n        value := calldataload(add(headStart, 32))\n        value1 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let value := 0\n        value := calldataload(add(headStart, 64))\n        value2 := value\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffff))\n    }\n    function abi_encode_tuple_t_uint96__to_t_uint96__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffff))\n    }\n    function abi_decode_tuple_t_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5\n    {\n        if slt(sub(dataEnd, headStart), 192) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := 0\n        value := calldataload(add(headStart, 32))\n        value1 := value\n        let value_1 := 0\n        value_1 := calldataload(add(headStart, 64))\n        value2 := value_1\n        let value_2 := calldataload(add(headStart, 96))\n        if iszero(eq(value_2, and(value_2, 0xff))) { revert(0, 0) }\n        value3 := value_2\n        let value_3 := 0\n        value_3 := calldataload(add(headStart, 128))\n        value4 := value_3\n        let value_4 := 0\n        value_4 := calldataload(add(headStart, 160))\n        value5 := value_4\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_uint32(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, and(value, 0xffffffff))) { revert(0, 0) }\n        value1 := value\n    }\n    function abi_encode_tuple_t_uint32_t_uint96__to_t_uint32_t_uint96__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffff))\n        mstore(add(headStart, 32), and(value1, 0xffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_uint96__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_stringliteral_49387db7fef935f0f28be8b61df0527ef3c11db5acad132a74e4fb5d480e55d0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 39)\n        mstore(add(headStart, 64), \"Comp::getPriorVotes: not yet det\")\n        mstore(add(headStart, 96), \"ermined\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint32(x, y) -> diff\n    {\n        diff := sub(and(x, 0xffffffff), and(y, 0xffffffff))\n        if gt(diff, 0xffffffff) { panic_error_0x11() }\n    }\n    function checked_div_t_uint32(x, y) -> r\n    {\n        let y_1 := and(y, 0xffffffff)\n        if iszero(y_1)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(and(x, 0xffffffff), y_1)\n    }\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), and(value3, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_bytes32_t_address_t_uint256_t_uint256__to_t_bytes32_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541_t_bytes32_t_bytes32__to_t_string_memory_ptr_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        mstore(pos, shl(240, 6401))\n        mstore(add(pos, 2), value0)\n        mstore(add(pos, 34), value1)\n        end := add(pos, 66)\n    }\n    function abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, 0xff))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_encode_tuple_t_stringliteral_2af9d25b44c3e789cf7d12e941fc7ef1e32cecdd98da61996de7571027751bd3__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Comp::delegateBySig: invalid sig\")\n        mstore(add(headStart, 96), \"nature\")\n        tail := add(headStart, 128)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_stringliteral_646cb63637df51b5cf3e35b8d418574ca2fa5dde981ba9f8f5779cfcbbc8a355__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"Comp::delegateBySig: invalid non\")\n        mstore(add(headStart, 96), \"ce\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_2e8a87756e5afc73b82eff32f16bb6b10740f4f70e3e129eab06194e30ad3059__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Comp::delegateBySig: signature e\")\n        mstore(add(headStart, 96), \"xpired\")\n        tail := add(headStart, 128)\n    }\n    function checked_sub_t_uint96(x, y) -> diff\n    {\n        diff := sub(and(x, 0xffffffffffffffffffffffff), and(y, 0xffffffffffffffffffffffff))\n        if gt(diff, 0xffffffffffffffffffffffff) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_a1f9ee8b9464145aa6c6c80f5dd3de0ed75b63050c7ed5dda64f4dfa66ae889e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 60)\n        mstore(add(headStart, 64), \"Comp::_transferTokens: cannot tr\")\n        mstore(add(headStart, 96), \"ansfer from the zero address\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_6dfd73e095121fac86dfcecda88ee2e5a2c4c80da47692a4520dec08a942eef4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 58)\n        mstore(add(headStart, 64), \"Comp::_transferTokens: cannot tr\")\n        mstore(add(headStart, 96), \"ansfer to the zero address\")\n        tail := add(headStart, 128)\n    }\n    function checked_add_t_uint96(x, y) -> sum\n    {\n        sum := add(and(x, 0xffffffffffffffffffffffff), and(y, 0xffffffffffffffffffffffff))\n        if gt(sum, 0xffffffffffffffffffffffff) { panic_error_0x11() }\n    }\n    function checked_add_t_uint32(x, y) -> sum\n    {\n        sum := add(and(x, 0xffffffff), and(y, 0xffffffff))\n        if gt(sum, 0xffffffff) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_uint96_t_uint96__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffff))\n        mstore(add(headStart, 32), and(value1, 0xffffffffffffffffffffffff))\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x11C JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xA9 JUMPI DUP1 PUSH4 0xB4B5EA57 GT PUSH2 0x6E JUMPI DUP1 PUSH4 0xB4B5EA57 EQ PUSH2 0x334 JUMPI DUP1 PUSH4 0xC3CDA520 EQ PUSH2 0x347 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x35A JUMPI DUP1 PUSH4 0xE7A324DC EQ PUSH2 0x399 JUMPI DUP1 PUSH4 0xF1127ED8 EQ PUSH2 0x3C0 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x283 JUMPI DUP1 PUSH4 0x782D6FE1 EQ PUSH2 0x2B4 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x2DF JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2FE JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x321 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xEF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1C7 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1DA JUMPI DUP1 PUSH4 0x587CDE1E EQ PUSH2 0x1F4 JUMPI DUP1 PUSH4 0x5C19A95C EQ PUSH2 0x234 JUMPI DUP1 PUSH4 0x6FCFFF45 EQ PUSH2 0x249 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x120 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x15D JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x180 JUMPI DUP1 PUSH4 0x20606B70 EQ PUSH2 0x1A0 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x147 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x8 DUP2 MSTORE PUSH1 0x20 ADD PUSH8 0x10DBDB5C1BDD5B99 PUSH1 0xC2 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x154 SWAP2 SWAP1 PUSH2 0x1392 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x170 PUSH2 0x16B CALLDATASIZE PUSH1 0x4 PUSH2 0x13E2 JUMP JUMPDEST PUSH2 0x426 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x154 JUMP JUMPDEST PUSH2 0x192 PUSH11 0x84595161401484A000000 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x154 JUMP JUMPDEST PUSH2 0x192 PUSH32 0x8CAD95687BA82C2CE50E74F7B754645E5117C3A5BEC8151C0726D5857980A866 DUP2 JUMP JUMPDEST PUSH2 0x170 PUSH2 0x1D5 CALLDATASIZE PUSH1 0x4 PUSH2 0x140A JUMP JUMPDEST PUSH2 0x4E1 JUMP JUMPDEST PUSH2 0x1E2 PUSH1 0x12 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x154 JUMP JUMPDEST PUSH2 0x21C PUSH2 0x202 CALLDATASIZE PUSH1 0x4 PUSH2 0x1444 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x154 JUMP JUMPDEST PUSH2 0x247 PUSH2 0x242 CALLDATASIZE PUSH1 0x4 PUSH2 0x1444 JUMP JUMPDEST PUSH2 0x61F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x26E PUSH2 0x257 CALLDATASIZE PUSH1 0x4 PUSH2 0x1444 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH4 0xFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x154 JUMP JUMPDEST PUSH2 0x192 PUSH2 0x291 CALLDATASIZE PUSH1 0x4 PUSH2 0x1444 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x2C7 PUSH2 0x2C2 CALLDATASIZE PUSH1 0x4 PUSH2 0x13E2 JUMP JUMPDEST PUSH2 0x62C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x154 JUMP JUMPDEST PUSH2 0x192 PUSH2 0x2ED CALLDATASIZE PUSH1 0x4 PUSH2 0x1444 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x147 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH4 0x434F4D5 PUSH1 0xE4 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH2 0x170 PUSH2 0x32F CALLDATASIZE PUSH1 0x4 PUSH2 0x13E2 JUMP JUMPDEST PUSH2 0x8AE JUMP JUMPDEST PUSH2 0x2C7 PUSH2 0x342 CALLDATASIZE PUSH1 0x4 PUSH2 0x1444 JUMP JUMPDEST PUSH2 0x8E9 JUMP JUMPDEST PUSH2 0x247 PUSH2 0x355 CALLDATASIZE PUSH1 0x4 PUSH2 0x145D JUMP JUMPDEST PUSH2 0x963 JUMP JUMPDEST PUSH2 0x192 PUSH2 0x368 CALLDATASIZE PUSH1 0x4 PUSH2 0x14B8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x192 PUSH32 0xE48329057BFD03D55E49B547132E39CFFD9C1820AD7B9D4C5307691425D15ADF DUP2 JUMP JUMPDEST PUSH2 0x402 PUSH2 0x3CE CALLDATASIZE PUSH1 0x4 PUSH2 0x14E9 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD PUSH4 0xFFFFFFFF DUP2 AND SWAP1 PUSH1 0x1 PUSH1 0x20 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND DUP3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0xFFFFFFFF SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP1 SWAP2 AND PUSH1 0x20 DUP4 ADD MSTORE ADD PUSH2 0x154 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 NOT DUP4 SUB PUSH2 0x43E JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH2 0x463 JUMP JUMPDEST PUSH2 0x460 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1632 PUSH1 0x25 SWAP2 CODECOPY PUSH2 0xC4A JUMP JUMPDEST SWAP1 POP JUMPDEST CALLER PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP8 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD SWAP1 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE DUP2 DUP5 KECCAK256 SLOAD DUP3 MLOAD PUSH1 0x60 DUP2 ADD SWAP1 SWAP4 MSTORE PUSH1 0x25 DUP1 DUP5 MSTORE SWAP2 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP1 SWAP2 AND SWAP3 DUP6 SWAP3 PUSH2 0x536 SWAP3 DUP9 SWAP3 SWAP2 SWAP1 PUSH2 0x1632 SWAP1 DUP4 ADD CODECOPY PUSH2 0xC4A JUMP JUMPDEST SWAP1 POP DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO DUP1 ISZERO PUSH2 0x563 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP3 DUP2 AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x607 JUMPI PUSH0 PUSH2 0x58C DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3D DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1709 PUSH1 0x3D SWAP2 CODECOPY PUSH2 0xC78 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP11 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP8 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE SWAP4 SWAP5 POP SWAP2 SWAP3 SWAP1 SWAP2 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMPDEST PUSH2 0x612 DUP8 DUP8 DUP4 PUSH2 0xCC1 JUMP JUMPDEST POP PUSH1 0x1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x629 CALLER DUP3 PUSH2 0xF0E JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 NUMBER DUP3 LT PUSH2 0x691 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6D703A3A6765745072696F72566F7465733A206E6F742079657420646574 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x195C9B5A5B9959 PUSH1 0xCA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH4 0xFFFFFFFF AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x6C0 JUMPI PUSH0 SWAP2 POP POP PUSH2 0x4DB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP5 SWAP2 PUSH2 0x6E4 PUSH1 0x1 DUP6 PUSH2 0x153A JUMP JUMPDEST PUSH4 0xFFFFFFFF SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD PUSH0 KECCAK256 SLOAD AND GT PUSH2 0x754 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0x725 PUSH1 0x1 DUP5 PUSH2 0x153A JUMP JUMPDEST PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH0 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x20 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND SWAP2 POP PUSH2 0x4DB SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP4 DUP1 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH4 0xFFFFFFFF AND DUP4 LT ISZERO PUSH2 0x78D JUMPI PUSH0 SWAP2 POP POP PUSH2 0x4DB JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x79A PUSH1 0x1 DUP5 PUSH2 0x153A JUMP JUMPDEST SWAP1 POP JUMPDEST DUP2 PUSH4 0xFFFFFFFF AND DUP2 PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x86A JUMPI PUSH0 PUSH1 0x2 PUSH2 0x7BE DUP5 DUP5 PUSH2 0x153A JUMP JUMPDEST PUSH2 0x7C8 SWAP2 SWAP1 PUSH2 0x1556 JUMP JUMPDEST PUSH2 0x7D2 SWAP1 DUP4 PUSH2 0x153A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH4 0xFFFFFFFF DUP6 DUP2 AND DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP2 MLOAD DUP1 DUP4 ADD SWAP1 SWAP3 MSTORE SLOAD SWAP3 DUP4 AND DUP1 DUP3 MSTORE PUSH1 0x1 PUSH1 0x20 SHL SWAP1 SWAP4 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP2 SWAP3 POP DUP8 SWAP1 SUB PUSH2 0x83E JUMPI PUSH1 0x20 ADD MLOAD SWAP5 POP PUSH2 0x4DB SWAP4 POP POP POP POP JUMP JUMPDEST DUP1 MLOAD PUSH4 0xFFFFFFFF AND DUP8 GT ISZERO PUSH2 0x855 JUMPI DUP2 SWAP4 POP PUSH2 0x863 JUMP JUMPDEST PUSH2 0x860 PUSH1 0x1 DUP4 PUSH2 0x153A JUMP JUMPDEST SWAP3 POP JUMPDEST POP POP PUSH2 0x79D JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH4 0xFFFFFFFF SWAP1 SWAP5 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0x1 PUSH1 0x20 SHL SWAP1 SWAP2 DIV AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x8D2 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1657 PUSH1 0x26 SWAP2 CODECOPY PUSH2 0xC4A JUMP JUMPDEST SWAP1 POP PUSH2 0x8DF CALLER DUP6 DUP4 PUSH2 0xCC1 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH4 0xFFFFFFFF AND DUP1 PUSH2 0x912 JUMPI PUSH0 PUSH2 0x95C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0x935 PUSH1 0x1 DUP5 PUSH2 0x153A JUMP JUMPDEST PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH0 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x20 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0x8 DUP2 MSTORE PUSH8 0x10DBDB5C1BDD5B99 PUSH1 0xC2 SHL PUSH1 0x20 SWAP2 DUP3 ADD MSTORE DUP2 MLOAD PUSH32 0x8CAD95687BA82C2CE50E74F7B754645E5117C3A5BEC8151C0726D5857980A866 DUP2 DUP4 ADD MSTORE PUSH32 0x561CA898CCE9F021C15A441EF41899706E923541CEE724530075D1A1144761C7 DUP2 DUP5 ADD MSTORE CHAINID PUSH1 0x60 DUP3 ADD MSTORE ADDRESS PUSH1 0x80 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP4 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xA0 DUP3 ADD DUP5 MSTORE DUP1 MLOAD SWAP1 DUP4 ADD KECCAK256 PUSH32 0xE48329057BFD03D55E49B547132E39CFFD9C1820AD7B9D4C5307691425D15ADF PUSH1 0xC0 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0xE0 DUP4 ADD MSTORE PUSH2 0x100 DUP3 ADD DUP10 SWAP1 MSTORE PUSH2 0x120 DUP1 DUP4 ADD DUP10 SWAP1 MSTORE DUP5 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH2 0x140 DUP4 ADD SWAP1 SWAP5 MSTORE DUP4 MLOAD SWAP4 SWAP1 SWAP3 ADD SWAP3 SWAP1 SWAP3 KECCAK256 PUSH2 0x1901 PUSH1 0xF0 SHL PUSH2 0x160 DUP5 ADD MSTORE PUSH2 0x162 DUP4 ADD DUP3 SWAP1 MSTORE PUSH2 0x182 DUP4 ADD DUP2 SWAP1 MSTORE SWAP1 SWAP2 PUSH0 SWAP1 PUSH2 0x1A2 ADD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE DUP3 DUP3 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 PUSH0 DUP1 DUP6 MSTORE SWAP2 DUP5 ADD DUP1 DUP5 MSTORE DUP2 SWAP1 MSTORE PUSH1 0xFF DUP11 AND SWAP3 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP4 ADD DUP9 SWAP1 MSTORE PUSH1 0x80 DUP4 ADD DUP8 SWAP1 MSTORE SWAP1 SWAP3 POP SWAP1 PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xAE2 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xB54 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6D703A3A64656C656761746542795369673A20696E76616C696420736967 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x6E6174757265 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x688 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP2 PUSH2 0xB77 DUP4 PUSH2 0x1589 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE DUP10 EQ PUSH2 0xBD4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6D703A3A64656C656761746542795369673A20696E76616C6964206E6F6E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6365 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x688 JUMP JUMPDEST DUP8 TIMESTAMP GT ISZERO PUSH2 0xC33 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6D703A3A64656C656761746542795369673A207369676E61747572652065 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1E1C1A5C9959 PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x688 JUMP JUMPDEST PUSH2 0xC3D DUP2 DUP12 PUSH2 0xF0E JUMP JUMPDEST POP POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x1 PUSH1 0x60 SHL DUP5 LT PUSH2 0xC70 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x688 SWAP2 SWAP1 PUSH2 0x1392 JUMP JUMPDEST POP SWAP2 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND GT ISZERO DUP3 SWAP1 PUSH2 0xCAE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x688 SWAP2 SWAP1 PUSH2 0x1392 JUMP JUMPDEST POP PUSH2 0xCB9 DUP4 DUP6 PUSH2 0x15A1 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xD3D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6D703A3A5F7472616E73666572546F6B656E733A2063616E6E6F74207472 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x616E736665722066726F6D20746865207A65726F206164647265737300000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x688 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xDB9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6D703A3A5F7472616E73666572546F6B656E733A2063616E6E6F74207472 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x616E7366657220746F20746865207A65726F2061646472657373000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x688 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SLOAD DUP3 MLOAD PUSH1 0x60 DUP2 ADD SWAP1 SWAP4 MSTORE PUSH1 0x36 DUP1 DUP5 MSTORE PUSH2 0xE03 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP1 SWAP3 AND SWAP3 DUP6 SWAP3 SWAP2 SWAP1 PUSH2 0x15FC SWAP1 DUP4 ADD CODECOPY PUSH2 0xC78 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP7 DUP8 AND OR SWAP1 SSTORE SWAP3 DUP7 AND DUP3 MSTORE SWAP1 DUP3 SWAP1 KECCAK256 SLOAD DUP3 MLOAD PUSH1 0x60 DUP2 ADD SWAP1 SWAP4 MSTORE PUSH1 0x30 DUP1 DUP5 MSTORE PUSH2 0xE6A SWAP5 SWAP2 SWAP1 SWAP2 AND SWAP3 DUP6 SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0x16D9 SWAP1 DUP4 ADD CODECOPY PUSH2 0xF97 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP7 DUP8 AND OR SWAP1 SSTORE SWAP1 MLOAD SWAP4 DUP6 AND DUP5 MSTORE SWAP1 SWAP3 SWAP2 DUP7 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SLOAD DUP6 DUP5 AND DUP4 MSTORE SWAP2 KECCAK256 SLOAD PUSH2 0xF09 SWAP3 SWAP2 DUP3 AND SWAP2 AND DUP4 PUSH2 0xFE3 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP5 MSTORE DUP3 DUP7 KECCAK256 SLOAD SWAP5 SWAP1 SWAP4 MSTORE DUP8 DUP8 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP5 AND DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD SWAP2 SWAP1 SWAP6 AND SWAP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP1 SWAP3 AND SWAP4 SWAP2 SWAP3 DUP6 SWAP3 SWAP2 PUSH32 0x3134E8A2E6D97E929A7E54011EA5485D7D196DD5F0BA4D4EF95803E8E3FC257F SWAP2 SWAP1 LOG4 PUSH2 0xF91 DUP3 DUP5 DUP4 PUSH2 0xFE3 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xFA3 DUP5 DUP7 PUSH2 0x15C0 JUMP JUMPDEST SWAP1 POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND LT ISZERO DUP4 SWAP1 PUSH2 0xFDA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x688 SWAP2 SWAP1 PUSH2 0x1392 JUMP JUMPDEST POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO DUP1 ISZERO PUSH2 0x100D JUMPI POP PUSH0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND GT JUMPDEST ISZERO PUSH2 0xF09 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO PUSH2 0x10CD JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH4 0xFFFFFFFF AND SWAP1 DUP2 PUSH2 0x104B JUMPI PUSH0 PUSH2 0x1095 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0x106E PUSH1 0x1 DUP6 PUSH2 0x153A JUMP JUMPDEST PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH0 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x20 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND JUMPDEST SWAP1 POP PUSH0 PUSH2 0x10BB DUP3 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x16B1 PUSH1 0x28 SWAP2 CODECOPY PUSH2 0xC78 JUMP JUMPDEST SWAP1 POP PUSH2 0x10C9 DUP7 DUP5 DUP5 DUP5 PUSH2 0x1180 JUMP JUMPDEST POP POP POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO PUSH2 0xF09 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH4 0xFFFFFFFF AND SWAP1 DUP2 PUSH2 0x1106 JUMPI PUSH0 PUSH2 0x1150 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0x1129 PUSH1 0x1 DUP6 PUSH2 0x153A JUMP JUMPDEST PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH0 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x20 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND JUMPDEST SWAP1 POP PUSH0 PUSH2 0x1176 DUP3 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1746 PUSH1 0x27 SWAP2 CODECOPY PUSH2 0xF97 JUMP JUMPDEST SWAP1 POP PUSH2 0xC42 DUP6 DUP5 DUP5 DUP5 JUMPDEST PUSH0 PUSH2 0x11A3 NUMBER PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x34 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x167D PUSH1 0x34 SWAP2 CODECOPY PUSH2 0x1370 JUMP JUMPDEST SWAP1 POP PUSH0 DUP5 PUSH4 0xFFFFFFFF AND GT DUP1 ISZERO PUSH2 0x11FA JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH4 0xFFFFFFFF DUP4 AND SWAP2 PUSH2 0x11DF PUSH1 0x1 DUP9 PUSH2 0x153A JUMP JUMPDEST PUSH4 0xFFFFFFFF SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD PUSH0 KECCAK256 SLOAD AND EQ JUMPDEST ISZERO PUSH2 0x126C JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP4 SWAP2 PUSH2 0x1223 PUSH1 0x1 DUP9 PUSH2 0x153A JUMP JUMPDEST PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH0 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP3 SWAP1 SWAP3 AND PUSH1 0x1 PUSH1 0x20 SHL MUL PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFF00000000 NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x131B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH4 0xFFFFFFFF DUP1 DUP5 AND DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP1 DUP7 AND PUSH1 0x20 DUP1 DUP6 ADD SWAP2 DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 DUP3 MSTORE DUP7 DUP2 KECCAK256 DUP12 DUP7 AND DUP3 MSTORE SWAP1 SWAP2 MSTORE SWAP5 SWAP1 SWAP5 KECCAK256 SWAP3 MLOAD DUP4 SLOAD SWAP5 MLOAD SWAP1 SWAP2 AND PUSH1 0x1 PUSH1 0x20 SHL MUL PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT SWAP1 SWAP5 AND SWAP2 AND OR SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x12EB DUP5 PUSH1 0x1 PUSH2 0x15DF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH4 0xFFFFFFFF NOT AND PUSH4 0xFFFFFFFF SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP1 DUP7 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP2 PUSH32 0xDEC2BACDD2F05B59DE34DA9B523DFF8BE42E5E38E818C82FDB0BAE774387A724 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x1 PUSH1 0x20 SHL DUP5 LT PUSH2 0xC70 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x688 SWAP2 SWAP1 JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE DUP1 PUSH1 0x20 DUP6 ADD PUSH1 0x40 DUP6 ADD MCOPY PUSH0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x13DD JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x13F3 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x13FC DUP4 PUSH2 0x13C7 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x141C JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x1425 DUP5 PUSH2 0x13C7 JUMP JUMPDEST SWAP3 POP PUSH2 0x1433 PUSH1 0x20 DUP6 ADD PUSH2 0x13C7 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1454 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x95C DUP3 PUSH2 0x13C7 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x1472 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x147B DUP8 PUSH2 0x13C7 JUMP JUMPDEST SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x149E JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP SWAP3 SWAP6 PUSH1 0x80 DUP2 ADD CALLDATALOAD SWAP5 PUSH1 0xA0 SWAP1 SWAP2 ADD CALLDATALOAD SWAP4 POP SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x14C9 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x14D2 DUP4 PUSH2 0x13C7 JUMP JUMPDEST SWAP2 POP PUSH2 0x14E0 PUSH1 0x20 DUP5 ADD PUSH2 0x13C7 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x14FA JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x1503 DUP4 PUSH2 0x13C7 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH4 0xFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x151B JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH4 0xFFFFFFFF DUP3 DUP2 AND DUP3 DUP3 AND SUB SWAP1 DUP2 GT ISZERO PUSH2 0x4DB JUMPI PUSH2 0x4DB PUSH2 0x1526 JUMP JUMPDEST PUSH0 PUSH4 0xFFFFFFFF DUP4 AND DUP1 PUSH2 0x1577 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0xFFFFFFFF DUP5 AND DIV SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 DUP3 ADD PUSH2 0x159A JUMPI PUSH2 0x159A PUSH2 0x1526 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP3 DUP2 AND DUP3 DUP3 AND SUB SWAP1 DUP2 GT ISZERO PUSH2 0x4DB JUMPI PUSH2 0x4DB PUSH2 0x1526 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP2 DUP2 AND DUP4 DUP3 AND ADD SWAP1 DUP2 GT ISZERO PUSH2 0x4DB JUMPI PUSH2 0x4DB PUSH2 0x1526 JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP2 DUP2 AND DUP4 DUP3 AND ADD SWAP1 DUP2 GT ISZERO PUSH2 0x4DB JUMPI PUSH2 0x4DB PUSH2 0x1526 JUMP INVALID NUMBER PUSH16 0x6D703A3A5F7472616E73666572546F6B PUSH6 0x6E733A207472 PUSH2 0x6E73 PUSH7 0x657220616D6F75 PUSH15 0x7420657863656564732062616C616E PUSH4 0x65436F6D PUSH17 0x3A3A617070726F76653A20616D6F756E74 KECCAK256 PUSH6 0x786365656473 KECCAK256 CODECOPY CALLDATASIZE KECCAK256 PUSH3 0x697473 NUMBER PUSH16 0x6D703A3A7472616E736665723A20616D PUSH16 0x756E7420657863656564732039362062 PUSH10 0x7473436F6D703A3A5F77 PUSH19 0x697465436865636B706F696E743A20626C6F63 PUSH12 0x206E756D6265722065786365 PUSH6 0x647320333220 PUSH3 0x697473 NUMBER PUSH16 0x6D703A3A5F6D6F7665566F7465733A20 PUSH23 0x6F746520616D6F756E7420756E646572666C6F7773436F PUSH14 0x703A3A5F7472616E73666572546F PUSH12 0x656E733A207472616E736665 PUSH19 0x20616D6F756E74206F766572666C6F7773436F PUSH14 0x703A3A7472616E7366657246726F PUSH14 0x3A207472616E7366657220616D6F PUSH22 0x6E742065786365656473207370656E64657220616C6C PUSH16 0x77616E6365436F6D703A3A5F6D6F7665 JUMP PUSH16 0x7465733A20766F746520616D6F756E74 KECCAK256 PUSH16 0x766572666C6F7773A264697066735822 SLT KECCAK256 0xC4 SWAP1 0xD2 PUSH28 0xC19A0F3A562FCCEA3B17408C5B6CFD2015C4CFCE5B8FFA444DF05BD PUSH5 0x736F6C6343 STOP ADDMOD SHL STOP CALLER ",
							"sourceMap": "1336:12565:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1405:40;;;;;;;;;;;;;;;-1:-1:-1;;;1405:40:0;;;;;;;;;;;;:::i;:::-;;;;;;;;4867:419;;;;;;:::i;:::-;;:::i;:::-;;;1085:14:1;;1078:22;1060:41;;1048:2;1033:18;4867:419:0;920:187:1;1697:46:0;;1732:11;1697:46;;;;;1258:25:1;;;1246:2;1231:18;1697:46:0;1112:177:1;2603:122:0;;2645:80;2603:122;;6379:664;;;;;;:::i;:::-;;:::i;1601:35::-;;1634:2;1601:35;;;;;2027:4:1;2015:17;;;1997:36;;1985:2;1970:18;1601:35:0;1855:184:1;2068:45:0;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;2068:45:0;;;;;;-1:-1:-1;;;;;2399:32:1;;;2381:51;;2369:2;2354:18;2068:45:0;2235:203:1;7185:100:0;;;;;;:::i;:::-;;:::i;:::-;;2484:49;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2617:10:1;2605:23;;;2587:42;;2575:2;2560:18;2484:49:0;2443:192:1;5482:106:0;;;;;;:::i;:::-;-1:-1:-1;;;;;5564:17:0;5541:4;5564:17;;;:8;:17;;;;;;-1:-1:-1;;;;;5564:17:0;;5482:106;9335:1186;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;2802:39:1;;;2784:58;;2772:2;2757:18;9335:1186:0;2640:208:1;3011:39:0;;;;;;:::i;:::-;;;;;;;;;;;;;;1503:38;;;;;;;;;;;;;;;-1:-1:-1;;;1503:38:0;;;;;5844:234;;;;;;:::i;:::-;;:::i;8694:219::-;;;;;;:::i;:::-;;:::i;7708:792::-;;;;;;:::i;:::-;;:::i;4265:134::-;;;;;;:::i;:::-;-1:-1:-1;;;;;4364:19:0;;;4341:4;4364:19;;;;;;;;;;;:28;;;;;;;;;;;;-1:-1:-1;;;;;4364:28:0;;4265:134;2816:117;;2862:71;2816:117;;2348:70;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2348:70:0;;-1:-1:-1;;;;;2348:70:0;;;;;;;4506:10:1;4494:23;;;4476:42;;-1:-1:-1;;;;;4554:39:1;;;4549:2;4534:18;;4527:67;4449:18;2348:70:0;4306:294:1;4867:419:0;4935:4;4951:13;-1:-1:-1;;4978:9:0;:27;4974:181;;-1:-1:-1;;;;;;4974:181:0;;;5086:58;5093:9;5086:58;;;;;;;;;;;;;;;;;:6;:58::i;:::-;5077:67;;4974:181;5176:10;5165;:22;;;;;;;;;;;-1:-1:-1;;;;;5165:31:0;;;;;;;;;;;;:40;;-1:-1:-1;;;;;;5165:40:0;-1:-1:-1;;;;;5165:40:0;;;;;;;;5221:37;;2784:58:1;;;5165:31:0;;5176:10;5221:37;;2757:18:1;5221:37:0;;;;;;;5275:4;5268:11;;;4867:419;;;;;:::o;6379:664::-;-1:-1:-1;;;;;6541:15:0;;6461:4;6541:15;;;;;;;;;;;6495:10;6541:24;;;;;;;;;;6591:58;;;;;;;;;;;;6495:10;;-1:-1:-1;;;;;6541:24:0;;;;6461:4;;6591:58;;6598:9;;6591:58;;;;;;;:6;:58::i;:::-;6575:74;;6675:3;-1:-1:-1;;;;;6664:14:0;:7;-1:-1:-1;;;;;6664:14:0;;;:54;;;;-1:-1:-1;;;;;;6682:36:0;;;;;6664:54;6660:312;;;6734:19;6756:96;6762:16;6780:6;6756:96;;;;;;;;;;;;;;;;;:5;:96::i;:::-;-1:-1:-1;;;;;6866:15:0;;;:10;:15;;;;;;;;;;;:24;;;;;;;;;;;;;:39;;-1:-1:-1;;;;;;6866:39:0;-1:-1:-1;;;;;6866:39:0;;;;;;;;6925:36;;2784:58:1;;;6866:39:0;;-1:-1:-1;6866:24:0;;:15;;6925:36;;2757:18:1;6925:36:0;;;;;;;6720:252;6660:312;6982:33;6998:3;7003;7008:6;6982:15;:33::i;:::-;-1:-1:-1;7032:4:0;;6379:664;-1:-1:-1;;;;;;6379:664:0:o;7185:100::-;7246:32;7256:10;7268:9;7246;:32::i;:::-;7185:100;:::o;9335:1186::-;9414:6;9454:12;9440:11;:26;9432:78;;;;-1:-1:-1;;;9432:78:0;;5021:2:1;9432:78:0;;;5003:21:1;5060:2;5040:18;;;5033:30;5099:34;5079:18;;;5072:62;-1:-1:-1;;;5150:18:1;;;5143:37;5197:19;;9432:78:0;;;;;;;;;-1:-1:-1;;;;;9543:23:0;;9521:19;9543:23;;;:14;:23;;;;;;;;;9580:17;;;9576:56;;9620:1;9613:8;;;;;9576:56;-1:-1:-1;;;;;9689:20:0;;;;;;:11;:20;;;;;9741:11;;9710:16;9725:1;9710:12;:16;:::i;:::-;9689:38;;;;;;;;;;;;;;;-1:-1:-1;9689:38:0;:48;;:63;9685:145;;-1:-1:-1;;;;;9775:20:0;;;;;;:11;:20;;;;;;9796:16;9811:1;9796:12;:16;:::i;:::-;9775:38;;;;;;;;;;;;;-1:-1:-1;9775:38:0;:44;-1:-1:-1;;;9775:44:0;;-1:-1:-1;;;;;9775:44:0;;-1:-1:-1;9768:51:0;;-1:-1:-1;9768:51:0;9685:145;-1:-1:-1;;;;;9888:20:0;;;;;;:11;:20;;;;;;;;:23;;;;;;;;:33;:23;:33;:47;-1:-1:-1;9884:86:0;;;9958:1;9951:8;;;;;9884:86;9980:12;;10021:16;10036:1;10021:12;:16;:::i;:::-;10006:31;;10047:418;10062:5;10054:13;;:5;:13;;;10047:418;;;10083:13;10125:1;10108:13;10116:5;10108;:13;:::i;:::-;10107:19;;;;:::i;:::-;10099:27;;:5;:27;:::i;:::-;-1:-1:-1;;;;;10190:20:0;;10167;10190;;;:11;:20;;;;;;;;:28;;;;;;;;;;;;;10167:51;;;;;;;;;;;;;;;-1:-1:-1;;;10167:51:0;;;-1:-1:-1;;;;;10167:51:0;;;;;;;;10190:28;;-1:-1:-1;10236:27:0;;;10232:223;;10290:8;;;;-1:-1:-1;10283:15:0;;-1:-1:-1;;;;10283:15:0;10232:223;10323:12;;:26;;;-1:-1:-1;10319:136:0;;;10377:6;10369:14;;10319:136;;;10430:10;10439:1;10430:6;:10;:::i;:::-;10422:18;;10319:136;10069:396;;10047:418;;;-1:-1:-1;;;;;;10481:20:0;;;;;;:11;:20;;;;;;;;:27;;;;;;;;;;:33;-1:-1:-1;;;;;;;;10481:33:0;;;;;-1:-1:-1;;9335:1186:0;;;;:::o;5844:234::-;5909:4;5925:13;5941:59;5948:9;5941:59;;;;;;;;;;;;;;;;;:6;:59::i;:::-;5925:75;;6010:40;6026:10;6038:3;6043:6;6010:15;:40::i;:::-;-1:-1:-1;6067:4:0;;5844:234;-1:-1:-1;;;5844:234:0:o;8694:219::-;-1:-1:-1;;;;;8799:23:0;;8759:6;8799:23;;;:14;:23;;;;;;;;8839:16;:67;;8905:1;8839:67;;;-1:-1:-1;;;;;8858:20:0;;;;;;:11;:20;;;;;;8879:16;8894:1;8879:12;:16;:::i;:::-;8858:38;;;;;;;;;;;;;-1:-1:-1;8858:38:0;:44;-1:-1:-1;;;8858:44:0;;-1:-1:-1;;;;;8858:44:0;8839:67;8832:74;8694:219;-1:-1:-1;;;8694:219:0:o;7708:792::-;7903:4;;;;;;;;;;;-1:-1:-1;;;7903:4:0;;;;;7859:80;;2645;7859;;;6045:25:1;7887:22:0;6086:18:1;;;6079:34;13858:9:0;6129:18:1;;;6122:34;7933:4:0;6172:18:1;;;;6165:60;;;;7859:80:0;;;;;;;;;;6017:19:1;;;7859:80:0;;7849:91;;;;;;2862:71;7981:57;;;6467:25:1;-1:-1:-1;;;;;6528:32:1;;6508:18;;;6501:60;6577:18;;;6570:34;;;6620:18;;;;6613:34;;;7981:57:0;;;;;;;;;;6439:19:1;;;7981:57:0;;;7971:68;;;;;;;;;;-1:-1:-1;;;8076:57:0;;;6916:27:1;6959:11;;;6952:27;;;6995:12;;;6988:28;;;7849:91:0;;-1:-1:-1;;7032:12:1;;8076:57:0;;;-1:-1:-1;;8076:57:0;;;;;;;;;8066:68;;8076:57;8066:68;;;;8144:17;8164:26;;;;;;;;;7282:25:1;;;7355:4;7343:17;;7323:18;;;7316:45;;;;7377:18;;;7370:34;;;7420:18;;;7413:34;;;8066:68:0;;-1:-1:-1;8144:17:0;8164:26;;7254:19:1;;8164:26:0;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8164:26:0;;-1:-1:-1;;8164:26:0;;;-1:-1:-1;;;;;;;8208:23:0;;8200:74;;;;-1:-1:-1;;;8200:74:0;;7660:2:1;8200:74:0;;;7642:21:1;7699:2;7679:18;;;7672:30;7738:34;7718:18;;;7711:62;-1:-1:-1;;;7789:18:1;;;7782:36;7835:19;;8200:74:0;7458:402:1;8200:74:0;-1:-1:-1;;;;;8301:17:0;;;;;;:6;:17;;;;;:19;;;;;;:::i;:::-;;;;;8292:5;:28;8284:75;;;;-1:-1:-1;;;8284:75:0;;8207:2:1;8284:75:0;;;8189:21:1;8246:2;8226:18;;;8219:30;8285:34;8265:18;;;8258:62;-1:-1:-1;;;8336:18:1;;;8329:32;8378:19;;8284:75:0;8005:398:1;8284:75:0;8396:6;8377:15;:25;;8369:76;;;;-1:-1:-1;;;8369:76:0;;8610:2:1;8369:76:0;;;8592:21:1;8649:2;8629:18;;;8622:30;8688:34;8668:18;;;8661:62;-1:-1:-1;;;8739:18:1;;;8732:36;8785:19;;8369:76:0;8408:402:1;8369:76:0;8462:31;8472:9;8483;8462;:31::i;:::-;8455:38;;;;7708:792;;;;;;;:::o;13228:158::-;13303:6;13340:12;-1:-1:-1;;;13329:9:0;;13321:32;;;;-1:-1:-1;;;13321:32:0;;;;;;;;:::i;:::-;-1:-1:-1;13377:1:0;;13228:158;-1:-1:-1;;13228:158:0:o;13582:162::-;13668:6;13699:1;-1:-1:-1;;;;;13694:6:0;:1;-1:-1:-1;;;;;13694:6:0;;;13702:12;13686:29;;;;;-1:-1:-1;;;13686:29:0;;;;;;;;:::i;:::-;-1:-1:-1;13732:5:0;13736:1;13732;:5;:::i;:::-;13725:12;13582:162;-1:-1:-1;;;;13582:162:0:o;10900:605::-;-1:-1:-1;;;;;10993:17:0;;10985:90;;;;-1:-1:-1;;;10985:90:0;;9240:2:1;10985:90:0;;;9222:21:1;9279:2;9259:18;;;9252:30;9318:34;9298:18;;;9291:62;9389:30;9369:18;;;9362:58;9437:19;;10985:90:0;9038:424:1;10985:90:0;-1:-1:-1;;;;;11093:17:0;;11085:88;;;;-1:-1:-1;;;11085:88:0;;9669:2:1;11085:88:0;;;9651:21:1;9708:2;9688:18;;;9681:30;9747:34;9727:18;;;9720:62;9818:28;9798:18;;;9791:56;9864:19;;11085:88:0;9467:422:1;11085:88:0;-1:-1:-1;;;;;11206:13:0;;;;;;:8;:13;;;;;;;;;;11200:86;;;;;;;;;;;;;;-1:-1:-1;;;;;11206:13:0;;;;11221:6;;11200:86;;;;;;;:5;:86::i;:::-;-1:-1:-1;;;;;11184:13:0;;;;;;;:8;:13;;;;;;;;:102;;-1:-1:-1;;;;;;11184:102:0;-1:-1:-1;;;;;11184:102:0;;;;;;11318:13;;;;;;;;;;11312:80;;;;;;;;;;;;;;11318:13;;;;;11333:6;;11312:80;;;;;;;;:5;:80::i;:::-;-1:-1:-1;;;;;11296:13:0;;;;;;;:8;:13;;;;;;;;;:96;;-1:-1:-1;;;;;;11296:96:0;-1:-1:-1;;;;;11296:96:0;;;;;;11407:26;;2802:39:1;;;2784:58;;11296:13:0;;11407:26;;;;;;2757:18:1;11407:26:0;;;;;;;-1:-1:-1;;;;;11459:14:0;;;;;;;:9;:14;;;;;;;11475;;;;;;;;11444:54;;11459:14;;;;11475;11491:6;11444:14;:54::i;:::-;10900:605;;;:::o;10527:367::-;-1:-1:-1;;;;;10629:20:0;;;10603:23;10629:20;;;:9;:20;;;;;;;;;;;10685:19;;;;;;10714:20;;;;:32;;;-1:-1:-1;;;;;;10714:32:0;;;;;;;10762:54;;10629:20;;;;;-1:-1:-1;;;;;10685:19:0;;;;10714:32;;10629:20;;;10762:54;;10603:23;10762:54;10827:60;10842:15;10859:9;10870:16;10827:14;:60::i;:::-;10593:301;;10527:367;;:::o;13392:184::-;13478:6;;13507:5;13511:1;13507;:5;:::i;:::-;13496:16;;13535:1;-1:-1:-1;;;;;13530:6:0;:1;-1:-1:-1;;;;;13530:6:0;;;13538:12;13522:29;;;;;-1:-1:-1;;;13522:29:0;;;;;;;;:::i;:::-;-1:-1:-1;13568:1:0;13392:184;-1:-1:-1;;;;13392:184:0:o;11511:923::-;11615:6;-1:-1:-1;;;;;11605:16:0;:6;-1:-1:-1;;;;;11605:16:0;;;:30;;;;;11634:1;11625:6;-1:-1:-1;;;;;11625:10:0;;11605:30;11601:827;;;-1:-1:-1;;;;;11655:20:0;;;11651:377;;-1:-1:-1;;;;;11714:22:0;;11695:16;11714:22;;;:14;:22;;;;;;;;;11773:13;:60;;11832:1;11773:60;;;-1:-1:-1;;;;;11789:19:0;;;;;;:11;:19;;;;;;11809:13;11821:1;11809:9;:13;:::i;:::-;11789:34;;;;;;;;;;;;;-1:-1:-1;11789:34:0;:40;-1:-1:-1;;;11789:40:0;;-1:-1:-1;;;;;11789:40:0;11773:60;11754:79;;11851:16;11870:68;11876:9;11887:6;11870:68;;;;;;;;;;;;;;;;;:5;:68::i;:::-;11851:87;;11956:57;11973:6;11981:9;11992;12003;11956:16;:57::i;:::-;11677:351;;;11651:377;-1:-1:-1;;;;;12046:20:0;;;12042:376;;-1:-1:-1;;;;;12105:22:0;;12086:16;12105:22;;;:14;:22;;;;;;;;;12164:13;:60;;12223:1;12164:60;;;-1:-1:-1;;;;;12180:19:0;;;;;;:11;:19;;;;;;12200:13;12212:1;12200:9;:13;:::i;:::-;12180:34;;;;;;;;;;;;;-1:-1:-1;12180:34:0;:40;-1:-1:-1;;;12180:40:0;;-1:-1:-1;;;;;12180:40:0;12164:60;12145:79;;12242:16;12261:67;12267:9;12278:6;12261:67;;;;;;;;;;;;;;;;;:5;:67::i;:::-;12242:86;;12346:57;12363:6;12371:9;12382;12393;12440:618;12557:18;12578:76;12585:12;12578:76;;;;;;;;;;;;;;;;;:6;:76::i;:::-;12557:97;;12682:1;12667:12;:16;;;:85;;;;-1:-1:-1;;;;;;12687:22:0;;;;;;:11;:22;;;;;:65;;;;12710:16;12725:1;12710:12;:16;:::i;:::-;12687:40;;;;;;;;;;;;;;;-1:-1:-1;12687:40:0;:50;;:65;12667:85;12663:324;;;-1:-1:-1;;;;;12766:22:0;;;;;;:11;:22;;;;;12815:8;;12789:16;12804:1;12789:12;:16;:::i;:::-;12766:40;;;;;;;;;;;;;-1:-1:-1;12766:40:0;:57;;-1:-1:-1;;;;;12766:57:0;;;;-1:-1:-1;;;12766:57:0;-1:-1:-1;;12766:57:0;;;;;;;;;12663:324;;;12889:33;;;;;;;;;;;;;;-1:-1:-1;;;;;12889:33:0;;;;;;;;;;-1:-1:-1;;;;;12850:22:0;;-1:-1:-1;12850:22:0;;;:11;:22;;;;;:36;;;;;;;;;;;;:72;;;;;;;;;-1:-1:-1;;;12850:72:0;-1:-1:-1;;12850:72:0;;;;;;;;;;;;12962:16;12873:12;12850:72;12962:16;:::i;:::-;-1:-1:-1;;;;;12934:25:0;;;;;;:14;:25;;;;;:44;;-1:-1:-1;;12934:44:0;;;;;;;;;;;;12663:324;13000:51;;;-1:-1:-1;;;;;10476:39:1;;;10458:58;;10552:39;;10547:2;10532:18;;10525:67;-1:-1:-1;;;;;13000:51:0;;;;;10431:18:1;13000:51:0;;;;;;;12549:509;12440:618;;;;:::o;13064:158::-;13139:6;13176:12;-1:-1:-1;;;13165:9:0;;13157:32;;;;-1:-1:-1;;;13157:32:0;;;;;;;14:418:1;163:2;152:9;145:21;126:4;195:6;189:13;238:6;233:2;222:9;218:18;211:34;297:6;292:2;284:6;280:15;275:2;264:9;260:18;254:50;353:1;348:2;339:6;328:9;324:22;320:31;313:42;423:2;416;412:7;407:2;399:6;395:15;391:29;380:9;376:45;372:54;364:62;;;14:418;;;;:::o;437:173::-;505:20;;-1:-1:-1;;;;;554:31:1;;544:42;;534:70;;600:1;597;590:12;534:70;437:173;;;:::o;615:300::-;683:6;691;744:2;732:9;723:7;719:23;715:32;712:52;;;760:1;757;750:12;712:52;783:29;802:9;783:29;:::i;:::-;773:39;881:2;866:18;;;;853:32;;-1:-1:-1;;;615:300:1:o;1476:374::-;1553:6;1561;1569;1622:2;1610:9;1601:7;1597:23;1593:32;1590:52;;;1638:1;1635;1628:12;1590:52;1661:29;1680:9;1661:29;:::i;:::-;1651:39;;1709:38;1743:2;1732:9;1728:18;1709:38;:::i;:::-;1476:374;;1699:48;;-1:-1:-1;;;1816:2:1;1801:18;;;;1788:32;;1476:374::o;2044:186::-;2103:6;2156:2;2144:9;2135:7;2131:23;2127:32;2124:52;;;2172:1;2169;2162:12;2124:52;2195:29;2214:9;2195:29;:::i;2853:828::-;2955:6;2963;2971;2979;2987;2995;3048:3;3036:9;3027:7;3023:23;3019:33;3016:53;;;3065:1;3062;3055:12;3016:53;3088:29;3107:9;3088:29;:::i;:::-;3078:39;-1:-1:-1;3186:2:1;3171:18;;3158:32;;-1:-1:-1;3287:2:1;3272:18;;3259:32;;-1:-1:-1;3369:2:1;3354:18;;3341:32;3417:4;3404:18;;3392:31;;3382:59;;3437:1;3434;3427:12;3382:59;2853:828;;;;-1:-1:-1;2853:828:1;;3540:3;3525:19;;3512:33;;3644:3;3629:19;;;3616:33;;-1:-1:-1;2853:828:1;-1:-1:-1;;2853:828:1:o;3686:260::-;3754:6;3762;3815:2;3803:9;3794:7;3790:23;3786:32;3783:52;;;3831:1;3828;3821:12;3783:52;3854:29;3873:9;3854:29;:::i;:::-;3844:39;;3902:38;3936:2;3925:9;3921:18;3902:38;:::i;:::-;3892:48;;3686:260;;;;;:::o;3951:350::-;4018:6;4026;4079:2;4067:9;4058:7;4054:23;4050:32;4047:52;;;4095:1;4092;4085:12;4047:52;4118:29;4137:9;4118:29;:::i;:::-;4108:39;;4197:2;4186:9;4182:18;4169:32;4241:10;4234:5;4230:22;4223:5;4220:33;4210:61;;4267:1;4264;4257:12;4210:61;4290:5;4280:15;;;3951:350;;;;;:::o;5227:127::-;5288:10;5283:3;5279:20;5276:1;5269:31;5319:4;5316:1;5309:15;5343:4;5340:1;5333:15;5359:170;5456:10;5449:18;;;5429;;;5425:43;;5480:20;;5477:46;;;5503:18;;:::i;5534:275::-;5573:1;5607:10;5604:1;5600:18;5637:3;5627:134;;5683:10;5678:3;5674:20;5671:1;5664:31;5718:4;5715:1;5708:15;5746:4;5743:1;5736:15;5627:134;5799:3;5786:10;5783:1;5779:18;5775:28;5770:33;;;5534:275;;;;:::o;7865:135::-;7904:3;7925:17;;;7922:43;;7945:18;;:::i;:::-;-1:-1:-1;7992:1:1;7981:13;;7865:135::o;8815:218::-;-1:-1:-1;;;;;8921:34:1;;;8885;;;8881:75;;8968:36;;8965:62;;;9007:18;;:::i;9894:215::-;-1:-1:-1;;;;;9962:34:1;;;9998;;;9958:75;;10045:35;;10042:61;;;10083:18;;:::i;10114:167::-;10209:10;10182:18;;;10202;;;10178:43;;10233:19;;10230:45;;;10255:18;;:::i"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1210000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DELEGATION_TYPEHASH()": "282",
								"DOMAIN_TYPEHASH()": "284",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2575",
								"checkpoints(address,uint32)": "2852",
								"decimals()": "248",
								"delegate(address)": "infinite",
								"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)": "infinite",
								"delegates(address)": "2622",
								"getCurrentVotes(address)": "infinite",
								"getPriorVotes(address,uint256)": "infinite",
								"name()": "infinite",
								"nonces(address)": "2583",
								"numCheckpoints(address)": "2642",
								"symbol()": "infinite",
								"totalSupply()": "262",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_delegate(address,address)": "infinite",
								"_moveDelegates(address,address,uint96)": "infinite",
								"_transferTokens(address,address,uint96)": "infinite",
								"_writeCheckpoint(address,uint32,uint96,uint96)": "infinite",
								"add96(uint96,uint96,string memory)": "infinite",
								"getChainId()": "infinite",
								"safe32(uint256,string memory)": "infinite",
								"safe96(uint256,string memory)": "infinite",
								"sub96(uint96,uint96,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1336,
									"end": 13901,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 1336,
									"end": 13901,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1336,
									"end": 13901,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3820,
									"end": 3969,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 3820,
									"end": 3969,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3820,
									"end": 3969,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 3820,
									"end": 3969,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 3820,
									"end": 3969,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 3820,
									"end": 3969,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3820,
									"end": 3969,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3820,
									"end": 3969,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 3820,
									"end": 3969,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 3820,
									"end": 3969,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3820,
									"end": 3969,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3820,
									"end": 3969,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3820,
									"end": 3969,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3820,
									"end": 3969,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 3820,
									"end": 3969,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 3820,
									"end": 3969,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3820,
									"end": 3969,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3820,
									"end": 3969,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 3820,
									"end": 3969,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3820,
									"end": 3969,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 3820,
									"end": 3969,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3820,
									"end": 3969,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3820,
									"end": 3969,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3820,
									"end": 3969,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3820,
									"end": 3969,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3820,
									"end": 3969,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3820,
									"end": 3969,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 3820,
									"end": 3969,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3820,
									"end": 3969,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 3820,
									"end": 3969,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 3820,
									"end": 3969,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 3820,
									"end": 3969,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3866,
									"end": 3883,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3866,
									"end": 3883,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3866,
									"end": 3883,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3866,
									"end": 3883,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3866,
									"end": 3883,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3866,
									"end": 3883,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3866,
									"end": 3874,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 3866,
									"end": 3883,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 3866,
									"end": 3883,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3866,
									"end": 3883,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3866,
									"end": 3883,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3866,
									"end": 3883,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3866,
									"end": 3883,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 3866,
									"end": 3905,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3866,
									"end": 3905,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "60"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3866,
									"end": 3905,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1732,
									"end": 1743,
									"name": "PUSH",
									"source": 0,
									"value": "84595161401484A000000"
								},
								{
									"begin": 3866,
									"end": 3905,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3866,
									"end": 3905,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3866,
									"end": 3905,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3866,
									"end": 3905,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3866,
									"end": 3905,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3866,
									"end": 3905,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3920,
									"end": 3962,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3920,
									"end": 3962,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3920,
									"end": 3962,
									"name": "PUSH",
									"source": 0,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 3920,
									"end": 3962,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3920,
									"end": 3962,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 3920,
									"end": 3962,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 455,
									"end": 480,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 455,
									"end": 480,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 455,
									"end": 480,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 443,
									"end": 445,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 428,
									"end": 446,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 428,
									"end": 446,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 309,
									"end": 486,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3920,
									"end": 3962,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 3920,
									"end": 3962,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3920,
									"end": 3962,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3920,
									"end": 3962,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3920,
									"end": 3962,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3920,
									"end": 3962,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3920,
									"end": 3962,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3920,
									"end": 3962,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3920,
									"end": 3962,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 3820,
									"end": 3969,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1336,
									"end": 13901,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1336,
									"end": 13901,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 304,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 14,
									"end": 304,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 84,
									"end": 90,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 137,
									"end": 139,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 125,
									"end": 134,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 116,
									"end": 123,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 112,
									"end": 135,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 108,
									"end": 140,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 105,
									"end": 157,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 105,
									"end": 157,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 153,
									"end": 154,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 151,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 143,
									"end": 155,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 105,
									"end": 157,
									"name": "tag",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 179,
									"end": 195,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 179,
									"end": 195,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 224,
									"end": 255,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 224,
									"end": 255,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 214,
									"end": 256,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 214,
									"end": 256,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 204,
									"end": 274,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 204,
									"end": 274,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 270,
									"end": 271,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 267,
									"end": 268,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 260,
									"end": 272,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 204,
									"end": 274,
									"name": "tag",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 204,
									"end": 274,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 293,
									"end": 298,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 14,
									"end": 304,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 14,
									"end": 304,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 309,
									"end": 486,
									"name": "tag",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 309,
									"end": 486,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1336,
									"end": 13901,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1336,
									"end": 13901,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1336,
									"end": 13901,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1336,
									"end": 13901,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1336,
									"end": 13901,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 1336,
									"end": 13901,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1336,
									"end": 13901,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c490d27b0c19a0f3a562fccea3b17408c5b6cfd2015c4cfce5b8ffa444df05bd64736f6c634300081b0033",
									".code": [
										{
											"begin": 1336,
											"end": 13901,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1336,
											"end": 13901,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1336,
											"end": 13901,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1336,
											"end": 13901,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1336,
											"end": 13901,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1336,
											"end": 13901,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1336,
											"end": 13901,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1336,
											"end": 13901,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1336,
											"end": 13901,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1336,
											"end": 13901,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1336,
											"end": 13901,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1336,
											"end": 13901,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1336,
											"end": 13901,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1336,
											"end": 13901,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1336,
											"end": 13901,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1336,
											"end": 13901,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1336,
											"end": 13901,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1336,
											"end": 13901,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1336,
											"end": 13901,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1336,
											"end": 13901,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1336,
											"end": 13901,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 1336,
											"end": 13901,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 1336,
											"end": 13901,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 1336,
											"end": 13901,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1336,
											"end": 13901,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 1336,
											"end": 13901,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1336,
											"end": 13901,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1336,
											"end": 13901,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1336,
											"end": 13901,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1336,
											"end": 13901,
											"name": "PUSH",
											"source": 0,
											"value": "B4B5EA57"
										},
										{
											"begin": 1336,
											"end": 13901,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1336,
											"end": 13901,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1336,
											"end": 13901,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1336,
											"end": 13901,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1336,
											"end": 13901,
											"name": "PUSH",
											"source": 0,
											"value": "B4B5EA57"
										},
										{
											"begin": 1336,
											"end": 13901,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1336,
											"end": 13901,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1336,
											"end": 13901,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1336,
											"end": 13901,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1336,
											"end": 13901,
											"name": "PUSH",
											"source": 0,
											"value": "C3CDA520"
										},
										{
											"begin": 1336,
											"end": 13901,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1336,
											"end": 13901,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1336,
											"end": 13901,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1336,
											"end": 13901,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1336,
											"end": 13901,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 1336,
											"end": 13901,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1336,
											"end": 13901,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1336,
											"end": 13901,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1336,
											"end": 13901,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1336,
											"end": 13901,
											"name": "PUSH",
											"source": 0,
											"value": "E7A324DC"
										},
										{
											"begin": 1336,
											"end": 13901,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1336,
											"end": 13901,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1336,
											"end": 13901,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1336,
											"end": 13901,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1336,
											"end": 13901,
											"name": "PUSH",
											"source": 0,
											"value": "F1127ED8"
										},
										{
											"begin": 1336,
											"end": 13901,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1336,
											"end": 13901,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1336,
											"end": 13901,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1336,
											"end": 13901,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1336,
											"end": 13901,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1336,
											"end": 13901,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1336,
											"end": 13901,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1336,
											"end": 13901,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1336,
											"end": 13901,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1336,
											"end": 13901,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 1336,
											"end": 13901,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1336,
											"end": 13901,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1336,
											"end": 13901,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1336,
											"end": 13901,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1336,
											"end": 13901,
											"name": "PUSH",
											"source": 0,
											"value": "782D6FE1"
										},
										{
											"begin": 1336,
											"end": 13901,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1336,
											"end": 13901,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1336,
											"end": 13901,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1336,
											"end": 13901,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1336,
											"end": 13901,
											"name": "PUSH",
											"source": 0,
											"value": "7ECEBE00"
										},
										{
											"begin": 1336,
											"end": 13901,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1336,
											"end": 13901,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1336,
											"end": 13901,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1336,
											"end": 13901,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1336,
											"end": 13901,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 1336,
											"end": 13901,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1336,
											"end": 13901,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1336,
											"end": 13901,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1336,
											"end": 13901,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1336,
											"end": 13901,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 1336,
											"end": 13901,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1336,
											"end": 13901,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1336,
											"end": 13901,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1336,
											"end": 13901,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1336,
											"end": 13901,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1336,
											"end": 13901,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1336,
											"end": 13901,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1336,
											"end": 13901,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1336,
											"end": 13901,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1336,
											"end": 13901,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 1336,
											"end": 13901,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1336,
											"end": 13901,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1336,
											"end": 13901,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1336,
											"end": 13901,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1336,
											"end": 13901,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 1336,
											"end": 13901,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1336,
											"end": 13901,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1336,
											"end": 13901,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1336,
											"end": 13901,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1336,
											"end": 13901,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 1336,
											"end": 13901,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1336,
											"end": 13901,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1336,
											"end": 13901,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1336,
											"end": 13901,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1336,
											"end": 13901,
											"name": "PUSH",
											"source": 0,
											"value": "587CDE1E"
										},
										{
											"begin": 1336,
											"end": 13901,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1336,
											"end": 13901,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1336,
											"end": 13901,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1336,
											"end": 13901,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1336,
											"end": 13901,
											"name": "PUSH",
											"source": 0,
											"value": "5C19A95C"
										},
										{
											"begin": 1336,
											"end": 13901,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1336,
											"end": 13901,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1336,
											"end": 13901,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1336,
											"end": 13901,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1336,
											"end": 13901,
											"name": "PUSH",
											"source": 0,
											"value": "6FCFFF45"
										},
										{
											"begin": 1336,
											"end": 13901,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1336,
											"end": 13901,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1336,
											"end": 13901,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1336,
											"end": 13901,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1336,
											"end": 13901,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1336,
											"end": 13901,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1336,
											"end": 13901,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1336,
											"end": 13901,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1336,
											"end": 13901,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1336,
											"end": 13901,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 1336,
											"end": 13901,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1336,
											"end": 13901,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1336,
											"end": 13901,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1336,
											"end": 13901,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1336,
											"end": 13901,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 1336,
											"end": 13901,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1336,
											"end": 13901,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1336,
											"end": 13901,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1336,
											"end": 13901,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1336,
											"end": 13901,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 1336,
											"end": 13901,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1336,
											"end": 13901,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1336,
											"end": 13901,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1336,
											"end": 13901,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1336,
											"end": 13901,
											"name": "PUSH",
											"source": 0,
											"value": "20606B70"
										},
										{
											"begin": 1336,
											"end": 13901,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1336,
											"end": 13901,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1336,
											"end": 13901,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1336,
											"end": 13901,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1336,
											"end": 13901,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1336,
											"end": 13901,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1336,
											"end": 13901,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1336,
											"end": 13901,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1405,
											"end": 1445,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1405,
											"end": 1445,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1405,
											"end": 1445,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1405,
											"end": 1445,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1405,
											"end": 1445,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1405,
											"end": 1445,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1405,
											"end": 1445,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1405,
											"end": 1445,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1405,
											"end": 1445,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1405,
											"end": 1445,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1405,
											"end": 1445,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1405,
											"end": 1445,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1405,
											"end": 1445,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1405,
											"end": 1445,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1405,
											"end": 1445,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1405,
											"end": 1445,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "10DBDB5C1BDD5B99"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1405,
											"end": 1445,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1405,
											"end": 1445,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1405,
											"end": 1445,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1405,
											"end": 1445,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1405,
											"end": 1445,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1405,
											"end": 1445,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1405,
											"end": 1445,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1405,
											"end": 1445,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1405,
											"end": 1445,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1405,
											"end": 1445,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1405,
											"end": 1445,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1405,
											"end": 1445,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1405,
											"end": 1445,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1405,
											"end": 1445,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1405,
											"end": 1445,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1405,
											"end": 1445,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1405,
											"end": 1445,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1405,
											"end": 1445,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1405,
											"end": 1445,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1405,
											"end": 1445,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1405,
											"end": 1445,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1405,
											"end": 1445,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1405,
											"end": 1445,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4867,
											"end": 5286,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4867,
											"end": 5286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4867,
											"end": 5286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 4867,
											"end": 5286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 4867,
											"end": 5286,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4867,
											"end": 5286,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4867,
											"end": 5286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 4867,
											"end": 5286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4867,
											"end": 5286,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 4867,
											"end": 5286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4867,
											"end": 5286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 4867,
											"end": 5286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4867,
											"end": 5286,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 4867,
											"end": 5286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4867,
											"end": 5286,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4867,
											"end": 5286,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1085,
											"end": 1099,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1085,
											"end": 1099,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1078,
											"end": 1100,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1060,
											"end": 1101,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1060,
											"end": 1101,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1048,
											"end": 1050,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1033,
											"end": 1051,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4867,
											"end": 5286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 920,
											"end": 1107,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1697,
											"end": 1743,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1697,
											"end": 1743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1697,
											"end": 1743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1732,
											"end": 1743,
											"name": "PUSH",
											"source": 0,
											"value": "84595161401484A000000"
										},
										{
											"begin": 1697,
											"end": 1743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1697,
											"end": 1743,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1697,
											"end": 1743,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1697,
											"end": 1743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1697,
											"end": 1743,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1697,
											"end": 1743,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1258,
											"end": 1283,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1258,
											"end": 1283,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1258,
											"end": 1283,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1246,
											"end": 1248,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1231,
											"end": 1249,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1697,
											"end": 1743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1112,
											"end": 1289,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2603,
											"end": 2725,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 2603,
											"end": 2725,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2603,
											"end": 2725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 2645,
											"end": 2725,
											"name": "PUSH",
											"source": 0,
											"value": "8CAD95687BA82C2CE50E74F7B754645E5117C3A5BEC8151C0726D5857980A866"
										},
										{
											"begin": 2603,
											"end": 2725,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2603,
											"end": 2725,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6379,
											"end": 7043,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 6379,
											"end": 7043,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6379,
											"end": 7043,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 6379,
											"end": 7043,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 6379,
											"end": 7043,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 6379,
											"end": 7043,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6379,
											"end": 7043,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 6379,
											"end": 7043,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6379,
											"end": 7043,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 6379,
											"end": 7043,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6379,
											"end": 7043,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 6379,
											"end": 7043,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1601,
											"end": 1636,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1601,
											"end": 1636,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1601,
											"end": 1636,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 1634,
											"end": 1636,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1601,
											"end": 1636,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1601,
											"end": 1636,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1601,
											"end": 1636,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 1601,
											"end": 1636,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1601,
											"end": 1636,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1601,
											"end": 1636,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2031,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 2015,
											"end": 2032,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2015,
											"end": 2032,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2015,
											"end": 2032,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1997,
											"end": 2033,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1997,
											"end": 2033,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1985,
											"end": 1987,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1970,
											"end": 1988,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1601,
											"end": 1636,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1855,
											"end": 2039,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2068,
											"end": 2113,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 2068,
											"end": 2113,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2068,
											"end": 2113,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 2068,
											"end": 2113,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 2068,
											"end": 2113,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2068,
											"end": 2113,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2068,
											"end": 2113,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 2068,
											"end": 2113,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2068,
											"end": 2113,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 2068,
											"end": 2113,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2068,
											"end": 2113,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2068,
											"end": 2113,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2068,
											"end": 2113,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2068,
											"end": 2113,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2068,
											"end": 2113,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2068,
											"end": 2113,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2068,
											"end": 2113,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2068,
											"end": 2113,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2068,
											"end": 2113,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2068,
											"end": 2113,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2068,
											"end": 2113,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2068,
											"end": 2113,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2068,
											"end": 2113,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2068,
											"end": 2113,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2068,
											"end": 2113,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 2068,
											"end": 2113,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2068,
											"end": 2113,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2068,
											"end": 2113,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2399,
											"end": 2431,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2399,
											"end": 2431,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2399,
											"end": 2431,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2381,
											"end": 2432,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2381,
											"end": 2432,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2369,
											"end": 2371,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2354,
											"end": 2372,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2068,
											"end": 2113,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2235,
											"end": 2438,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7185,
											"end": 7285,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 7185,
											"end": 7285,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7185,
											"end": 7285,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 7185,
											"end": 7285,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 7185,
											"end": 7285,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 7185,
											"end": 7285,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7185,
											"end": 7285,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 7185,
											"end": 7285,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7185,
											"end": 7285,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 7185,
											"end": 7285,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7185,
											"end": 7285,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 7185,
											"end": 7285,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7185,
											"end": 7285,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 7185,
											"end": 7285,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7185,
											"end": 7285,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2484,
											"end": 2533,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 2484,
											"end": 2533,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2484,
											"end": 2533,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2484,
											"end": 2533,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 2484,
											"end": 2533,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2484,
											"end": 2533,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2484,
											"end": 2533,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 2484,
											"end": 2533,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2484,
											"end": 2533,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 2484,
											"end": 2533,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2484,
											"end": 2533,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2484,
											"end": 2533,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2484,
											"end": 2533,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2484,
											"end": 2533,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2484,
											"end": 2533,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2484,
											"end": 2533,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2484,
											"end": 2533,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2484,
											"end": 2533,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2484,
											"end": 2533,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2484,
											"end": 2533,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2484,
											"end": 2533,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2484,
											"end": 2533,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2484,
											"end": 2533,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2484,
											"end": 2533,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2484,
											"end": 2533,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2484,
											"end": 2533,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2484,
											"end": 2533,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2484,
											"end": 2533,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2484,
											"end": 2533,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2617,
											"end": 2627,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2605,
											"end": 2628,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2605,
											"end": 2628,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2605,
											"end": 2628,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2587,
											"end": 2629,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2587,
											"end": 2629,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2575,
											"end": 2577,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2560,
											"end": 2578,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2484,
											"end": 2533,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2443,
											"end": 2635,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5482,
											"end": 5588,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 5482,
											"end": 5588,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5482,
											"end": 5588,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 5482,
											"end": 5588,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 5482,
											"end": 5588,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5482,
											"end": 5588,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5482,
											"end": 5588,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 5482,
											"end": 5588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5482,
											"end": 5588,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 5482,
											"end": 5588,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5564,
											"end": 5581,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5541,
											"end": 5545,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5564,
											"end": 5581,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5564,
											"end": 5581,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5564,
											"end": 5581,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5564,
											"end": 5572,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5564,
											"end": 5581,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5564,
											"end": 5581,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5564,
											"end": 5581,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5564,
											"end": 5581,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5564,
											"end": 5581,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5564,
											"end": 5581,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5564,
											"end": 5581,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5564,
											"end": 5581,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5482,
											"end": 5588,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9335,
											"end": 10521,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 9335,
											"end": 10521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9335,
											"end": 10521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 9335,
											"end": 10521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 9335,
											"end": 10521,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 9335,
											"end": 10521,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9335,
											"end": 10521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 9335,
											"end": 10521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9335,
											"end": 10521,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 9335,
											"end": 10521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9335,
											"end": 10521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 9335,
											"end": 10521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9335,
											"end": 10521,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 9335,
											"end": 10521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9335,
											"end": 10521,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9335,
											"end": 10521,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2802,
											"end": 2841,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2802,
											"end": 2841,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2802,
											"end": 2841,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2784,
											"end": 2842,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2784,
											"end": 2842,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2772,
											"end": 2774,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2757,
											"end": 2775,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9335,
											"end": 10521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2640,
											"end": 2848,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3011,
											"end": 3050,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 3011,
											"end": 3050,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3011,
											"end": 3050,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 3011,
											"end": 3050,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 3011,
											"end": 3050,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3011,
											"end": 3050,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3011,
											"end": 3050,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 3011,
											"end": 3050,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3011,
											"end": 3050,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 3011,
											"end": 3050,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3011,
											"end": 3050,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3011,
											"end": 3050,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3011,
											"end": 3050,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3011,
											"end": 3050,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3011,
											"end": 3050,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3011,
											"end": 3050,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3011,
											"end": 3050,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3011,
											"end": 3050,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3011,
											"end": 3050,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3011,
											"end": 3050,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3011,
											"end": 3050,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3011,
											"end": 3050,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3011,
											"end": 3050,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1503,
											"end": 1541,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1503,
											"end": 1541,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1503,
											"end": 1541,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1503,
											"end": 1541,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1503,
											"end": 1541,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1503,
											"end": 1541,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1503,
											"end": 1541,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1503,
											"end": 1541,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1503,
											"end": 1541,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1503,
											"end": 1541,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1503,
											"end": 1541,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1503,
											"end": 1541,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1503,
											"end": 1541,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1503,
											"end": 1541,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1503,
											"end": 1541,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1503,
											"end": 1541,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "434F4D5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1503,
											"end": 1541,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1503,
											"end": 1541,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1503,
											"end": 1541,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1503,
											"end": 1541,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1503,
											"end": 1541,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5844,
											"end": 6078,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 5844,
											"end": 6078,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5844,
											"end": 6078,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 5844,
											"end": 6078,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 5844,
											"end": 6078,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5844,
											"end": 6078,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5844,
											"end": 6078,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 5844,
											"end": 6078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5844,
											"end": 6078,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 5844,
											"end": 6078,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5844,
											"end": 6078,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 5844,
											"end": 6078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8694,
											"end": 8913,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 8694,
											"end": 8913,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8694,
											"end": 8913,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 8694,
											"end": 8913,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 8694,
											"end": 8913,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 8694,
											"end": 8913,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8694,
											"end": 8913,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 8694,
											"end": 8913,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8694,
											"end": 8913,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 8694,
											"end": 8913,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8694,
											"end": 8913,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 8694,
											"end": 8913,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7708,
											"end": 8500,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 7708,
											"end": 8500,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7708,
											"end": 8500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 7708,
											"end": 8500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 7708,
											"end": 8500,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 7708,
											"end": 8500,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7708,
											"end": 8500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 7708,
											"end": 8500,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7708,
											"end": 8500,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 7708,
											"end": 8500,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7708,
											"end": 8500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 7708,
											"end": 8500,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4265,
											"end": 4399,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 4265,
											"end": 4399,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4265,
											"end": 4399,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 4265,
											"end": 4399,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 4265,
											"end": 4399,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4265,
											"end": 4399,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4265,
											"end": 4399,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 4265,
											"end": 4399,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4265,
											"end": 4399,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 4265,
											"end": 4399,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4364,
											"end": 4383,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4364,
											"end": 4383,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4364,
											"end": 4383,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4341,
											"end": 4345,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4364,
											"end": 4383,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4364,
											"end": 4383,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4364,
											"end": 4383,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4364,
											"end": 4383,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4364,
											"end": 4383,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4364,
											"end": 4383,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4364,
											"end": 4383,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4364,
											"end": 4383,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4364,
											"end": 4383,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4364,
											"end": 4383,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4364,
											"end": 4383,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4364,
											"end": 4392,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 4364,
											"end": 4392,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4364,
											"end": 4392,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 4364,
											"end": 4392,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4364,
											"end": 4392,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4364,
											"end": 4392,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4364,
											"end": 4392,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4364,
											"end": 4392,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4364,
											"end": 4392,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4364,
											"end": 4392,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4364,
											"end": 4392,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4364,
											"end": 4392,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4364,
											"end": 4392,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4364,
											"end": 4392,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4265,
											"end": 4399,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2816,
											"end": 2933,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2816,
											"end": 2933,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2816,
											"end": 2933,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 2862,
											"end": 2933,
											"name": "PUSH",
											"source": 0,
											"value": "E48329057BFD03D55E49B547132E39CFFD9C1820AD7B9D4C5307691425D15ADF"
										},
										{
											"begin": 2816,
											"end": 2933,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2816,
											"end": 2933,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2348,
											"end": 2418,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 2348,
											"end": 2418,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2348,
											"end": 2418,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 2348,
											"end": 2418,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 2348,
											"end": 2418,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2348,
											"end": 2418,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2348,
											"end": 2418,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 2348,
											"end": 2418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2348,
											"end": 2418,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 2348,
											"end": 2418,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2348,
											"end": 2418,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2348,
											"end": 2418,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2418,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2348,
											"end": 2418,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2348,
											"end": 2418,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2348,
											"end": 2418,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2348,
											"end": 2418,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2348,
											"end": 2418,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2348,
											"end": 2418,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2348,
											"end": 2418,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2348,
											"end": 2418,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2348,
											"end": 2418,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2348,
											"end": 2418,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2348,
											"end": 2418,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2348,
											"end": 2418,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2348,
											"end": 2418,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2348,
											"end": 2418,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2348,
											"end": 2418,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2348,
											"end": 2418,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2348,
											"end": 2418,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2348,
											"end": 2418,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2348,
											"end": 2418,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2348,
											"end": 2418,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2348,
											"end": 2418,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2348,
											"end": 2418,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2348,
											"end": 2418,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2348,
											"end": 2418,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2348,
											"end": 2418,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2348,
											"end": 2418,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2348,
											"end": 2418,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2348,
											"end": 2418,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2348,
											"end": 2418,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 2348,
											"end": 2418,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2348,
											"end": 2418,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2348,
											"end": 2418,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2348,
											"end": 2418,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4506,
											"end": 4516,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4494,
											"end": 4517,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4494,
											"end": 4517,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4494,
											"end": 4517,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4476,
											"end": 4518,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4476,
											"end": 4518,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4554,
											"end": 4593,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4554,
											"end": 4593,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4554,
											"end": 4593,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4549,
											"end": 4551,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4534,
											"end": 4552,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4534,
											"end": 4552,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4527,
											"end": 4594,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4449,
											"end": 4467,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2418,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 4306,
											"end": 4600,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4867,
											"end": 5286,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 4867,
											"end": 5286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4935,
											"end": 4939,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4951,
											"end": 4964,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4978,
											"end": 4987,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4978,
											"end": 5005,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4974,
											"end": 5155,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 4974,
											"end": 5155,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4974,
											"end": 5155,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 4974,
											"end": 5155,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4974,
											"end": 5155,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 4974,
											"end": 5155,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5086,
											"end": 5144,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 5093,
											"end": 5102,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5086,
											"end": 5144,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5086,
											"end": 5144,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5086,
											"end": 5144,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5086,
											"end": 5144,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 5086,
											"end": 5144,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5086,
											"end": 5144,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5086,
											"end": 5144,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5086,
											"end": 5144,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5086,
											"end": 5144,
											"name": "PUSH",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 5086,
											"end": 5144,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5086,
											"end": 5144,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5086,
											"end": 5144,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5086,
											"end": 5144,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5086,
											"end": 5144,
											"name": "PUSH data",
											"source": 0,
											"value": "32DAB9ECE0397C38C85244ED755F6110088FB13D43A7E9D6809DA7619813D0FE"
										},
										{
											"begin": 5086,
											"end": 5144,
											"name": "PUSH",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 5086,
											"end": 5144,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5086,
											"end": 5144,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 5086,
											"end": 5092,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 5086,
											"end": 5144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5086,
											"end": 5144,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 5086,
											"end": 5144,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5077,
											"end": 5144,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5077,
											"end": 5144,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4974,
											"end": 5155,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 4974,
											"end": 5155,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5176,
											"end": 5186,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 5165,
											"end": 5175,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5165,
											"end": 5187,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5165,
											"end": 5187,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5165,
											"end": 5187,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5165,
											"end": 5187,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5165,
											"end": 5187,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5165,
											"end": 5187,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5165,
											"end": 5187,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5165,
											"end": 5187,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5165,
											"end": 5187,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5165,
											"end": 5187,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5165,
											"end": 5187,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5165,
											"end": 5196,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 5165,
											"end": 5196,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5165,
											"end": 5196,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5165,
											"end": 5196,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5165,
											"end": 5196,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5165,
											"end": 5196,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5165,
											"end": 5196,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5165,
											"end": 5196,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5165,
											"end": 5196,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5165,
											"end": 5196,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5165,
											"end": 5196,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5165,
											"end": 5196,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5165,
											"end": 5205,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5165,
											"end": 5205,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5165,
											"end": 5205,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5165,
											"end": 5205,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 5165,
											"end": 5205,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5165,
											"end": 5205,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5165,
											"end": 5205,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5165,
											"end": 5205,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 5165,
											"end": 5205,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5165,
											"end": 5205,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5165,
											"end": 5205,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 5221,
											"end": 5258,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5221,
											"end": 5258,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2784,
											"end": 2842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2784,
											"end": 2842,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2784,
											"end": 2842,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5165,
											"end": 5196,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5165,
											"end": 5196,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5176,
											"end": 5186,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5221,
											"end": 5258,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 5221,
											"end": 5258,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2757,
											"end": 2775,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5221,
											"end": 5258,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5221,
											"end": 5258,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5221,
											"end": 5258,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5221,
											"end": 5258,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5221,
											"end": 5258,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5221,
											"end": 5258,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5221,
											"end": 5258,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 5275,
											"end": 5279,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5268,
											"end": 5279,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5268,
											"end": 5279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5268,
											"end": 5279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4867,
											"end": 5286,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 4867,
											"end": 5286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4867,
											"end": 5286,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4867,
											"end": 5286,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4867,
											"end": 5286,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4867,
											"end": 5286,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4867,
											"end": 5286,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6379,
											"end": 7043,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 6379,
											"end": 7043,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6541,
											"end": 6556,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6541,
											"end": 6556,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6461,
											"end": 6465,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6541,
											"end": 6556,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6541,
											"end": 6556,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6541,
											"end": 6556,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6541,
											"end": 6556,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6541,
											"end": 6556,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6541,
											"end": 6556,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6541,
											"end": 6556,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6541,
											"end": 6556,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6541,
											"end": 6556,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6541,
											"end": 6556,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6541,
											"end": 6556,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6495,
											"end": 6505,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6591,
											"end": 6649,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6591,
											"end": 6649,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6591,
											"end": 6649,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 6591,
											"end": 6649,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6591,
											"end": 6649,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6591,
											"end": 6649,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6591,
											"end": 6649,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 6591,
											"end": 6649,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6591,
											"end": 6649,
											"name": "PUSH",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 6591,
											"end": 6649,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6591,
											"end": 6649,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6591,
											"end": 6649,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6495,
											"end": 6505,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6495,
											"end": 6505,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6461,
											"end": 6465,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6461,
											"end": 6465,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6591,
											"end": 6649,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 6591,
											"end": 6649,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6598,
											"end": 6607,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 6598,
											"end": 6607,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6591,
											"end": 6649,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6591,
											"end": 6649,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6591,
											"end": 6649,
											"name": "PUSH data",
											"source": 0,
											"value": "32DAB9ECE0397C38C85244ED755F6110088FB13D43A7E9D6809DA7619813D0FE"
										},
										{
											"begin": 6591,
											"end": 6649,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6591,
											"end": 6649,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6591,
											"end": 6649,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6591,
											"end": 6649,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 6591,
											"end": 6597,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 6591,
											"end": 6649,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6591,
											"end": 6649,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 6591,
											"end": 6649,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6575,
											"end": 6649,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6575,
											"end": 6649,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6675,
											"end": 6678,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6664,
											"end": 6678,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6664,
											"end": 6671,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6664,
											"end": 6678,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6664,
											"end": 6678,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6664,
											"end": 6678,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6664,
											"end": 6718,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6664,
											"end": 6718,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6664,
											"end": 6718,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 6664,
											"end": 6718,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6682,
											"end": 6718,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6682,
											"end": 6718,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6682,
											"end": 6718,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6682,
											"end": 6718,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6682,
											"end": 6718,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6664,
											"end": 6718,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 6664,
											"end": 6718,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6660,
											"end": 6972,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6660,
											"end": 6972,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 6660,
											"end": 6972,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6734,
											"end": 6753,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6756,
											"end": 6852,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 6762,
											"end": 6778,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6780,
											"end": 6786,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6756,
											"end": 6852,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6756,
											"end": 6852,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6756,
											"end": 6852,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6756,
											"end": 6852,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 6756,
											"end": 6852,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6756,
											"end": 6852,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6756,
											"end": 6852,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6756,
											"end": 6852,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6756,
											"end": 6852,
											"name": "PUSH",
											"source": 0,
											"value": "3D"
										},
										{
											"begin": 6756,
											"end": 6852,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6756,
											"end": 6852,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6756,
											"end": 6852,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6756,
											"end": 6852,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6756,
											"end": 6852,
											"name": "PUSH data",
											"source": 0,
											"value": "B7AC833594DA1DF58FD15C3B6B55EB20762DBA088C48B65CE9D522A789FF2495"
										},
										{
											"begin": 6756,
											"end": 6852,
											"name": "PUSH",
											"source": 0,
											"value": "3D"
										},
										{
											"begin": 6756,
											"end": 6852,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6756,
											"end": 6852,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 6756,
											"end": 6761,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 6756,
											"end": 6852,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6756,
											"end": 6852,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 6756,
											"end": 6852,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6866,
											"end": 6881,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6881,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6881,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6876,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6881,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6881,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6881,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6881,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6866,
											"end": 6881,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6881,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6881,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6881,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6866,
											"end": 6881,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6881,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6881,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6890,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6890,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6890,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6890,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6890,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6890,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6890,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6890,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6890,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6890,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6890,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6890,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6890,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6905,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6905,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6866,
											"end": 6905,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6866,
											"end": 6905,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6905,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6905,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6905,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6905,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6905,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6905,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6905,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6925,
											"end": 6961,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6925,
											"end": 6961,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2784,
											"end": 2842,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2784,
											"end": 2842,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2784,
											"end": 2842,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6905,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6905,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6866,
											"end": 6890,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6890,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6881,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6881,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6925,
											"end": 6961,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 6925,
											"end": 6961,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2757,
											"end": 2775,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6925,
											"end": 6961,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6925,
											"end": 6961,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6925,
											"end": 6961,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6925,
											"end": 6961,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6925,
											"end": 6961,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6925,
											"end": 6961,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6925,
											"end": 6961,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 6720,
											"end": 6972,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6660,
											"end": 6972,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 6660,
											"end": 6972,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6982,
											"end": 7015,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 6998,
											"end": 7001,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 7003,
											"end": 7006,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 7008,
											"end": 7014,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6982,
											"end": 6997,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 6982,
											"end": 7015,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6982,
											"end": 7015,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 6982,
											"end": 7015,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7032,
											"end": 7036,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7032,
											"end": 7036,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 6379,
											"end": 7043,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6379,
											"end": 7043,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7185,
											"end": 7285,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 7185,
											"end": 7285,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7246,
											"end": 7278,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 7256,
											"end": 7266,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 7268,
											"end": 7277,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7246,
											"end": 7255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 7246,
											"end": 7278,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7246,
											"end": 7278,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 7246,
											"end": 7278,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7185,
											"end": 7285,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7185,
											"end": 7285,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9335,
											"end": 10521,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 9335,
											"end": 10521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9414,
											"end": 9420,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9454,
											"end": 9466,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 9440,
											"end": 9451,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9440,
											"end": 9466,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 9432,
											"end": 9510,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 9432,
											"end": 9510,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9432,
											"end": 9510,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9432,
											"end": 9510,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9432,
											"end": 9510,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9432,
											"end": 9510,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5021,
											"end": 5023,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9432,
											"end": 9510,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9432,
											"end": 9510,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9432,
											"end": 9510,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5003,
											"end": 5024,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5060,
											"end": 5062,
											"name": "PUSH",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 5040,
											"end": 5058,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5040,
											"end": 5058,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5040,
											"end": 5058,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5033,
											"end": 5063,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5099,
											"end": 5133,
											"name": "PUSH",
											"source": 1,
											"value": "436F6D703A3A6765745072696F72566F7465733A206E6F742079657420646574"
										},
										{
											"begin": 5079,
											"end": 5097,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 5079,
											"end": 5097,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5079,
											"end": 5097,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5072,
											"end": 5134,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "195C9B5A5B9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "CA"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5150,
											"end": 5168,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 5150,
											"end": 5168,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5150,
											"end": 5168,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5143,
											"end": 5180,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5197,
											"end": 5216,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 5197,
											"end": 5216,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9432,
											"end": 9510,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 9432,
											"end": 9510,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9432,
											"end": 9510,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9432,
											"end": 9510,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9432,
											"end": 9510,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9432,
											"end": 9510,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9432,
											"end": 9510,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9432,
											"end": 9510,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9432,
											"end": 9510,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9432,
											"end": 9510,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 9432,
											"end": 9510,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9543,
											"end": 9566,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9543,
											"end": 9566,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9521,
											"end": 9540,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9543,
											"end": 9566,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9543,
											"end": 9566,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9543,
											"end": 9566,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9543,
											"end": 9557,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9543,
											"end": 9566,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9543,
											"end": 9566,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9543,
											"end": 9566,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9543,
											"end": 9566,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9543,
											"end": 9566,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9543,
											"end": 9566,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9543,
											"end": 9566,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9543,
											"end": 9566,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9543,
											"end": 9566,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9580,
											"end": 9597,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9580,
											"end": 9597,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9580,
											"end": 9597,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9576,
											"end": 9632,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 9576,
											"end": 9632,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9620,
											"end": 9621,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9613,
											"end": 9621,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9613,
											"end": 9621,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9613,
											"end": 9621,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9613,
											"end": 9621,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 9613,
											"end": 9621,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9576,
											"end": 9632,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 9576,
											"end": 9632,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9689,
											"end": 9709,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9689,
											"end": 9709,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9689,
											"end": 9709,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9689,
											"end": 9709,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9689,
											"end": 9709,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9689,
											"end": 9709,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9689,
											"end": 9700,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 9689,
											"end": 9709,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9689,
											"end": 9709,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9689,
											"end": 9709,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9689,
											"end": 9709,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9689,
											"end": 9709,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9741,
											"end": 9752,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9741,
											"end": 9752,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9710,
											"end": 9726,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 9725,
											"end": 9726,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 9710,
											"end": 9722,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 9710,
											"end": 9726,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 9710,
											"end": 9726,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9710,
											"end": 9726,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 9710,
											"end": 9726,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9689,
											"end": 9727,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9689,
											"end": 9727,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9689,
											"end": 9727,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9689,
											"end": 9727,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9689,
											"end": 9727,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9689,
											"end": 9727,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9689,
											"end": 9727,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9689,
											"end": 9727,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9689,
											"end": 9727,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9689,
											"end": 9727,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 9689,
											"end": 9727,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9689,
											"end": 9727,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 9689,
											"end": 9727,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9689,
											"end": 9727,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9689,
											"end": 9727,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 9689,
											"end": 9727,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9689,
											"end": 9737,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9689,
											"end": 9737,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9689,
											"end": 9752,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 9685,
											"end": 9830,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 9685,
											"end": 9830,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9775,
											"end": 9795,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9775,
											"end": 9795,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9775,
											"end": 9795,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9775,
											"end": 9795,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9775,
											"end": 9795,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9775,
											"end": 9795,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9775,
											"end": 9786,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 9775,
											"end": 9795,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9775,
											"end": 9795,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9775,
											"end": 9795,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9775,
											"end": 9795,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9775,
											"end": 9795,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9775,
											"end": 9795,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9796,
											"end": 9812,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 9811,
											"end": 9812,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 9796,
											"end": 9808,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9796,
											"end": 9812,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 9796,
											"end": 9812,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9796,
											"end": 9812,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 9796,
											"end": 9812,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9775,
											"end": 9813,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9775,
											"end": 9813,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9775,
											"end": 9813,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9775,
											"end": 9813,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9775,
											"end": 9813,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9775,
											"end": 9813,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9775,
											"end": 9813,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9775,
											"end": 9813,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9775,
											"end": 9813,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9775,
											"end": 9813,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9775,
											"end": 9813,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9775,
											"end": 9813,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9775,
											"end": 9813,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 9775,
											"end": 9813,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9775,
											"end": 9819,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9775,
											"end": 9819,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9775,
											"end": 9819,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9775,
											"end": 9819,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9775,
											"end": 9819,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9768,
											"end": 9819,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 9768,
											"end": 9819,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9768,
											"end": 9819,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9685,
											"end": 9830,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 9685,
											"end": 9830,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9888,
											"end": 9908,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9888,
											"end": 9908,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9888,
											"end": 9908,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9888,
											"end": 9908,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9888,
											"end": 9908,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9888,
											"end": 9908,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9888,
											"end": 9899,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 9888,
											"end": 9908,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9888,
											"end": 9908,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9888,
											"end": 9908,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9888,
											"end": 9908,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9888,
											"end": 9908,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9888,
											"end": 9908,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9888,
											"end": 9908,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9888,
											"end": 9908,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9888,
											"end": 9911,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9888,
											"end": 9911,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9888,
											"end": 9911,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9888,
											"end": 9911,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9888,
											"end": 9911,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9888,
											"end": 9911,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9888,
											"end": 9911,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9888,
											"end": 9911,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9888,
											"end": 9921,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9888,
											"end": 9911,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9888,
											"end": 9921,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9888,
											"end": 9935,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 9884,
											"end": 9970,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9884,
											"end": 9970,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 9884,
											"end": 9970,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9958,
											"end": 9959,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9951,
											"end": 9959,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9951,
											"end": 9959,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9951,
											"end": 9959,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9951,
											"end": 9959,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 9951,
											"end": 9959,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9884,
											"end": 9970,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 9884,
											"end": 9970,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9980,
											"end": 9992,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9980,
											"end": 9992,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10021,
											"end": 10037,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 10036,
											"end": 10037,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 10021,
											"end": 10033,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10021,
											"end": 10037,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 10021,
											"end": 10037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10021,
											"end": 10037,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 10021,
											"end": 10037,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10006,
											"end": 10037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10006,
											"end": 10037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10047,
											"end": 10465,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 10047,
											"end": 10465,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10062,
											"end": 10067,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10054,
											"end": 10067,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 10054,
											"end": 10067,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10054,
											"end": 10059,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10054,
											"end": 10067,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 10054,
											"end": 10067,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10054,
											"end": 10067,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 10047,
											"end": 10465,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10047,
											"end": 10465,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 10047,
											"end": 10465,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10083,
											"end": 10096,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10125,
											"end": 10126,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 10108,
											"end": 10121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 10116,
											"end": 10121,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10108,
											"end": 10113,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10108,
											"end": 10121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 10108,
											"end": 10121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10108,
											"end": 10121,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 10108,
											"end": 10121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10107,
											"end": 10126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 10107,
											"end": 10126,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10107,
											"end": 10126,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10107,
											"end": 10126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 10107,
											"end": 10126,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10107,
											"end": 10126,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 10107,
											"end": 10126,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10099,
											"end": 10126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 10099,
											"end": 10126,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10099,
											"end": 10104,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10099,
											"end": 10126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 10099,
											"end": 10126,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10099,
											"end": 10126,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 10099,
											"end": 10126,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10190,
											"end": 10210,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 10190,
											"end": 10210,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10167,
											"end": 10187,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10190,
											"end": 10210,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10190,
											"end": 10210,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10190,
											"end": 10210,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10190,
											"end": 10201,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 10190,
											"end": 10210,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10190,
											"end": 10210,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10190,
											"end": 10210,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10190,
											"end": 10210,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10190,
											"end": 10210,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10190,
											"end": 10210,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10190,
											"end": 10210,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10190,
											"end": 10210,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10190,
											"end": 10218,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 10190,
											"end": 10218,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 10190,
											"end": 10218,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10190,
											"end": 10218,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10190,
											"end": 10218,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 10190,
											"end": 10218,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10190,
											"end": 10218,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10190,
											"end": 10218,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10190,
											"end": 10218,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10190,
											"end": 10218,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10190,
											"end": 10218,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10190,
											"end": 10218,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10190,
											"end": 10218,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10167,
											"end": 10218,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10167,
											"end": 10218,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10167,
											"end": 10218,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10167,
											"end": 10218,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10167,
											"end": 10218,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10167,
											"end": 10218,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10167,
											"end": 10218,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10167,
											"end": 10218,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10167,
											"end": 10218,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10167,
											"end": 10218,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10167,
											"end": 10218,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10167,
											"end": 10218,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10167,
											"end": 10218,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10167,
											"end": 10218,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10167,
											"end": 10218,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10167,
											"end": 10218,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10167,
											"end": 10218,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 10167,
											"end": 10218,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10167,
											"end": 10218,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10167,
											"end": 10218,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10167,
											"end": 10218,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10167,
											"end": 10218,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10167,
											"end": 10218,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10167,
											"end": 10218,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10167,
											"end": 10218,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10167,
											"end": 10218,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10190,
											"end": 10218,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10190,
											"end": 10218,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10236,
											"end": 10263,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 10236,
											"end": 10263,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10236,
											"end": 10263,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10232,
											"end": 10455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 10232,
											"end": 10455,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10290,
											"end": 10298,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10290,
											"end": 10298,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10290,
											"end": 10298,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10290,
											"end": 10298,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10283,
											"end": 10298,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 10283,
											"end": 10298,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10283,
											"end": 10298,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10232,
											"end": 10455,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 10232,
											"end": 10455,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10323,
											"end": 10335,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10323,
											"end": 10335,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10323,
											"end": 10349,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 10323,
											"end": 10349,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10323,
											"end": 10349,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 10319,
											"end": 10455,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10319,
											"end": 10455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 10319,
											"end": 10455,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10377,
											"end": 10383,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10369,
											"end": 10383,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 10369,
											"end": 10383,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10319,
											"end": 10455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 10319,
											"end": 10455,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10319,
											"end": 10455,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 10319,
											"end": 10455,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10430,
											"end": 10440,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 10439,
											"end": 10440,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 10430,
											"end": 10436,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10430,
											"end": 10440,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 10430,
											"end": 10440,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10430,
											"end": 10440,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 10430,
											"end": 10440,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10422,
											"end": 10440,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10422,
											"end": 10440,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10319,
											"end": 10455,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 10319,
											"end": 10455,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10069,
											"end": 10465,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10069,
											"end": 10465,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10047,
											"end": 10465,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 10047,
											"end": 10465,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10047,
											"end": 10465,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 10047,
											"end": 10465,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10481,
											"end": 10501,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 10481,
											"end": 10501,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10481,
											"end": 10501,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10481,
											"end": 10501,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10481,
											"end": 10501,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10481,
											"end": 10501,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10481,
											"end": 10492,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 10481,
											"end": 10501,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10481,
											"end": 10501,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10481,
											"end": 10501,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10481,
											"end": 10501,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10481,
											"end": 10501,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10481,
											"end": 10501,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10481,
											"end": 10501,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10481,
											"end": 10501,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10481,
											"end": 10508,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 10481,
											"end": 10508,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10481,
											"end": 10508,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 10481,
											"end": 10508,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10481,
											"end": 10508,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10481,
											"end": 10508,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10481,
											"end": 10508,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10481,
											"end": 10508,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10481,
											"end": 10508,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10481,
											"end": 10508,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10481,
											"end": 10514,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10481,
											"end": 10514,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10481,
											"end": 10514,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10481,
											"end": 10514,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 10481,
											"end": 10514,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10481,
											"end": 10514,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9335,
											"end": 10521,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 9335,
											"end": 10521,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9335,
											"end": 10521,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9335,
											"end": 10521,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9335,
											"end": 10521,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5844,
											"end": 6078,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 5844,
											"end": 6078,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5909,
											"end": 5913,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5925,
											"end": 5938,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5941,
											"end": 6000,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 5948,
											"end": 5957,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5941,
											"end": 6000,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5941,
											"end": 6000,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5941,
											"end": 6000,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5941,
											"end": 6000,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 5941,
											"end": 6000,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5941,
											"end": 6000,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5941,
											"end": 6000,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5941,
											"end": 6000,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5941,
											"end": 6000,
											"name": "PUSH",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 5941,
											"end": 6000,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5941,
											"end": 6000,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5941,
											"end": 6000,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5941,
											"end": 6000,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5941,
											"end": 6000,
											"name": "PUSH data",
											"source": 0,
											"value": "5BDEAFAE4AAACE0ED9B7DF6E60F285C9E8E84A3CEAC05AF6B6259BFED8E161F5"
										},
										{
											"begin": 5941,
											"end": 6000,
											"name": "PUSH",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 5941,
											"end": 6000,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5941,
											"end": 6000,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 5941,
											"end": 5947,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 5941,
											"end": 6000,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5941,
											"end": 6000,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 5941,
											"end": 6000,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5925,
											"end": 6000,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5925,
											"end": 6000,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6010,
											"end": 6050,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 6026,
											"end": 6036,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 6038,
											"end": 6041,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6043,
											"end": 6049,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6010,
											"end": 6025,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 6010,
											"end": 6050,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6010,
											"end": 6050,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 6010,
											"end": 6050,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6067,
											"end": 6071,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6067,
											"end": 6071,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 5844,
											"end": 6078,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5844,
											"end": 6078,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8694,
											"end": 8913,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 8694,
											"end": 8913,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8799,
											"end": 8822,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8799,
											"end": 8822,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8759,
											"end": 8765,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8799,
											"end": 8822,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8799,
											"end": 8822,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8799,
											"end": 8822,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8799,
											"end": 8813,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8799,
											"end": 8822,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8799,
											"end": 8822,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8799,
											"end": 8822,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8799,
											"end": 8822,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8799,
											"end": 8822,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8799,
											"end": 8822,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8799,
											"end": 8822,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8799,
											"end": 8822,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8839,
											"end": 8855,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8839,
											"end": 8906,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 8839,
											"end": 8906,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8905,
											"end": 8906,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8839,
											"end": 8906,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 8839,
											"end": 8906,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8839,
											"end": 8906,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 8839,
											"end": 8906,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8858,
											"end": 8878,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8858,
											"end": 8878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8858,
											"end": 8878,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8858,
											"end": 8878,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8858,
											"end": 8878,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8858,
											"end": 8878,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8858,
											"end": 8869,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 8858,
											"end": 8878,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8858,
											"end": 8878,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8858,
											"end": 8878,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8858,
											"end": 8878,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8858,
											"end": 8878,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8858,
											"end": 8878,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8879,
											"end": 8895,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 8894,
											"end": 8895,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8879,
											"end": 8891,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8879,
											"end": 8895,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 8879,
											"end": 8895,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8879,
											"end": 8895,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 8879,
											"end": 8895,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8858,
											"end": 8896,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8858,
											"end": 8896,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8858,
											"end": 8896,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8858,
											"end": 8896,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8858,
											"end": 8896,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8858,
											"end": 8896,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8858,
											"end": 8896,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8858,
											"end": 8896,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8858,
											"end": 8896,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8858,
											"end": 8896,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8858,
											"end": 8896,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8858,
											"end": 8896,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8858,
											"end": 8896,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 8858,
											"end": 8896,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8858,
											"end": 8902,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8858,
											"end": 8902,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8858,
											"end": 8902,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8858,
											"end": 8902,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8839,
											"end": 8906,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 8839,
											"end": 8906,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8832,
											"end": 8906,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 8694,
											"end": 8913,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8694,
											"end": 8913,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7708,
											"end": 8500,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 7708,
											"end": 8500,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7903,
											"end": 7907,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7903,
											"end": 7907,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7903,
											"end": 7907,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7903,
											"end": 7907,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7903,
											"end": 7907,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7903,
											"end": 7907,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7903,
											"end": 7907,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7903,
											"end": 7907,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7903,
											"end": 7907,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 7903,
											"end": 7907,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7903,
											"end": 7907,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "10DBDB5C1BDD5B99"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7903,
											"end": 7907,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7903,
											"end": 7907,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7903,
											"end": 7907,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7903,
											"end": 7907,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7903,
											"end": 7907,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7859,
											"end": 7939,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7859,
											"end": 7939,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2645,
											"end": 2725,
											"name": "PUSH",
											"source": 0,
											"value": "8CAD95687BA82C2CE50E74F7B754645E5117C3A5BEC8151C0726D5857980A866"
										},
										{
											"begin": 7859,
											"end": 7939,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7859,
											"end": 7939,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7859,
											"end": 7939,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6045,
											"end": 6070,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7887,
											"end": 7909,
											"name": "PUSH",
											"source": 0,
											"value": "561CA898CCE9F021C15A441EF41899706E923541CEE724530075D1A1144761C7"
										},
										{
											"begin": 6086,
											"end": 6104,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6086,
											"end": 6104,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6086,
											"end": 6104,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6079,
											"end": 6113,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13858,
											"end": 13867,
											"name": "CHAINID",
											"source": 0
										},
										{
											"begin": 6129,
											"end": 6147,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 6129,
											"end": 6147,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6129,
											"end": 6147,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6122,
											"end": 6156,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7933,
											"end": 7937,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 6172,
											"end": 6190,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 6172,
											"end": 6190,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6172,
											"end": 6190,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6172,
											"end": 6190,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6165,
											"end": 6225,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6165,
											"end": 6225,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6165,
											"end": 6225,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6165,
											"end": 6225,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7859,
											"end": 7939,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7859,
											"end": 7939,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7859,
											"end": 7939,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7859,
											"end": 7939,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7859,
											"end": 7939,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7859,
											"end": 7939,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7859,
											"end": 7939,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7859,
											"end": 7939,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7859,
											"end": 7939,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7859,
											"end": 7939,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6017,
											"end": 6036,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 6017,
											"end": 6036,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6017,
											"end": 6036,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7859,
											"end": 7939,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7859,
											"end": 7939,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7849,
											"end": 7940,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7849,
											"end": 7940,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7849,
											"end": 7940,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7849,
											"end": 7940,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7849,
											"end": 7940,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7849,
											"end": 7940,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2862,
											"end": 2933,
											"name": "PUSH",
											"source": 0,
											"value": "E48329057BFD03D55E49B547132E39CFFD9C1820AD7B9D4C5307691425D15ADF"
										},
										{
											"begin": 7981,
											"end": 8038,
											"name": "PUSH",
											"source": 0,
											"value": "C0"
										},
										{
											"begin": 7981,
											"end": 8038,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7981,
											"end": 8038,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6467,
											"end": 6492,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6528,
											"end": 6560,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 6528,
											"end": 6560,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6508,
											"end": 6526,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 6508,
											"end": 6526,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6508,
											"end": 6526,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6501,
											"end": 6561,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6577,
											"end": 6595,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 6577,
											"end": 6595,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6577,
											"end": 6595,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6604,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6604,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6604,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6620,
											"end": 6638,
											"name": "PUSH",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 6620,
											"end": 6638,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6620,
											"end": 6638,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6620,
											"end": 6638,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6613,
											"end": 6647,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 6613,
											"end": 6647,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6613,
											"end": 6647,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7981,
											"end": 8038,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7981,
											"end": 8038,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7981,
											"end": 8038,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7981,
											"end": 8038,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7981,
											"end": 8038,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7981,
											"end": 8038,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7981,
											"end": 8038,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7981,
											"end": 8038,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7981,
											"end": 8038,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7981,
											"end": 8038,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6439,
											"end": 6458,
											"name": "PUSH",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 6439,
											"end": 6458,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6439,
											"end": 6458,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7981,
											"end": 8038,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7981,
											"end": 8038,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 7981,
											"end": 8038,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7971,
											"end": 8039,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7971,
											"end": 8039,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7971,
											"end": 8039,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 7971,
											"end": 8039,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7971,
											"end": 8039,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7971,
											"end": 8039,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7971,
											"end": 8039,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7971,
											"end": 8039,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7971,
											"end": 8039,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7971,
											"end": 8039,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1901"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8076,
											"end": 8133,
											"name": "PUSH",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 8076,
											"end": 8133,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8076,
											"end": 8133,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6916,
											"end": 6943,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6959,
											"end": 6970,
											"name": "PUSH",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 6959,
											"end": 6970,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6959,
											"end": 6970,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6952,
											"end": 6979,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6952,
											"end": 6979,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6952,
											"end": 6979,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6995,
											"end": 7007,
											"name": "PUSH",
											"source": 1,
											"value": "182"
										},
										{
											"begin": 6995,
											"end": 7007,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6995,
											"end": 7007,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6988,
											"end": 7016,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6988,
											"end": 7016,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6988,
											"end": 7016,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7849,
											"end": 7940,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7849,
											"end": 7940,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 7032,
											"end": 7044,
											"name": "PUSH",
											"source": 1,
											"value": "1A2"
										},
										{
											"begin": 7032,
											"end": 7044,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8076,
											"end": 8133,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8076,
											"end": 8133,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8076,
											"end": 8133,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 8076,
											"end": 8133,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8076,
											"end": 8133,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8076,
											"end": 8133,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8076,
											"end": 8133,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8076,
											"end": 8133,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8076,
											"end": 8133,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8076,
											"end": 8133,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8076,
											"end": 8133,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8076,
											"end": 8133,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8066,
											"end": 8134,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8066,
											"end": 8134,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8076,
											"end": 8133,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8066,
											"end": 8134,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8066,
											"end": 8134,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8066,
											"end": 8134,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8066,
											"end": 8134,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8144,
											"end": 8161,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8164,
											"end": 8190,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8164,
											"end": 8190,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8164,
											"end": 8190,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8164,
											"end": 8190,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8164,
											"end": 8190,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8164,
											"end": 8190,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8164,
											"end": 8190,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8164,
											"end": 8190,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8164,
											"end": 8190,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7282,
											"end": 7307,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7282,
											"end": 7307,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7282,
											"end": 7307,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7355,
											"end": 7359,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 7343,
											"end": 7360,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 7343,
											"end": 7360,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7323,
											"end": 7341,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7323,
											"end": 7341,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7323,
											"end": 7341,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7316,
											"end": 7361,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7316,
											"end": 7361,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7316,
											"end": 7361,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7316,
											"end": 7361,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7377,
											"end": 7395,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 7377,
											"end": 7395,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7377,
											"end": 7395,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7370,
											"end": 7404,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 7370,
											"end": 7404,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7370,
											"end": 7404,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7420,
											"end": 7438,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 7420,
											"end": 7438,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7420,
											"end": 7438,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7413,
											"end": 7447,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7413,
											"end": 7447,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7413,
											"end": 7447,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8066,
											"end": 8134,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8066,
											"end": 8134,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8144,
											"end": 8161,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8164,
											"end": 8190,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8164,
											"end": 8190,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7254,
											"end": 7273,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 7254,
											"end": 7273,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8164,
											"end": 8190,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8164,
											"end": 8190,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8164,
											"end": 8190,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8164,
											"end": 8190,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8164,
											"end": 8190,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8164,
											"end": 8190,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8164,
											"end": 8190,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8164,
											"end": 8190,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8164,
											"end": 8190,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8164,
											"end": 8190,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8164,
											"end": 8190,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8164,
											"end": 8190,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8164,
											"end": 8190,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 8164,
											"end": 8190,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 8164,
											"end": 8190,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8164,
											"end": 8190,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8164,
											"end": 8190,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8164,
											"end": 8190,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 8164,
											"end": 8190,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8164,
											"end": 8190,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 8164,
											"end": 8190,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8164,
											"end": 8190,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8164,
											"end": 8190,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 8164,
											"end": 8190,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 8164,
											"end": 8190,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8164,
											"end": 8190,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8164,
											"end": 8190,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 8164,
											"end": 8190,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8164,
											"end": 8190,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8164,
											"end": 8190,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 8164,
											"end": 8190,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8164,
											"end": 8190,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8164,
											"end": 8190,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8208,
											"end": 8231,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8208,
											"end": 8231,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8200,
											"end": 8274,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 8200,
											"end": 8274,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8200,
											"end": 8274,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8200,
											"end": 8274,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8200,
											"end": 8274,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8200,
											"end": 8274,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7660,
											"end": 7662,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8200,
											"end": 8274,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8200,
											"end": 8274,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8200,
											"end": 8274,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7642,
											"end": 7663,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7699,
											"end": 7701,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 7679,
											"end": 7697,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 7679,
											"end": 7697,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7679,
											"end": 7697,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7672,
											"end": 7702,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7738,
											"end": 7772,
											"name": "PUSH",
											"source": 1,
											"value": "436F6D703A3A64656C656761746542795369673A20696E76616C696420736967"
										},
										{
											"begin": 7718,
											"end": 7736,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 7718,
											"end": 7736,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7718,
											"end": 7736,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7711,
											"end": 7773,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6E6174757265"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7789,
											"end": 7807,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 7789,
											"end": 7807,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7789,
											"end": 7807,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7782,
											"end": 7818,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7835,
											"end": 7854,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 7835,
											"end": 7854,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8200,
											"end": 8274,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 7458,
											"end": 7860,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8200,
											"end": 8274,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 8200,
											"end": 8274,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8301,
											"end": 8318,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8301,
											"end": 8318,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8301,
											"end": 8318,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8301,
											"end": 8318,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8301,
											"end": 8318,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8301,
											"end": 8318,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8301,
											"end": 8307,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 8301,
											"end": 8318,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8301,
											"end": 8318,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8301,
											"end": 8318,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8301,
											"end": 8318,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8301,
											"end": 8318,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8301,
											"end": 8320,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8301,
											"end": 8320,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8301,
											"end": 8320,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8301,
											"end": 8320,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 8301,
											"end": 8320,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8301,
											"end": 8320,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 8301,
											"end": 8320,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8301,
											"end": 8320,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 8301,
											"end": 8320,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8301,
											"end": 8320,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8301,
											"end": 8320,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8301,
											"end": 8320,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8301,
											"end": 8320,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 8292,
											"end": 8297,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 8292,
											"end": 8320,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8284,
											"end": 8359,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 8284,
											"end": 8359,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8284,
											"end": 8359,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8284,
											"end": 8359,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8284,
											"end": 8359,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8284,
											"end": 8359,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8207,
											"end": 8209,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8284,
											"end": 8359,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8284,
											"end": 8359,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8284,
											"end": 8359,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8189,
											"end": 8210,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8246,
											"end": 8248,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 8226,
											"end": 8244,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 8226,
											"end": 8244,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8226,
											"end": 8244,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8219,
											"end": 8249,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8285,
											"end": 8319,
											"name": "PUSH",
											"source": 1,
											"value": "436F6D703A3A64656C656761746542795369673A20696E76616C6964206E6F6E"
										},
										{
											"begin": 8265,
											"end": 8283,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 8265,
											"end": 8283,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8265,
											"end": 8283,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8258,
											"end": 8320,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8336,
											"end": 8354,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 8336,
											"end": 8354,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8336,
											"end": 8354,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8329,
											"end": 8361,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8378,
											"end": 8397,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 8378,
											"end": 8397,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8284,
											"end": 8359,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 8005,
											"end": 8403,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8284,
											"end": 8359,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 8284,
											"end": 8359,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8396,
											"end": 8402,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 8377,
											"end": 8392,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 8377,
											"end": 8402,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 8377,
											"end": 8402,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8369,
											"end": 8445,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 8369,
											"end": 8445,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8369,
											"end": 8445,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8369,
											"end": 8445,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8369,
											"end": 8445,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8369,
											"end": 8445,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8610,
											"end": 8612,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8369,
											"end": 8445,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8369,
											"end": 8445,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8369,
											"end": 8445,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8592,
											"end": 8613,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8649,
											"end": 8651,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 8629,
											"end": 8647,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 8629,
											"end": 8647,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8629,
											"end": 8647,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8622,
											"end": 8652,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8688,
											"end": 8722,
											"name": "PUSH",
											"source": 1,
											"value": "436F6D703A3A64656C656761746542795369673A207369676E61747572652065"
										},
										{
											"begin": 8668,
											"end": 8686,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 8668,
											"end": 8686,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8668,
											"end": 8686,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8661,
											"end": 8723,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1E1C1A5C9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8739,
											"end": 8757,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 8739,
											"end": 8757,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8739,
											"end": 8757,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8732,
											"end": 8768,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8785,
											"end": 8804,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 8785,
											"end": 8804,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8369,
											"end": 8445,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 8408,
											"end": 8810,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8369,
											"end": 8445,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 8369,
											"end": 8445,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8462,
											"end": 8493,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 8472,
											"end": 8481,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8483,
											"end": 8492,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 8462,
											"end": 8471,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 8462,
											"end": 8493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8462,
											"end": 8493,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 8462,
											"end": 8493,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8455,
											"end": 8493,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8455,
											"end": 8493,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8455,
											"end": 8493,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8455,
											"end": 8493,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7708,
											"end": 8500,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 7708,
											"end": 8500,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7708,
											"end": 8500,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7708,
											"end": 8500,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7708,
											"end": 8500,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7708,
											"end": 8500,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7708,
											"end": 8500,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7708,
											"end": 8500,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7708,
											"end": 8500,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13228,
											"end": 13386,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 13228,
											"end": 13386,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13303,
											"end": 13309,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13340,
											"end": 13352,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13329,
											"end": 13338,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 13329,
											"end": 13338,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 13321,
											"end": 13353,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 13321,
											"end": 13353,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13321,
											"end": 13353,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13321,
											"end": 13353,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13321,
											"end": 13353,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13321,
											"end": 13353,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13321,
											"end": 13353,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13321,
											"end": 13353,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13321,
											"end": 13353,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 13321,
											"end": 13353,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13321,
											"end": 13353,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13321,
											"end": 13353,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 13321,
											"end": 13353,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13321,
											"end": 13353,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 13321,
											"end": 13353,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13377,
											"end": 13378,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13377,
											"end": 13378,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13228,
											"end": 13386,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13228,
											"end": 13386,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13582,
											"end": 13744,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 13582,
											"end": 13744,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13668,
											"end": 13674,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13699,
											"end": 13700,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13694,
											"end": 13700,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13694,
											"end": 13695,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13694,
											"end": 13700,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13694,
											"end": 13700,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 13694,
											"end": 13700,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13702,
											"end": 13714,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13686,
											"end": 13715,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13686,
											"end": 13715,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 13686,
											"end": 13715,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13686,
											"end": 13715,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13686,
											"end": 13715,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13686,
											"end": 13715,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13686,
											"end": 13715,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13686,
											"end": 13715,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13686,
											"end": 13715,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13686,
											"end": 13715,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 13686,
											"end": 13715,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13686,
											"end": 13715,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13686,
											"end": 13715,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 13686,
											"end": 13715,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13686,
											"end": 13715,
											"name": "tag",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 13686,
											"end": 13715,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13732,
											"end": 13737,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 13736,
											"end": 13737,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13732,
											"end": 13733,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 13732,
											"end": 13737,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 13732,
											"end": 13737,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13732,
											"end": 13737,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 13732,
											"end": 13737,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13725,
											"end": 13737,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 13582,
											"end": 13744,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13582,
											"end": 13744,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10900,
											"end": 11505,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 10900,
											"end": 11505,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10993,
											"end": 11010,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10993,
											"end": 11010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10985,
											"end": 11075,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 10985,
											"end": 11075,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10985,
											"end": 11075,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10985,
											"end": 11075,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10985,
											"end": 11075,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10985,
											"end": 11075,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9240,
											"end": 9242,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10985,
											"end": 11075,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10985,
											"end": 11075,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10985,
											"end": 11075,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9222,
											"end": 9243,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9279,
											"end": 9281,
											"name": "PUSH",
											"source": 1,
											"value": "3C"
										},
										{
											"begin": 9259,
											"end": 9277,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 9259,
											"end": 9277,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9259,
											"end": 9277,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9252,
											"end": 9282,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9318,
											"end": 9352,
											"name": "PUSH",
											"source": 1,
											"value": "436F6D703A3A5F7472616E73666572546F6B656E733A2063616E6E6F74207472"
										},
										{
											"begin": 9298,
											"end": 9316,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 9298,
											"end": 9316,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9298,
											"end": 9316,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9291,
											"end": 9353,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9389,
											"end": 9419,
											"name": "PUSH",
											"source": 1,
											"value": "616E736665722066726F6D20746865207A65726F206164647265737300000000"
										},
										{
											"begin": 9369,
											"end": 9387,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 9369,
											"end": 9387,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9369,
											"end": 9387,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9362,
											"end": 9420,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9437,
											"end": 9456,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 9437,
											"end": 9456,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10985,
											"end": 11075,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 9038,
											"end": 9462,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10985,
											"end": 11075,
											"name": "tag",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 10985,
											"end": 11075,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11093,
											"end": 11110,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11093,
											"end": 11110,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11085,
											"end": 11173,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 11085,
											"end": 11173,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11085,
											"end": 11173,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11085,
											"end": 11173,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11085,
											"end": 11173,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11085,
											"end": 11173,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9669,
											"end": 9671,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11085,
											"end": 11173,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11085,
											"end": 11173,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11085,
											"end": 11173,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9651,
											"end": 9672,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9708,
											"end": 9710,
											"name": "PUSH",
											"source": 1,
											"value": "3A"
										},
										{
											"begin": 9688,
											"end": 9706,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 9688,
											"end": 9706,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9688,
											"end": 9706,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9681,
											"end": 9711,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9747,
											"end": 9781,
											"name": "PUSH",
											"source": 1,
											"value": "436F6D703A3A5F7472616E73666572546F6B656E733A2063616E6E6F74207472"
										},
										{
											"begin": 9727,
											"end": 9745,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 9727,
											"end": 9745,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9727,
											"end": 9745,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9720,
											"end": 9782,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9818,
											"end": 9846,
											"name": "PUSH",
											"source": 1,
											"value": "616E7366657220746F20746865207A65726F2061646472657373000000000000"
										},
										{
											"begin": 9798,
											"end": 9816,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 9798,
											"end": 9816,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9798,
											"end": 9816,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9791,
											"end": 9847,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9864,
											"end": 9883,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 9864,
											"end": 9883,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11085,
											"end": 11173,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 9467,
											"end": 9889,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11085,
											"end": 11173,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 11085,
											"end": 11173,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11206,
											"end": 11219,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11206,
											"end": 11219,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11206,
											"end": 11219,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11206,
											"end": 11219,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11206,
											"end": 11219,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11206,
											"end": 11219,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11206,
											"end": 11214,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 11206,
											"end": 11219,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11206,
											"end": 11219,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11206,
											"end": 11219,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11206,
											"end": 11219,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11206,
											"end": 11219,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11206,
											"end": 11219,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11206,
											"end": 11219,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11206,
											"end": 11219,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11206,
											"end": 11219,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 11206,
											"end": 11219,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11200,
											"end": 11286,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11200,
											"end": 11286,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11200,
											"end": 11286,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 11200,
											"end": 11286,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11200,
											"end": 11286,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11200,
											"end": 11286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11200,
											"end": 11286,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 11200,
											"end": 11286,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11200,
											"end": 11286,
											"name": "PUSH",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 11200,
											"end": 11286,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11200,
											"end": 11286,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11200,
											"end": 11286,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11200,
											"end": 11286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 11200,
											"end": 11286,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11206,
											"end": 11219,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11206,
											"end": 11219,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 11206,
											"end": 11219,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11206,
											"end": 11219,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 11221,
											"end": 11227,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 11221,
											"end": 11227,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 11200,
											"end": 11286,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11200,
											"end": 11286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11200,
											"end": 11286,
											"name": "PUSH data",
											"source": 0,
											"value": "20F75E61DAE66BD43CC4D6E74412A2A0DFC4C34B4746776EB4E12C627179461C"
										},
										{
											"begin": 11200,
											"end": 11286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11200,
											"end": 11286,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11200,
											"end": 11286,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11200,
											"end": 11286,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 11200,
											"end": 11205,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 11200,
											"end": 11286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11200,
											"end": 11286,
											"name": "tag",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 11200,
											"end": 11286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11184,
											"end": 11197,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11184,
											"end": 11197,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11184,
											"end": 11197,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11184,
											"end": 11197,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11184,
											"end": 11197,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11184,
											"end": 11197,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11184,
											"end": 11197,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11184,
											"end": 11192,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 11184,
											"end": 11197,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11184,
											"end": 11197,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11184,
											"end": 11197,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11184,
											"end": 11197,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11184,
											"end": 11197,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11184,
											"end": 11197,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11184,
											"end": 11197,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11184,
											"end": 11197,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 11184,
											"end": 11286,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11184,
											"end": 11286,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 11184,
											"end": 11286,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11184,
											"end": 11286,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 11184,
											"end": 11286,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 11184,
											"end": 11286,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11184,
											"end": 11286,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 11184,
											"end": 11286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11184,
											"end": 11286,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 11318,
											"end": 11331,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 11318,
											"end": 11331,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 11318,
											"end": 11331,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11318,
											"end": 11331,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11318,
											"end": 11331,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11318,
											"end": 11331,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11318,
											"end": 11331,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11318,
											"end": 11331,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11318,
											"end": 11331,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 11318,
											"end": 11331,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11312,
											"end": 11392,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11312,
											"end": 11392,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11312,
											"end": 11392,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 11312,
											"end": 11392,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11312,
											"end": 11392,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11312,
											"end": 11392,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11312,
											"end": 11392,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 11312,
											"end": 11392,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11312,
											"end": 11392,
											"name": "PUSH",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 11312,
											"end": 11392,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11312,
											"end": 11392,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11312,
											"end": 11392,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11312,
											"end": 11392,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 11312,
											"end": 11392,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 11318,
											"end": 11331,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11318,
											"end": 11331,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11318,
											"end": 11331,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11318,
											"end": 11331,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11318,
											"end": 11331,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 11333,
											"end": 11339,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 11333,
											"end": 11339,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 11312,
											"end": 11392,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11312,
											"end": 11392,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11312,
											"end": 11392,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11312,
											"end": 11392,
											"name": "PUSH data",
											"source": 0,
											"value": "838EC7826D8A7E194A0B4C14B8572B8A97CBF1EC9A1DD8F0DC2CA0DBF889365C"
										},
										{
											"begin": 11312,
											"end": 11392,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11312,
											"end": 11392,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11312,
											"end": 11392,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11312,
											"end": 11392,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 11312,
											"end": 11317,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 11312,
											"end": 11392,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11312,
											"end": 11392,
											"name": "tag",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 11312,
											"end": 11392,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11296,
											"end": 11309,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11296,
											"end": 11309,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11296,
											"end": 11309,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11296,
											"end": 11309,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11296,
											"end": 11309,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11296,
											"end": 11309,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11296,
											"end": 11309,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11296,
											"end": 11304,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 11296,
											"end": 11309,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11296,
											"end": 11309,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11296,
											"end": 11309,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11296,
											"end": 11309,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11296,
											"end": 11309,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11296,
											"end": 11309,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11296,
											"end": 11309,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11296,
											"end": 11309,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11296,
											"end": 11309,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 11296,
											"end": 11392,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11296,
											"end": 11392,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 11296,
											"end": 11392,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11296,
											"end": 11392,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 11296,
											"end": 11392,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 11296,
											"end": 11392,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11296,
											"end": 11392,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 11296,
											"end": 11392,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11296,
											"end": 11392,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 11407,
											"end": 11433,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11407,
											"end": 11433,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2802,
											"end": 2841,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2802,
											"end": 2841,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2802,
											"end": 2841,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2784,
											"end": 2842,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2784,
											"end": 2842,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11296,
											"end": 11309,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11296,
											"end": 11309,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 11407,
											"end": 11433,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11407,
											"end": 11433,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 11407,
											"end": 11433,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11407,
											"end": 11433,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11407,
											"end": 11433,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 11407,
											"end": 11433,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2757,
											"end": 2775,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11407,
											"end": 11433,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11407,
											"end": 11433,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11407,
											"end": 11433,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11407,
											"end": 11433,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11407,
											"end": 11433,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11407,
											"end": 11433,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11407,
											"end": 11433,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11459,
											"end": 11473,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11459,
											"end": 11473,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11459,
											"end": 11473,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11459,
											"end": 11473,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11459,
											"end": 11473,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11459,
											"end": 11473,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11459,
											"end": 11473,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11459,
											"end": 11468,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 11459,
											"end": 11473,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11459,
											"end": 11473,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11459,
											"end": 11473,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11459,
											"end": 11473,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11459,
											"end": 11473,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11459,
											"end": 11473,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 11459,
											"end": 11473,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11475,
											"end": 11489,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 11475,
											"end": 11489,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11475,
											"end": 11489,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11475,
											"end": 11489,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11475,
											"end": 11489,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11475,
											"end": 11489,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11475,
											"end": 11489,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 11475,
											"end": 11489,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11444,
											"end": 11498,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 11444,
											"end": 11498,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 11459,
											"end": 11473,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11459,
											"end": 11473,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11459,
											"end": 11473,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11459,
											"end": 11473,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11475,
											"end": 11489,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11491,
											"end": 11497,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11444,
											"end": 11458,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 11444,
											"end": 11498,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11444,
											"end": 11498,
											"name": "tag",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 11444,
											"end": 11498,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10900,
											"end": 11505,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10900,
											"end": 11505,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10900,
											"end": 11505,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10900,
											"end": 11505,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10527,
											"end": 10894,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 10527,
											"end": 10894,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10629,
											"end": 10649,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10629,
											"end": 10649,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10629,
											"end": 10649,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10603,
											"end": 10626,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10629,
											"end": 10649,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10629,
											"end": 10649,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10629,
											"end": 10649,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10629,
											"end": 10638,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 10629,
											"end": 10649,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10629,
											"end": 10649,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10629,
											"end": 10649,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10629,
											"end": 10649,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10629,
											"end": 10649,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10629,
											"end": 10649,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10629,
											"end": 10649,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10629,
											"end": 10649,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10629,
											"end": 10649,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10629,
											"end": 10649,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10629,
											"end": 10649,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 10685,
											"end": 10704,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10685,
											"end": 10704,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10685,
											"end": 10704,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10685,
											"end": 10704,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 10685,
											"end": 10704,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10685,
											"end": 10704,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10714,
											"end": 10734,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 10714,
											"end": 10734,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10714,
											"end": 10734,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 10714,
											"end": 10734,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10714,
											"end": 10746,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 10714,
											"end": 10746,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 10714,
											"end": 10746,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10714,
											"end": 10746,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10714,
											"end": 10746,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10714,
											"end": 10746,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10714,
											"end": 10746,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 10714,
											"end": 10746,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10714,
											"end": 10746,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10714,
											"end": 10746,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 10762,
											"end": 10816,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10762,
											"end": 10816,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10629,
											"end": 10649,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10629,
											"end": 10649,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10629,
											"end": 10649,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 10629,
											"end": 10649,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10629,
											"end": 10649,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10685,
											"end": 10704,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10685,
											"end": 10704,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10685,
											"end": 10704,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10685,
											"end": 10704,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 10714,
											"end": 10746,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10714,
											"end": 10746,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10629,
											"end": 10649,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 10629,
											"end": 10649,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10629,
											"end": 10649,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10762,
											"end": 10816,
											"name": "PUSH",
											"source": 0,
											"value": "3134E8A2E6D97E929A7E54011EA5485D7D196DD5F0BA4D4EF95803E8E3FC257F"
										},
										{
											"begin": 10762,
											"end": 10816,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10603,
											"end": 10626,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10762,
											"end": 10816,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 10827,
											"end": 10887,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 10842,
											"end": 10857,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10859,
											"end": 10868,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10870,
											"end": 10886,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10827,
											"end": 10841,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 10827,
											"end": 10887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10827,
											"end": 10887,
											"name": "tag",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 10827,
											"end": 10887,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10593,
											"end": 10894,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10593,
											"end": 10894,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10527,
											"end": 10894,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10527,
											"end": 10894,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10527,
											"end": 10894,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13392,
											"end": 13576,
											"name": "tag",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 13392,
											"end": 13576,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13478,
											"end": 13484,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13478,
											"end": 13484,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13507,
											"end": 13512,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 13511,
											"end": 13512,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 13507,
											"end": 13508,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 13507,
											"end": 13512,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 13507,
											"end": 13512,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13507,
											"end": 13512,
											"name": "tag",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 13507,
											"end": 13512,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13496,
											"end": 13512,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13496,
											"end": 13512,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13535,
											"end": 13536,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13530,
											"end": 13536,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13530,
											"end": 13531,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13530,
											"end": 13536,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13530,
											"end": 13536,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 13530,
											"end": 13536,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13538,
											"end": 13550,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13522,
											"end": 13551,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13522,
											"end": 13551,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 13522,
											"end": 13551,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13522,
											"end": 13551,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13522,
											"end": 13551,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13522,
											"end": 13551,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13522,
											"end": 13551,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13522,
											"end": 13551,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13522,
											"end": 13551,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13522,
											"end": 13551,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 13522,
											"end": 13551,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13522,
											"end": 13551,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13522,
											"end": 13551,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 13522,
											"end": 13551,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13522,
											"end": 13551,
											"name": "tag",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 13522,
											"end": 13551,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13568,
											"end": 13569,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 13392,
											"end": 13576,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13392,
											"end": 13576,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11511,
											"end": 12434,
											"name": "tag",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 11511,
											"end": 12434,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11615,
											"end": 11621,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11605,
											"end": 11621,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11605,
											"end": 11611,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11605,
											"end": 11621,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11605,
											"end": 11621,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11605,
											"end": 11621,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11605,
											"end": 11635,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11605,
											"end": 11635,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11605,
											"end": 11635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 11605,
											"end": 11635,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11605,
											"end": 11635,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11634,
											"end": 11635,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11625,
											"end": 11631,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11625,
											"end": 11635,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11625,
											"end": 11635,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 11605,
											"end": 11635,
											"name": "tag",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 11605,
											"end": 11635,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11601,
											"end": 12428,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11601,
											"end": 12428,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 11601,
											"end": 12428,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11655,
											"end": 11675,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11655,
											"end": 11675,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11655,
											"end": 11675,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11651,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 11651,
											"end": 12028,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11714,
											"end": 11736,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11714,
											"end": 11736,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11695,
											"end": 11711,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11714,
											"end": 11736,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11714,
											"end": 11736,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11714,
											"end": 11736,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11714,
											"end": 11728,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11714,
											"end": 11736,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11714,
											"end": 11736,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11714,
											"end": 11736,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11714,
											"end": 11736,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11714,
											"end": 11736,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 11714,
											"end": 11736,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11714,
											"end": 11736,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 11714,
											"end": 11736,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11714,
											"end": 11736,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11773,
											"end": 11786,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11773,
											"end": 11833,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 11773,
											"end": 11833,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11832,
											"end": 11833,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11773,
											"end": 11833,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 11773,
											"end": 11833,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11773,
											"end": 11833,
											"name": "tag",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 11773,
											"end": 11833,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11789,
											"end": 11808,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 11789,
											"end": 11808,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11789,
											"end": 11808,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11789,
											"end": 11808,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11789,
											"end": 11808,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11789,
											"end": 11808,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11789,
											"end": 11800,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 11789,
											"end": 11808,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11789,
											"end": 11808,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11789,
											"end": 11808,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11789,
											"end": 11808,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11789,
											"end": 11808,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 11789,
											"end": 11808,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11809,
											"end": 11822,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 11821,
											"end": 11822,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 11809,
											"end": 11818,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 11809,
											"end": 11822,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 11809,
											"end": 11822,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11809,
											"end": 11822,
											"name": "tag",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 11809,
											"end": 11822,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11789,
											"end": 11823,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 11789,
											"end": 11823,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11789,
											"end": 11823,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11789,
											"end": 11823,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11789,
											"end": 11823,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11789,
											"end": 11823,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11789,
											"end": 11823,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11789,
											"end": 11823,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11789,
											"end": 11823,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11789,
											"end": 11823,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11789,
											"end": 11823,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11789,
											"end": 11823,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11789,
											"end": 11823,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 11789,
											"end": 11823,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 11789,
											"end": 11829,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11789,
											"end": 11829,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11789,
											"end": 11829,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11789,
											"end": 11829,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11773,
											"end": 11833,
											"name": "tag",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 11773,
											"end": 11833,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11754,
											"end": 11833,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11754,
											"end": 11833,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11851,
											"end": 11867,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11870,
											"end": 11938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 11876,
											"end": 11885,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11887,
											"end": 11893,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 11870,
											"end": 11938,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11870,
											"end": 11938,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11870,
											"end": 11938,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11870,
											"end": 11938,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 11870,
											"end": 11938,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11870,
											"end": 11938,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11870,
											"end": 11938,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11870,
											"end": 11938,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11870,
											"end": 11938,
											"name": "PUSH",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 11870,
											"end": 11938,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11870,
											"end": 11938,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11870,
											"end": 11938,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11870,
											"end": 11938,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11870,
											"end": 11938,
											"name": "PUSH data",
											"source": 0,
											"value": "79BF2F3C2009651B33D37EFB8A65657C3E203B2C36F61068863922CB9E64A77A"
										},
										{
											"begin": 11870,
											"end": 11938,
											"name": "PUSH",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 11870,
											"end": 11938,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11870,
											"end": 11938,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 11870,
											"end": 11875,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 11870,
											"end": 11938,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11870,
											"end": 11938,
											"name": "tag",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 11870,
											"end": 11938,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11851,
											"end": 11938,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11851,
											"end": 11938,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11956,
											"end": 12013,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 11973,
											"end": 11979,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 11981,
											"end": 11990,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11992,
											"end": 12001,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 12003,
											"end": 12012,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11956,
											"end": 11972,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 11956,
											"end": 12013,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11956,
											"end": 12013,
											"name": "tag",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 11956,
											"end": 12013,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11677,
											"end": 12028,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11677,
											"end": 12028,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11677,
											"end": 12028,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11651,
											"end": 12028,
											"name": "tag",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 11651,
											"end": 12028,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12046,
											"end": 12066,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12046,
											"end": 12066,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12046,
											"end": 12066,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12042,
											"end": 12418,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 12042,
											"end": 12418,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12105,
											"end": 12127,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12105,
											"end": 12127,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12086,
											"end": 12102,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12105,
											"end": 12127,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12105,
											"end": 12127,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12105,
											"end": 12127,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12105,
											"end": 12119,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12105,
											"end": 12127,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12105,
											"end": 12127,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12105,
											"end": 12127,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12105,
											"end": 12127,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12105,
											"end": 12127,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12105,
											"end": 12127,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12105,
											"end": 12127,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 12105,
											"end": 12127,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12105,
											"end": 12127,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12164,
											"end": 12177,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12164,
											"end": 12224,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 12164,
											"end": 12224,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12223,
											"end": 12224,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12164,
											"end": 12224,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 12164,
											"end": 12224,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12164,
											"end": 12224,
											"name": "tag",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 12164,
											"end": 12224,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12180,
											"end": 12199,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 12180,
											"end": 12199,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12180,
											"end": 12199,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12180,
											"end": 12199,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12180,
											"end": 12199,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12180,
											"end": 12199,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12180,
											"end": 12191,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 12180,
											"end": 12199,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12180,
											"end": 12199,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12180,
											"end": 12199,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12180,
											"end": 12199,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12180,
											"end": 12199,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12180,
											"end": 12199,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12200,
											"end": 12213,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 12212,
											"end": 12213,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 12200,
											"end": 12209,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 12200,
											"end": 12213,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 12200,
											"end": 12213,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12200,
											"end": 12213,
											"name": "tag",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 12200,
											"end": 12213,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12180,
											"end": 12214,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 12180,
											"end": 12214,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12180,
											"end": 12214,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12180,
											"end": 12214,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12180,
											"end": 12214,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12180,
											"end": 12214,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12180,
											"end": 12214,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12180,
											"end": 12214,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12180,
											"end": 12214,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12180,
											"end": 12214,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12180,
											"end": 12214,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12180,
											"end": 12214,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12180,
											"end": 12214,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 12180,
											"end": 12214,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12180,
											"end": 12220,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12180,
											"end": 12220,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12180,
											"end": 12220,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12180,
											"end": 12220,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12164,
											"end": 12224,
											"name": "tag",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 12164,
											"end": 12224,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12145,
											"end": 12224,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12145,
											"end": 12224,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12242,
											"end": 12258,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12261,
											"end": 12328,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 12267,
											"end": 12276,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12278,
											"end": 12284,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 12261,
											"end": 12328,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12261,
											"end": 12328,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12261,
											"end": 12328,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12261,
											"end": 12328,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 12261,
											"end": 12328,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12261,
											"end": 12328,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12261,
											"end": 12328,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12261,
											"end": 12328,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12261,
											"end": 12328,
											"name": "PUSH",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 12261,
											"end": 12328,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12261,
											"end": 12328,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12261,
											"end": 12328,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12261,
											"end": 12328,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12261,
											"end": 12328,
											"name": "PUSH data",
											"source": 0,
											"value": "CAC5F7635B67ABA587752F385D4AAA6FE7D1615E382CD95E6C1AE76525BE695E"
										},
										{
											"begin": 12261,
											"end": 12328,
											"name": "PUSH",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 12261,
											"end": 12328,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12261,
											"end": 12328,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 12261,
											"end": 12266,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 12261,
											"end": 12328,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12261,
											"end": 12328,
											"name": "tag",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 12261,
											"end": 12328,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12242,
											"end": 12328,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12242,
											"end": 12328,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12346,
											"end": 12403,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 12363,
											"end": 12369,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 12371,
											"end": 12380,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 12382,
											"end": 12391,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 12393,
											"end": 12402,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 12440,
											"end": 13058,
											"name": "tag",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 12440,
											"end": 13058,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12557,
											"end": 12575,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12578,
											"end": 12654,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 12585,
											"end": 12597,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 12578,
											"end": 12654,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12578,
											"end": 12654,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12578,
											"end": 12654,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12578,
											"end": 12654,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 12578,
											"end": 12654,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12578,
											"end": 12654,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12578,
											"end": 12654,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12578,
											"end": 12654,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12578,
											"end": 12654,
											"name": "PUSH",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 12578,
											"end": 12654,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12578,
											"end": 12654,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12578,
											"end": 12654,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12578,
											"end": 12654,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12578,
											"end": 12654,
											"name": "PUSH data",
											"source": 0,
											"value": "6426C6C63F7C8DAECF0B8A35BFE8C0F43DC9621D39CB2BF0C2CD35CC9DB8742F"
										},
										{
											"begin": 12578,
											"end": 12654,
											"name": "PUSH",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 12578,
											"end": 12654,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12578,
											"end": 12654,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 12578,
											"end": 12584,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 12578,
											"end": 12654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12578,
											"end": 12654,
											"name": "tag",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 12578,
											"end": 12654,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12557,
											"end": 12654,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12557,
											"end": 12654,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12682,
											"end": 12683,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12667,
											"end": 12679,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 12667,
											"end": 12683,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 12667,
											"end": 12683,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12667,
											"end": 12683,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 12667,
											"end": 12752,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12667,
											"end": 12752,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12667,
											"end": 12752,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 12667,
											"end": 12752,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12687,
											"end": 12709,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 12687,
											"end": 12709,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12687,
											"end": 12709,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12687,
											"end": 12709,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12687,
											"end": 12709,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12687,
											"end": 12709,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12687,
											"end": 12698,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 12687,
											"end": 12709,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12687,
											"end": 12709,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12687,
											"end": 12709,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12687,
											"end": 12709,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12687,
											"end": 12709,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12687,
											"end": 12752,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 12687,
											"end": 12752,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12687,
											"end": 12752,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12687,
											"end": 12752,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12710,
											"end": 12726,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 12725,
											"end": 12726,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 12710,
											"end": 12722,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 12710,
											"end": 12726,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 12710,
											"end": 12726,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12710,
											"end": 12726,
											"name": "tag",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 12710,
											"end": 12726,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12687,
											"end": 12727,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 12687,
											"end": 12727,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12687,
											"end": 12727,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12687,
											"end": 12727,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12687,
											"end": 12727,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12687,
											"end": 12727,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12687,
											"end": 12727,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12687,
											"end": 12727,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12687,
											"end": 12727,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12687,
											"end": 12727,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12687,
											"end": 12727,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12687,
											"end": 12727,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12687,
											"end": 12727,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12687,
											"end": 12727,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12687,
											"end": 12727,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 12687,
											"end": 12727,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12687,
											"end": 12737,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12687,
											"end": 12737,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12687,
											"end": 12752,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 12667,
											"end": 12752,
											"name": "tag",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 12667,
											"end": 12752,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12663,
											"end": 12987,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12663,
											"end": 12987,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 12663,
											"end": 12987,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12766,
											"end": 12788,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 12766,
											"end": 12788,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12766,
											"end": 12788,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12766,
											"end": 12788,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12766,
											"end": 12788,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12766,
											"end": 12788,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12766,
											"end": 12777,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 12766,
											"end": 12788,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12766,
											"end": 12788,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12766,
											"end": 12788,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12766,
											"end": 12788,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12766,
											"end": 12788,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12815,
											"end": 12823,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12815,
											"end": 12823,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12789,
											"end": 12805,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 12804,
											"end": 12805,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 12789,
											"end": 12801,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 12789,
											"end": 12805,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 12789,
											"end": 12805,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12789,
											"end": 12805,
											"name": "tag",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 12789,
											"end": 12805,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12766,
											"end": 12806,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 12766,
											"end": 12806,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12766,
											"end": 12806,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12766,
											"end": 12806,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12766,
											"end": 12806,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12766,
											"end": 12806,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12766,
											"end": 12806,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12766,
											"end": 12806,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12766,
											"end": 12806,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12766,
											"end": 12806,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12766,
											"end": 12806,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12766,
											"end": 12806,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12766,
											"end": 12806,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 12766,
											"end": 12806,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12766,
											"end": 12823,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12766,
											"end": 12823,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12766,
											"end": 12823,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12766,
											"end": 12823,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12766,
											"end": 12823,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12766,
											"end": 12823,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12766,
											"end": 12823,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF00000000"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 12766,
											"end": 12823,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12766,
											"end": 12823,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12766,
											"end": 12823,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12766,
											"end": 12823,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12766,
											"end": 12823,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12766,
											"end": 12823,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12766,
											"end": 12823,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 12766,
											"end": 12823,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12766,
											"end": 12823,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 12663,
											"end": 12987,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 12663,
											"end": 12987,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12663,
											"end": 12987,
											"name": "tag",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 12663,
											"end": 12987,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12889,
											"end": 12922,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12889,
											"end": 12922,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12889,
											"end": 12922,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12889,
											"end": 12922,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12889,
											"end": 12922,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12889,
											"end": 12922,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12889,
											"end": 12922,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12889,
											"end": 12922,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12889,
											"end": 12922,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 12889,
											"end": 12922,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12889,
											"end": 12922,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 12889,
											"end": 12922,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12889,
											"end": 12922,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12889,
											"end": 12922,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12889,
											"end": 12922,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12889,
											"end": 12922,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 12889,
											"end": 12922,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12889,
											"end": 12922,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12889,
											"end": 12922,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12889,
											"end": 12922,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 12889,
											"end": 12922,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12889,
											"end": 12922,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12889,
											"end": 12922,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12889,
											"end": 12922,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12850,
											"end": 12872,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 12850,
											"end": 12872,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 12850,
											"end": 12872,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12850,
											"end": 12872,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12850,
											"end": 12872,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12850,
											"end": 12861,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 12850,
											"end": 12872,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12850,
											"end": 12872,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12850,
											"end": 12872,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 12850,
											"end": 12872,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12850,
											"end": 12872,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12850,
											"end": 12886,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 12850,
											"end": 12886,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 12850,
											"end": 12886,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12850,
											"end": 12886,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12850,
											"end": 12886,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12850,
											"end": 12886,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12850,
											"end": 12886,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12850,
											"end": 12886,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12850,
											"end": 12886,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 12850,
											"end": 12886,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12850,
											"end": 12886,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 12850,
											"end": 12886,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12850,
											"end": 12922,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12850,
											"end": 12922,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12850,
											"end": 12922,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12850,
											"end": 12922,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12850,
											"end": 12922,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 12850,
											"end": 12922,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12850,
											"end": 12922,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12850,
											"end": 12922,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12850,
											"end": 12922,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12850,
											"end": 12922,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 12850,
											"end": 12922,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12850,
											"end": 12922,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 12850,
											"end": 12922,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12850,
											"end": 12922,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12850,
											"end": 12922,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12850,
											"end": 12922,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 12850,
											"end": 12922,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12850,
											"end": 12922,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12850,
											"end": 12922,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12850,
											"end": 12922,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 12850,
											"end": 12922,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12850,
											"end": 12922,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 12962,
											"end": 12978,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 12873,
											"end": 12885,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 12850,
											"end": 12922,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 12962,
											"end": 12978,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 12962,
											"end": 12978,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12962,
											"end": 12978,
											"name": "tag",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 12962,
											"end": 12978,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12934,
											"end": 12959,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 12934,
											"end": 12959,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12934,
											"end": 12959,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12934,
											"end": 12959,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12934,
											"end": 12959,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12934,
											"end": 12959,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12934,
											"end": 12948,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12934,
											"end": 12959,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12934,
											"end": 12959,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12934,
											"end": 12959,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12934,
											"end": 12959,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12934,
											"end": 12959,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12934,
											"end": 12978,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12934,
											"end": 12978,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 12934,
											"end": 12978,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12934,
											"end": 12978,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 12934,
											"end": 12978,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12934,
											"end": 12978,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12934,
											"end": 12978,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12934,
											"end": 12978,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12934,
											"end": 12978,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12934,
											"end": 12978,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12934,
											"end": 12978,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12934,
											"end": 12978,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 12934,
											"end": 12978,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12934,
											"end": 12978,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 12663,
											"end": 12987,
											"name": "tag",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 12663,
											"end": 12987,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13000,
											"end": 13051,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13000,
											"end": 13051,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13000,
											"end": 13051,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10476,
											"end": 10515,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10476,
											"end": 10515,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 10476,
											"end": 10515,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10458,
											"end": 10516,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10458,
											"end": 10516,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10552,
											"end": 10591,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10552,
											"end": 10591,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10547,
											"end": 10549,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10532,
											"end": 10550,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10532,
											"end": 10550,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10525,
											"end": 10592,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13000,
											"end": 13051,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 13000,
											"end": 13051,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13000,
											"end": 13051,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13000,
											"end": 13051,
											"name": "PUSH",
											"source": 0,
											"value": "DEC2BACDD2F05B59DE34DA9B523DFF8BE42E5E38E818C82FDB0BAE774387A724"
										},
										{
											"begin": 13000,
											"end": 13051,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10431,
											"end": 10449,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13000,
											"end": 13051,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13000,
											"end": 13051,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13000,
											"end": 13051,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13000,
											"end": 13051,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13000,
											"end": 13051,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13000,
											"end": 13051,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13000,
											"end": 13051,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 12549,
											"end": 13058,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12440,
											"end": 13058,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12440,
											"end": 13058,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12440,
											"end": 13058,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12440,
											"end": 13058,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12440,
											"end": 13058,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13064,
											"end": 13222,
											"name": "tag",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 13064,
											"end": 13222,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13139,
											"end": 13145,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13176,
											"end": 13188,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13165,
											"end": 13174,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 13165,
											"end": 13174,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 13157,
											"end": 13189,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 13157,
											"end": 13189,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13157,
											"end": 13189,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13157,
											"end": 13189,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13157,
											"end": 13189,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13157,
											"end": 13189,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13157,
											"end": 13189,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13157,
											"end": 13189,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13157,
											"end": 13189,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 13157,
											"end": 13189,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13157,
											"end": 13189,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14,
											"end": 432,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 14,
											"end": 432,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 163,
											"end": 165,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 152,
											"end": 161,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 145,
											"end": 166,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 195,
											"end": 201,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 189,
											"end": 202,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 238,
											"end": 244,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 233,
											"end": 235,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 222,
											"end": 231,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 218,
											"end": 236,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 211,
											"end": 245,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 297,
											"end": 303,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 292,
											"end": 294,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 284,
											"end": 290,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 280,
											"end": 295,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 275,
											"end": 277,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 264,
											"end": 273,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 260,
											"end": 278,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 254,
											"end": 304,
											"name": "MCOPY",
											"source": 1
										},
										{
											"begin": 353,
											"end": 354,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 348,
											"end": 350,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 339,
											"end": 345,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 328,
											"end": 337,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 324,
											"end": 346,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 320,
											"end": 351,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 313,
											"end": 355,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 423,
											"end": 425,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 416,
											"end": 418,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 412,
											"end": 419,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 407,
											"end": 409,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 399,
											"end": 405,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 395,
											"end": 410,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 391,
											"end": 420,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 380,
											"end": 389,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 376,
											"end": 421,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 372,
											"end": 426,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 364,
											"end": 426,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 364,
											"end": 426,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 364,
											"end": 426,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 432,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 14,
											"end": 432,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14,
											"end": 432,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 432,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 432,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 437,
											"end": 610,
											"name": "tag",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 437,
											"end": 610,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 505,
											"end": 525,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 505,
											"end": 525,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 554,
											"end": 585,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 554,
											"end": 585,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 544,
											"end": 586,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 544,
											"end": 586,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 534,
											"end": 604,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "248"
										},
										{
											"begin": 534,
											"end": 604,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 600,
											"end": 601,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 597,
											"end": 598,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 590,
											"end": 602,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 534,
											"end": 604,
											"name": "tag",
											"source": 1,
											"value": "248"
										},
										{
											"begin": 534,
											"end": 604,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 437,
											"end": 610,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 437,
											"end": 610,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 437,
											"end": 610,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 437,
											"end": 610,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 615,
											"end": 915,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 615,
											"end": 915,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 683,
											"end": 689,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 691,
											"end": 697,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 744,
											"end": 746,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 732,
											"end": 741,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 723,
											"end": 730,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 719,
											"end": 742,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 715,
											"end": 747,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 712,
											"end": 764,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 712,
											"end": 764,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "250"
										},
										{
											"begin": 712,
											"end": 764,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 760,
											"end": 761,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 757,
											"end": 758,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 750,
											"end": 762,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 712,
											"end": 764,
											"name": "tag",
											"source": 1,
											"value": "250"
										},
										{
											"begin": 712,
											"end": 764,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 783,
											"end": 812,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "251"
										},
										{
											"begin": 802,
											"end": 811,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 783,
											"end": 812,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 783,
											"end": 812,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 783,
											"end": 812,
											"name": "tag",
											"source": 1,
											"value": "251"
										},
										{
											"begin": 783,
											"end": 812,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 773,
											"end": 812,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 881,
											"end": 883,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 866,
											"end": 884,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 866,
											"end": 884,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 866,
											"end": 884,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 866,
											"end": 884,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 853,
											"end": 885,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 853,
											"end": 885,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 615,
											"end": 915,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1476,
											"end": 1850,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 1476,
											"end": 1850,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1553,
											"end": 1559,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1561,
											"end": 1567,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1569,
											"end": 1575,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1622,
											"end": 1624,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1610,
											"end": 1619,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1601,
											"end": 1608,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1597,
											"end": 1620,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1593,
											"end": 1625,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1590,
											"end": 1642,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1590,
											"end": 1642,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "256"
										},
										{
											"begin": 1590,
											"end": 1642,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1639,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1635,
											"end": 1636,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1628,
											"end": 1640,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1590,
											"end": 1642,
											"name": "tag",
											"source": 1,
											"value": "256"
										},
										{
											"begin": 1590,
											"end": 1642,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1661,
											"end": 1690,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "257"
										},
										{
											"begin": 1680,
											"end": 1689,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1661,
											"end": 1690,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 1661,
											"end": 1690,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1661,
											"end": 1690,
											"name": "tag",
											"source": 1,
											"value": "257"
										},
										{
											"begin": 1661,
											"end": 1690,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1651,
											"end": 1690,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1651,
											"end": 1690,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1709,
											"end": 1747,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "258"
										},
										{
											"begin": 1743,
											"end": 1745,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1732,
											"end": 1741,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1728,
											"end": 1746,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1709,
											"end": 1747,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 1709,
											"end": 1747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1709,
											"end": 1747,
											"name": "tag",
											"source": 1,
											"value": "258"
										},
										{
											"begin": 1709,
											"end": 1747,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1476,
											"end": 1850,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1476,
											"end": 1850,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 1699,
											"end": 1747,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1699,
											"end": 1747,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1816,
											"end": 1818,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1801,
											"end": 1819,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1801,
											"end": 1819,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1801,
											"end": 1819,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1801,
											"end": 1819,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1788,
											"end": 1820,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1788,
											"end": 1820,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1476,
											"end": 1850,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2044,
											"end": 2230,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 2044,
											"end": 2230,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2103,
											"end": 2109,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2156,
											"end": 2158,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2153,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2135,
											"end": 2142,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2131,
											"end": 2154,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2127,
											"end": 2159,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2124,
											"end": 2176,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2124,
											"end": 2176,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "261"
										},
										{
											"begin": 2124,
											"end": 2176,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2172,
											"end": 2173,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2169,
											"end": 2170,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2162,
											"end": 2174,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2124,
											"end": 2176,
											"name": "tag",
											"source": 1,
											"value": "261"
										},
										{
											"begin": 2124,
											"end": 2176,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2195,
											"end": 2224,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 2214,
											"end": 2223,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2195,
											"end": 2224,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 2195,
											"end": 2224,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2853,
											"end": 3681,
											"name": "tag",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 2853,
											"end": 3681,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2955,
											"end": 2961,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2963,
											"end": 2969,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2971,
											"end": 2977,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2979,
											"end": 2985,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2987,
											"end": 2993,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2995,
											"end": 3001,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3048,
											"end": 3051,
											"name": "PUSH",
											"source": 1,
											"value": "C0"
										},
										{
											"begin": 3036,
											"end": 3045,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 3027,
											"end": 3034,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 3023,
											"end": 3046,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3019,
											"end": 3052,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 3016,
											"end": 3069,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3016,
											"end": 3069,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "267"
										},
										{
											"begin": 3016,
											"end": 3069,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3065,
											"end": 3066,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3062,
											"end": 3063,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3055,
											"end": 3067,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3016,
											"end": 3069,
											"name": "tag",
											"source": 1,
											"value": "267"
										},
										{
											"begin": 3016,
											"end": 3069,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3088,
											"end": 3117,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "268"
										},
										{
											"begin": 3107,
											"end": 3116,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 3088,
											"end": 3117,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 3088,
											"end": 3117,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3088,
											"end": 3117,
											"name": "tag",
											"source": 1,
											"value": "268"
										},
										{
											"begin": 3088,
											"end": 3117,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3078,
											"end": 3117,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3186,
											"end": 3188,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3171,
											"end": 3189,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 3171,
											"end": 3189,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3158,
											"end": 3190,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3158,
											"end": 3190,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3287,
											"end": 3289,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3272,
											"end": 3290,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 3272,
											"end": 3290,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3259,
											"end": 3291,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3259,
											"end": 3291,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3369,
											"end": 3371,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3354,
											"end": 3372,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 3354,
											"end": 3372,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3341,
											"end": 3373,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3417,
											"end": 3421,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 3404,
											"end": 3422,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3404,
											"end": 3422,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3392,
											"end": 3423,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3392,
											"end": 3423,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 3382,
											"end": 3441,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "269"
										},
										{
											"begin": 3382,
											"end": 3441,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3437,
											"end": 3438,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3434,
											"end": 3435,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3427,
											"end": 3439,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3382,
											"end": 3441,
											"name": "tag",
											"source": 1,
											"value": "269"
										},
										{
											"begin": 3382,
											"end": 3441,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2853,
											"end": 3681,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 2853,
											"end": 3681,
											"name": "SWAP9",
											"source": 1
										},
										{
											"begin": 2853,
											"end": 3681,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 2853,
											"end": 3681,
											"name": "SWAP8",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2853,
											"end": 3681,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2853,
											"end": 3681,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 3540,
											"end": 3543,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 3525,
											"end": 3544,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3525,
											"end": 3544,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3512,
											"end": 3545,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3512,
											"end": 3545,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 3644,
											"end": 3647,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 3629,
											"end": 3648,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3629,
											"end": 3648,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3629,
											"end": 3648,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3616,
											"end": 3649,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3616,
											"end": 3649,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2853,
											"end": 3681,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2853,
											"end": 3681,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3686,
											"end": 3946,
											"name": "tag",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 3686,
											"end": 3946,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3754,
											"end": 3760,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3762,
											"end": 3768,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3815,
											"end": 3817,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3803,
											"end": 3812,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3794,
											"end": 3801,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3790,
											"end": 3813,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3786,
											"end": 3818,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 3783,
											"end": 3835,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3783,
											"end": 3835,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "271"
										},
										{
											"begin": 3783,
											"end": 3835,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3831,
											"end": 3832,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3828,
											"end": 3829,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3821,
											"end": 3833,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3783,
											"end": 3835,
											"name": "tag",
											"source": 1,
											"value": "271"
										},
										{
											"begin": 3783,
											"end": 3835,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3854,
											"end": 3883,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "272"
										},
										{
											"begin": 3873,
											"end": 3882,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3854,
											"end": 3883,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 3854,
											"end": 3883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3854,
											"end": 3883,
											"name": "tag",
											"source": 1,
											"value": "272"
										},
										{
											"begin": 3854,
											"end": 3883,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3844,
											"end": 3883,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3844,
											"end": 3883,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3902,
											"end": 3940,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "273"
										},
										{
											"begin": 3936,
											"end": 3938,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3925,
											"end": 3934,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3921,
											"end": 3939,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3902,
											"end": 3940,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 3902,
											"end": 3940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3902,
											"end": 3940,
											"name": "tag",
											"source": 1,
											"value": "273"
										},
										{
											"begin": 3902,
											"end": 3940,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3892,
											"end": 3940,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3892,
											"end": 3940,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3686,
											"end": 3946,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3686,
											"end": 3946,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3686,
											"end": 3946,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3686,
											"end": 3946,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3686,
											"end": 3946,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3686,
											"end": 3946,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3951,
											"end": 4301,
											"name": "tag",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 3951,
											"end": 4301,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4018,
											"end": 4024,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4026,
											"end": 4032,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4079,
											"end": 4081,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4067,
											"end": 4076,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4058,
											"end": 4065,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4054,
											"end": 4077,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4050,
											"end": 4082,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 4047,
											"end": 4099,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4047,
											"end": 4099,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "275"
										},
										{
											"begin": 4047,
											"end": 4099,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4095,
											"end": 4096,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4092,
											"end": 4093,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4085,
											"end": 4097,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4047,
											"end": 4099,
											"name": "tag",
											"source": 1,
											"value": "275"
										},
										{
											"begin": 4047,
											"end": 4099,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4118,
											"end": 4147,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "276"
										},
										{
											"begin": 4137,
											"end": 4146,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4118,
											"end": 4147,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 4118,
											"end": 4147,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4118,
											"end": 4147,
											"name": "tag",
											"source": 1,
											"value": "276"
										},
										{
											"begin": 4118,
											"end": 4147,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4108,
											"end": 4147,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4108,
											"end": 4147,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4197,
											"end": 4199,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4186,
											"end": 4195,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4182,
											"end": 4200,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4169,
											"end": 4201,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 4241,
											"end": 4251,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4234,
											"end": 4239,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4230,
											"end": 4252,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4223,
											"end": 4228,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4220,
											"end": 4253,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4210,
											"end": 4271,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "277"
										},
										{
											"begin": 4210,
											"end": 4271,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4267,
											"end": 4268,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4264,
											"end": 4265,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4257,
											"end": 4269,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4210,
											"end": 4271,
											"name": "tag",
											"source": 1,
											"value": "277"
										},
										{
											"begin": 4210,
											"end": 4271,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4290,
											"end": 4295,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4280,
											"end": 4295,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4280,
											"end": 4295,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4280,
											"end": 4295,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3951,
											"end": 4301,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3951,
											"end": 4301,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3951,
											"end": 4301,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3951,
											"end": 4301,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3951,
											"end": 4301,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3951,
											"end": 4301,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5227,
											"end": 5354,
											"name": "tag",
											"source": 1,
											"value": "244"
										},
										{
											"begin": 5227,
											"end": 5354,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5288,
											"end": 5298,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 5283,
											"end": 5286,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 5279,
											"end": 5299,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 5276,
											"end": 5277,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5269,
											"end": 5300,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5319,
											"end": 5323,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 5316,
											"end": 5317,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5309,
											"end": 5324,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5343,
											"end": 5347,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5340,
											"end": 5341,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5333,
											"end": 5348,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5359,
											"end": 5529,
											"name": "tag",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 5359,
											"end": 5529,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5456,
											"end": 5466,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5449,
											"end": 5467,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5449,
											"end": 5467,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5449,
											"end": 5467,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5429,
											"end": 5447,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5429,
											"end": 5447,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5429,
											"end": 5447,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5425,
											"end": 5468,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5425,
											"end": 5468,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5480,
											"end": 5500,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5480,
											"end": 5500,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 5477,
											"end": 5523,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5477,
											"end": 5523,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 5477,
											"end": 5523,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5503,
											"end": 5521,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 5503,
											"end": 5521,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "244"
										},
										{
											"begin": 5503,
											"end": 5521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5534,
											"end": 5809,
											"name": "tag",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 5534,
											"end": 5809,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5573,
											"end": 5574,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5607,
											"end": 5617,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5604,
											"end": 5605,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5600,
											"end": 5618,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5637,
											"end": 5640,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5627,
											"end": 5761,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "286"
										},
										{
											"begin": 5627,
											"end": 5761,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5683,
											"end": 5693,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 5678,
											"end": 5681,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 5674,
											"end": 5694,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 5671,
											"end": 5672,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5664,
											"end": 5695,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5718,
											"end": 5722,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 5715,
											"end": 5716,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5708,
											"end": 5723,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5746,
											"end": 5750,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5743,
											"end": 5744,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5736,
											"end": 5751,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5627,
											"end": 5761,
											"name": "tag",
											"source": 1,
											"value": "286"
										},
										{
											"begin": 5627,
											"end": 5761,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5799,
											"end": 5802,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5786,
											"end": 5796,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5783,
											"end": 5784,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5779,
											"end": 5797,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5775,
											"end": 5803,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 5770,
											"end": 5803,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5770,
											"end": 5803,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5770,
											"end": 5803,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5534,
											"end": 5809,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5534,
											"end": 5809,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5534,
											"end": 5809,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5534,
											"end": 5809,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5534,
											"end": 5809,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7865,
											"end": 8000,
											"name": "tag",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 7865,
											"end": 8000,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7904,
											"end": 7907,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7925,
											"end": 7942,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 7925,
											"end": 7942,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7925,
											"end": 7942,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7922,
											"end": 7965,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "294"
										},
										{
											"begin": 7922,
											"end": 7965,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7945,
											"end": 7963,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "294"
										},
										{
											"begin": 7945,
											"end": 7963,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "244"
										},
										{
											"begin": 7945,
											"end": 7963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7945,
											"end": 7963,
											"name": "tag",
											"source": 1,
											"value": "294"
										},
										{
											"begin": 7945,
											"end": 7963,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7992,
											"end": 7993,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 7981,
											"end": 7994,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7981,
											"end": 7994,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7865,
											"end": 8000,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8815,
											"end": 9033,
											"name": "tag",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 8815,
											"end": 9033,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8921,
											"end": 8955,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8921,
											"end": 8955,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8921,
											"end": 8955,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8885,
											"end": 8919,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8885,
											"end": 8919,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8885,
											"end": 8919,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8881,
											"end": 8956,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8881,
											"end": 8956,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8968,
											"end": 9004,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8968,
											"end": 9004,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 8965,
											"end": 9027,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8965,
											"end": 9027,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 8965,
											"end": 9027,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9007,
											"end": 9025,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 9007,
											"end": 9025,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "244"
										},
										{
											"begin": 9007,
											"end": 9025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9894,
											"end": 10109,
											"name": "tag",
											"source": 1,
											"value": "209"
										},
										{
											"begin": 9894,
											"end": 10109,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9962,
											"end": 9996,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9962,
											"end": 9996,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9962,
											"end": 9996,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9998,
											"end": 10032,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9998,
											"end": 10032,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9998,
											"end": 10032,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9958,
											"end": 10033,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9958,
											"end": 10033,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10045,
											"end": 10080,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10045,
											"end": 10080,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 10042,
											"end": 10103,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10042,
											"end": 10103,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 10042,
											"end": 10103,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10083,
											"end": 10101,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 10083,
											"end": 10101,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "244"
										},
										{
											"begin": 10083,
											"end": 10101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10114,
											"end": 10281,
											"name": "tag",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 10114,
											"end": 10281,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10209,
											"end": 10219,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 10182,
											"end": 10200,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10182,
											"end": 10200,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10182,
											"end": 10200,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10202,
											"end": 10220,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10202,
											"end": 10220,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10202,
											"end": 10220,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10178,
											"end": 10221,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10178,
											"end": 10221,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10233,
											"end": 10252,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10233,
											"end": 10252,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 10230,
											"end": 10275,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10230,
											"end": 10275,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 10230,
											"end": 10275,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10255,
											"end": 10273,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 10255,
											"end": 10273,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "244"
										},
										{
											"begin": 10255,
											"end": 10273,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										}
									],
									".data": {
										"20F75E61DAE66BD43CC4D6E74412A2A0DFC4C34B4746776EB4E12C627179461C": "436f6d703a3a5f7472616e73666572546f6b656e733a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
										"32DAB9ECE0397C38C85244ED755F6110088FB13D43A7E9D6809DA7619813D0FE": "436f6d703a3a617070726f76653a20616d6f756e7420657863656564732039362062697473",
										"5BDEAFAE4AAACE0ED9B7DF6E60F285C9E8E84A3CEAC05AF6B6259BFED8E161F5": "436f6d703a3a7472616e736665723a20616d6f756e7420657863656564732039362062697473",
										"6426C6C63F7C8DAECF0B8A35BFE8C0F43DC9621D39CB2BF0C2CD35CC9DB8742F": "436f6d703a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d62657220657863656564732033322062697473",
										"79BF2F3C2009651B33D37EFB8A65657C3E203B2C36F61068863922CB9E64A77A": "436f6d703a3a5f6d6f7665566f7465733a20766f746520616d6f756e7420756e646572666c6f7773",
										"838EC7826D8A7E194A0B4C14B8572B8A97CBF1EC9A1DD8F0DC2CA0DBF889365C": "436f6d703a3a5f7472616e73666572546f6b656e733a207472616e7366657220616d6f756e74206f766572666c6f7773",
										"B7AC833594DA1DF58FD15C3B6B55EB20762DBA088C48B65CE9D522A789FF2495": "436f6d703a3a7472616e7366657246726f6d3a207472616e7366657220616d6f756e742065786365656473207370656e64657220616c6c6f77616e6365",
										"CAC5F7635B67ABA587752F385D4AAA6FE7D1615E382CD95E6C1AE76525BE695E": "436f6d703a3a5f6d6f7665566f7465733a20766f746520616d6f756e74206f766572666c6f7773"
									}
								}
							},
							"sourceList": [
								"Compound(copy)(copy)/contracts/Governance/Comp.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"DELEGATION_TYPEHASH()": "e7a324dc",
							"DOMAIN_TYPEHASH()": "20606b70",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"checkpoints(address,uint32)": "f1127ed8",
							"decimals()": "313ce567",
							"delegate(address)": "5c19a95c",
							"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)": "c3cda520",
							"delegates(address)": "587cde1e",
							"getCurrentVotes(address)": "b4b5ea57",
							"getPriorVotes(address,uint256)": "782d6fe1",
							"name()": "06fdde03",
							"nonces(address)": "7ecebe00",
							"numCheckpoints(address)": "6fcfff45",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromDelegate\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toDelegate\",\"type\":\"address\"}],\"name\":\"DelegateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousBalance\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newBalance\",\"type\":\"uint256\"}],\"name\":\"DelegateVotesChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DELEGATION_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"rawAmount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"name\":\"checkpoints\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"fromBlock\",\"type\":\"uint32\"},{\"internalType\":\"uint96\",\"name\":\"votes\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"}],\"name\":\"delegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"delegateBySig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"delegates\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getCurrentVotes\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"getPriorVotes\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"numCheckpoints\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"dst\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"rawAmount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"src\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"dst\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"rawAmount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"params\":{\"account\":\"The address of the account holding the funds\",\"spender\":\"The address of the account spending the funds\"},\"returns\":{\"_0\":\"The number of tokens approved\"}},\"approve(address,uint256)\":{\"details\":\"This will overwrite the approval amount for `spender`  and is subject to issues noted [here](https://eips.ethereum.org/EIPS/eip-20#approve)\",\"params\":{\"rawAmount\":\"The number of tokens that are approved (2^256-1 means infinite)\",\"spender\":\"The address of the account which may transfer tokens\"},\"returns\":{\"_0\":\"Whether or not the approval succeeded\"}},\"balanceOf(address)\":{\"params\":{\"account\":\"The address of the account to get the balance of\"},\"returns\":{\"_0\":\"The number of tokens held\"}},\"constructor\":{\"params\":{\"account\":\"The initial account to grant all the tokens\"}},\"delegate(address)\":{\"params\":{\"delegatee\":\"The address to delegate votes to\"}},\"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"params\":{\"delegatee\":\"The address to delegate votes to\",\"expiry\":\"The time at which to expire the signature\",\"nonce\":\"The contract state required to match the signature\",\"r\":\"Half of the ECDSA signature pair\",\"s\":\"Half of the ECDSA signature pair\",\"v\":\"The recovery byte of the signature\"}},\"getCurrentVotes(address)\":{\"params\":{\"account\":\"The address to get votes balance\"},\"returns\":{\"_0\":\"The number of current votes for `account`\"}},\"getPriorVotes(address,uint256)\":{\"details\":\"Block number must be a finalized block or else this function will revert to prevent misinformation.\",\"params\":{\"account\":\"The address of the account to check\",\"blockNumber\":\"The block number to get the vote balance at\"},\"returns\":{\"_0\":\"The number of votes the account had as of the given block\"}},\"transfer(address,uint256)\":{\"params\":{\"dst\":\"The address of the destination account\",\"rawAmount\":\"The number of tokens to transfer\"},\"returns\":{\"_0\":\"Whether or not the transfer succeeded\"}},\"transferFrom(address,address,uint256)\":{\"params\":{\"dst\":\"The address of the destination account\",\"rawAmount\":\"The number of tokens to transfer\",\"src\":\"The address of the source account\"},\"returns\":{\"_0\":\"Whether or not the transfer succeeded\"}}},\"version\":1},\"userdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"notice\":\"The standard EIP-20 approval event\"},\"DelegateChanged(address,address,address)\":{\"notice\":\"An event thats emitted when an account changes its delegate\"},\"DelegateVotesChanged(address,uint256,uint256)\":{\"notice\":\"An event thats emitted when a delegate account's vote balance changes\"},\"Transfer(address,address,uint256)\":{\"notice\":\"The standard EIP-20 transfer event\"}},\"kind\":\"user\",\"methods\":{\"DELEGATION_TYPEHASH()\":{\"notice\":\"The EIP-712 typehash for the delegation struct used by the contract\"},\"DOMAIN_TYPEHASH()\":{\"notice\":\"The EIP-712 typehash for the contract's domain\"},\"allowance(address,address)\":{\"notice\":\"Get the number of tokens `spender` is approved to spend on behalf of `account`\"},\"approve(address,uint256)\":{\"notice\":\"Approve `spender` to transfer up to `amount` from `src`\"},\"balanceOf(address)\":{\"notice\":\"Get the number of tokens held by the `account`\"},\"checkpoints(address,uint32)\":{\"notice\":\"A record of votes checkpoints for each account, by index\"},\"constructor\":{\"notice\":\"Construct a new Comp token\"},\"decimals()\":{\"notice\":\"EIP-20 token decimals for this token\"},\"delegate(address)\":{\"notice\":\"Delegate votes from `msg.sender` to `delegatee`\"},\"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"notice\":\"Delegates votes from signatory to `delegatee`\"},\"delegates(address)\":{\"notice\":\"A record of each accounts delegate\"},\"getCurrentVotes(address)\":{\"notice\":\"Gets the current votes balance for `account`\"},\"getPriorVotes(address,uint256)\":{\"notice\":\"Determine the prior number of votes for an account as of a block number\"},\"name()\":{\"notice\":\"EIP-20 token name for this token\"},\"nonces(address)\":{\"notice\":\"A record of states for signing / validating signatures\"},\"numCheckpoints(address)\":{\"notice\":\"The number of checkpoints for each account\"},\"symbol()\":{\"notice\":\"EIP-20 token symbol for this token\"},\"totalSupply()\":{\"notice\":\"Total number of tokens in circulation\"},\"transfer(address,uint256)\":{\"notice\":\"Transfer `amount` tokens from `msg.sender` to `dst`\"},\"transferFrom(address,address,uint256)\":{\"notice\":\"Transfer `amount` tokens from `src` to `dst`\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Compound(copy)(copy)/contracts/Governance/Comp.sol\":\"Comp\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Compound(copy)(copy)/contracts/Governance/Comp.sol\":{\"keccak256\":\"0x3e90ef05a4e5670e89e8553b33ab529322a23efef0628e3a117f9b4faa61a7dd\",\"license\":\"BSD-3-Clause\",\"urls\":[\"bzz-raw://a16770cb9d1e40755c67f12a08aef3efc00d3bb4345f8f3d299a1e2144a52732\",\"dweb:/ipfs/QmarEqNVvaA117iAziQkxpq2LbMKnCBKQfT69oB2Y2eas7\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 24,
								"contract": "Compound(copy)(copy)/contracts/Governance/Comp.sol:Comp",
								"label": "allowances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint96))"
							},
							{
								"astId": 29,
								"contract": "Compound(copy)(copy)/contracts/Governance/Comp.sol:Comp",
								"label": "balances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_uint96)"
							},
							{
								"astId": 34,
								"contract": "Compound(copy)(copy)/contracts/Governance/Comp.sol:Comp",
								"label": "delegates",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_address)"
							},
							{
								"astId": 48,
								"contract": "Compound(copy)(copy)/contracts/Governance/Comp.sol:Comp",
								"label": "checkpoints",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_mapping(t_uint32,t_struct(Checkpoint)40_storage))"
							},
							{
								"astId": 53,
								"contract": "Compound(copy)(copy)/contracts/Governance/Comp.sol:Comp",
								"label": "numCheckpoints",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_uint32)"
							},
							{
								"astId": 70,
								"contract": "Compound(copy)(copy)/contracts/Governance/Comp.sol:Comp",
								"label": "nonces",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_address)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint96))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint96))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint96)"
							},
							"t_mapping(t_address,t_mapping(t_uint32,t_struct(Checkpoint)40_storage))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(uint32 => struct Comp.Checkpoint))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_uint32,t_struct(Checkpoint)40_storage)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_address,t_uint32)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint32)",
								"numberOfBytes": "32",
								"value": "t_uint32"
							},
							"t_mapping(t_address,t_uint96)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint96)",
								"numberOfBytes": "32",
								"value": "t_uint96"
							},
							"t_mapping(t_uint32,t_struct(Checkpoint)40_storage)": {
								"encoding": "mapping",
								"key": "t_uint32",
								"label": "mapping(uint32 => struct Comp.Checkpoint)",
								"numberOfBytes": "32",
								"value": "t_struct(Checkpoint)40_storage"
							},
							"t_struct(Checkpoint)40_storage": {
								"encoding": "inplace",
								"label": "struct Comp.Checkpoint",
								"members": [
									{
										"astId": 37,
										"contract": "Compound(copy)(copy)/contracts/Governance/Comp.sol:Comp",
										"label": "fromBlock",
										"offset": 0,
										"slot": "0",
										"type": "t_uint32"
									},
									{
										"astId": 39,
										"contract": "Compound(copy)(copy)/contracts/Governance/Comp.sol:Comp",
										"label": "votes",
										"offset": 4,
										"slot": "0",
										"type": "t_uint96"
									}
								],
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint32": {
								"encoding": "inplace",
								"label": "uint32",
								"numberOfBytes": "4"
							},
							"t_uint96": {
								"encoding": "inplace",
								"label": "uint96",
								"numberOfBytes": "12"
							}
						}
					},
					"userdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"notice": "The standard EIP-20 approval event"
							},
							"DelegateChanged(address,address,address)": {
								"notice": "An event thats emitted when an account changes its delegate"
							},
							"DelegateVotesChanged(address,uint256,uint256)": {
								"notice": "An event thats emitted when a delegate account's vote balance changes"
							},
							"Transfer(address,address,uint256)": {
								"notice": "The standard EIP-20 transfer event"
							}
						},
						"kind": "user",
						"methods": {
							"DELEGATION_TYPEHASH()": {
								"notice": "The EIP-712 typehash for the delegation struct used by the contract"
							},
							"DOMAIN_TYPEHASH()": {
								"notice": "The EIP-712 typehash for the contract's domain"
							},
							"allowance(address,address)": {
								"notice": "Get the number of tokens `spender` is approved to spend on behalf of `account`"
							},
							"approve(address,uint256)": {
								"notice": "Approve `spender` to transfer up to `amount` from `src`"
							},
							"balanceOf(address)": {
								"notice": "Get the number of tokens held by the `account`"
							},
							"checkpoints(address,uint32)": {
								"notice": "A record of votes checkpoints for each account, by index"
							},
							"constructor": {
								"notice": "Construct a new Comp token"
							},
							"decimals()": {
								"notice": "EIP-20 token decimals for this token"
							},
							"delegate(address)": {
								"notice": "Delegate votes from `msg.sender` to `delegatee`"
							},
							"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)": {
								"notice": "Delegates votes from signatory to `delegatee`"
							},
							"delegates(address)": {
								"notice": "A record of each accounts delegate"
							},
							"getCurrentVotes(address)": {
								"notice": "Gets the current votes balance for `account`"
							},
							"getPriorVotes(address,uint256)": {
								"notice": "Determine the prior number of votes for an account as of a block number"
							},
							"name()": {
								"notice": "EIP-20 token name for this token"
							},
							"nonces(address)": {
								"notice": "A record of states for signing / validating signatures"
							},
							"numCheckpoints(address)": {
								"notice": "The number of checkpoints for each account"
							},
							"symbol()": {
								"notice": "EIP-20 token symbol for this token"
							},
							"totalSupply()": {
								"notice": "Total number of tokens in circulation"
							},
							"transfer(address,uint256)": {
								"notice": "Transfer `amount` tokens from `msg.sender` to `dst`"
							},
							"transferFrom(address,address,uint256)": {
								"notice": "Transfer `amount` tokens from `src` to `dst`"
							}
						},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "2462",
				"formattedMessage": "Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.\n  --> Compound(copy)(copy)/contracts/Governance/Comp.sol:78:5:\n   |\n78 |     constructor(address account) public {\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.",
				"severity": "warning",
				"sourceLocation": {
					"end": 3969,
					"file": "Compound(copy)(copy)/contracts/Governance/Comp.sol",
					"start": 3820
				},
				"type": "Warning"
			}
		],
		"sources": {
			"Compound(copy)(copy)/contracts/Governance/Comp.sol": {
				"ast": {
					"absolutePath": "Compound(copy)(copy)/contracts/Governance/Comp.sol",
					"exportedSymbols": {
						"Comp": [
							1000
						]
					},
					"id": 1001,
					"license": "BSD-3-Clause",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".10"
							],
							"nodeType": "PragmaDirective",
							"src": "1310:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Comp",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1000,
							"linearizedBaseContracts": [
								1000
							],
							"name": "Comp",
							"nameLocation": "1345:4:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"documentation": {
										"id": 2,
										"nodeType": "StructuredDocumentation",
										"src": "1356:44:0",
										"text": "@notice EIP-20 token name for this token"
									},
									"functionSelector": "06fdde03",
									"id": 5,
									"mutability": "constant",
									"name": "name",
									"nameLocation": "1428:4:0",
									"nodeType": "VariableDeclaration",
									"scope": 1000,
									"src": "1405:40:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 3,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1405:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "436f6d706f756e64",
										"id": 4,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1435:10:0",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_561ca898cce9f021c15a441ef41899706e923541cee724530075d1a1144761c7",
											"typeString": "literal_string \"Compound\""
										},
										"value": "Compound"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"documentation": {
										"id": 6,
										"nodeType": "StructuredDocumentation",
										"src": "1452:46:0",
										"text": "@notice EIP-20 token symbol for this token"
									},
									"functionSelector": "95d89b41",
									"id": 9,
									"mutability": "constant",
									"name": "symbol",
									"nameLocation": "1526:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 1000,
									"src": "1503:38:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 7,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1503:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "434f4d50",
										"id": 8,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1535:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_b6dbcaeee318e11fe1e87d4af04bdd7b4d6a3f13307225dc7ee72f7c085ab454",
											"typeString": "literal_string \"COMP\""
										},
										"value": "COMP"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"documentation": {
										"id": 10,
										"nodeType": "StructuredDocumentation",
										"src": "1548:48:0",
										"text": "@notice EIP-20 token decimals for this token"
									},
									"functionSelector": "313ce567",
									"id": 13,
									"mutability": "constant",
									"name": "decimals",
									"nameLocation": "1623:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 1000,
									"src": "1601:35:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 11,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "1601:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3138",
										"id": 12,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1634:2:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_18_by_1",
											"typeString": "int_const 18"
										},
										"value": "18"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "1643:49:0",
										"text": "@notice Total number of tokens in circulation"
									},
									"functionSelector": "18160ddd",
									"id": 17,
									"mutability": "constant",
									"name": "totalSupply",
									"nameLocation": "1718:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 1000,
									"src": "1697:46:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 15,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "1697:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3130303030303030653138",
										"id": 16,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1732:11:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10000000000000000000000000_by_1",
											"typeString": "int_const 10000000000000000000000000"
										},
										"value": "10000000e18"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 18,
										"nodeType": "StructuredDocumentation",
										"src": "1769:49:0",
										"text": "@notice Allowance amounts on behalf of others"
									},
									"id": 24,
									"mutability": "mutable",
									"name": "allowances",
									"nameLocation": "1881:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 1000,
									"src": "1823:68:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint96_$_$",
										"typeString": "mapping(address => mapping(address => uint96))"
									},
									"typeName": {
										"id": 23,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 19,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1832:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1823:48:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint96_$_$",
											"typeString": "mapping(address => mapping(address => uint96))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 22,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 20,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1852:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1843:27:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint96_$",
												"typeString": "mapping(address => uint96)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 21,
												"name": "uint96",
												"nodeType": "ElementaryTypeName",
												"src": "1863:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												}
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1898:62:0",
										"text": "@notice Official record of token balances for each account"
									},
									"id": 29,
									"mutability": "mutable",
									"name": "balances",
									"nameLocation": "2002:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 1000,
									"src": "1965:45:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint96_$",
										"typeString": "mapping(address => uint96)"
									},
									"typeName": {
										"id": 28,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 26,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1974:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1965:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint96_$",
											"typeString": "mapping(address => uint96)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 27,
											"name": "uint96",
											"nodeType": "ElementaryTypeName",
											"src": "1985:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint96",
												"typeString": "uint96"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 30,
										"nodeType": "StructuredDocumentation",
										"src": "2017:46:0",
										"text": "@notice A record of each accounts delegate"
									},
									"functionSelector": "587cde1e",
									"id": 34,
									"mutability": "mutable",
									"name": "delegates",
									"nameLocation": "2104:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 1000,
									"src": "2068:45:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
										"typeString": "mapping(address => address)"
									},
									"typeName": {
										"id": 33,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 31,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2077:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2068:28:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
											"typeString": "mapping(address => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 32,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2088:7:0",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "public"
								},
								{
									"canonicalName": "Comp.Checkpoint",
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "2120:71:0",
										"text": "@notice A checkpoint for marking number of votes from a given block"
									},
									"id": 40,
									"members": [
										{
											"constant": false,
											"id": 37,
											"mutability": "mutable",
											"name": "fromBlock",
											"nameLocation": "2231:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 40,
											"src": "2224:16:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint32",
												"typeString": "uint32"
											},
											"typeName": {
												"id": 36,
												"name": "uint32",
												"nodeType": "ElementaryTypeName",
												"src": "2224:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 39,
											"mutability": "mutable",
											"name": "votes",
											"nameLocation": "2257:5:0",
											"nodeType": "VariableDeclaration",
											"scope": 40,
											"src": "2250:12:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint96",
												"typeString": "uint96"
											},
											"typeName": {
												"id": 38,
												"name": "uint96",
												"nodeType": "ElementaryTypeName",
												"src": "2250:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Checkpoint",
									"nameLocation": "2203:10:0",
									"nodeType": "StructDefinition",
									"scope": 1000,
									"src": "2196:73:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "2275:68:0",
										"text": "@notice A record of votes checkpoints for each account, by index"
									},
									"functionSelector": "f1127ed8",
									"id": 48,
									"mutability": "mutable",
									"name": "checkpoints",
									"nameLocation": "2407:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 1000,
									"src": "2348:70:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$40_storage_$_$",
										"typeString": "mapping(address => mapping(uint32 => struct Comp.Checkpoint))"
									},
									"typeName": {
										"id": 47,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 42,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2357:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2348:51:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$40_storage_$_$",
											"typeString": "mapping(address => mapping(uint32 => struct Comp.Checkpoint))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 46,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 43,
												"name": "uint32",
												"nodeType": "ElementaryTypeName",
												"src": "2377:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												}
											},
											"nodeType": "Mapping",
											"src": "2368:30:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$40_storage_$",
												"typeString": "mapping(uint32 => struct Comp.Checkpoint)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 45,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 44,
													"name": "Checkpoint",
													"nameLocations": [
														"2387:10:0"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 40,
													"src": "2387:10:0"
												},
												"referencedDeclaration": 40,
												"src": "2387:10:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Checkpoint_$40_storage_ptr",
													"typeString": "struct Comp.Checkpoint"
												}
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 49,
										"nodeType": "StructuredDocumentation",
										"src": "2425:54:0",
										"text": "@notice The number of checkpoints for each account"
									},
									"functionSelector": "6fcfff45",
									"id": 53,
									"mutability": "mutable",
									"name": "numCheckpoints",
									"nameLocation": "2519:14:0",
									"nodeType": "VariableDeclaration",
									"scope": 1000,
									"src": "2484:49:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
										"typeString": "mapping(address => uint32)"
									},
									"typeName": {
										"id": 52,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 50,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2493:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2484:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
											"typeString": "mapping(address => uint32)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 51,
											"name": "uint32",
											"nodeType": "ElementaryTypeName",
											"src": "2504:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint32",
												"typeString": "uint32"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"documentation": {
										"id": 54,
										"nodeType": "StructuredDocumentation",
										"src": "2540:58:0",
										"text": "@notice The EIP-712 typehash for the contract's domain"
									},
									"functionSelector": "20606b70",
									"id": 59,
									"mutability": "constant",
									"name": "DOMAIN_TYPEHASH",
									"nameLocation": "2627:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 1000,
									"src": "2603:122:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 55,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2603:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "454950373132446f6d61696e28737472696e67206e616d652c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429",
												"id": 57,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "2655:69:0",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a866",
													"typeString": "literal_string \"EIP712Domain(string name,uint256 chainId,address verifyingContract)\""
												},
												"value": "EIP712Domain(string name,uint256 chainId,address verifyingContract)"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a866",
													"typeString": "literal_string \"EIP712Domain(string name,uint256 chainId,address verifyingContract)\""
												}
											],
											"id": 56,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "2645:9:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 58,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "2645:80:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"documentation": {
										"id": 60,
										"nodeType": "StructuredDocumentation",
										"src": "2732:79:0",
										"text": "@notice The EIP-712 typehash for the delegation struct used by the contract"
									},
									"functionSelector": "e7a324dc",
									"id": 65,
									"mutability": "constant",
									"name": "DELEGATION_TYPEHASH",
									"nameLocation": "2840:19:0",
									"nodeType": "VariableDeclaration",
									"scope": 1000,
									"src": "2816:117:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 61,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2816:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "44656c65676174696f6e28616464726573732064656c6567617465652c75696e74323536206e6f6e63652c75696e743235362065787069727929",
												"id": 63,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "2872:60:0",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_e48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf",
													"typeString": "literal_string \"Delegation(address delegatee,uint256 nonce,uint256 expiry)\""
												},
												"value": "Delegation(address delegatee,uint256 nonce,uint256 expiry)"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_e48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf",
													"typeString": "literal_string \"Delegation(address delegatee,uint256 nonce,uint256 expiry)\""
												}
											],
											"id": 62,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "2862:9:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 64,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "2862:71:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 66,
										"nodeType": "StructuredDocumentation",
										"src": "2940:66:0",
										"text": "@notice A record of states for signing / validating signatures"
									},
									"functionSelector": "7ecebe00",
									"id": 70,
									"mutability": "mutable",
									"name": "nonces",
									"nameLocation": "3044:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 1000,
									"src": "3011:39:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 69,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 67,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "3020:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "3011:25:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 68,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "3031:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 71,
										"nodeType": "StructuredDocumentation",
										"src": "3057:71:0",
										"text": "@notice An event thats emitted when an account changes its delegate"
									},
									"eventSelector": "3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f",
									"id": 79,
									"name": "DelegateChanged",
									"nameLocation": "3139:15:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 73,
												"indexed": true,
												"mutability": "mutable",
												"name": "delegator",
												"nameLocation": "3171:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "3155:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 72,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3155:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 75,
												"indexed": true,
												"mutability": "mutable",
												"name": "fromDelegate",
												"nameLocation": "3198:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "3182:28:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 74,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3182:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 77,
												"indexed": true,
												"mutability": "mutable",
												"name": "toDelegate",
												"nameLocation": "3228:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "3212:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 76,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3212:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3154:85:0"
									},
									"src": "3133:107:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 80,
										"nodeType": "StructuredDocumentation",
										"src": "3246:81:0",
										"text": "@notice An event thats emitted when a delegate account's vote balance changes"
									},
									"eventSelector": "dec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a724",
									"id": 88,
									"name": "DelegateVotesChanged",
									"nameLocation": "3338:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 82,
												"indexed": true,
												"mutability": "mutable",
												"name": "delegate",
												"nameLocation": "3375:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "3359:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 81,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3359:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 84,
												"indexed": false,
												"mutability": "mutable",
												"name": "previousBalance",
												"nameLocation": "3390:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "3385:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 83,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3385:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 86,
												"indexed": false,
												"mutability": "mutable",
												"name": "newBalance",
												"nameLocation": "3412:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "3407:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 85,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3407:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3358:65:0"
									},
									"src": "3332:92:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 89,
										"nodeType": "StructuredDocumentation",
										"src": "3430:46:0",
										"text": "@notice The standard EIP-20 transfer event"
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 97,
									"name": "Transfer",
									"nameLocation": "3487:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 91,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3512:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 97,
												"src": "3496:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 90,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3496:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 93,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3534:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 97,
												"src": "3518:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3518:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3546:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 97,
												"src": "3538:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 94,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3538:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3495:58:0"
									},
									"src": "3481:73:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 98,
										"nodeType": "StructuredDocumentation",
										"src": "3560:46:0",
										"text": "@notice The standard EIP-20 approval event"
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 106,
									"name": "Approval",
									"nameLocation": "3617:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 100,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3642:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "3626:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 99,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3626:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 102,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3665:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "3649:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 101,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3649:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 104,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3682:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "3674:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 103,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3674:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3625:64:0"
									},
									"src": "3611:79:0"
								},
								{
									"body": {
										"id": 130,
										"nodeType": "Block",
										"src": "3856:113:0",
										"statements": [
											{
												"expression": {
													"id": 119,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 112,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 29,
															"src": "3866:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint96_$",
																"typeString": "mapping(address => uint96)"
															}
														},
														"id": 114,
														"indexExpression": {
															"id": 113,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 109,
															"src": "3875:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3866:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 117,
																"name": "totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 17,
																"src": "3893:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 116,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3886:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint96_$",
																"typeString": "type(uint96)"
															},
															"typeName": {
																"id": 115,
																"name": "uint96",
																"nodeType": "ElementaryTypeName",
																"src": "3886:6:0",
																"typeDescriptions": {}
															}
														},
														"id": 118,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3886:19:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"src": "3866:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"id": 120,
												"nodeType": "ExpressionStatement",
												"src": "3866:39:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 124,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3937:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 123,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3929:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 122,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3929:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 125,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3929:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 126,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 109,
															"src": "3941:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 127,
															"name": "totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 17,
															"src": "3950:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 121,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 97,
														"src": "3920:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3920:42:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 129,
												"nodeType": "EmitStatement",
												"src": "3915:47:0"
											}
										]
									},
									"documentation": {
										"id": 107,
										"nodeType": "StructuredDocumentation",
										"src": "3696:119:0",
										"text": " @notice Construct a new Comp token\n @param account The initial account to grant all the tokens"
									},
									"id": 131,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3840:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "3832:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3832:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3831:17:0"
									},
									"returnParameters": {
										"id": 111,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3856:0:0"
									},
									"scope": 1000,
									"src": "3820:149:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 147,
										"nodeType": "Block",
										"src": "4347:52:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 141,
															"name": "allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 24,
															"src": "4364:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint96_$_$",
																"typeString": "mapping(address => mapping(address => uint96))"
															}
														},
														"id": 143,
														"indexExpression": {
															"id": 142,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 134,
															"src": "4375:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4364:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint96_$",
															"typeString": "mapping(address => uint96)"
														}
													},
													"id": 145,
													"indexExpression": {
														"id": 144,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 136,
														"src": "4384:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4364:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"functionReturnParameters": 140,
												"id": 146,
												"nodeType": "Return",
												"src": "4357:35:0"
											}
										]
									},
									"documentation": {
										"id": 132,
										"nodeType": "StructuredDocumentation",
										"src": "3975:285:0",
										"text": " @notice Get the number of tokens `spender` is approved to spend on behalf of `account`\n @param account The address of the account holding the funds\n @param spender The address of the account spending the funds\n @return The number of tokens approved"
									},
									"functionSelector": "dd62ed3e",
									"id": 148,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "4274:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 137,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4292:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 148,
												"src": "4284:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 133,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4284:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 136,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4309:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 148,
												"src": "4301:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 135,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4301:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4283:34:0"
									},
									"returnParameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 139,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 148,
												"src": "4341:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 138,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4341:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4340:6:0"
									},
									"scope": 1000,
									"src": "4265:134:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 204,
										"nodeType": "Block",
										"src": "4941:345:0",
										"statements": [
											{
												"assignments": [
													159
												],
												"declarations": [
													{
														"constant": false,
														"id": 159,
														"mutability": "mutable",
														"name": "amount",
														"nameLocation": "4958:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 204,
														"src": "4951:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														},
														"typeName": {
															"id": 158,
															"name": "uint96",
															"nodeType": "ElementaryTypeName",
															"src": "4951:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 160,
												"nodeType": "VariableDeclarationStatement",
												"src": "4951:13:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 167,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 161,
														"name": "rawAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 153,
														"src": "4978:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 164,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4996:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 163,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "4996:4:0",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 162,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "4991:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 165,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4991:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 166,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "5002:3:0",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "4991:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4978:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 184,
													"nodeType": "Block",
													"src": "5063:92:0",
													"statements": [
														{
															"expression": {
																"id": 182,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 177,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 159,
																	"src": "5077:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 179,
																			"name": "rawAmount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 153,
																			"src": "5093:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"hexValue": "436f6d703a3a617070726f76653a20616d6f756e7420657863656564732039362062697473",
																			"id": 180,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "string",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5104:39:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_stringliteral_32dab9ece0397c38c85244ed755f6110088fb13d43a7e9d6809da7619813d0fe",
																				"typeString": "literal_string \"Comp::approve: amount exceeds 96 bits\""
																			},
																			"value": "Comp::approve: amount exceeds 96 bits"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_stringliteral_32dab9ece0397c38c85244ed755f6110088fb13d43a7e9d6809da7619813d0fe",
																				"typeString": "literal_string \"Comp::approve: amount exceeds 96 bits\""
																			}
																		],
																		"id": 178,
																		"name": "safe96",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 937,
																		"src": "5086:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint96_$",
																			"typeString": "function (uint256,string memory) pure returns (uint96)"
																		}
																	},
																	"id": 181,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5086:58:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	}
																},
																"src": "5077:67:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															"id": 183,
															"nodeType": "ExpressionStatement",
															"src": "5077:67:0"
														}
													]
												},
												"id": 185,
												"nodeType": "IfStatement",
												"src": "4974:181:0",
												"trueBody": {
													"id": 176,
													"nodeType": "Block",
													"src": "5007:50:0",
													"statements": [
														{
															"expression": {
																"id": 174,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 168,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 159,
																	"src": "5021:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 171,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "5035:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint96_$",
																					"typeString": "type(uint96)"
																				},
																				"typeName": {
																					"id": 170,
																					"name": "uint96",
																					"nodeType": "ElementaryTypeName",
																					"src": "5035:6:0",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_uint96_$",
																					"typeString": "type(uint96)"
																				}
																			],
																			"id": 169,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "5030:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 172,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5030:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_uint96",
																			"typeString": "type(uint96)"
																		}
																	},
																	"id": 173,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "5043:3:0",
																	"memberName": "max",
																	"nodeType": "MemberAccess",
																	"src": "5030:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	}
																},
																"src": "5021:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															"id": 175,
															"nodeType": "ExpressionStatement",
															"src": "5021:25:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 193,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 186,
																"name": "allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 24,
																"src": "5165:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint96_$_$",
																	"typeString": "mapping(address => mapping(address => uint96))"
																}
															},
															"id": 190,
															"indexExpression": {
																"expression": {
																	"id": 187,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "5176:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 188,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5180:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "5176:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5165:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint96_$",
																"typeString": "mapping(address => uint96)"
															}
														},
														"id": 191,
														"indexExpression": {
															"id": 189,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 151,
															"src": "5188:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5165:31:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 192,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 159,
														"src": "5199:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"src": "5165:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"id": 194,
												"nodeType": "ExpressionStatement",
												"src": "5165:40:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 196,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5230:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 197,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5234:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5230:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 198,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 151,
															"src": "5242:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 199,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 159,
															"src": "5251:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														],
														"id": 195,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 106,
														"src": "5221:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5221:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 201,
												"nodeType": "EmitStatement",
												"src": "5216:42:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 202,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5275:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 157,
												"id": 203,
												"nodeType": "Return",
												"src": "5268:11:0"
											}
										]
									},
									"documentation": {
										"id": 149,
										"nodeType": "StructuredDocumentation",
										"src": "4405:457:0",
										"text": " @notice Approve `spender` to transfer up to `amount` from `src`\n @dev This will overwrite the approval amount for `spender`\n  and is subject to issues noted [here](https://eips.ethereum.org/EIPS/eip-20#approve)\n @param spender The address of the account which may transfer tokens\n @param rawAmount The number of tokens that are approved (2^256-1 means infinite)\n @return Whether or not the approval succeeded"
									},
									"functionSelector": "095ea7b3",
									"id": 205,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4876:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 151,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4892:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "4884:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 150,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4884:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "rawAmount",
												"nameLocation": "4906:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "4901:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 152,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4901:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4883:33:0"
									},
									"returnParameters": {
										"id": 157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 156,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "4935:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 155,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4935:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4934:6:0"
									},
									"scope": 1000,
									"src": "4867:419:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 217,
										"nodeType": "Block",
										"src": "5547:41:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 213,
														"name": "balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 29,
														"src": "5564:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint96_$",
															"typeString": "mapping(address => uint96)"
														}
													},
													"id": 215,
													"indexExpression": {
														"id": 214,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 208,
														"src": "5573:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5564:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"functionReturnParameters": 212,
												"id": 216,
												"nodeType": "Return",
												"src": "5557:24:0"
											}
										]
									},
									"documentation": {
										"id": 206,
										"nodeType": "StructuredDocumentation",
										"src": "5292:185:0",
										"text": " @notice Get the number of tokens held by the `account`\n @param account The address of the account to get the balance of\n @return The number of tokens held"
									},
									"functionSelector": "70a08231",
									"id": 218,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "5491:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 208,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "5509:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 218,
												"src": "5501:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 207,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5501:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5500:17:0"
									},
									"returnParameters": {
										"id": 212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 211,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 218,
												"src": "5541:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 210,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5541:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5540:6:0"
									},
									"scope": 1000,
									"src": "5482:106:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 244,
										"nodeType": "Block",
										"src": "5915:163:0",
										"statements": [
											{
												"assignments": [
													229
												],
												"declarations": [
													{
														"constant": false,
														"id": 229,
														"mutability": "mutable",
														"name": "amount",
														"nameLocation": "5932:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 244,
														"src": "5925:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														},
														"typeName": {
															"id": 228,
															"name": "uint96",
															"nodeType": "ElementaryTypeName",
															"src": "5925:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 234,
												"initialValue": {
													"arguments": [
														{
															"id": 231,
															"name": "rawAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 223,
															"src": "5948:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "436f6d703a3a7472616e736665723a20616d6f756e7420657863656564732039362062697473",
															"id": 232,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5959:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5bdeafae4aaace0ed9b7df6e60f285c9e8e84a3ceac05af6b6259bfed8e161f5",
																"typeString": "literal_string \"Comp::transfer: amount exceeds 96 bits\""
															},
															"value": "Comp::transfer: amount exceeds 96 bits"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_5bdeafae4aaace0ed9b7df6e60f285c9e8e84a3ceac05af6b6259bfed8e161f5",
																"typeString": "literal_string \"Comp::transfer: amount exceeds 96 bits\""
															}
														],
														"id": 230,
														"name": "safe96",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 937,
														"src": "5941:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint96_$",
															"typeString": "function (uint256,string memory) pure returns (uint96)"
														}
													},
													"id": 233,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5941:59:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5925:75:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 236,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6026:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 237,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6030:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6026:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 238,
															"name": "dst",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 221,
															"src": "6038:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 239,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 229,
															"src": "6043:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														],
														"id": 235,
														"name": "_transferTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 707,
														"src": "6010:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint96_$returns$__$",
															"typeString": "function (address,address,uint96)"
														}
													},
													"id": 240,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6010:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 241,
												"nodeType": "ExpressionStatement",
												"src": "6010:40:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 242,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6067:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 227,
												"id": 243,
												"nodeType": "Return",
												"src": "6060:11:0"
											}
										]
									},
									"documentation": {
										"id": 219,
										"nodeType": "StructuredDocumentation",
										"src": "5594:245:0",
										"text": " @notice Transfer `amount` tokens from `msg.sender` to `dst`\n @param dst The address of the destination account\n @param rawAmount The number of tokens to transfer\n @return Whether or not the transfer succeeded"
									},
									"functionSelector": "a9059cbb",
									"id": 245,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "5853:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "dst",
												"nameLocation": "5870:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 245,
												"src": "5862:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 220,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5862:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "rawAmount",
												"nameLocation": "5880:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 245,
												"src": "5875:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 222,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5875:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5861:29:0"
									},
									"returnParameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 245,
												"src": "5909:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 225,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5909:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5908:6:0"
									},
									"scope": 1000,
									"src": "5844:234:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 320,
										"nodeType": "Block",
										"src": "6467:576:0",
										"statements": [
											{
												"assignments": [
													258
												],
												"declarations": [
													{
														"constant": false,
														"id": 258,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "6485:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 320,
														"src": "6477:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 257,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6477:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 261,
												"initialValue": {
													"expression": {
														"id": 259,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "6495:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "6499:6:0",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "6495:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6477:28:0"
											},
											{
												"assignments": [
													263
												],
												"declarations": [
													{
														"constant": false,
														"id": 263,
														"mutability": "mutable",
														"name": "spenderAllowance",
														"nameLocation": "6522:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 320,
														"src": "6515:23:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														},
														"typeName": {
															"id": 262,
															"name": "uint96",
															"nodeType": "ElementaryTypeName",
															"src": "6515:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 269,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 264,
															"name": "allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 24,
															"src": "6541:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint96_$_$",
																"typeString": "mapping(address => mapping(address => uint96))"
															}
														},
														"id": 266,
														"indexExpression": {
															"id": 265,
															"name": "src",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 248,
															"src": "6552:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "6541:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint96_$",
															"typeString": "mapping(address => uint96)"
														}
													},
													"id": 268,
													"indexExpression": {
														"id": 267,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 258,
														"src": "6557:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6541:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6515:50:0"
											},
											{
												"assignments": [
													271
												],
												"declarations": [
													{
														"constant": false,
														"id": 271,
														"mutability": "mutable",
														"name": "amount",
														"nameLocation": "6582:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 320,
														"src": "6575:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														},
														"typeName": {
															"id": 270,
															"name": "uint96",
															"nodeType": "ElementaryTypeName",
															"src": "6575:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 276,
												"initialValue": {
													"arguments": [
														{
															"id": 273,
															"name": "rawAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 252,
															"src": "6598:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "436f6d703a3a617070726f76653a20616d6f756e7420657863656564732039362062697473",
															"id": 274,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6609:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_32dab9ece0397c38c85244ed755f6110088fb13d43a7e9d6809da7619813d0fe",
																"typeString": "literal_string \"Comp::approve: amount exceeds 96 bits\""
															},
															"value": "Comp::approve: amount exceeds 96 bits"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_32dab9ece0397c38c85244ed755f6110088fb13d43a7e9d6809da7619813d0fe",
																"typeString": "literal_string \"Comp::approve: amount exceeds 96 bits\""
															}
														],
														"id": 272,
														"name": "safe96",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 937,
														"src": "6591:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint96_$",
															"typeString": "function (uint256,string memory) pure returns (uint96)"
														}
													},
													"id": 275,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6591:58:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6575:74:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 287,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 279,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 277,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 258,
															"src": "6664:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 278,
															"name": "src",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 248,
															"src": "6675:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "6664:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														},
														"id": 286,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 280,
															"name": "spenderAllowance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 263,
															"src": "6682:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 283,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "6707:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint96_$",
																			"typeString": "type(uint96)"
																		},
																		"typeName": {
																			"id": 282,
																			"name": "uint96",
																			"nodeType": "ElementaryTypeName",
																			"src": "6707:6:0",
																			"typeDescriptions": {}
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_uint96_$",
																			"typeString": "type(uint96)"
																		}
																	],
																	"id": 281,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "6702:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 284,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6702:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_uint96",
																	"typeString": "type(uint96)"
																}
															},
															"id": 285,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "6715:3:0",
															"memberName": "max",
															"nodeType": "MemberAccess",
															"src": "6702:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														},
														"src": "6682:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6664:54:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 311,
												"nodeType": "IfStatement",
												"src": "6660:312:0",
												"trueBody": {
													"id": 310,
													"nodeType": "Block",
													"src": "6720:252:0",
													"statements": [
														{
															"assignments": [
																289
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 289,
																	"mutability": "mutable",
																	"name": "newAllowance",
																	"nameLocation": "6741:12:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 310,
																	"src": "6734:19:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	},
																	"typeName": {
																		"id": 288,
																		"name": "uint96",
																		"nodeType": "ElementaryTypeName",
																		"src": "6734:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint96",
																			"typeString": "uint96"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 295,
															"initialValue": {
																"arguments": [
																	{
																		"id": 291,
																		"name": "spenderAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 263,
																		"src": "6762:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint96",
																			"typeString": "uint96"
																		}
																	},
																	{
																		"id": 292,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 271,
																		"src": "6780:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint96",
																			"typeString": "uint96"
																		}
																	},
																	{
																		"hexValue": "436f6d703a3a7472616e7366657246726f6d3a207472616e7366657220616d6f756e742065786365656473207370656e64657220616c6c6f77616e6365",
																		"id": 293,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6788:63:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_b7ac833594da1df58fd15c3b6b55eb20762dba088c48b65ce9d522a789ff2495",
																			"typeString": "literal_string \"Comp::transferFrom: transfer amount exceeds spender allowance\""
																		},
																		"value": "Comp::transferFrom: transfer amount exceeds spender allowance"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint96",
																			"typeString": "uint96"
																		},
																		{
																			"typeIdentifier": "t_uint96",
																			"typeString": "uint96"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_b7ac833594da1df58fd15c3b6b55eb20762dba088c48b65ce9d522a789ff2495",
																			"typeString": "literal_string \"Comp::transferFrom: transfer amount exceeds spender allowance\""
																		}
																	],
																	"id": 290,
																	"name": "sub96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 987,
																	"src": "6756:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint96_$_t_uint96_$_t_string_memory_ptr_$returns$_t_uint96_$",
																		"typeString": "function (uint96,uint96,string memory) pure returns (uint96)"
																	}
																},
																"id": 294,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6756:96:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6734:118:0"
														},
														{
															"expression": {
																"id": 302,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 296,
																			"name": "allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 24,
																			"src": "6866:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint96_$_$",
																				"typeString": "mapping(address => mapping(address => uint96))"
																			}
																		},
																		"id": 299,
																		"indexExpression": {
																			"id": 297,
																			"name": "src",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 248,
																			"src": "6877:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "6866:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint96_$",
																			"typeString": "mapping(address => uint96)"
																		}
																	},
																	"id": 300,
																	"indexExpression": {
																		"id": 298,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 258,
																		"src": "6882:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6866:24:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 301,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 289,
																	"src": "6893:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	}
																},
																"src": "6866:39:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															"id": 303,
															"nodeType": "ExpressionStatement",
															"src": "6866:39:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 305,
																		"name": "src",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 248,
																		"src": "6934:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 306,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 258,
																		"src": "6939:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 307,
																		"name": "newAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 289,
																		"src": "6948:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint96",
																			"typeString": "uint96"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint96",
																			"typeString": "uint96"
																		}
																	],
																	"id": 304,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 106,
																	"src": "6925:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 308,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6925:36:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 309,
															"nodeType": "EmitStatement",
															"src": "6920:41:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 313,
															"name": "src",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 248,
															"src": "6998:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 314,
															"name": "dst",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 250,
															"src": "7003:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 315,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 271,
															"src": "7008:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														],
														"id": 312,
														"name": "_transferTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 707,
														"src": "6982:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint96_$returns$__$",
															"typeString": "function (address,address,uint96)"
														}
													},
													"id": 316,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6982:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 317,
												"nodeType": "ExpressionStatement",
												"src": "6982:33:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 318,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "7032:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 256,
												"id": 319,
												"nodeType": "Return",
												"src": "7025:11:0"
											}
										]
									},
									"documentation": {
										"id": 246,
										"nodeType": "StructuredDocumentation",
										"src": "6084:290:0",
										"text": " @notice Transfer `amount` tokens from `src` to `dst`\n @param src The address of the source account\n @param dst The address of the destination account\n @param rawAmount The number of tokens to transfer\n @return Whether or not the transfer succeeded"
									},
									"functionSelector": "23b872dd",
									"id": 321,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "6388:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 248,
												"mutability": "mutable",
												"name": "src",
												"nameLocation": "6409:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 321,
												"src": "6401:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 247,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6401:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 250,
												"mutability": "mutable",
												"name": "dst",
												"nameLocation": "6422:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 321,
												"src": "6414:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 249,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6414:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "rawAmount",
												"nameLocation": "6432:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 321,
												"src": "6427:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 251,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6427:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6400:42:0"
									},
									"returnParameters": {
										"id": 256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 255,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 321,
												"src": "6461:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 254,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6461:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6460:6:0"
									},
									"scope": 1000,
									"src": "6379:664:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 333,
										"nodeType": "Block",
										"src": "7229:56:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 328,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "7256:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 329,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7260:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "7256:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 330,
															"name": "delegatee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 324,
															"src": "7268:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 327,
														"name": "_delegate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 637,
														"src": "7246:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 331,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7246:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"functionReturnParameters": 326,
												"id": 332,
												"nodeType": "Return",
												"src": "7239:39:0"
											}
										]
									},
									"documentation": {
										"id": 322,
										"nodeType": "StructuredDocumentation",
										"src": "7049:131:0",
										"text": " @notice Delegate votes from `msg.sender` to `delegatee`\n @param delegatee The address to delegate votes to"
									},
									"functionSelector": "5c19a95c",
									"id": 334,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "delegate",
									"nameLocation": "7194:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "delegatee",
												"nameLocation": "7211:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "7203:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 323,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7203:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7202:19:0"
									},
									"returnParameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7229:0:0"
									},
									"scope": 1000,
									"src": "7185:100:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 436,
										"nodeType": "Block",
										"src": "7813:687:0",
										"statements": [
											{
												"assignments": [
													351
												],
												"declarations": [
													{
														"constant": false,
														"id": 351,
														"mutability": "mutable",
														"name": "domainSeparator",
														"nameLocation": "7831:15:0",
														"nodeType": "VariableDeclaration",
														"scope": 436,
														"src": "7823:23:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 350,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "7823:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 370,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 355,
																	"name": "DOMAIN_TYPEHASH",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 59,
																	"src": "7870:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 359,
																					"name": "name",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 5,
																					"src": "7903:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 358,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "7897:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																					"typeString": "type(bytes storage pointer)"
																				},
																				"typeName": {
																					"id": 357,
																					"name": "bytes",
																					"nodeType": "ElementaryTypeName",
																					"src": "7897:5:0",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 360,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7897:11:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		],
																		"id": 356,
																		"name": "keccak256",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967288,
																		"src": "7887:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																			"typeString": "function (bytes memory) pure returns (bytes32)"
																		}
																	},
																	"id": 361,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7887:22:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 362,
																		"name": "getChainId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 999,
																		"src": "7911:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																			"typeString": "function () view returns (uint256)"
																		}
																	},
																	"id": 363,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7911:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 366,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "7933:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Comp_$1000",
																				"typeString": "contract Comp"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Comp_$1000",
																				"typeString": "contract Comp"
																			}
																		],
																		"id": 365,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "7925:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 364,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "7925:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 367,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7925:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 353,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "7859:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 354,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "7863:6:0",
																"memberName": "encode",
																"nodeType": "MemberAccess",
																"src": "7859:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 368,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7859:80:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 352,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "7849:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 369,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7849:91:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7823:117:0"
											},
											{
												"assignments": [
													372
												],
												"declarations": [
													{
														"constant": false,
														"id": 372,
														"mutability": "mutable",
														"name": "structHash",
														"nameLocation": "7958:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 436,
														"src": "7950:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 371,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "7950:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 382,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 376,
																	"name": "DELEGATION_TYPEHASH",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 65,
																	"src": "7992:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 377,
																	"name": "delegatee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 337,
																	"src": "8013:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 378,
																	"name": "nonce",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 339,
																	"src": "8024:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 379,
																	"name": "expiry",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 341,
																	"src": "8031:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 374,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "7981:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 375,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "7985:6:0",
																"memberName": "encode",
																"nodeType": "MemberAccess",
																"src": "7981:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 380,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7981:57:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 373,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "7971:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 381,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7971:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7950:89:0"
											},
											{
												"assignments": [
													384
												],
												"declarations": [
													{
														"constant": false,
														"id": 384,
														"mutability": "mutable",
														"name": "digest",
														"nameLocation": "8057:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 436,
														"src": "8049:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 383,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "8049:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 393,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "1901",
																	"id": 388,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8093:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
																		"typeString": "literal_string hex\"1901\""
																	},
																	"value": "\u0019\u0001"
																},
																{
																	"id": 389,
																	"name": "domainSeparator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 351,
																	"src": "8105:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 390,
																	"name": "structHash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 372,
																	"src": "8122:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
																		"typeString": "literal_string hex\"1901\""
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 386,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "8076:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 387,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "8080:12:0",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "8076:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 391,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8076:57:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 385,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "8066:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 392,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8066:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8049:85:0"
											},
											{
												"assignments": [
													395
												],
												"declarations": [
													{
														"constant": false,
														"id": 395,
														"mutability": "mutable",
														"name": "signatory",
														"nameLocation": "8152:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 436,
														"src": "8144:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 394,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "8144:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 402,
												"initialValue": {
													"arguments": [
														{
															"id": 397,
															"name": "digest",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 384,
															"src": "8174:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 398,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 343,
															"src": "8182:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 399,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 345,
															"src": "8185:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 400,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 347,
															"src": "8188:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 396,
														"name": "ecrecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967290,
														"src": "8164:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
															"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
														}
													},
													"id": 401,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8164:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8144:46:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 409,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 404,
																"name": "signatory",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 395,
																"src": "8208:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 407,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8229:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 406,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8221:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 405,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8221:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 408,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8221:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8208:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436f6d703a3a64656c656761746542795369673a20696e76616c6964207369676e6174757265",
															"id": 410,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8233:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2af9d25b44c3e789cf7d12e941fc7ef1e32cecdd98da61996de7571027751bd3",
																"typeString": "literal_string \"Comp::delegateBySig: invalid signature\""
															},
															"value": "Comp::delegateBySig: invalid signature"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2af9d25b44c3e789cf7d12e941fc7ef1e32cecdd98da61996de7571027751bd3",
																"typeString": "literal_string \"Comp::delegateBySig: invalid signature\""
															}
														],
														"id": 403,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8200:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 411,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8200:74:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 412,
												"nodeType": "ExpressionStatement",
												"src": "8200:74:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 419,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 414,
																"name": "nonce",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 339,
																"src": "8292:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 418,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "8301:19:0",
																"subExpression": {
																	"baseExpression": {
																		"id": 415,
																		"name": "nonces",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 70,
																		"src": "8301:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 417,
																	"indexExpression": {
																		"id": 416,
																		"name": "signatory",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 395,
																		"src": "8308:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "8301:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8292:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436f6d703a3a64656c656761746542795369673a20696e76616c6964206e6f6e6365",
															"id": 420,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8322:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_646cb63637df51b5cf3e35b8d418574ca2fa5dde981ba9f8f5779cfcbbc8a355",
																"typeString": "literal_string \"Comp::delegateBySig: invalid nonce\""
															},
															"value": "Comp::delegateBySig: invalid nonce"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_646cb63637df51b5cf3e35b8d418574ca2fa5dde981ba9f8f5779cfcbbc8a355",
																"typeString": "literal_string \"Comp::delegateBySig: invalid nonce\""
															}
														],
														"id": 413,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8284:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 421,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8284:75:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 422,
												"nodeType": "ExpressionStatement",
												"src": "8284:75:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 427,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 424,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "8377:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 425,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8383:9:0",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "8377:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 426,
																"name": "expiry",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 341,
																"src": "8396:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8377:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436f6d703a3a64656c656761746542795369673a207369676e61747572652065787069726564",
															"id": 428,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8404:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2e8a87756e5afc73b82eff32f16bb6b10740f4f70e3e129eab06194e30ad3059",
																"typeString": "literal_string \"Comp::delegateBySig: signature expired\""
															},
															"value": "Comp::delegateBySig: signature expired"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2e8a87756e5afc73b82eff32f16bb6b10740f4f70e3e129eab06194e30ad3059",
																"typeString": "literal_string \"Comp::delegateBySig: signature expired\""
															}
														],
														"id": 423,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8369:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 429,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8369:76:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 430,
												"nodeType": "ExpressionStatement",
												"src": "8369:76:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 432,
															"name": "signatory",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 395,
															"src": "8472:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 433,
															"name": "delegatee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 337,
															"src": "8483:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 431,
														"name": "_delegate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 637,
														"src": "8462:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 434,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8462:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"functionReturnParameters": 349,
												"id": 435,
												"nodeType": "Return",
												"src": "8455:38:0"
											}
										]
									},
									"documentation": {
										"id": 335,
										"nodeType": "StructuredDocumentation",
										"src": "7291:412:0",
										"text": " @notice Delegates votes from signatory to `delegatee`\n @param delegatee The address to delegate votes to\n @param nonce The contract state required to match the signature\n @param expiry The time at which to expire the signature\n @param v The recovery byte of the signature\n @param r Half of the ECDSA signature pair\n @param s Half of the ECDSA signature pair"
									},
									"functionSelector": "c3cda520",
									"id": 437,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "delegateBySig",
									"nameLocation": "7717:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 348,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 337,
												"mutability": "mutable",
												"name": "delegatee",
												"nameLocation": "7739:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 437,
												"src": "7731:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 336,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7731:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "nonce",
												"nameLocation": "7755:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 437,
												"src": "7750:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 338,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "7750:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "expiry",
												"nameLocation": "7767:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 437,
												"src": "7762:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 340,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "7762:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 343,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "7781:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 437,
												"src": "7775:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 342,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "7775:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 345,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "7792:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 437,
												"src": "7784:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 344,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7784:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 347,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "7803:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 437,
												"src": "7795:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 346,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7795:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7730:75:0"
									},
									"returnParameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7813:0:0"
									},
									"scope": 1000,
									"src": "7708:792:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 465,
										"nodeType": "Block",
										"src": "8767:146:0",
										"statements": [
											{
												"assignments": [
													446
												],
												"declarations": [
													{
														"constant": false,
														"id": 446,
														"mutability": "mutable",
														"name": "nCheckpoints",
														"nameLocation": "8784:12:0",
														"nodeType": "VariableDeclaration",
														"scope": 465,
														"src": "8777:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"typeName": {
															"id": 445,
															"name": "uint32",
															"nodeType": "ElementaryTypeName",
															"src": "8777:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 450,
												"initialValue": {
													"baseExpression": {
														"id": 447,
														"name": "numCheckpoints",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 53,
														"src": "8799:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
															"typeString": "mapping(address => uint32)"
														}
													},
													"id": 449,
													"indexExpression": {
														"id": 448,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 440,
														"src": "8814:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8799:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8777:45:0"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"id": 453,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 451,
															"name": "nCheckpoints",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 446,
															"src": "8839:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 452,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8854:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8839:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "30",
														"id": 462,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8905:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"id": 463,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "8839:67:0",
													"trueExpression": {
														"expression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 454,
																	"name": "checkpoints",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 48,
																	"src": "8858:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$40_storage_$_$",
																		"typeString": "mapping(address => mapping(uint32 => struct Comp.Checkpoint storage ref))"
																	}
																},
																"id": 456,
																"indexExpression": {
																	"id": 455,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 440,
																	"src": "8870:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "8858:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$40_storage_$",
																	"typeString": "mapping(uint32 => struct Comp.Checkpoint storage ref)"
																}
															},
															"id": 460,
															"indexExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																},
																"id": 459,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 457,
																	"name": "nCheckpoints",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 446,
																	"src": "8879:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 458,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8894:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8879:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "8858:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Checkpoint_$40_storage",
																"typeString": "struct Comp.Checkpoint storage ref"
															}
														},
														"id": 461,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8897:5:0",
														"memberName": "votes",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 39,
														"src": "8858:44:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"functionReturnParameters": 444,
												"id": 464,
												"nodeType": "Return",
												"src": "8832:74:0"
											}
										]
									},
									"documentation": {
										"id": 438,
										"nodeType": "StructuredDocumentation",
										"src": "8506:183:0",
										"text": " @notice Gets the current votes balance for `account`\n @param account The address to get votes balance\n @return The number of current votes for `account`"
									},
									"functionSelector": "b4b5ea57",
									"id": 466,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getCurrentVotes",
									"nameLocation": "8703:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 441,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 440,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8727:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 466,
												"src": "8719:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 439,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8719:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8718:17:0"
									},
									"returnParameters": {
										"id": 444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 443,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 466,
												"src": "8759:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 442,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "8759:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8758:8:0"
									},
									"scope": 1000,
									"src": "8694:219:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 598,
										"nodeType": "Block",
										"src": "9422:1099:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 480,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 477,
																"name": "blockNumber",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 471,
																"src": "9440:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"expression": {
																	"id": 478,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "9454:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 479,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "9460:6:0",
																"memberName": "number",
																"nodeType": "MemberAccess",
																"src": "9454:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9440:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436f6d703a3a6765745072696f72566f7465733a206e6f74207965742064657465726d696e6564",
															"id": 481,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9468:41:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_49387db7fef935f0f28be8b61df0527ef3c11db5acad132a74e4fb5d480e55d0",
																"typeString": "literal_string \"Comp::getPriorVotes: not yet determined\""
															},
															"value": "Comp::getPriorVotes: not yet determined"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_49387db7fef935f0f28be8b61df0527ef3c11db5acad132a74e4fb5d480e55d0",
																"typeString": "literal_string \"Comp::getPriorVotes: not yet determined\""
															}
														],
														"id": 476,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9432:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 482,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9432:78:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 483,
												"nodeType": "ExpressionStatement",
												"src": "9432:78:0"
											},
											{
												"assignments": [
													485
												],
												"declarations": [
													{
														"constant": false,
														"id": 485,
														"mutability": "mutable",
														"name": "nCheckpoints",
														"nameLocation": "9528:12:0",
														"nodeType": "VariableDeclaration",
														"scope": 598,
														"src": "9521:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"typeName": {
															"id": 484,
															"name": "uint32",
															"nodeType": "ElementaryTypeName",
															"src": "9521:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 489,
												"initialValue": {
													"baseExpression": {
														"id": 486,
														"name": "numCheckpoints",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 53,
														"src": "9543:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
															"typeString": "mapping(address => uint32)"
														}
													},
													"id": 488,
													"indexExpression": {
														"id": 487,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 469,
														"src": "9558:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9543:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9521:45:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													},
													"id": 492,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 490,
														"name": "nCheckpoints",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 485,
														"src": "9580:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 491,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9596:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "9580:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 496,
												"nodeType": "IfStatement",
												"src": "9576:56:0",
												"trueBody": {
													"id": 495,
													"nodeType": "Block",
													"src": "9599:33:0",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 493,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9620:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 475,
															"id": 494,
															"nodeType": "Return",
															"src": "9613:8:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 506,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 497,
																	"name": "checkpoints",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 48,
																	"src": "9689:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$40_storage_$_$",
																		"typeString": "mapping(address => mapping(uint32 => struct Comp.Checkpoint storage ref))"
																	}
																},
																"id": 499,
																"indexExpression": {
																	"id": 498,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 469,
																	"src": "9701:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "9689:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$40_storage_$",
																	"typeString": "mapping(uint32 => struct Comp.Checkpoint storage ref)"
																}
															},
															"id": 503,
															"indexExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																},
																"id": 502,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 500,
																	"name": "nCheckpoints",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 485,
																	"src": "9710:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 501,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9725:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9710:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9689:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Checkpoint_$40_storage",
																"typeString": "struct Comp.Checkpoint storage ref"
															}
														},
														"id": 504,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9728:9:0",
														"memberName": "fromBlock",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 37,
														"src": "9689:48:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"id": 505,
														"name": "blockNumber",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 471,
														"src": "9741:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9689:63:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 517,
												"nodeType": "IfStatement",
												"src": "9685:145:0",
												"trueBody": {
													"id": 516,
													"nodeType": "Block",
													"src": "9754:76:0",
													"statements": [
														{
															"expression": {
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 507,
																			"name": "checkpoints",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 48,
																			"src": "9775:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$40_storage_$_$",
																				"typeString": "mapping(address => mapping(uint32 => struct Comp.Checkpoint storage ref))"
																			}
																		},
																		"id": 509,
																		"indexExpression": {
																			"id": 508,
																			"name": "account",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 469,
																			"src": "9787:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "9775:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$40_storage_$",
																			"typeString": "mapping(uint32 => struct Comp.Checkpoint storage ref)"
																		}
																	},
																	"id": 513,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		},
																		"id": 512,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 510,
																			"name": "nCheckpoints",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 485,
																			"src": "9796:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 511,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9811:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9796:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "9775:38:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Checkpoint_$40_storage",
																		"typeString": "struct Comp.Checkpoint storage ref"
																	}
																},
																"id": 514,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "9814:5:0",
																"memberName": "votes",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 39,
																"src": "9775:44:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															"functionReturnParameters": 475,
															"id": 515,
															"nodeType": "Return",
															"src": "9768:51:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 525,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 518,
																	"name": "checkpoints",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 48,
																	"src": "9888:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$40_storage_$_$",
																		"typeString": "mapping(address => mapping(uint32 => struct Comp.Checkpoint storage ref))"
																	}
																},
																"id": 520,
																"indexExpression": {
																	"id": 519,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 469,
																	"src": "9900:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "9888:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$40_storage_$",
																	"typeString": "mapping(uint32 => struct Comp.Checkpoint storage ref)"
																}
															},
															"id": 522,
															"indexExpression": {
																"hexValue": "30",
																"id": 521,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9909:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9888:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Checkpoint_$40_storage",
																"typeString": "struct Comp.Checkpoint storage ref"
															}
														},
														"id": 523,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9912:9:0",
														"memberName": "fromBlock",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 37,
														"src": "9888:33:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 524,
														"name": "blockNumber",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 471,
														"src": "9924:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9888:47:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 529,
												"nodeType": "IfStatement",
												"src": "9884:86:0",
												"trueBody": {
													"id": 528,
													"nodeType": "Block",
													"src": "9937:33:0",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 526,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9958:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 475,
															"id": 527,
															"nodeType": "Return",
															"src": "9951:8:0"
														}
													]
												}
											},
											{
												"assignments": [
													531
												],
												"declarations": [
													{
														"constant": false,
														"id": 531,
														"mutability": "mutable",
														"name": "lower",
														"nameLocation": "9987:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 598,
														"src": "9980:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"typeName": {
															"id": 530,
															"name": "uint32",
															"nodeType": "ElementaryTypeName",
															"src": "9980:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 533,
												"initialValue": {
													"hexValue": "30",
													"id": 532,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "9995:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9980:16:0"
											},
											{
												"assignments": [
													535
												],
												"declarations": [
													{
														"constant": false,
														"id": 535,
														"mutability": "mutable",
														"name": "upper",
														"nameLocation": "10013:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 598,
														"src": "10006:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"typeName": {
															"id": 534,
															"name": "uint32",
															"nodeType": "ElementaryTypeName",
															"src": "10006:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 539,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													},
													"id": 538,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 536,
														"name": "nCheckpoints",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 485,
														"src": "10021:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"hexValue": "31",
														"id": 537,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10036:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "10021:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10006:31:0"
											},
											{
												"body": {
													"id": 589,
													"nodeType": "Block",
													"src": "10069:396:0",
													"statements": [
														{
															"assignments": [
																544
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 544,
																	"mutability": "mutable",
																	"name": "center",
																	"nameLocation": "10090:6:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 589,
																	"src": "10083:13:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	},
																	"typeName": {
																		"id": 543,
																		"name": "uint32",
																		"nodeType": "ElementaryTypeName",
																		"src": "10083:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 553,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																},
																"id": 552,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 545,
																	"name": "upper",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 535,
																	"src": "10099:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	},
																	"id": 551,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint32",
																					"typeString": "uint32"
																				},
																				"id": 548,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 546,
																					"name": "upper",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 535,
																					"src": "10108:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 547,
																					"name": "lower",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 531,
																					"src": "10116:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				"src": "10108:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint32",
																					"typeString": "uint32"
																				}
																			}
																		],
																		"id": 549,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "10107:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "32",
																		"id": 550,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10125:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"src": "10107:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"src": "10099:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "10083:43:0"
														},
														{
															"assignments": [
																556
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 556,
																	"mutability": "mutable",
																	"name": "cp",
																	"nameLocation": "10185:2:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 589,
																	"src": "10167:20:0",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Checkpoint_$40_memory_ptr",
																		"typeString": "struct Comp.Checkpoint"
																	},
																	"typeName": {
																		"id": 555,
																		"nodeType": "UserDefinedTypeName",
																		"pathNode": {
																			"id": 554,
																			"name": "Checkpoint",
																			"nameLocations": [
																				"10167:10:0"
																			],
																			"nodeType": "IdentifierPath",
																			"referencedDeclaration": 40,
																			"src": "10167:10:0"
																		},
																		"referencedDeclaration": 40,
																		"src": "10167:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Checkpoint_$40_storage_ptr",
																			"typeString": "struct Comp.Checkpoint"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 562,
															"initialValue": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 557,
																		"name": "checkpoints",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 48,
																		"src": "10190:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$40_storage_$_$",
																			"typeString": "mapping(address => mapping(uint32 => struct Comp.Checkpoint storage ref))"
																		}
																	},
																	"id": 559,
																	"indexExpression": {
																		"id": 558,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 469,
																		"src": "10202:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "10190:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$40_storage_$",
																		"typeString": "mapping(uint32 => struct Comp.Checkpoint storage ref)"
																	}
																},
																"id": 561,
																"indexExpression": {
																	"id": 560,
																	"name": "center",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 544,
																	"src": "10211:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "10190:28:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Checkpoint_$40_storage",
																	"typeString": "struct Comp.Checkpoint storage ref"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "10167:51:0"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 566,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 563,
																		"name": "cp",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 556,
																		"src": "10236:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Checkpoint_$40_memory_ptr",
																			"typeString": "struct Comp.Checkpoint memory"
																		}
																	},
																	"id": 564,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "10239:9:0",
																	"memberName": "fromBlock",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 37,
																	"src": "10236:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 565,
																	"name": "blockNumber",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 471,
																	"src": "10252:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10236:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 574,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 571,
																			"name": "cp",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 556,
																			"src": "10323:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Checkpoint_$40_memory_ptr",
																				"typeString": "struct Comp.Checkpoint memory"
																			}
																		},
																		"id": 572,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "10326:9:0",
																		"memberName": "fromBlock",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 37,
																		"src": "10323:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<",
																	"rightExpression": {
																		"id": 573,
																		"name": "blockNumber",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 471,
																		"src": "10338:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10323:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseBody": {
																	"id": 586,
																	"nodeType": "Block",
																	"src": "10404:51:0",
																	"statements": [
																		{
																			"expression": {
																				"id": 584,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"id": 580,
																					"name": "upper",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 535,
																					"src": "10422:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"commonType": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					},
																					"id": 583,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 581,
																						"name": "center",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 544,
																						"src": "10430:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint32",
																							"typeString": "uint32"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"hexValue": "31",
																						"id": 582,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "10439:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"src": "10430:10:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				"src": "10422:18:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint32",
																					"typeString": "uint32"
																				}
																			},
																			"id": 585,
																			"nodeType": "ExpressionStatement",
																			"src": "10422:18:0"
																		}
																	]
																},
																"id": 587,
																"nodeType": "IfStatement",
																"src": "10319:136:0",
																"trueBody": {
																	"id": 579,
																	"nodeType": "Block",
																	"src": "10351:47:0",
																	"statements": [
																		{
																			"expression": {
																				"id": 577,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"id": 575,
																					"name": "lower",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 531,
																					"src": "10369:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"id": 576,
																					"name": "center",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 544,
																					"src": "10377:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				"src": "10369:14:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint32",
																					"typeString": "uint32"
																				}
																			},
																			"id": 578,
																			"nodeType": "ExpressionStatement",
																			"src": "10369:14:0"
																		}
																	]
																}
															},
															"id": 588,
															"nodeType": "IfStatement",
															"src": "10232:223:0",
															"trueBody": {
																"id": 570,
																"nodeType": "Block",
																"src": "10265:48:0",
																"statements": [
																	{
																		"expression": {
																			"expression": {
																				"id": 567,
																				"name": "cp",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 556,
																				"src": "10290:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Checkpoint_$40_memory_ptr",
																					"typeString": "struct Comp.Checkpoint memory"
																				}
																			},
																			"id": 568,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "10293:5:0",
																			"memberName": "votes",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 39,
																			"src": "10290:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint96",
																				"typeString": "uint96"
																			}
																		},
																		"functionReturnParameters": 475,
																		"id": 569,
																		"nodeType": "Return",
																		"src": "10283:15:0"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													},
													"id": 542,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 540,
														"name": "upper",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 535,
														"src": "10054:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 541,
														"name": "lower",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 531,
														"src": "10062:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "10054:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 590,
												"nodeType": "WhileStatement",
												"src": "10047:418:0"
											},
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"baseExpression": {
																"id": 591,
																"name": "checkpoints",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 48,
																"src": "10481:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$40_storage_$_$",
																	"typeString": "mapping(address => mapping(uint32 => struct Comp.Checkpoint storage ref))"
																}
															},
															"id": 593,
															"indexExpression": {
																"id": 592,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 469,
																"src": "10493:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10481:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$40_storage_$",
																"typeString": "mapping(uint32 => struct Comp.Checkpoint storage ref)"
															}
														},
														"id": 595,
														"indexExpression": {
															"id": 594,
															"name": "lower",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 531,
															"src": "10502:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "10481:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Checkpoint_$40_storage",
															"typeString": "struct Comp.Checkpoint storage ref"
														}
													},
													"id": 596,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "10509:5:0",
													"memberName": "votes",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 39,
													"src": "10481:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"functionReturnParameters": 475,
												"id": 597,
												"nodeType": "Return",
												"src": "10474:40:0"
											}
										]
									},
									"documentation": {
										"id": 467,
										"nodeType": "StructuredDocumentation",
										"src": "8919:411:0",
										"text": " @notice Determine the prior number of votes for an account as of a block number\n @dev Block number must be a finalized block or else this function will revert to prevent misinformation.\n @param account The address of the account to check\n @param blockNumber The block number to get the vote balance at\n @return The number of votes the account had as of the given block"
									},
									"functionSelector": "782d6fe1",
									"id": 599,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getPriorVotes",
									"nameLocation": "9344:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 472,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 469,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "9366:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 599,
												"src": "9358:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 468,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9358:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 471,
												"mutability": "mutable",
												"name": "blockNumber",
												"nameLocation": "9380:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 599,
												"src": "9375:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 470,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "9375:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9357:35:0"
									},
									"returnParameters": {
										"id": 475,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 474,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 599,
												"src": "9414:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 473,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "9414:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9413:8:0"
									},
									"scope": 1000,
									"src": "9335:1186:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 636,
										"nodeType": "Block",
										"src": "10593:301:0",
										"statements": [
											{
												"assignments": [
													607
												],
												"declarations": [
													{
														"constant": false,
														"id": 607,
														"mutability": "mutable",
														"name": "currentDelegate",
														"nameLocation": "10611:15:0",
														"nodeType": "VariableDeclaration",
														"scope": 636,
														"src": "10603:23:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 606,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "10603:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 611,
												"initialValue": {
													"baseExpression": {
														"id": 608,
														"name": "delegates",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 34,
														"src": "10629:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
															"typeString": "mapping(address => address)"
														}
													},
													"id": 610,
													"indexExpression": {
														"id": 609,
														"name": "delegator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 601,
														"src": "10639:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "10629:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10603:46:0"
											},
											{
												"assignments": [
													613
												],
												"declarations": [
													{
														"constant": false,
														"id": 613,
														"mutability": "mutable",
														"name": "delegatorBalance",
														"nameLocation": "10666:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 636,
														"src": "10659:23:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														},
														"typeName": {
															"id": 612,
															"name": "uint96",
															"nodeType": "ElementaryTypeName",
															"src": "10659:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 617,
												"initialValue": {
													"baseExpression": {
														"id": 614,
														"name": "balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 29,
														"src": "10685:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint96_$",
															"typeString": "mapping(address => uint96)"
														}
													},
													"id": 616,
													"indexExpression": {
														"id": 615,
														"name": "delegator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 601,
														"src": "10694:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "10685:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10659:45:0"
											},
											{
												"expression": {
													"id": 622,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 618,
															"name": "delegates",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 34,
															"src": "10714:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																"typeString": "mapping(address => address)"
															}
														},
														"id": 620,
														"indexExpression": {
															"id": 619,
															"name": "delegator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 601,
															"src": "10724:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10714:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 621,
														"name": "delegatee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 603,
														"src": "10737:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10714:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 623,
												"nodeType": "ExpressionStatement",
												"src": "10714:32:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 625,
															"name": "delegator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 601,
															"src": "10778:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 626,
															"name": "currentDelegate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 607,
															"src": "10789:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 627,
															"name": "delegatee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 603,
															"src": "10806:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 624,
														"name": "DelegateChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 79,
														"src": "10762:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address,address)"
														}
													},
													"id": 628,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10762:54:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 629,
												"nodeType": "EmitStatement",
												"src": "10757:59:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 631,
															"name": "currentDelegate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 607,
															"src": "10842:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 632,
															"name": "delegatee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 603,
															"src": "10859:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 633,
															"name": "delegatorBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 613,
															"src": "10870:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														],
														"id": 630,
														"name": "_moveDelegates",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 816,
														"src": "10827:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint96_$returns$__$",
															"typeString": "function (address,address,uint96)"
														}
													},
													"id": 634,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10827:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 635,
												"nodeType": "ExpressionStatement",
												"src": "10827:60:0"
											}
										]
									},
									"id": 637,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_delegate",
									"nameLocation": "10536:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 604,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 601,
												"mutability": "mutable",
												"name": "delegator",
												"nameLocation": "10554:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "10546:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 600,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10546:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 603,
												"mutability": "mutable",
												"name": "delegatee",
												"nameLocation": "10573:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "10565:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 602,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10565:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10545:38:0"
									},
									"returnParameters": {
										"id": 605,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10593:0:0"
									},
									"scope": 1000,
									"src": "10527:367:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 706,
										"nodeType": "Block",
										"src": "10975:530:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 652,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 647,
																"name": "src",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 639,
																"src": "10993:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 650,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11008:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 649,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11000:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 648,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "11000:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 651,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11000:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10993:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436f6d703a3a5f7472616e73666572546f6b656e733a2063616e6e6f74207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 653,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11012:62:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a1f9ee8b9464145aa6c6c80f5dd3de0ed75b63050c7ed5dda64f4dfa66ae889e",
																"typeString": "literal_string \"Comp::_transferTokens: cannot transfer from the zero address\""
															},
															"value": "Comp::_transferTokens: cannot transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a1f9ee8b9464145aa6c6c80f5dd3de0ed75b63050c7ed5dda64f4dfa66ae889e",
																"typeString": "literal_string \"Comp::_transferTokens: cannot transfer from the zero address\""
															}
														],
														"id": 646,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10985:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 654,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10985:90:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 655,
												"nodeType": "ExpressionStatement",
												"src": "10985:90:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 662,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 657,
																"name": "dst",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 641,
																"src": "11093:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 660,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11108:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 659,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11100:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 658,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "11100:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 661,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11100:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "11093:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436f6d703a3a5f7472616e73666572546f6b656e733a2063616e6e6f74207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 663,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11112:60:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6dfd73e095121fac86dfcecda88ee2e5a2c4c80da47692a4520dec08a942eef4",
																"typeString": "literal_string \"Comp::_transferTokens: cannot transfer to the zero address\""
															},
															"value": "Comp::_transferTokens: cannot transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6dfd73e095121fac86dfcecda88ee2e5a2c4c80da47692a4520dec08a942eef4",
																"typeString": "literal_string \"Comp::_transferTokens: cannot transfer to the zero address\""
															}
														],
														"id": 656,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11085:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 664,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11085:88:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 665,
												"nodeType": "ExpressionStatement",
												"src": "11085:88:0"
											},
											{
												"expression": {
													"id": 676,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 666,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 29,
															"src": "11184:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint96_$",
																"typeString": "mapping(address => uint96)"
															}
														},
														"id": 668,
														"indexExpression": {
															"id": 667,
															"name": "src",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 639,
															"src": "11193:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11184:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"baseExpression": {
																	"id": 670,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 29,
																	"src": "11206:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint96_$",
																		"typeString": "mapping(address => uint96)"
																	}
																},
																"id": 672,
																"indexExpression": {
																	"id": 671,
																	"name": "src",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 639,
																	"src": "11215:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "11206:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															{
																"id": 673,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 643,
																"src": "11221:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															{
																"hexValue": "436f6d703a3a5f7472616e73666572546f6b656e733a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
																"id": 674,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11229:56:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_20f75e61dae66bd43cc4d6e74412a2a0dfc4c34b4746776eb4e12c627179461c",
																	"typeString": "literal_string \"Comp::_transferTokens: transfer amount exceeds balance\""
																},
																"value": "Comp::_transferTokens: transfer amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																},
																{
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																},
																{
																	"typeIdentifier": "t_stringliteral_20f75e61dae66bd43cc4d6e74412a2a0dfc4c34b4746776eb4e12c627179461c",
																	"typeString": "literal_string \"Comp::_transferTokens: transfer amount exceeds balance\""
																}
															],
															"id": 669,
															"name": "sub96",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 987,
															"src": "11200:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint96_$_t_uint96_$_t_string_memory_ptr_$returns$_t_uint96_$",
																"typeString": "function (uint96,uint96,string memory) pure returns (uint96)"
															}
														},
														"id": 675,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11200:86:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"src": "11184:102:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"id": 677,
												"nodeType": "ExpressionStatement",
												"src": "11184:102:0"
											},
											{
												"expression": {
													"id": 688,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 678,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 29,
															"src": "11296:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint96_$",
																"typeString": "mapping(address => uint96)"
															}
														},
														"id": 680,
														"indexExpression": {
															"id": 679,
															"name": "dst",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 641,
															"src": "11305:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11296:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"baseExpression": {
																	"id": 682,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 29,
																	"src": "11318:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint96_$",
																		"typeString": "mapping(address => uint96)"
																	}
																},
																"id": 684,
																"indexExpression": {
																	"id": 683,
																	"name": "dst",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 641,
																	"src": "11327:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "11318:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															{
																"id": 685,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 643,
																"src": "11333:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															{
																"hexValue": "436f6d703a3a5f7472616e73666572546f6b656e733a207472616e7366657220616d6f756e74206f766572666c6f7773",
																"id": 686,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11341:50:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_838ec7826d8a7e194a0b4c14b8572b8a97cbf1ec9a1dd8f0dc2ca0dbf889365c",
																	"typeString": "literal_string \"Comp::_transferTokens: transfer amount overflows\""
																},
																"value": "Comp::_transferTokens: transfer amount overflows"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																},
																{
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																},
																{
																	"typeIdentifier": "t_stringliteral_838ec7826d8a7e194a0b4c14b8572b8a97cbf1ec9a1dd8f0dc2ca0dbf889365c",
																	"typeString": "literal_string \"Comp::_transferTokens: transfer amount overflows\""
																}
															],
															"id": 681,
															"name": "add96",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 964,
															"src": "11312:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint96_$_t_uint96_$_t_string_memory_ptr_$returns$_t_uint96_$",
																"typeString": "function (uint96,uint96,string memory) pure returns (uint96)"
															}
														},
														"id": 687,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11312:80:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"src": "11296:96:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"id": 689,
												"nodeType": "ExpressionStatement",
												"src": "11296:96:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 691,
															"name": "src",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 639,
															"src": "11416:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 692,
															"name": "dst",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 641,
															"src": "11421:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 693,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 643,
															"src": "11426:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														],
														"id": 690,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 97,
														"src": "11407:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 694,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11407:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 695,
												"nodeType": "EmitStatement",
												"src": "11402:31:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 697,
																"name": "delegates",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 34,
																"src": "11459:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																	"typeString": "mapping(address => address)"
																}
															},
															"id": 699,
															"indexExpression": {
																"id": 698,
																"name": "src",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 639,
																"src": "11469:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "11459:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"baseExpression": {
																"id": 700,
																"name": "delegates",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 34,
																"src": "11475:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																	"typeString": "mapping(address => address)"
																}
															},
															"id": 702,
															"indexExpression": {
																"id": 701,
																"name": "dst",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 641,
																"src": "11485:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "11475:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 703,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 643,
															"src": "11491:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														],
														"id": 696,
														"name": "_moveDelegates",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 816,
														"src": "11444:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint96_$returns$__$",
															"typeString": "function (address,address,uint96)"
														}
													},
													"id": 704,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11444:54:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 705,
												"nodeType": "ExpressionStatement",
												"src": "11444:54:0"
											}
										]
									},
									"id": 707,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferTokens",
									"nameLocation": "10909:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 644,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 639,
												"mutability": "mutable",
												"name": "src",
												"nameLocation": "10933:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 707,
												"src": "10925:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 638,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10925:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 641,
												"mutability": "mutable",
												"name": "dst",
												"nameLocation": "10946:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 707,
												"src": "10938:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 640,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10938:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 643,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10958:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 707,
												"src": "10951:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 642,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "10951:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10924:41:0"
									},
									"returnParameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10975:0:0"
									},
									"scope": 1000,
									"src": "10900:605:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 815,
										"nodeType": "Block",
										"src": "11591:843:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 718,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 716,
															"name": "srcRep",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 709,
															"src": "11605:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 717,
															"name": "dstRep",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 711,
															"src": "11615:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "11605:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														},
														"id": 721,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 719,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 713,
															"src": "11625:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 720,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11634:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "11625:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "11605:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 814,
												"nodeType": "IfStatement",
												"src": "11601:827:0",
												"trueBody": {
													"id": 813,
													"nodeType": "Block",
													"src": "11637:791:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 728,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 723,
																	"name": "srcRep",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 709,
																	"src": "11655:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 726,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11673:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 725,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "11665:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 724,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "11665:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 727,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "11665:10:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "11655:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 767,
															"nodeType": "IfStatement",
															"src": "11651:377:0",
															"trueBody": {
																"id": 766,
																"nodeType": "Block",
																"src": "11677:351:0",
																"statements": [
																	{
																		"assignments": [
																			730
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 730,
																				"mutability": "mutable",
																				"name": "srcRepNum",
																				"nameLocation": "11702:9:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 766,
																				"src": "11695:16:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint32",
																					"typeString": "uint32"
																				},
																				"typeName": {
																					"id": 729,
																					"name": "uint32",
																					"nodeType": "ElementaryTypeName",
																					"src": "11695:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 734,
																		"initialValue": {
																			"baseExpression": {
																				"id": 731,
																				"name": "numCheckpoints",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 53,
																				"src": "11714:14:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
																					"typeString": "mapping(address => uint32)"
																				}
																			},
																			"id": 733,
																			"indexExpression": {
																				"id": 732,
																				"name": "srcRep",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 709,
																				"src": "11729:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "11714:22:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "11695:41:0"
																	},
																	{
																		"assignments": [
																			736
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 736,
																				"mutability": "mutable",
																				"name": "srcRepOld",
																				"nameLocation": "11761:9:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 766,
																				"src": "11754:16:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint96",
																					"typeString": "uint96"
																				},
																				"typeName": {
																					"id": 735,
																					"name": "uint96",
																					"nodeType": "ElementaryTypeName",
																					"src": "11754:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint96",
																						"typeString": "uint96"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 750,
																		"initialValue": {
																			"condition": {
																				"commonType": {
																					"typeIdentifier": "t_uint32",
																					"typeString": "uint32"
																				},
																				"id": 739,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 737,
																					"name": "srcRepNum",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 730,
																					"src": "11773:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": ">",
																				"rightExpression": {
																					"hexValue": "30",
																					"id": 738,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "11785:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				},
																				"src": "11773:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"falseExpression": {
																				"hexValue": "30",
																				"id": 748,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11832:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"id": 749,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "Conditional",
																			"src": "11773:60:0",
																			"trueExpression": {
																				"expression": {
																					"baseExpression": {
																						"baseExpression": {
																							"id": 740,
																							"name": "checkpoints",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 48,
																							"src": "11789:11:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$40_storage_$_$",
																								"typeString": "mapping(address => mapping(uint32 => struct Comp.Checkpoint storage ref))"
																							}
																						},
																						"id": 742,
																						"indexExpression": {
																							"id": 741,
																							"name": "srcRep",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 709,
																							"src": "11801:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "11789:19:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$40_storage_$",
																							"typeString": "mapping(uint32 => struct Comp.Checkpoint storage ref)"
																						}
																					},
																					"id": 746,
																					"indexExpression": {
																						"commonType": {
																							"typeIdentifier": "t_uint32",
																							"typeString": "uint32"
																						},
																						"id": 745,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 743,
																							"name": "srcRepNum",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 730,
																							"src": "11809:9:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint32",
																								"typeString": "uint32"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "-",
																						"rightExpression": {
																							"hexValue": "31",
																							"id": 744,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "11821:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"src": "11809:13:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint32",
																							"typeString": "uint32"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "11789:34:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Checkpoint_$40_storage",
																						"typeString": "struct Comp.Checkpoint storage ref"
																					}
																				},
																				"id": 747,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "11824:5:0",
																				"memberName": "votes",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 39,
																				"src": "11789:40:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint96",
																					"typeString": "uint96"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint96",
																				"typeString": "uint96"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "11754:79:0"
																	},
																	{
																		"assignments": [
																			752
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 752,
																				"mutability": "mutable",
																				"name": "srcRepNew",
																				"nameLocation": "11858:9:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 766,
																				"src": "11851:16:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint96",
																					"typeString": "uint96"
																				},
																				"typeName": {
																					"id": 751,
																					"name": "uint96",
																					"nodeType": "ElementaryTypeName",
																					"src": "11851:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint96",
																						"typeString": "uint96"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 758,
																		"initialValue": {
																			"arguments": [
																				{
																					"id": 754,
																					"name": "srcRepOld",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 736,
																					"src": "11876:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint96",
																						"typeString": "uint96"
																					}
																				},
																				{
																					"id": 755,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 713,
																					"src": "11887:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint96",
																						"typeString": "uint96"
																					}
																				},
																				{
																					"hexValue": "436f6d703a3a5f6d6f7665566f7465733a20766f746520616d6f756e7420756e646572666c6f7773",
																					"id": 756,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "11895:42:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_79bf2f3c2009651b33d37efb8a65657c3e203b2c36f61068863922cb9e64a77a",
																						"typeString": "literal_string \"Comp::_moveVotes: vote amount underflows\""
																					},
																					"value": "Comp::_moveVotes: vote amount underflows"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint96",
																						"typeString": "uint96"
																					},
																					{
																						"typeIdentifier": "t_uint96",
																						"typeString": "uint96"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_79bf2f3c2009651b33d37efb8a65657c3e203b2c36f61068863922cb9e64a77a",
																						"typeString": "literal_string \"Comp::_moveVotes: vote amount underflows\""
																					}
																				],
																				"id": 753,
																				"name": "sub96",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 987,
																				"src": "11870:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint96_$_t_uint96_$_t_string_memory_ptr_$returns$_t_uint96_$",
																					"typeString": "function (uint96,uint96,string memory) pure returns (uint96)"
																				}
																			},
																			"id": 757,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "11870:68:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint96",
																				"typeString": "uint96"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "11851:87:0"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 760,
																					"name": "srcRep",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 709,
																					"src": "11973:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 761,
																					"name": "srcRepNum",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 730,
																					"src": "11981:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				{
																					"id": 762,
																					"name": "srcRepOld",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 736,
																					"src": "11992:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint96",
																						"typeString": "uint96"
																					}
																				},
																				{
																					"id": 763,
																					"name": "srcRepNew",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 752,
																					"src": "12003:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint96",
																						"typeString": "uint96"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					},
																					{
																						"typeIdentifier": "t_uint96",
																						"typeString": "uint96"
																					},
																					{
																						"typeIdentifier": "t_uint96",
																						"typeString": "uint96"
																					}
																				],
																				"id": 759,
																				"name": "_writeCheckpoint",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 889,
																				"src": "11956:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint32_$_t_uint96_$_t_uint96_$returns$__$",
																					"typeString": "function (address,uint32,uint96,uint96)"
																				}
																			},
																			"id": 764,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "11956:57:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 765,
																		"nodeType": "ExpressionStatement",
																		"src": "11956:57:0"
																	}
																]
															}
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 773,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 768,
																	"name": "dstRep",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 711,
																	"src": "12046:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 771,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12064:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 770,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "12056:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 769,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "12056:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 772,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12056:10:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "12046:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 812,
															"nodeType": "IfStatement",
															"src": "12042:376:0",
															"trueBody": {
																"id": 811,
																"nodeType": "Block",
																"src": "12068:350:0",
																"statements": [
																	{
																		"assignments": [
																			775
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 775,
																				"mutability": "mutable",
																				"name": "dstRepNum",
																				"nameLocation": "12093:9:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 811,
																				"src": "12086:16:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint32",
																					"typeString": "uint32"
																				},
																				"typeName": {
																					"id": 774,
																					"name": "uint32",
																					"nodeType": "ElementaryTypeName",
																					"src": "12086:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 779,
																		"initialValue": {
																			"baseExpression": {
																				"id": 776,
																				"name": "numCheckpoints",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 53,
																				"src": "12105:14:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
																					"typeString": "mapping(address => uint32)"
																				}
																			},
																			"id": 778,
																			"indexExpression": {
																				"id": 777,
																				"name": "dstRep",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 711,
																				"src": "12120:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "12105:22:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "12086:41:0"
																	},
																	{
																		"assignments": [
																			781
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 781,
																				"mutability": "mutable",
																				"name": "dstRepOld",
																				"nameLocation": "12152:9:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 811,
																				"src": "12145:16:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint96",
																					"typeString": "uint96"
																				},
																				"typeName": {
																					"id": 780,
																					"name": "uint96",
																					"nodeType": "ElementaryTypeName",
																					"src": "12145:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint96",
																						"typeString": "uint96"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 795,
																		"initialValue": {
																			"condition": {
																				"commonType": {
																					"typeIdentifier": "t_uint32",
																					"typeString": "uint32"
																				},
																				"id": 784,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 782,
																					"name": "dstRepNum",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 775,
																					"src": "12164:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": ">",
																				"rightExpression": {
																					"hexValue": "30",
																					"id": 783,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "12176:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				},
																				"src": "12164:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"falseExpression": {
																				"hexValue": "30",
																				"id": 793,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12223:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"id": 794,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "Conditional",
																			"src": "12164:60:0",
																			"trueExpression": {
																				"expression": {
																					"baseExpression": {
																						"baseExpression": {
																							"id": 785,
																							"name": "checkpoints",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 48,
																							"src": "12180:11:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$40_storage_$_$",
																								"typeString": "mapping(address => mapping(uint32 => struct Comp.Checkpoint storage ref))"
																							}
																						},
																						"id": 787,
																						"indexExpression": {
																							"id": 786,
																							"name": "dstRep",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 711,
																							"src": "12192:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "12180:19:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$40_storage_$",
																							"typeString": "mapping(uint32 => struct Comp.Checkpoint storage ref)"
																						}
																					},
																					"id": 791,
																					"indexExpression": {
																						"commonType": {
																							"typeIdentifier": "t_uint32",
																							"typeString": "uint32"
																						},
																						"id": 790,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 788,
																							"name": "dstRepNum",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 775,
																							"src": "12200:9:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint32",
																								"typeString": "uint32"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "-",
																						"rightExpression": {
																							"hexValue": "31",
																							"id": 789,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "12212:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"src": "12200:13:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint32",
																							"typeString": "uint32"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "12180:34:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Checkpoint_$40_storage",
																						"typeString": "struct Comp.Checkpoint storage ref"
																					}
																				},
																				"id": 792,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "12215:5:0",
																				"memberName": "votes",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 39,
																				"src": "12180:40:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint96",
																					"typeString": "uint96"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint96",
																				"typeString": "uint96"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "12145:79:0"
																	},
																	{
																		"assignments": [
																			797
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 797,
																				"mutability": "mutable",
																				"name": "dstRepNew",
																				"nameLocation": "12249:9:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 811,
																				"src": "12242:16:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint96",
																					"typeString": "uint96"
																				},
																				"typeName": {
																					"id": 796,
																					"name": "uint96",
																					"nodeType": "ElementaryTypeName",
																					"src": "12242:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint96",
																						"typeString": "uint96"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 803,
																		"initialValue": {
																			"arguments": [
																				{
																					"id": 799,
																					"name": "dstRepOld",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 781,
																					"src": "12267:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint96",
																						"typeString": "uint96"
																					}
																				},
																				{
																					"id": 800,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 713,
																					"src": "12278:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint96",
																						"typeString": "uint96"
																					}
																				},
																				{
																					"hexValue": "436f6d703a3a5f6d6f7665566f7465733a20766f746520616d6f756e74206f766572666c6f7773",
																					"id": 801,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "12286:41:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_cac5f7635b67aba587752f385d4aaa6fe7d1615e382cd95e6c1ae76525be695e",
																						"typeString": "literal_string \"Comp::_moveVotes: vote amount overflows\""
																					},
																					"value": "Comp::_moveVotes: vote amount overflows"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint96",
																						"typeString": "uint96"
																					},
																					{
																						"typeIdentifier": "t_uint96",
																						"typeString": "uint96"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_cac5f7635b67aba587752f385d4aaa6fe7d1615e382cd95e6c1ae76525be695e",
																						"typeString": "literal_string \"Comp::_moveVotes: vote amount overflows\""
																					}
																				],
																				"id": 798,
																				"name": "add96",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 964,
																				"src": "12261:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint96_$_t_uint96_$_t_string_memory_ptr_$returns$_t_uint96_$",
																					"typeString": "function (uint96,uint96,string memory) pure returns (uint96)"
																				}
																			},
																			"id": 802,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "12261:67:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint96",
																				"typeString": "uint96"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "12242:86:0"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 805,
																					"name": "dstRep",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 711,
																					"src": "12363:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 806,
																					"name": "dstRepNum",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 775,
																					"src": "12371:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				{
																					"id": 807,
																					"name": "dstRepOld",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 781,
																					"src": "12382:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint96",
																						"typeString": "uint96"
																					}
																				},
																				{
																					"id": 808,
																					"name": "dstRepNew",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 797,
																					"src": "12393:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint96",
																						"typeString": "uint96"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					},
																					{
																						"typeIdentifier": "t_uint96",
																						"typeString": "uint96"
																					},
																					{
																						"typeIdentifier": "t_uint96",
																						"typeString": "uint96"
																					}
																				],
																				"id": 804,
																				"name": "_writeCheckpoint",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 889,
																				"src": "12346:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint32_$_t_uint96_$_t_uint96_$returns$__$",
																					"typeString": "function (address,uint32,uint96,uint96)"
																				}
																			},
																			"id": 809,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "12346:57:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 810,
																		"nodeType": "ExpressionStatement",
																		"src": "12346:57:0"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"id": 816,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_moveDelegates",
									"nameLocation": "11520:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 714,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "srcRep",
												"nameLocation": "11543:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 816,
												"src": "11535:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 708,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11535:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 711,
												"mutability": "mutable",
												"name": "dstRep",
												"nameLocation": "11559:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 816,
												"src": "11551:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 710,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11551:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 713,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "11574:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 816,
												"src": "11567:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 712,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "11567:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11534:47:0"
									},
									"returnParameters": {
										"id": 715,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11591:0:0"
									},
									"scope": 1000,
									"src": "11511:923:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 888,
										"nodeType": "Block",
										"src": "12549:509:0",
										"statements": [
											{
												"assignments": [
													828
												],
												"declarations": [
													{
														"constant": false,
														"id": 828,
														"mutability": "mutable",
														"name": "blockNumber",
														"nameLocation": "12564:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 888,
														"src": "12557:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"typeName": {
															"id": 827,
															"name": "uint32",
															"nodeType": "ElementaryTypeName",
															"src": "12557:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 834,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 830,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "12585:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 831,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "12591:6:0",
															"memberName": "number",
															"nodeType": "MemberAccess",
															"src": "12585:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "436f6d703a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d62657220657863656564732033322062697473",
															"id": 832,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12599:54:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6426c6c63f7c8daecf0b8a35bfe8c0f43dc9621d39cb2bf0c2cd35cc9db8742f",
																"typeString": "literal_string \"Comp::_writeCheckpoint: block number exceeds 32 bits\""
															},
															"value": "Comp::_writeCheckpoint: block number exceeds 32 bits"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_6426c6c63f7c8daecf0b8a35bfe8c0f43dc9621d39cb2bf0c2cd35cc9db8742f",
																"typeString": "literal_string \"Comp::_writeCheckpoint: block number exceeds 32 bits\""
															}
														],
														"id": 829,
														"name": "safe32",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 913,
														"src": "12578:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint32_$",
															"typeString": "function (uint256,string memory) pure returns (uint32)"
														}
													},
													"id": 833,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12578:76:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12557:97:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 848,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"id": 837,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 835,
															"name": "nCheckpoints",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 820,
															"src": "12667:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 836,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12682:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "12667:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"id": 847,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 838,
																		"name": "checkpoints",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 48,
																		"src": "12687:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$40_storage_$_$",
																			"typeString": "mapping(address => mapping(uint32 => struct Comp.Checkpoint storage ref))"
																		}
																	},
																	"id": 840,
																	"indexExpression": {
																		"id": 839,
																		"name": "delegatee",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 818,
																		"src": "12699:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "12687:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$40_storage_$",
																		"typeString": "mapping(uint32 => struct Comp.Checkpoint storage ref)"
																	}
																},
																"id": 844,
																"indexExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	},
																	"id": 843,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 841,
																		"name": "nCheckpoints",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 820,
																		"src": "12710:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 842,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12725:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "12710:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "12687:40:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Checkpoint_$40_storage",
																	"typeString": "struct Comp.Checkpoint storage ref"
																}
															},
															"id": 845,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "12728:9:0",
															"memberName": "fromBlock",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 37,
															"src": "12687:50:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 846,
															"name": "blockNumber",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 828,
															"src": "12741:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"src": "12687:65:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "12667:85:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 880,
													"nodeType": "Block",
													"src": "12838:149:0",
													"statements": [
														{
															"expression": {
																"id": 870,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 861,
																			"name": "checkpoints",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 48,
																			"src": "12850:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$40_storage_$_$",
																				"typeString": "mapping(address => mapping(uint32 => struct Comp.Checkpoint storage ref))"
																			}
																		},
																		"id": 864,
																		"indexExpression": {
																			"id": 862,
																			"name": "delegatee",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 818,
																			"src": "12862:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "12850:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$40_storage_$",
																			"typeString": "mapping(uint32 => struct Comp.Checkpoint storage ref)"
																		}
																	},
																	"id": 865,
																	"indexExpression": {
																		"id": 863,
																		"name": "nCheckpoints",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 820,
																		"src": "12873:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "12850:36:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Checkpoint_$40_storage",
																		"typeString": "struct Comp.Checkpoint storage ref"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 867,
																			"name": "blockNumber",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 828,
																			"src": "12900:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			}
																		},
																		{
																			"id": 868,
																			"name": "newVotes",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 824,
																			"src": "12913:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint96",
																				"typeString": "uint96"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			},
																			{
																				"typeIdentifier": "t_uint96",
																				"typeString": "uint96"
																			}
																		],
																		"id": 866,
																		"name": "Checkpoint",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 40,
																		"src": "12889:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_struct$_Checkpoint_$40_storage_ptr_$",
																			"typeString": "type(struct Comp.Checkpoint storage pointer)"
																		}
																	},
																	"id": 869,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "structConstructorCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12889:33:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Checkpoint_$40_memory_ptr",
																		"typeString": "struct Comp.Checkpoint memory"
																	}
																},
																"src": "12850:72:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Checkpoint_$40_storage",
																	"typeString": "struct Comp.Checkpoint storage ref"
																}
															},
															"id": 871,
															"nodeType": "ExpressionStatement",
															"src": "12850:72:0"
														},
														{
															"expression": {
																"id": 878,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 872,
																		"name": "numCheckpoints",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 53,
																		"src": "12934:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
																			"typeString": "mapping(address => uint32)"
																		}
																	},
																	"id": 874,
																	"indexExpression": {
																		"id": 873,
																		"name": "delegatee",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 818,
																		"src": "12949:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "12934:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	},
																	"id": 877,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 875,
																		"name": "nCheckpoints",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 820,
																		"src": "12962:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 876,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12977:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "12962:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"src": "12934:44:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"id": 879,
															"nodeType": "ExpressionStatement",
															"src": "12934:44:0"
														}
													]
												},
												"id": 881,
												"nodeType": "IfStatement",
												"src": "12663:324:0",
												"trueBody": {
													"id": 860,
													"nodeType": "Block",
													"src": "12754:78:0",
													"statements": [
														{
															"expression": {
																"id": 858,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"baseExpression": {
																				"id": 849,
																				"name": "checkpoints",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 48,
																				"src": "12766:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$40_storage_$_$",
																					"typeString": "mapping(address => mapping(uint32 => struct Comp.Checkpoint storage ref))"
																				}
																			},
																			"id": 854,
																			"indexExpression": {
																				"id": 850,
																				"name": "delegatee",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 818,
																				"src": "12778:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "12766:22:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$40_storage_$",
																				"typeString": "mapping(uint32 => struct Comp.Checkpoint storage ref)"
																			}
																		},
																		"id": 855,
																		"indexExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			},
																			"id": 853,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 851,
																				"name": "nCheckpoints",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 820,
																				"src": "12789:12:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint32",
																					"typeString": "uint32"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 852,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12804:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "12789:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "12766:40:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Checkpoint_$40_storage",
																			"typeString": "struct Comp.Checkpoint storage ref"
																		}
																	},
																	"id": 856,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "12807:5:0",
																	"memberName": "votes",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 39,
																	"src": "12766:46:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 857,
																	"name": "newVotes",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 824,
																	"src": "12815:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	}
																},
																"src": "12766:57:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															"id": 859,
															"nodeType": "ExpressionStatement",
															"src": "12766:57:0"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 883,
															"name": "delegatee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 818,
															"src": "13021:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 884,
															"name": "oldVotes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 822,
															"src": "13032:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														},
														{
															"id": 885,
															"name": "newVotes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 824,
															"src": "13042:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															},
															{
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														],
														"id": 882,
														"name": "DelegateVotesChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 88,
														"src": "13000:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 886,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13000:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 887,
												"nodeType": "EmitStatement",
												"src": "12995:56:0"
											}
										]
									},
									"id": 889,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_writeCheckpoint",
									"nameLocation": "12449:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 818,
												"mutability": "mutable",
												"name": "delegatee",
												"nameLocation": "12474:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 889,
												"src": "12466:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 817,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12466:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 820,
												"mutability": "mutable",
												"name": "nCheckpoints",
												"nameLocation": "12492:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 889,
												"src": "12485:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 819,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "12485:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 822,
												"mutability": "mutable",
												"name": "oldVotes",
												"nameLocation": "12513:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 889,
												"src": "12506:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 821,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "12506:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "newVotes",
												"nameLocation": "12530:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 889,
												"src": "12523:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 823,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "12523:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12465:74:0"
									},
									"returnParameters": {
										"id": 826,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12549:0:0"
									},
									"scope": 1000,
									"src": "12440:618:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 912,
										"nodeType": "Block",
										"src": "13147:75:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 903,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 899,
																"name": "n",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 891,
																"src": "13165:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_4294967296_by_1",
																	"typeString": "int_const 4294967296"
																},
																"id": 902,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 900,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13169:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 901,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13172:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "13169:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_4294967296_by_1",
																	"typeString": "int_const 4294967296"
																}
															},
															"src": "13165:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 904,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 893,
															"src": "13176:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 898,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "13157:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 905,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13157:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 906,
												"nodeType": "ExpressionStatement",
												"src": "13157:32:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 909,
															"name": "n",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 891,
															"src": "13213:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 908,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "13206:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint32_$",
															"typeString": "type(uint32)"
														},
														"typeName": {
															"id": 907,
															"name": "uint32",
															"nodeType": "ElementaryTypeName",
															"src": "13206:6:0",
															"typeDescriptions": {}
														}
													},
													"id": 910,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13206:9:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"functionReturnParameters": 897,
												"id": 911,
												"nodeType": "Return",
												"src": "13199:16:0"
											}
										]
									},
									"id": 913,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safe32",
									"nameLocation": "13073:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 894,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 891,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "13085:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 913,
												"src": "13080:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 890,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "13080:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 893,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "13102:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 913,
												"src": "13088:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 892,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "13088:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13079:36:0"
									},
									"returnParameters": {
										"id": 897,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 896,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 913,
												"src": "13139:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 895,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "13139:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13138:8:0"
									},
									"scope": 1000,
									"src": "13064:158:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 936,
										"nodeType": "Block",
										"src": "13311:75:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 927,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 923,
																"name": "n",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 915,
																"src": "13329:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_79228162514264337593543950336_by_1",
																	"typeString": "int_const 79228162514264337593543950336"
																},
																"id": 926,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 924,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13333:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3936",
																	"id": 925,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13336:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_96_by_1",
																		"typeString": "int_const 96"
																	},
																	"value": "96"
																},
																"src": "13333:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_79228162514264337593543950336_by_1",
																	"typeString": "int_const 79228162514264337593543950336"
																}
															},
															"src": "13329:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 928,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 917,
															"src": "13340:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 922,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "13321:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 929,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13321:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 930,
												"nodeType": "ExpressionStatement",
												"src": "13321:32:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 933,
															"name": "n",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 915,
															"src": "13377:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 932,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "13370:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint96_$",
															"typeString": "type(uint96)"
														},
														"typeName": {
															"id": 931,
															"name": "uint96",
															"nodeType": "ElementaryTypeName",
															"src": "13370:6:0",
															"typeDescriptions": {}
														}
													},
													"id": 934,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13370:9:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"functionReturnParameters": 921,
												"id": 935,
												"nodeType": "Return",
												"src": "13363:16:0"
											}
										]
									},
									"id": 937,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safe96",
									"nameLocation": "13237:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 918,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 915,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "13249:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 937,
												"src": "13244:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 914,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "13244:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 917,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "13266:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 937,
												"src": "13252:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 916,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "13252:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13243:36:0"
									},
									"returnParameters": {
										"id": 921,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 920,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 937,
												"src": "13303:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 919,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "13303:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13302:8:0"
									},
									"scope": 1000,
									"src": "13228:158:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 963,
										"nodeType": "Block",
										"src": "13486:90:0",
										"statements": [
											{
												"assignments": [
													949
												],
												"declarations": [
													{
														"constant": false,
														"id": 949,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "13503:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 963,
														"src": "13496:8:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														},
														"typeName": {
															"id": 948,
															"name": "uint96",
															"nodeType": "ElementaryTypeName",
															"src": "13496:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 953,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													},
													"id": 952,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 950,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 939,
														"src": "13507:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 951,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 941,
														"src": "13511:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"src": "13507:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13496:16:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															},
															"id": 957,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 955,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 949,
																"src": "13530:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 956,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 939,
																"src": "13535:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															"src": "13530:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 958,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 943,
															"src": "13538:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 954,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "13522:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 959,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13522:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 960,
												"nodeType": "ExpressionStatement",
												"src": "13522:29:0"
											},
											{
												"expression": {
													"id": 961,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 949,
													"src": "13568:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"functionReturnParameters": 947,
												"id": 962,
												"nodeType": "Return",
												"src": "13561:8:0"
											}
										]
									},
									"id": 964,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add96",
									"nameLocation": "13401:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 944,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 939,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "13414:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 964,
												"src": "13407:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 938,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "13407:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 941,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "13424:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 964,
												"src": "13417:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 940,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "13417:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 943,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "13441:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 964,
												"src": "13427:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 942,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "13427:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13406:48:0"
									},
									"returnParameters": {
										"id": 947,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 946,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 964,
												"src": "13478:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 945,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "13478:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13477:8:0"
									},
									"scope": 1000,
									"src": "13392:184:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 986,
										"nodeType": "Block",
										"src": "13676:68:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															},
															"id": 978,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 976,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 968,
																"src": "13694:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 977,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 966,
																"src": "13699:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															"src": "13694:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 979,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 970,
															"src": "13702:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 975,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "13686:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 980,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13686:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 981,
												"nodeType": "ExpressionStatement",
												"src": "13686:29:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													},
													"id": 984,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 982,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 966,
														"src": "13732:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 983,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 968,
														"src": "13736:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"src": "13732:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"functionReturnParameters": 974,
												"id": 985,
												"nodeType": "Return",
												"src": "13725:12:0"
											}
										]
									},
									"id": 987,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub96",
									"nameLocation": "13591:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 971,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 966,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "13604:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 987,
												"src": "13597:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 965,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "13597:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 968,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "13614:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 987,
												"src": "13607:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 967,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "13607:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 970,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "13631:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 987,
												"src": "13617:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 969,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "13617:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13596:48:0"
									},
									"returnParameters": {
										"id": 974,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 973,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 987,
												"src": "13668:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 972,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "13668:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13667:8:0"
									},
									"scope": 1000,
									"src": "13582:162:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 998,
										"nodeType": "Block",
										"src": "13801:98:0",
										"statements": [
											{
												"assignments": [
													993
												],
												"declarations": [
													{
														"constant": false,
														"id": 993,
														"mutability": "mutable",
														"name": "chainId",
														"nameLocation": "13819:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 998,
														"src": "13811:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 992,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13811:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 994,
												"nodeType": "VariableDeclarationStatement",
												"src": "13811:15:0"
											},
											{
												"AST": {
													"nativeSrc": "13845:24:0",
													"nodeType": "YulBlock",
													"src": "13845:24:0",
													"statements": [
														{
															"nativeSrc": "13847:20:0",
															"nodeType": "YulAssignment",
															"src": "13847:20:0",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "chainid",
																	"nativeSrc": "13858:7:0",
																	"nodeType": "YulIdentifier",
																	"src": "13858:7:0"
																},
																"nativeSrc": "13858:9:0",
																"nodeType": "YulFunctionCall",
																"src": "13858:9:0"
															},
															"variableNames": [
																{
																	"name": "chainId",
																	"nativeSrc": "13847:7:0",
																	"nodeType": "YulIdentifier",
																	"src": "13847:7:0"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 993,
														"isOffset": false,
														"isSlot": false,
														"src": "13847:7:0",
														"valueSize": 1
													}
												],
												"id": 995,
												"nodeType": "InlineAssembly",
												"src": "13836:33:0"
											},
											{
												"expression": {
													"id": 996,
													"name": "chainId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 993,
													"src": "13885:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 991,
												"id": 997,
												"nodeType": "Return",
												"src": "13878:14:0"
											}
										]
									},
									"id": 999,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getChainId",
									"nameLocation": "13759:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 988,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13769:2:0"
									},
									"returnParameters": {
										"id": 991,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 990,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 999,
												"src": "13795:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 989,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "13795:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13794:6:0"
									},
									"scope": 1000,
									"src": "13750:149:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1001,
							"src": "1336:12565:0",
							"usedErrors": [],
							"usedEvents": [
								79,
								88,
								97,
								106
							]
						}
					],
					"src": "1310:12592:0"
				},
				"id": 0
			}
		}
	}
}