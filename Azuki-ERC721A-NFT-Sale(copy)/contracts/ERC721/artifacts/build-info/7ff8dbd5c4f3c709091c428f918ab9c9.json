{
	"id": "7ff8dbd5c4f3c709091c428f918ab9c9",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.27",
	"solcLongVersion": "0.8.27+commit.40a35a09",
	"input": {
		"language": "Solidity",
		"sources": {
			"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol": {
				"content": "/*\r\n    \r\n   ██████  ██████   ██████  ██   ██ ██████   ██████   ██████  ██   ██    ██████  ███████ ██    ██\r\n  ██      ██    ██ ██    ██ ██  ██  ██   ██ ██    ██ ██    ██ ██  ██     ██   ██ ██      ██    ██\r\n  ██      ██    ██ ██    ██ █████   ██████  ██    ██ ██    ██ █████      ██   ██ █████   ██    ██\r\n  ██      ██    ██ ██    ██ ██  ██  ██   ██ ██    ██ ██    ██ ██  ██     ██   ██ ██       ██  ██\r\n   ██████  ██████   ██████  ██   ██ ██████   ██████   ██████  ██   ██ ██ ██████  ███████   ████\r\n  \r\n  Find any smart contract, and build your project faster: https://www.cookbook.dev\r\n  Twitter: https://twitter.com/cookbook_dev\r\n  Discord: https://discord.gg/cookbookdev\r\n  \r\n  Find this contract on Cookbook: https://www.cookbook.dev/contracts/nft-staking-with-infinite-rewards?utm=code\r\n  */\r\n  \r\n  // SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"nft-staking-with-infinite-rewards/@openzeppelin/contracts/utils/Context.sol\";\r\nimport \"nft-staking-with-infinite-rewards/@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"nft-staking-with-infinite-rewards/@openzeppelin/contracts/token/ERC721/IERC721.sol\";\r\nimport \"nft-staking-with-infinite-rewards/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\";\r\n\r\n/**\r\n * @title NFT Staking with Infinite Rewards\r\n * @author Breakthrough Labs Inc.\r\n * @notice Staking, NFT, ERC721\r\n * @custom:version 1.0.0\r\n * @custom:address 51\r\n * @custom:default-precision 0\r\n * @custom:simple-description NFT staking contract that rewards stakers with an exact number of ERC20 tokens per day.\r\n * @dev NFT staking contract that rewards stakers with an exact number of ERC20 tokens per day. On deployment, the owner specifies a daily reward rate,\r\n * and an address that tokens will be pulled from. Neither of these can be changed. Each staked NFT receives the same number of tokens every day. The per NFT\r\n * rate stays the same even when the number of staked NFTs increases/decreases.\r\n *\r\n * A common usecase is for blockchain-based games, where each NFT rewards a certain number of lives per day.\r\n *\r\n */\r\ncontract NFTStakingPerToken is Context, IERC721Receiver {\r\n    IERC721 public nft;\r\n    IERC20 public rewardToken;\r\n    address public rewardWallet;\r\n    /// @custom:precision 18\r\n    uint256 public rewardPerTokenPerDay;\r\n\r\n    mapping(uint256 => address) private stakedTokens;\r\n    mapping(address => uint256) public balanceOf;\r\n    mapping(address => uint256) public lastUpdateTime;\r\n    mapping(address => uint256) private reward;\r\n\r\n    /**\r\n     * @param nftAddress  Staked NFT Address\r\n     * @param rewardTokenAddress Reward Token Address\r\n     * @param rewardWalletAddress Wallet that holds rewards to be paid out\r\n     * @param rewardRate # of tokens per staked NFT per day | precision:18\r\n     */\r\n    constructor(\r\n        address nftAddress,\r\n        address rewardTokenAddress,\r\n        address rewardWalletAddress,\r\n        uint256 rewardRate\r\n    ) {\r\n        nft = IERC721(nftAddress);\r\n        rewardToken = IERC20(rewardTokenAddress);\r\n        rewardWallet = rewardWalletAddress;\r\n        rewardPerTokenPerDay = rewardRate;\r\n    }\r\n\r\n    modifier update(address account) {\r\n        reward[account] = available(account);\r\n        lastUpdateTime[account] = block.timestamp;\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev returns the number of reward tokens available for an address\r\n     * @param account account\r\n     */\r\n    function available(address account) public view returns (uint256) {\r\n        uint256 timeElapsed = block.timestamp - lastUpdateTime[account];\r\n        uint256 earned = (balanceOf[account] *\r\n            timeElapsed *\r\n            rewardPerTokenPerDay) / 86400;\r\n        return reward[account] + earned;\r\n    }\r\n\r\n    /**\r\n     * @dev stakes a specific tokenID\r\n     * @param tokenId tokenId\r\n     */\r\n    function stake(uint256 tokenId) external {\r\n        nft.safeTransferFrom(_msgSender(), address(this), tokenId);\r\n    }\r\n\r\n    /**\r\n     * @dev withdraws a token from the staking contract\r\n     * @param tokenId tokenId\r\n     */\r\n    function withdraw(uint256 tokenId) external update(_msgSender()) {\r\n        require(stakedTokens[tokenId] == _msgSender(), \"Token is not staked.\");\r\n        delete stakedTokens[tokenId];\r\n        balanceOf[_msgSender()]--;\r\n        nft.transferFrom(address(this), _msgSender(), tokenId);\r\n    }\r\n\r\n    /**\r\n     * @dev redeems all of a user's reward tokens.\r\n     */\r\n    function redeem() external update(_msgSender()) {\r\n        uint256 amount = reward[_msgSender()];\r\n        require(amount > 0, \"Nothing to redeem\");\r\n        reward[_msgSender()] = 0;\r\n        rewardToken.transferFrom(rewardWallet, _msgSender(), amount);\r\n    }\r\n\r\n    function onERC721Received(\r\n        address,\r\n        address from,\r\n        uint256 tokenId,\r\n        bytes calldata\r\n    ) external update(from) returns (bytes4) {\r\n        stakedTokens[tokenId] = from;\r\n        balanceOf[from]++;\r\n        return IERC721Receiver.onERC721Received.selector;\r\n    }\r\n}\r\n\r\n"
			},
			"nft-staking-with-infinite-rewards/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"content": "/*\n    \n   ██████  ██████   ██████  ██   ██ ██████   ██████   ██████  ██   ██    ██████  ███████ ██    ██\n  ██      ██    ██ ██    ██ ██  ██  ██   ██ ██    ██ ██    ██ ██  ██     ██   ██ ██      ██    ██\n  ██      ██    ██ ██    ██ █████   ██████  ██    ██ ██    ██ █████      ██   ██ █████   ██    ██\n  ██      ██    ██ ██    ██ ██  ██  ██   ██ ██    ██ ██    ██ ██  ██     ██   ██ ██       ██  ██\n   ██████  ██████   ██████  ██   ██ ██████   ██████   ██████  ██   ██ ██ ██████  ███████   ████\n  \n  Find any smart contract, and build your project faster: https://www.cookbook.dev\n  Twitter: https://twitter.com/cookbook_dev\n  Discord: https://discord.gg/cookbookdev\n  \n  Find this contract on Cookbook: https://www.cookbook.dev/contracts/nft-staking-with-infinite-rewards?utm=code\n  */\n  \n  // SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
			},
			"nft-staking-with-infinite-rewards/@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"content": "/*\n    \n   ██████  ██████   ██████  ██   ██ ██████   ██████   ██████  ██   ██    ██████  ███████ ██    ██\n  ██      ██    ██ ██    ██ ██  ██  ██   ██ ██    ██ ██    ██ ██  ██     ██   ██ ██      ██    ██\n  ██      ██    ██ ██    ██ █████   ██████  ██    ██ ██    ██ █████      ██   ██ █████   ██    ██\n  ██      ██    ██ ██    ██ ██  ██  ██   ██ ██    ██ ██    ██ ██  ██     ██   ██ ██       ██  ██\n   ██████  ██████   ██████  ██   ██ ██████   ██████   ██████  ██   ██ ██ ██████  ███████   ████\n  \n  Find any smart contract, and build your project faster: https://www.cookbook.dev\n  Twitter: https://twitter.com/cookbook_dev\n  Discord: https://discord.gg/cookbookdev\n  \n  Find this contract on Cookbook: https://www.cookbook.dev/contracts/nft-staking-with-infinite-rewards?utm=code\n  */\n  \n  // SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes calldata data\n    ) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool _approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"
			},
			"nft-staking-with-infinite-rewards/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "/*\n    \n   ██████  ██████   ██████  ██   ██ ██████   ██████   ██████  ██   ██    ██████  ███████ ██    ██\n  ██      ██    ██ ██    ██ ██  ██  ██   ██ ██    ██ ██    ██ ██  ██     ██   ██ ██      ██    ██\n  ██      ██    ██ ██    ██ █████   ██████  ██    ██ ██    ██ █████      ██   ██ █████   ██    ██\n  ██      ██    ██ ██    ██ ██  ██  ██   ██ ██    ██ ██    ██ ██  ██     ██   ██ ██       ██  ██\n   ██████  ██████   ██████  ██   ██ ██████   ██████   ██████  ██   ██ ██ ██████  ███████   ████\n  \n  Find any smart contract, and build your project faster: https://www.cookbook.dev\n  Twitter: https://twitter.com/cookbook_dev\n  Discord: https://discord.gg/cookbookdev\n  \n  Find this contract on Cookbook: https://www.cookbook.dev/contracts/nft-staking-with-infinite-rewards?utm=code\n  */\n  \n  // SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"
			},
			"nft-staking-with-infinite-rewards/@openzeppelin/contracts/utils/Context.sol": {
				"content": "/*\n    \n   ██████  ██████   ██████  ██   ██ ██████   ██████   ██████  ██   ██    ██████  ███████ ██    ██\n  ██      ██    ██ ██    ██ ██  ██  ██   ██ ██    ██ ██    ██ ██  ██     ██   ██ ██      ██    ██\n  ██      ██    ██ ██    ██ █████   ██████  ██    ██ ██    ██ █████      ██   ██ █████   ██    ██\n  ██      ██    ██ ██    ██ ██  ██  ██   ██ ██    ██ ██    ██ ██  ██     ██   ██ ██       ██  ██\n   ██████  ██████   ██████  ██   ██ ██████   ██████   ██████  ██   ██ ██ ██████  ███████   ████\n  \n  Find any smart contract, and build your project faster: https://www.cookbook.dev\n  Twitter: https://twitter.com/cookbook_dev\n  Discord: https://discord.gg/cookbookdev\n  \n  Find this contract on Cookbook: https://www.cookbook.dev/contracts/nft-staking-with-infinite-rewards?utm=code\n  */\n  \n  // SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"nft-staking-with-infinite-rewards/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "/*\n    \n   ██████  ██████   ██████  ██   ██ ██████   ██████   ██████  ██   ██    ██████  ███████ ██    ██\n  ██      ██    ██ ██    ██ ██  ██  ██   ██ ██    ██ ██    ██ ██  ██     ██   ██ ██      ██    ██\n  ██      ██    ██ ██    ██ █████   ██████  ██    ██ ██    ██ █████      ██   ██ █████   ██    ██\n  ██      ██    ██ ██    ██ ██  ██  ██   ██ ██    ██ ██    ██ ██  ██     ██   ██ ██       ██  ██\n   ██████  ██████   ██████  ██   ██ ██████   ██████   ██████  ██   ██ ██ ██████  ███████   ████\n  \n  Find any smart contract, and build your project faster: https://www.cookbook.dev\n  Twitter: https://twitter.com/cookbook_dev\n  Discord: https://discord.gg/cookbookdev\n  \n  Find this contract on Cookbook: https://www.cookbook.dev/contracts/nft-staking-with-infinite-rewards?utm=code\n  */\n  \n  // SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol": {
				"NFTStakingPerToken": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "nftAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "rewardTokenAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "rewardWalletAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "rewardRate",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "available",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "lastUpdateTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "nft",
							"outputs": [
								{
									"internalType": "contract IERC721",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "redeem",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardPerTokenPerDay",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardWallet",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "stake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "Breakthrough Labs Inc.",
						"custom:address": "51",
						"custom:default-precision": "0",
						"custom:simple-description": "NFT staking contract that rewards stakers with an exact number of ERC20 tokens per day.",
						"custom:version": "1.0.0",
						"details": "NFT staking contract that rewards stakers with an exact number of ERC20 tokens per day. On deployment, the owner specifies a daily reward rate, and an address that tokens will be pulled from. Neither of these can be changed. Each staked NFT receives the same number of tokens every day. The per NFT rate stays the same even when the number of staked NFTs increases/decreases. A common usecase is for blockchain-based games, where each NFT rewards a certain number of lives per day.",
						"kind": "dev",
						"methods": {
							"available(address)": {
								"details": "returns the number of reward tokens available for an address",
								"params": {
									"account": "account"
								}
							},
							"constructor": {
								"params": {
									"nftAddress": "Staked NFT Address",
									"rewardRate": "# of tokens per staked NFT per day | precision:18",
									"rewardTokenAddress": "Reward Token Address",
									"rewardWalletAddress": "Wallet that holds rewards to be paid out"
								}
							},
							"redeem()": {
								"details": "redeems all of a user's reward tokens."
							},
							"stake(uint256)": {
								"details": "stakes a specific tokenID",
								"params": {
									"tokenId": "tokenId"
								}
							},
							"withdraw(uint256)": {
								"details": "withdraws a token from the staking contract",
								"params": {
									"tokenId": "tokenId"
								}
							}
						},
						"stateVariables": {
							"rewardPerTokenPerDay": {
								"custom:precision": "18"
							}
						},
						"title": "NFT Staking with Infinite Rewards",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":2582:5500  contract NFTStakingPerToken is Context, IERC721Receiver {... */\n  mstore(0x40, 0x80)\n    /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":3294:3630  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":3471:3481  nftAddress */\n  dup4\n    /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":3457:3460  nft */\n  0x00\n  0x00\n    /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":3457:3482  nft = IERC721(nftAddress) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":3514:3532  rewardTokenAddress */\n  dup3\n    /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":3493:3504  rewardToken */\n  0x01\n  0x00\n    /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":3493:3533  rewardToken = IERC20(rewardTokenAddress) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":3559:3578  rewardWalletAddress */\n  dup2\n    /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":3544:3556  rewardWallet */\n  0x02\n  0x00\n    /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":3544:3578  rewardWallet = rewardWalletAddress */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":3612:3622  rewardRate */\n  dup1\n    /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":3589:3609  rewardPerTokenPerDay */\n  0x03\n    /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":3589:3622  rewardPerTokenPerDay = rewardRate */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":3294:3630  constructor(... */\n  pop\n  pop\n  pop\n  pop\n    /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":2582:5500  contract NFTStakingPerToken is Context, IERC721Receiver {... */\n  jump(tag_6)\n    /* \"#utility.yul\":88:205   */\ntag_8:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  0x00\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_10:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_11:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_23\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_10\n  jump\t// in\ntag_23:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_12:\n    /* \"#utility.yul\":641:665   */\n  tag_25\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_11\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_26\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  0x00\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_26:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_13:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_28\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_12\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:922   */\ntag_14:\n    /* \"#utility.yul\":882:889   */\n  0x00\n    /* \"#utility.yul\":911:916   */\n  dup2\n    /* \"#utility.yul\":900:916   */\n  swap1\n  pop\n    /* \"#utility.yul\":845:922   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":928:1050   */\ntag_15:\n    /* \"#utility.yul\":1001:1025   */\n  tag_31\n    /* \"#utility.yul\":1019:1024   */\n  dup2\n    /* \"#utility.yul\":1001:1025   */\n  tag_14\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":994:999   */\n  dup2\n    /* \"#utility.yul\":991:1026   */\n  eq\n    /* \"#utility.yul\":981:1044   */\n  tag_32\n  jumpi\n    /* \"#utility.yul\":1040:1041   */\n  0x00\n    /* \"#utility.yul\":1037:1038   */\n  0x00\n    /* \"#utility.yul\":1030:1042   */\n  revert\n    /* \"#utility.yul\":981:1044   */\ntag_32:\n    /* \"#utility.yul\":928:1050   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1056:1199   */\ntag_16:\n    /* \"#utility.yul\":1113:1118   */\n  0x00\n    /* \"#utility.yul\":1144:1150   */\n  dup2\n    /* \"#utility.yul\":1138:1151   */\n  mload\n    /* \"#utility.yul\":1129:1151   */\n  swap1\n  pop\n    /* \"#utility.yul\":1160:1193   */\n  tag_34\n    /* \"#utility.yul\":1187:1192   */\n  dup2\n    /* \"#utility.yul\":1160:1193   */\n  tag_15\n  jump\t// in\ntag_34:\n    /* \"#utility.yul\":1056:1199   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1205:2025   */\ntag_3:\n    /* \"#utility.yul\":1302:1308   */\n  0x00\n    /* \"#utility.yul\":1310:1316   */\n  0x00\n    /* \"#utility.yul\":1318:1324   */\n  0x00\n    /* \"#utility.yul\":1326:1332   */\n  0x00\n    /* \"#utility.yul\":1375:1378   */\n  0x80\n    /* \"#utility.yul\":1363:1372   */\n  dup6\n    /* \"#utility.yul\":1354:1361   */\n  dup8\n    /* \"#utility.yul\":1350:1373   */\n  sub\n    /* \"#utility.yul\":1346:1379   */\n  slt\n    /* \"#utility.yul\":1343:1463   */\n  iszero\n  tag_36\n  jumpi\n    /* \"#utility.yul\":1382:1461   */\n  tag_37\n  tag_8\n  jump\t// in\ntag_37:\n    /* \"#utility.yul\":1343:1463   */\ntag_36:\n    /* \"#utility.yul\":1502:1503   */\n  0x00\n    /* \"#utility.yul\":1527:1591   */\n  tag_38\n    /* \"#utility.yul\":1583:1590   */\n  dup8\n    /* \"#utility.yul\":1574:1580   */\n  dup3\n    /* \"#utility.yul\":1563:1572   */\n  dup9\n    /* \"#utility.yul\":1559:1581   */\n  add\n    /* \"#utility.yul\":1527:1591   */\n  tag_13\n  jump\t// in\ntag_38:\n    /* \"#utility.yul\":1517:1591   */\n  swap5\n  pop\n    /* \"#utility.yul\":1473:1601   */\n  pop\n    /* \"#utility.yul\":1640:1642   */\n  0x20\n    /* \"#utility.yul\":1666:1730   */\n  tag_39\n    /* \"#utility.yul\":1722:1729   */\n  dup8\n    /* \"#utility.yul\":1713:1719   */\n  dup3\n    /* \"#utility.yul\":1702:1711   */\n  dup9\n    /* \"#utility.yul\":1698:1720   */\n  add\n    /* \"#utility.yul\":1666:1730   */\n  tag_13\n  jump\t// in\ntag_39:\n    /* \"#utility.yul\":1656:1730   */\n  swap4\n  pop\n    /* \"#utility.yul\":1611:1740   */\n  pop\n    /* \"#utility.yul\":1779:1781   */\n  0x40\n    /* \"#utility.yul\":1805:1869   */\n  tag_40\n    /* \"#utility.yul\":1861:1868   */\n  dup8\n    /* \"#utility.yul\":1852:1858   */\n  dup3\n    /* \"#utility.yul\":1841:1850   */\n  dup9\n    /* \"#utility.yul\":1837:1859   */\n  add\n    /* \"#utility.yul\":1805:1869   */\n  tag_13\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":1795:1869   */\n  swap3\n  pop\n    /* \"#utility.yul\":1750:1879   */\n  pop\n    /* \"#utility.yul\":1918:1920   */\n  0x60\n    /* \"#utility.yul\":1944:2008   */\n  tag_41\n    /* \"#utility.yul\":2000:2007   */\n  dup8\n    /* \"#utility.yul\":1991:1997   */\n  dup3\n    /* \"#utility.yul\":1980:1989   */\n  dup9\n    /* \"#utility.yul\":1976:1998   */\n  add\n    /* \"#utility.yul\":1944:2008   */\n  tag_16\n  jump\t// in\ntag_41:\n    /* \"#utility.yul\":1934:2008   */\n  swap2\n  pop\n    /* \"#utility.yul\":1889:2018   */\n  pop\n    /* \"#utility.yul\":1205:2025   */\n  swap3\n  swap6\n  swap2\n  swap5\n  pop\n  swap3\n  pop\n  jump\t// out\n    /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":2582:5500  contract NFTStakingPerToken is Context, IERC721Receiver {... */\ntag_6:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":2582:5500  contract NFTStakingPerToken is Context, IERC721Receiver {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x47ccca02\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x47ccca02\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xa694fc3a\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xbe040fb0\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xf7c618c1\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xfb75b2c7\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_14:\n      dup1\n      0x10098ad5\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x150b7a02\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x2ce9aead\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x2d6a1fa6\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x2e1a7d4d\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":3921:4230  function available(address account) public view returns (uint256) {... */\n    tag_3:\n      tag_15\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_16\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n      tag_18\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":5199:5497  function onERC721Received(... */\n    tag_4:\n      tag_21\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      tag_24\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":2916:2965  mapping(address => uint256) public lastUpdateTime */\n    tag_5:\n      tag_27\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_28\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_28:\n      tag_29\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      tag_30\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":2766:2801  uint256 public rewardPerTokenPerDay */\n    tag_6:\n      tag_31\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      tag_33\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":4558:4852  function withdraw(uint256 tokenId) external update(_msgSender()) {... */\n    tag_7:\n      tag_34\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      tag_37\n      jump\t// in\n    tag_34:\n      stop\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":2645:2663  IERC721 public nft */\n    tag_8:\n      tag_38\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      tag_40\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":2865:2909  mapping(address => uint256) public balanceOf */\n    tag_9:\n      tag_42\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_43\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_43:\n      tag_44\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      tag_45\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":4326:4444  function stake(uint256 tokenId) external {... */\n    tag_10:\n      tag_46\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_47\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_47:\n      tag_48\n      jump\t// in\n    tag_46:\n      stop\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":4930:5191  function redeem() external update(_msgSender()) {... */\n    tag_11:\n      tag_49\n      tag_50\n      jump\t// in\n    tag_49:\n      stop\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":2670:2695  IERC20 public rewardToken */\n    tag_12:\n      tag_51\n      tag_52\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      tag_53\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":2702:2729  address public rewardWallet */\n    tag_13:\n      tag_55\n      tag_56\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      tag_57\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":3921:4230  function available(address account) public view returns (uint256) {... */\n    tag_18:\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":3978:3985  uint256 */\n      0x00\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":3998:4017  uint256 timeElapsed */\n      0x00\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":4038:4052  lastUpdateTime */\n      0x06\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":4038:4061  lastUpdateTime[account] */\n      0x00\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":4053:4060  account */\n      dup5\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":4038:4061  lastUpdateTime[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":4020:4035  block.timestamp */\n      timestamp\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":4020:4061  block.timestamp - lastUpdateTime[account] */\n      tag_60\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_60:\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":3998:4061  uint256 timeElapsed = block.timestamp - lastUpdateTime[account] */\n      swap1\n      pop\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":4072:4086  uint256 earned */\n      0x00\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":4175:4180  86400 */\n      0x015180\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":4151:4171  rewardPerTokenPerDay */\n      sload(0x03)\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":4124:4135  timeElapsed */\n      dup4\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":4090:4099  balanceOf */\n      0x05\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":4090:4108  balanceOf[account] */\n      0x00\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":4100:4107  account */\n      dup9\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":4090:4108  balanceOf[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":4090:4135  balanceOf[account] *... */\n      tag_62\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_62:\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":4090:4171  balanceOf[account] *... */\n      tag_64\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_64:\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":4089:4180  (balanceOf[account] *... */\n      tag_65\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_65:\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":4072:4180  uint256 earned = (balanceOf[account] *... */\n      swap1\n      pop\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":4216:4222  earned */\n      dup1\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":4198:4204  reward */\n      0x07\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":4198:4213  reward[account] */\n      0x00\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":4205:4212  account */\n      dup7\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":4198:4213  reward[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":4198:4222  reward[account] + earned */\n      tag_67\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_67:\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":4191:4222  return reward[account] + earned */\n      swap3\n      pop\n      pop\n      pop\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":3921:4230  function available(address account) public view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":5199:5497  function onERC721Received(... */\n    tag_24:\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":5355:5361  bytes4 */\n      0x00\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":5340:5344  from */\n      dup5\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":3700:3718  available(account) */\n      tag_70\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":3710:3717  account */\n      dup2\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":3700:3709  available */\n      tag_18\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":3700:3718  available(account) */\n      jump\t// in\n    tag_70:\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":3682:3688  reward */\n      0x07\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":3682:3697  reward[account] */\n      0x00\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":3689:3696  account */\n      dup4\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":3682:3697  reward[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":3682:3718  reward[account] = available(account) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":3755:3770  block.timestamp */\n      timestamp\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":3729:3743  lastUpdateTime */\n      0x06\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":3729:3752  lastUpdateTime[account] */\n      0x00\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":3744:3751  account */\n      dup4\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":3729:3752  lastUpdateTime[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":3729:3770  lastUpdateTime[account] = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":5398:5402  from */\n      dup6\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":5374:5386  stakedTokens */\n      0x04\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":5374:5395  stakedTokens[tokenId] */\n      0x00\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":5387:5394  tokenId */\n      dup8\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":5374:5395  stakedTokens[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":5374:5402  stakedTokens[tokenId] = from */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":5413:5422  balanceOf */\n      0x05\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":5413:5428  balanceOf[from] */\n      0x00\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":5423:5427  from */\n      dup8\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":5413:5428  balanceOf[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":5413:5430  balanceOf[from]++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      tag_72\n      swap1\n      tag_73\n      jump\t// in\n    tag_72:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":5448:5489  IERC721Receiver.onERC721Received.selector */\n      shl(0xe0, 0x150b7a02)\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":5441:5489  return IERC721Receiver.onERC721Received.selector */\n      swap2\n      pop\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":5199:5497  function onERC721Received(... */\n      pop\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":2916:2965  mapping(address => uint256) public lastUpdateTime */\n    tag_29:\n      mstore(0x20, 0x06)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":2766:2801  uint256 public rewardPerTokenPerDay */\n    tag_32:\n      sload(0x03)\n      dup2\n      jump\t// out\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":4558:4852  function withdraw(uint256 tokenId) external update(_msgSender()) {... */\n    tag_37:\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":4609:4621  _msgSender() */\n      tag_74\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":4609:4619  _msgSender */\n      tag_75\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":4609:4621  _msgSender() */\n      jump\t// in\n    tag_74:\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":3700:3718  available(account) */\n      tag_77\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":3710:3717  account */\n      dup2\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":3700:3709  available */\n      tag_18\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":3700:3718  available(account) */\n      jump\t// in\n    tag_77:\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":3682:3688  reward */\n      0x07\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":3682:3697  reward[account] */\n      0x00\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":3689:3696  account */\n      dup4\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":3682:3697  reward[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":3682:3718  reward[account] = available(account) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":3755:3770  block.timestamp */\n      timestamp\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":3729:3743  lastUpdateTime */\n      0x06\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":3729:3752  lastUpdateTime[account] */\n      0x00\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":3744:3751  account */\n      dup4\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":3729:3752  lastUpdateTime[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":3729:3770  lastUpdateTime[account] = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":4667:4679  _msgSender() */\n      tag_79\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":4667:4677  _msgSender */\n      tag_75\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":4667:4679  _msgSender() */\n      jump\t// in\n    tag_79:\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":4642:4679  stakedTokens[tokenId] == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":4642:4654  stakedTokens */\n      0x04\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":4642:4663  stakedTokens[tokenId] */\n      0x00\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":4655:4662  tokenId */\n      dup5\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":4642:4663  stakedTokens[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":4642:4679  stakedTokens[tokenId] == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":4634:4704  require(stakedTokens[tokenId] == _msgSender(), \"Token is not staked.\") */\n      tag_80\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_81\n      swap1\n      tag_82\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_80:\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":4722:4734  stakedTokens */\n      0x04\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":4722:4743  stakedTokens[tokenId] */\n      0x00\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":4735:4742  tokenId */\n      dup4\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":4722:4743  stakedTokens[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":4715:4743  delete stakedTokens[tokenId] */\n      0x0100\n      exp\n      dup2\n      sload\n      swap1\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      sstore\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":4754:4763  balanceOf */\n      0x05\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":4754:4777  balanceOf[_msgSender()] */\n      0x00\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":4764:4776  _msgSender() */\n      tag_83\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":4764:4774  _msgSender */\n      tag_75\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":4764:4776  _msgSender() */\n      jump\t// in\n    tag_83:\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":4754:4777  balanceOf[_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":4754:4779  balanceOf[_msgSender()]-- */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      tag_84\n      swap1\n      tag_85\n      jump\t// in\n    tag_84:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":4790:4793  nft */\n      0x00\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":4790:4806  nft.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":4815:4819  this */\n      address\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":4822:4834  _msgSender() */\n      tag_86\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":4822:4832  _msgSender */\n      tag_75\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":4822:4834  _msgSender() */\n      jump\t// in\n    tag_86:\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":4836:4843  tokenId */\n      dup6\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":4790:4844  nft.transferFrom(address(this), _msgSender(), tokenId) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_87\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_87:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_89\n      jumpi\n      revert(0x00, 0x00)\n    tag_89:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_91\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_91:\n      pop\n      pop\n      pop\n      pop\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":4558:4852  function withdraw(uint256 tokenId) external update(_msgSender()) {... */\n      pop\n      pop\n      jump\t// out\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":2645:2663  IERC721 public nft */\n    tag_39:\n      0x00\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":2865:2909  mapping(address => uint256) public balanceOf */\n    tag_44:\n      mstore(0x20, 0x05)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":4326:4444  function stake(uint256 tokenId) external {... */\n    tag_48:\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":4378:4381  nft */\n      0x00\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":4378:4398  nft.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x42842e0e\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":4399:4411  _msgSender() */\n      tag_93\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":4399:4409  _msgSender */\n      tag_75\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":4399:4411  _msgSender() */\n      jump\t// in\n    tag_93:\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":4421:4425  this */\n      address\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":4428:4435  tokenId */\n      dup5\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":4378:4436  nft.safeTransferFrom(_msgSender(), address(this), tokenId) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_94\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_94:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_95\n      jumpi\n      revert(0x00, 0x00)\n    tag_95:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_97\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_97:\n      pop\n      pop\n      pop\n      pop\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":4326:4444  function stake(uint256 tokenId) external {... */\n      pop\n      jump\t// out\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":4930:5191  function redeem() external update(_msgSender()) {... */\n    tag_50:\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":4964:4976  _msgSender() */\n      tag_98\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":4964:4974  _msgSender */\n      tag_75\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":4964:4976  _msgSender() */\n      jump\t// in\n    tag_98:\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":3700:3718  available(account) */\n      tag_100\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":3710:3717  account */\n      dup2\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":3700:3709  available */\n      tag_18\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":3700:3718  available(account) */\n      jump\t// in\n    tag_100:\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":3682:3688  reward */\n      0x07\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":3682:3697  reward[account] */\n      0x00\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":3689:3696  account */\n      dup4\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":3682:3697  reward[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":3682:3718  reward[account] = available(account) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":3755:3770  block.timestamp */\n      timestamp\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":3729:3743  lastUpdateTime */\n      0x06\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":3729:3752  lastUpdateTime[account] */\n      0x00\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":3744:3751  account */\n      dup4\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":3729:3752  lastUpdateTime[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":3729:3770  lastUpdateTime[account] = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":4989:5003  uint256 amount */\n      0x00\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":5006:5012  reward */\n      0x07\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":5006:5026  reward[_msgSender()] */\n      0x00\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":5013:5025  _msgSender() */\n      tag_102\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":5013:5023  _msgSender */\n      tag_75\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":5013:5025  _msgSender() */\n      jump\t// in\n    tag_102:\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":5006:5026  reward[_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":4989:5026  uint256 amount = reward[_msgSender()] */\n      swap1\n      pop\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":5054:5055  0 */\n      0x00\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":5045:5051  amount */\n      dup2\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":5045:5055  amount > 0 */\n      gt\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":5037:5077  require(amount > 0, \"Nothing to redeem\") */\n      tag_103\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_104\n      swap1\n      tag_105\n      jump\t// in\n    tag_104:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_103:\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":5111:5112  0 */\n      0x00\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":5088:5094  reward */\n      0x07\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":5088:5108  reward[_msgSender()] */\n      0x00\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":5095:5107  _msgSender() */\n      tag_106\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":5095:5105  _msgSender */\n      tag_75\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":5095:5107  _msgSender() */\n      jump\t// in\n    tag_106:\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":5088:5108  reward[_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":5088:5112  reward[_msgSender()] = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":5123:5134  rewardToken */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":5123:5147  rewardToken.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":5148:5160  rewardWallet */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":5162:5174  _msgSender() */\n      tag_107\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":5162:5172  _msgSender */\n      tag_75\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":5162:5174  _msgSender() */\n      jump\t// in\n    tag_107:\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":5176:5182  amount */\n      dup5\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":5123:5183  rewardToken.transferFrom(rewardWallet, _msgSender(), amount) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_108\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_108:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_110\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_110:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_111\n      swap2\n      swap1\n      tag_112\n      jump\t// in\n    tag_111:\n      pop\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":4978:5191  {... */\n      pop\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":4930:5191  function redeem() external update(_msgSender()) {... */\n      pop\n      jump\t// out\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":2670:2695  IERC20 public rewardToken */\n    tag_52:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":2702:2729  address public rewardWallet */\n    tag_56:\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"nft-staking-with-infinite-rewards/@openzeppelin/contracts/utils/Context.sol\":1934:2030  function _msgSender() internal view virtual returns (address) {... */\n    tag_75:\n        /* \"nft-staking-with-infinite-rewards/@openzeppelin/contracts/utils/Context.sol\":1987:1994  address */\n      0x00\n        /* \"nft-staking-with-infinite-rewards/@openzeppelin/contracts/utils/Context.sol\":2013:2023  msg.sender */\n      caller\n        /* \"nft-staking-with-infinite-rewards/@openzeppelin/contracts/utils/Context.sol\":2006:2023  return msg.sender */\n      swap1\n      pop\n        /* \"nft-staking-with-infinite-rewards/@openzeppelin/contracts/utils/Context.sol\":1934:2030  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_115:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      0x00\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_116:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      0x00\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_117:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_118:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_155\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_117\n      jump\t// in\n    tag_155:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_119:\n        /* \"#utility.yul\":641:665   */\n      tag_157\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_118\n      jump\t// in\n    tag_157:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_158\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      0x00\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_158:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_120:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_160\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_119\n      jump\t// in\n    tag_160:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:1170   */\n    tag_17:\n        /* \"#utility.yul\":900:906   */\n      0x00\n        /* \"#utility.yul\":949:951   */\n      0x20\n        /* \"#utility.yul\":937:946   */\n      dup3\n        /* \"#utility.yul\":928:935   */\n      dup5\n        /* \"#utility.yul\":924:947   */\n      sub\n        /* \"#utility.yul\":920:952   */\n      slt\n        /* \"#utility.yul\":917:1036   */\n      iszero\n      tag_162\n      jumpi\n        /* \"#utility.yul\":955:1034   */\n      tag_163\n      tag_115\n      jump\t// in\n    tag_163:\n        /* \"#utility.yul\":917:1036   */\n    tag_162:\n        /* \"#utility.yul\":1075:1076   */\n      0x00\n        /* \"#utility.yul\":1100:1153   */\n      tag_164\n        /* \"#utility.yul\":1145:1152   */\n      dup5\n        /* \"#utility.yul\":1136:1142   */\n      dup3\n        /* \"#utility.yul\":1125:1134   */\n      dup6\n        /* \"#utility.yul\":1121:1143   */\n      add\n        /* \"#utility.yul\":1100:1153   */\n      tag_120\n      jump\t// in\n    tag_164:\n        /* \"#utility.yul\":1090:1153   */\n      swap2\n      pop\n        /* \"#utility.yul\":1046:1163   */\n      pop\n        /* \"#utility.yul\":841:1170   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1176:1253   */\n    tag_121:\n        /* \"#utility.yul\":1213:1220   */\n      0x00\n        /* \"#utility.yul\":1242:1247   */\n      dup2\n        /* \"#utility.yul\":1231:1247   */\n      swap1\n      pop\n        /* \"#utility.yul\":1176:1253   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1259:1377   */\n    tag_122:\n        /* \"#utility.yul\":1346:1370   */\n      tag_167\n        /* \"#utility.yul\":1364:1369   */\n      dup2\n        /* \"#utility.yul\":1346:1370   */\n      tag_121\n      jump\t// in\n    tag_167:\n        /* \"#utility.yul\":1341:1344   */\n      dup3\n        /* \"#utility.yul\":1334:1371   */\n      mstore\n        /* \"#utility.yul\":1259:1377   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1383:1605   */\n    tag_20:\n        /* \"#utility.yul\":1476:1480   */\n      0x00\n        /* \"#utility.yul\":1514:1516   */\n      0x20\n        /* \"#utility.yul\":1503:1512   */\n      dup3\n        /* \"#utility.yul\":1499:1517   */\n      add\n        /* \"#utility.yul\":1491:1517   */\n      swap1\n      pop\n        /* \"#utility.yul\":1527:1598   */\n      tag_169\n        /* \"#utility.yul\":1595:1596   */\n      0x00\n        /* \"#utility.yul\":1584:1593   */\n      dup4\n        /* \"#utility.yul\":1580:1597   */\n      add\n        /* \"#utility.yul\":1571:1577   */\n      dup5\n        /* \"#utility.yul\":1527:1598   */\n      tag_122\n      jump\t// in\n    tag_169:\n        /* \"#utility.yul\":1383:1605   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1611:1733   */\n    tag_123:\n        /* \"#utility.yul\":1684:1708   */\n      tag_171\n        /* \"#utility.yul\":1702:1707   */\n      dup2\n        /* \"#utility.yul\":1684:1708   */\n      tag_121\n      jump\t// in\n    tag_171:\n        /* \"#utility.yul\":1677:1682   */\n      dup2\n        /* \"#utility.yul\":1674:1709   */\n      eq\n        /* \"#utility.yul\":1664:1727   */\n      tag_172\n      jumpi\n        /* \"#utility.yul\":1723:1724   */\n      0x00\n        /* \"#utility.yul\":1720:1721   */\n      0x00\n        /* \"#utility.yul\":1713:1725   */\n      revert\n        /* \"#utility.yul\":1664:1727   */\n    tag_172:\n        /* \"#utility.yul\":1611:1733   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1739:1878   */\n    tag_124:\n        /* \"#utility.yul\":1785:1790   */\n      0x00\n        /* \"#utility.yul\":1823:1829   */\n      dup2\n        /* \"#utility.yul\":1810:1830   */\n      calldataload\n        /* \"#utility.yul\":1801:1830   */\n      swap1\n      pop\n        /* \"#utility.yul\":1839:1872   */\n      tag_174\n        /* \"#utility.yul\":1866:1871   */\n      dup2\n        /* \"#utility.yul\":1839:1872   */\n      tag_123\n      jump\t// in\n    tag_174:\n        /* \"#utility.yul\":1739:1878   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1884:2001   */\n    tag_125:\n        /* \"#utility.yul\":1993:1994   */\n      0x00\n        /* \"#utility.yul\":1990:1991   */\n      0x00\n        /* \"#utility.yul\":1983:1995   */\n      revert\n        /* \"#utility.yul\":2007:2124   */\n    tag_126:\n        /* \"#utility.yul\":2116:2117   */\n      0x00\n        /* \"#utility.yul\":2113:2114   */\n      0x00\n        /* \"#utility.yul\":2106:2118   */\n      revert\n        /* \"#utility.yul\":2130:2247   */\n    tag_127:\n        /* \"#utility.yul\":2239:2240   */\n      0x00\n        /* \"#utility.yul\":2236:2237   */\n      0x00\n        /* \"#utility.yul\":2229:2241   */\n      revert\n        /* \"#utility.yul\":2266:2818   */\n    tag_128:\n        /* \"#utility.yul\":2323:2331   */\n      0x00\n        /* \"#utility.yul\":2333:2339   */\n      0x00\n        /* \"#utility.yul\":2383:2386   */\n      dup4\n        /* \"#utility.yul\":2376:2380   */\n      0x1f\n        /* \"#utility.yul\":2368:2374   */\n      dup5\n        /* \"#utility.yul\":2364:2381   */\n      add\n        /* \"#utility.yul\":2360:2387   */\n      slt\n        /* \"#utility.yul\":2350:2472   */\n      tag_179\n      jumpi\n        /* \"#utility.yul\":2391:2470   */\n      tag_180\n      tag_125\n      jump\t// in\n    tag_180:\n        /* \"#utility.yul\":2350:2472   */\n    tag_179:\n        /* \"#utility.yul\":2504:2510   */\n      dup3\n        /* \"#utility.yul\":2491:2511   */\n      calldataload\n        /* \"#utility.yul\":2481:2511   */\n      swap1\n      pop\n        /* \"#utility.yul\":2534:2552   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2526:2532   */\n      dup2\n        /* \"#utility.yul\":2523:2553   */\n      gt\n        /* \"#utility.yul\":2520:2637   */\n      iszero\n      tag_181\n      jumpi\n        /* \"#utility.yul\":2556:2635   */\n      tag_182\n      tag_126\n      jump\t// in\n    tag_182:\n        /* \"#utility.yul\":2520:2637   */\n    tag_181:\n        /* \"#utility.yul\":2670:2674   */\n      0x20\n        /* \"#utility.yul\":2662:2668   */\n      dup4\n        /* \"#utility.yul\":2658:2675   */\n      add\n        /* \"#utility.yul\":2646:2675   */\n      swap2\n      pop\n        /* \"#utility.yul\":2724:2727   */\n      dup4\n        /* \"#utility.yul\":2716:2720   */\n      0x01\n        /* \"#utility.yul\":2708:2714   */\n      dup3\n        /* \"#utility.yul\":2704:2721   */\n      mul\n        /* \"#utility.yul\":2694:2702   */\n      dup4\n        /* \"#utility.yul\":2690:2722   */\n      add\n        /* \"#utility.yul\":2687:2728   */\n      gt\n        /* \"#utility.yul\":2684:2812   */\n      iszero\n      tag_183\n      jumpi\n        /* \"#utility.yul\":2731:2810   */\n      tag_184\n      tag_127\n      jump\t// in\n    tag_184:\n        /* \"#utility.yul\":2684:2812   */\n    tag_183:\n        /* \"#utility.yul\":2266:2818   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2824:3787   */\n    tag_23:\n        /* \"#utility.yul\":2921:2927   */\n      0x00\n        /* \"#utility.yul\":2929:2935   */\n      0x00\n        /* \"#utility.yul\":2937:2943   */\n      0x00\n        /* \"#utility.yul\":2945:2951   */\n      0x00\n        /* \"#utility.yul\":2953:2959   */\n      0x00\n        /* \"#utility.yul\":3002:3005   */\n      0x80\n        /* \"#utility.yul\":2990:2999   */\n      dup7\n        /* \"#utility.yul\":2981:2988   */\n      dup9\n        /* \"#utility.yul\":2977:3000   */\n      sub\n        /* \"#utility.yul\":2973:3006   */\n      slt\n        /* \"#utility.yul\":2970:3090   */\n      iszero\n      tag_186\n      jumpi\n        /* \"#utility.yul\":3009:3088   */\n      tag_187\n      tag_115\n      jump\t// in\n    tag_187:\n        /* \"#utility.yul\":2970:3090   */\n    tag_186:\n        /* \"#utility.yul\":3129:3130   */\n      0x00\n        /* \"#utility.yul\":3154:3207   */\n      tag_188\n        /* \"#utility.yul\":3199:3206   */\n      dup9\n        /* \"#utility.yul\":3190:3196   */\n      dup3\n        /* \"#utility.yul\":3179:3188   */\n      dup10\n        /* \"#utility.yul\":3175:3197   */\n      add\n        /* \"#utility.yul\":3154:3207   */\n      tag_120\n      jump\t// in\n    tag_188:\n        /* \"#utility.yul\":3144:3207   */\n      swap6\n      pop\n        /* \"#utility.yul\":3100:3217   */\n      pop\n        /* \"#utility.yul\":3256:3258   */\n      0x20\n        /* \"#utility.yul\":3282:3335   */\n      tag_189\n        /* \"#utility.yul\":3327:3334   */\n      dup9\n        /* \"#utility.yul\":3318:3324   */\n      dup3\n        /* \"#utility.yul\":3307:3316   */\n      dup10\n        /* \"#utility.yul\":3303:3325   */\n      add\n        /* \"#utility.yul\":3282:3335   */\n      tag_120\n      jump\t// in\n    tag_189:\n        /* \"#utility.yul\":3272:3335   */\n      swap5\n      pop\n        /* \"#utility.yul\":3227:3345   */\n      pop\n        /* \"#utility.yul\":3384:3386   */\n      0x40\n        /* \"#utility.yul\":3410:3463   */\n      tag_190\n        /* \"#utility.yul\":3455:3462   */\n      dup9\n        /* \"#utility.yul\":3446:3452   */\n      dup3\n        /* \"#utility.yul\":3435:3444   */\n      dup10\n        /* \"#utility.yul\":3431:3453   */\n      add\n        /* \"#utility.yul\":3410:3463   */\n      tag_124\n      jump\t// in\n    tag_190:\n        /* \"#utility.yul\":3400:3463   */\n      swap4\n      pop\n        /* \"#utility.yul\":3355:3473   */\n      pop\n        /* \"#utility.yul\":3540:3542   */\n      0x60\n        /* \"#utility.yul\":3529:3538   */\n      dup7\n        /* \"#utility.yul\":3525:3543   */\n      add\n        /* \"#utility.yul\":3512:3544   */\n      calldataload\n        /* \"#utility.yul\":3571:3589   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3563:3569   */\n      dup2\n        /* \"#utility.yul\":3560:3590   */\n      gt\n        /* \"#utility.yul\":3557:3674   */\n      iszero\n      tag_191\n      jumpi\n        /* \"#utility.yul\":3593:3672   */\n      tag_192\n      tag_116\n      jump\t// in\n    tag_192:\n        /* \"#utility.yul\":3557:3674   */\n    tag_191:\n        /* \"#utility.yul\":3706:3770   */\n      tag_193\n        /* \"#utility.yul\":3762:3769   */\n      dup9\n        /* \"#utility.yul\":3753:3759   */\n      dup3\n        /* \"#utility.yul\":3742:3751   */\n      dup10\n        /* \"#utility.yul\":3738:3760   */\n      add\n        /* \"#utility.yul\":3706:3770   */\n      tag_128\n      jump\t// in\n    tag_193:\n        /* \"#utility.yul\":3688:3770   */\n      swap3\n      pop\n      swap3\n      pop\n        /* \"#utility.yul\":3483:3780   */\n      pop\n        /* \"#utility.yul\":2824:3787   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3793:3942   */\n    tag_129:\n        /* \"#utility.yul\":3829:3836   */\n      0x00\n        /* \"#utility.yul\":3869:3935   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3862:3867   */\n      dup3\n        /* \"#utility.yul\":3858:3936   */\n      and\n        /* \"#utility.yul\":3847:3936   */\n      swap1\n      pop\n        /* \"#utility.yul\":3793:3942   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3948:4063   */\n    tag_130:\n        /* \"#utility.yul\":4033:4056   */\n      tag_196\n        /* \"#utility.yul\":4050:4055   */\n      dup2\n        /* \"#utility.yul\":4033:4056   */\n      tag_129\n      jump\t// in\n    tag_196:\n        /* \"#utility.yul\":4028:4031   */\n      dup3\n        /* \"#utility.yul\":4021:4057   */\n      mstore\n        /* \"#utility.yul\":3948:4063   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4069:4287   */\n    tag_26:\n        /* \"#utility.yul\":4160:4164   */\n      0x00\n        /* \"#utility.yul\":4198:4200   */\n      0x20\n        /* \"#utility.yul\":4187:4196   */\n      dup3\n        /* \"#utility.yul\":4183:4201   */\n      add\n        /* \"#utility.yul\":4175:4201   */\n      swap1\n      pop\n        /* \"#utility.yul\":4211:4280   */\n      tag_198\n        /* \"#utility.yul\":4277:4278   */\n      0x00\n        /* \"#utility.yul\":4266:4275   */\n      dup4\n        /* \"#utility.yul\":4262:4279   */\n      add\n        /* \"#utility.yul\":4253:4259   */\n      dup5\n        /* \"#utility.yul\":4211:4280   */\n      tag_130\n      jump\t// in\n    tag_198:\n        /* \"#utility.yul\":4069:4287   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4293:4622   */\n    tag_36:\n        /* \"#utility.yul\":4352:4358   */\n      0x00\n        /* \"#utility.yul\":4401:4403   */\n      0x20\n        /* \"#utility.yul\":4389:4398   */\n      dup3\n        /* \"#utility.yul\":4380:4387   */\n      dup5\n        /* \"#utility.yul\":4376:4399   */\n      sub\n        /* \"#utility.yul\":4372:4404   */\n      slt\n        /* \"#utility.yul\":4369:4488   */\n      iszero\n      tag_200\n      jumpi\n        /* \"#utility.yul\":4407:4486   */\n      tag_201\n      tag_115\n      jump\t// in\n    tag_201:\n        /* \"#utility.yul\":4369:4488   */\n    tag_200:\n        /* \"#utility.yul\":4527:4528   */\n      0x00\n        /* \"#utility.yul\":4552:4605   */\n      tag_202\n        /* \"#utility.yul\":4597:4604   */\n      dup5\n        /* \"#utility.yul\":4588:4594   */\n      dup3\n        /* \"#utility.yul\":4577:4586   */\n      dup6\n        /* \"#utility.yul\":4573:4595   */\n      add\n        /* \"#utility.yul\":4552:4605   */\n      tag_124\n      jump\t// in\n    tag_202:\n        /* \"#utility.yul\":4542:4605   */\n      swap2\n      pop\n        /* \"#utility.yul\":4498:4615   */\n      pop\n        /* \"#utility.yul\":4293:4622   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4628:4688   */\n    tag_131:\n        /* \"#utility.yul\":4656:4659   */\n      0x00\n        /* \"#utility.yul\":4677:4682   */\n      dup2\n        /* \"#utility.yul\":4670:4682   */\n      swap1\n      pop\n        /* \"#utility.yul\":4628:4688   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4694:4836   */\n    tag_132:\n        /* \"#utility.yul\":4744:4753   */\n      0x00\n        /* \"#utility.yul\":4777:4830   */\n      tag_205\n        /* \"#utility.yul\":4795:4829   */\n      tag_206\n        /* \"#utility.yul\":4804:4828   */\n      tag_207\n        /* \"#utility.yul\":4822:4827   */\n      dup5\n        /* \"#utility.yul\":4804:4828   */\n      tag_117\n      jump\t// in\n    tag_207:\n        /* \"#utility.yul\":4795:4829   */\n      tag_131\n      jump\t// in\n    tag_206:\n        /* \"#utility.yul\":4777:4830   */\n      tag_117\n      jump\t// in\n    tag_205:\n        /* \"#utility.yul\":4764:4830   */\n      swap1\n      pop\n        /* \"#utility.yul\":4694:4836   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4842:4968   */\n    tag_133:\n        /* \"#utility.yul\":4892:4901   */\n      0x00\n        /* \"#utility.yul\":4925:4962   */\n      tag_209\n        /* \"#utility.yul\":4956:4961   */\n      dup3\n        /* \"#utility.yul\":4925:4962   */\n      tag_132\n      jump\t// in\n    tag_209:\n        /* \"#utility.yul\":4912:4962   */\n      swap1\n      pop\n        /* \"#utility.yul\":4842:4968   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4974:5115   */\n    tag_134:\n        /* \"#utility.yul\":5039:5048   */\n      0x00\n        /* \"#utility.yul\":5072:5109   */\n      tag_211\n        /* \"#utility.yul\":5103:5108   */\n      dup3\n        /* \"#utility.yul\":5072:5109   */\n      tag_133\n      jump\t// in\n    tag_211:\n        /* \"#utility.yul\":5059:5109   */\n      swap1\n      pop\n        /* \"#utility.yul\":4974:5115   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5121:5282   */\n    tag_135:\n        /* \"#utility.yul\":5223:5275   */\n      tag_213\n        /* \"#utility.yul\":5269:5274   */\n      dup2\n        /* \"#utility.yul\":5223:5275   */\n      tag_134\n      jump\t// in\n    tag_213:\n        /* \"#utility.yul\":5218:5221   */\n      dup3\n        /* \"#utility.yul\":5211:5276   */\n      mstore\n        /* \"#utility.yul\":5121:5282   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5288:5540   */\n    tag_41:\n        /* \"#utility.yul\":5396:5400   */\n      0x00\n        /* \"#utility.yul\":5434:5436   */\n      0x20\n        /* \"#utility.yul\":5423:5432   */\n      dup3\n        /* \"#utility.yul\":5419:5437   */\n      add\n        /* \"#utility.yul\":5411:5437   */\n      swap1\n      pop\n        /* \"#utility.yul\":5447:5533   */\n      tag_215\n        /* \"#utility.yul\":5530:5531   */\n      0x00\n        /* \"#utility.yul\":5519:5528   */\n      dup4\n        /* \"#utility.yul\":5515:5532   */\n      add\n        /* \"#utility.yul\":5506:5512   */\n      dup5\n        /* \"#utility.yul\":5447:5533   */\n      tag_135\n      jump\t// in\n    tag_215:\n        /* \"#utility.yul\":5288:5540   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5546:5686   */\n    tag_136:\n        /* \"#utility.yul\":5610:5619   */\n      0x00\n        /* \"#utility.yul\":5643:5680   */\n      tag_217\n        /* \"#utility.yul\":5674:5679   */\n      dup3\n        /* \"#utility.yul\":5643:5680   */\n      tag_133\n      jump\t// in\n    tag_217:\n        /* \"#utility.yul\":5630:5680   */\n      swap1\n      pop\n        /* \"#utility.yul\":5546:5686   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5692:5851   */\n    tag_137:\n        /* \"#utility.yul\":5793:5844   */\n      tag_219\n        /* \"#utility.yul\":5838:5843   */\n      dup2\n        /* \"#utility.yul\":5793:5844   */\n      tag_136\n      jump\t// in\n    tag_219:\n        /* \"#utility.yul\":5788:5791   */\n      dup3\n        /* \"#utility.yul\":5781:5845   */\n      mstore\n        /* \"#utility.yul\":5692:5851   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5857:6107   */\n    tag_54:\n        /* \"#utility.yul\":5964:5968   */\n      0x00\n        /* \"#utility.yul\":6002:6004   */\n      0x20\n        /* \"#utility.yul\":5991:6000   */\n      dup3\n        /* \"#utility.yul\":5987:6005   */\n      add\n        /* \"#utility.yul\":5979:6005   */\n      swap1\n      pop\n        /* \"#utility.yul\":6015:6100   */\n      tag_221\n        /* \"#utility.yul\":6097:6098   */\n      0x00\n        /* \"#utility.yul\":6086:6095   */\n      dup4\n        /* \"#utility.yul\":6082:6099   */\n      add\n        /* \"#utility.yul\":6073:6079   */\n      dup5\n        /* \"#utility.yul\":6015:6100   */\n      tag_137\n      jump\t// in\n    tag_221:\n        /* \"#utility.yul\":5857:6107   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6113:6231   */\n    tag_138:\n        /* \"#utility.yul\":6200:6224   */\n      tag_223\n        /* \"#utility.yul\":6218:6223   */\n      dup2\n        /* \"#utility.yul\":6200:6224   */\n      tag_118\n      jump\t// in\n    tag_223:\n        /* \"#utility.yul\":6195:6198   */\n      dup3\n        /* \"#utility.yul\":6188:6225   */\n      mstore\n        /* \"#utility.yul\":6113:6231   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6237:6459   */\n    tag_58:\n        /* \"#utility.yul\":6330:6334   */\n      0x00\n        /* \"#utility.yul\":6368:6370   */\n      0x20\n        /* \"#utility.yul\":6357:6366   */\n      dup3\n        /* \"#utility.yul\":6353:6371   */\n      add\n        /* \"#utility.yul\":6345:6371   */\n      swap1\n      pop\n        /* \"#utility.yul\":6381:6452   */\n      tag_225\n        /* \"#utility.yul\":6449:6450   */\n      0x00\n        /* \"#utility.yul\":6438:6447   */\n      dup4\n        /* \"#utility.yul\":6434:6451   */\n      add\n        /* \"#utility.yul\":6425:6431   */\n      dup5\n        /* \"#utility.yul\":6381:6452   */\n      tag_138\n      jump\t// in\n    tag_225:\n        /* \"#utility.yul\":6237:6459   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6465:6645   */\n    tag_139:\n        /* \"#utility.yul\":6513:6590   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6510:6511   */\n      0x00\n        /* \"#utility.yul\":6503:6591   */\n      mstore\n        /* \"#utility.yul\":6610:6614   */\n      0x11\n        /* \"#utility.yul\":6607:6608   */\n      0x04\n        /* \"#utility.yul\":6600:6615   */\n      mstore\n        /* \"#utility.yul\":6634:6638   */\n      0x24\n        /* \"#utility.yul\":6631:6632   */\n      0x00\n        /* \"#utility.yul\":6624:6639   */\n      revert\n        /* \"#utility.yul\":6651:6845   */\n    tag_61:\n        /* \"#utility.yul\":6691:6695   */\n      0x00\n        /* \"#utility.yul\":6711:6731   */\n      tag_228\n        /* \"#utility.yul\":6729:6730   */\n      dup3\n        /* \"#utility.yul\":6711:6731   */\n      tag_121\n      jump\t// in\n    tag_228:\n        /* \"#utility.yul\":6706:6731   */\n      swap2\n      pop\n        /* \"#utility.yul\":6745:6765   */\n      tag_229\n        /* \"#utility.yul\":6763:6764   */\n      dup4\n        /* \"#utility.yul\":6745:6765   */\n      tag_121\n      jump\t// in\n    tag_229:\n        /* \"#utility.yul\":6740:6765   */\n      swap3\n      pop\n        /* \"#utility.yul\":6789:6790   */\n      dup3\n        /* \"#utility.yul\":6786:6787   */\n      dup3\n        /* \"#utility.yul\":6782:6791   */\n      sub\n        /* \"#utility.yul\":6774:6791   */\n      swap1\n      pop\n        /* \"#utility.yul\":6813:6814   */\n      dup2\n        /* \"#utility.yul\":6807:6811   */\n      dup2\n        /* \"#utility.yul\":6804:6815   */\n      gt\n        /* \"#utility.yul\":6801:6838   */\n      iszero\n      tag_230\n      jumpi\n        /* \"#utility.yul\":6818:6836   */\n      tag_231\n      tag_139\n      jump\t// in\n    tag_231:\n        /* \"#utility.yul\":6801:6838   */\n    tag_230:\n        /* \"#utility.yul\":6651:6845   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6851:7261   */\n    tag_63:\n        /* \"#utility.yul\":6891:6898   */\n      0x00\n        /* \"#utility.yul\":6914:6934   */\n      tag_233\n        /* \"#utility.yul\":6932:6933   */\n      dup3\n        /* \"#utility.yul\":6914:6934   */\n      tag_121\n      jump\t// in\n    tag_233:\n        /* \"#utility.yul\":6909:6934   */\n      swap2\n      pop\n        /* \"#utility.yul\":6948:6968   */\n      tag_234\n        /* \"#utility.yul\":6966:6967   */\n      dup4\n        /* \"#utility.yul\":6948:6968   */\n      tag_121\n      jump\t// in\n    tag_234:\n        /* \"#utility.yul\":6943:6968   */\n      swap3\n      pop\n        /* \"#utility.yul\":7003:7004   */\n      dup3\n        /* \"#utility.yul\":7000:7001   */\n      dup3\n        /* \"#utility.yul\":6996:7005   */\n      mul\n        /* \"#utility.yul\":7025:7055   */\n      tag_235\n        /* \"#utility.yul\":7043:7054   */\n      dup2\n        /* \"#utility.yul\":7025:7055   */\n      tag_121\n      jump\t// in\n    tag_235:\n        /* \"#utility.yul\":7014:7055   */\n      swap2\n      pop\n        /* \"#utility.yul\":7204:7205   */\n      dup3\n        /* \"#utility.yul\":7195:7202   */\n      dup3\n        /* \"#utility.yul\":7191:7206   */\n      div\n        /* \"#utility.yul\":7188:7189   */\n      dup5\n        /* \"#utility.yul\":7185:7207   */\n      eq\n        /* \"#utility.yul\":7165:7166   */\n      dup4\n        /* \"#utility.yul\":7158:7167   */\n      iszero\n        /* \"#utility.yul\":7138:7221   */\n      or\n        /* \"#utility.yul\":7115:7254   */\n      tag_236\n      jumpi\n        /* \"#utility.yul\":7234:7252   */\n      tag_237\n      tag_139\n      jump\t// in\n    tag_237:\n        /* \"#utility.yul\":7115:7254   */\n    tag_236:\n        /* \"#utility.yul\":6899:7261   */\n      pop\n        /* \"#utility.yul\":6851:7261   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7267:7447   */\n    tag_140:\n        /* \"#utility.yul\":7315:7392   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7312:7313   */\n      0x00\n        /* \"#utility.yul\":7305:7393   */\n      mstore\n        /* \"#utility.yul\":7412:7416   */\n      0x12\n        /* \"#utility.yul\":7409:7410   */\n      0x04\n        /* \"#utility.yul\":7402:7417   */\n      mstore\n        /* \"#utility.yul\":7436:7440   */\n      0x24\n        /* \"#utility.yul\":7433:7434   */\n      0x00\n        /* \"#utility.yul\":7426:7441   */\n      revert\n        /* \"#utility.yul\":7453:7638   */\n    tag_66:\n        /* \"#utility.yul\":7493:7494   */\n      0x00\n        /* \"#utility.yul\":7510:7530   */\n      tag_240\n        /* \"#utility.yul\":7528:7529   */\n      dup3\n        /* \"#utility.yul\":7510:7530   */\n      tag_121\n      jump\t// in\n    tag_240:\n        /* \"#utility.yul\":7505:7530   */\n      swap2\n      pop\n        /* \"#utility.yul\":7544:7564   */\n      tag_241\n        /* \"#utility.yul\":7562:7563   */\n      dup4\n        /* \"#utility.yul\":7544:7564   */\n      tag_121\n      jump\t// in\n    tag_241:\n        /* \"#utility.yul\":7539:7564   */\n      swap3\n      pop\n        /* \"#utility.yul\":7583:7584   */\n      dup3\n        /* \"#utility.yul\":7573:7608   */\n      tag_242\n      jumpi\n        /* \"#utility.yul\":7588:7606   */\n      tag_243\n      tag_140\n      jump\t// in\n    tag_243:\n        /* \"#utility.yul\":7573:7608   */\n    tag_242:\n        /* \"#utility.yul\":7630:7631   */\n      dup3\n        /* \"#utility.yul\":7627:7628   */\n      dup3\n        /* \"#utility.yul\":7623:7632   */\n      div\n        /* \"#utility.yul\":7618:7632   */\n      swap1\n      pop\n        /* \"#utility.yul\":7453:7638   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7644:7835   */\n    tag_68:\n        /* \"#utility.yul\":7684:7687   */\n      0x00\n        /* \"#utility.yul\":7703:7723   */\n      tag_245\n        /* \"#utility.yul\":7721:7722   */\n      dup3\n        /* \"#utility.yul\":7703:7723   */\n      tag_121\n      jump\t// in\n    tag_245:\n        /* \"#utility.yul\":7698:7723   */\n      swap2\n      pop\n        /* \"#utility.yul\":7737:7757   */\n      tag_246\n        /* \"#utility.yul\":7755:7756   */\n      dup4\n        /* \"#utility.yul\":7737:7757   */\n      tag_121\n      jump\t// in\n    tag_246:\n        /* \"#utility.yul\":7732:7757   */\n      swap3\n      pop\n        /* \"#utility.yul\":7780:7781   */\n      dup3\n        /* \"#utility.yul\":7777:7778   */\n      dup3\n        /* \"#utility.yul\":7773:7782   */\n      add\n        /* \"#utility.yul\":7766:7782   */\n      swap1\n      pop\n        /* \"#utility.yul\":7801:7804   */\n      dup1\n        /* \"#utility.yul\":7798:7799   */\n      dup3\n        /* \"#utility.yul\":7795:7805   */\n      gt\n        /* \"#utility.yul\":7792:7828   */\n      iszero\n      tag_247\n      jumpi\n        /* \"#utility.yul\":7808:7826   */\n      tag_248\n      tag_139\n      jump\t// in\n    tag_248:\n        /* \"#utility.yul\":7792:7828   */\n    tag_247:\n        /* \"#utility.yul\":7644:7835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7841:8074   */\n    tag_73:\n        /* \"#utility.yul\":7880:7883   */\n      0x00\n        /* \"#utility.yul\":7903:7927   */\n      tag_250\n        /* \"#utility.yul\":7921:7926   */\n      dup3\n        /* \"#utility.yul\":7903:7927   */\n      tag_121\n      jump\t// in\n    tag_250:\n        /* \"#utility.yul\":7894:7927   */\n      swap2\n      pop\n        /* \"#utility.yul\":7949:8015   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":7942:7947   */\n      dup3\n        /* \"#utility.yul\":7939:8016   */\n      sub\n        /* \"#utility.yul\":7936:8039   */\n      tag_251\n      jumpi\n        /* \"#utility.yul\":8019:8037   */\n      tag_252\n      tag_139\n      jump\t// in\n    tag_252:\n        /* \"#utility.yul\":7936:8039   */\n    tag_251:\n        /* \"#utility.yul\":8066:8067   */\n      0x01\n        /* \"#utility.yul\":8059:8064   */\n      dup3\n        /* \"#utility.yul\":8055:8068   */\n      add\n        /* \"#utility.yul\":8048:8068   */\n      swap1\n      pop\n        /* \"#utility.yul\":7841:8074   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8080:8249   */\n    tag_141:\n        /* \"#utility.yul\":8164:8175   */\n      0x00\n        /* \"#utility.yul\":8198:8204   */\n      dup3\n        /* \"#utility.yul\":8193:8196   */\n      dup3\n        /* \"#utility.yul\":8186:8205   */\n      mstore\n        /* \"#utility.yul\":8238:8242   */\n      0x20\n        /* \"#utility.yul\":8233:8236   */\n      dup3\n        /* \"#utility.yul\":8229:8243   */\n      add\n        /* \"#utility.yul\":8214:8243   */\n      swap1\n      pop\n        /* \"#utility.yul\":8080:8249   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8255:8425   */\n    tag_142:\n        /* \"#utility.yul\":8395:8417   */\n      0x546f6b656e206973206e6f74207374616b65642e000000000000000000000000\n        /* \"#utility.yul\":8391:8392   */\n      0x00\n        /* \"#utility.yul\":8383:8389   */\n      dup3\n        /* \"#utility.yul\":8379:8393   */\n      add\n        /* \"#utility.yul\":8372:8418   */\n      mstore\n        /* \"#utility.yul\":8255:8425   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8431:8797   */\n    tag_143:\n        /* \"#utility.yul\":8573:8576   */\n      0x00\n        /* \"#utility.yul\":8594:8661   */\n      tag_256\n        /* \"#utility.yul\":8658:8660   */\n      0x14\n        /* \"#utility.yul\":8653:8656   */\n      dup4\n        /* \"#utility.yul\":8594:8661   */\n      tag_141\n      jump\t// in\n    tag_256:\n        /* \"#utility.yul\":8587:8661   */\n      swap2\n      pop\n        /* \"#utility.yul\":8670:8763   */\n      tag_257\n        /* \"#utility.yul\":8759:8762   */\n      dup3\n        /* \"#utility.yul\":8670:8763   */\n      tag_142\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":8788:8790   */\n      0x20\n        /* \"#utility.yul\":8783:8786   */\n      dup3\n        /* \"#utility.yul\":8779:8791   */\n      add\n        /* \"#utility.yul\":8772:8791   */\n      swap1\n      pop\n        /* \"#utility.yul\":8431:8797   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8803:9222   */\n    tag_82:\n        /* \"#utility.yul\":8969:8973   */\n      0x00\n        /* \"#utility.yul\":9007:9009   */\n      0x20\n        /* \"#utility.yul\":8996:9005   */\n      dup3\n        /* \"#utility.yul\":8992:9010   */\n      add\n        /* \"#utility.yul\":8984:9010   */\n      swap1\n      pop\n        /* \"#utility.yul\":9056:9065   */\n      dup2\n        /* \"#utility.yul\":9050:9054   */\n      dup2\n        /* \"#utility.yul\":9046:9066   */\n      sub\n        /* \"#utility.yul\":9042:9043   */\n      0x00\n        /* \"#utility.yul\":9031:9040   */\n      dup4\n        /* \"#utility.yul\":9027:9044   */\n      add\n        /* \"#utility.yul\":9020:9067   */\n      mstore\n        /* \"#utility.yul\":9084:9215   */\n      tag_259\n        /* \"#utility.yul\":9210:9214   */\n      dup2\n        /* \"#utility.yul\":9084:9215   */\n      tag_143\n      jump\t// in\n    tag_259:\n        /* \"#utility.yul\":9076:9215   */\n      swap1\n      pop\n        /* \"#utility.yul\":8803:9222   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9228:9399   */\n    tag_85:\n        /* \"#utility.yul\":9267:9270   */\n      0x00\n        /* \"#utility.yul\":9290:9314   */\n      tag_261\n        /* \"#utility.yul\":9308:9313   */\n      dup3\n        /* \"#utility.yul\":9290:9314   */\n      tag_121\n      jump\t// in\n    tag_261:\n        /* \"#utility.yul\":9281:9314   */\n      swap2\n      pop\n        /* \"#utility.yul\":9336:9340   */\n      0x00\n        /* \"#utility.yul\":9329:9334   */\n      dup3\n        /* \"#utility.yul\":9326:9341   */\n      sub\n        /* \"#utility.yul\":9323:9364   */\n      tag_262\n      jumpi\n        /* \"#utility.yul\":9344:9362   */\n      tag_263\n      tag_139\n      jump\t// in\n    tag_263:\n        /* \"#utility.yul\":9323:9364   */\n    tag_262:\n        /* \"#utility.yul\":9391:9392   */\n      0x01\n        /* \"#utility.yul\":9384:9389   */\n      dup3\n        /* \"#utility.yul\":9380:9393   */\n      sub\n        /* \"#utility.yul\":9373:9393   */\n      swap1\n      pop\n        /* \"#utility.yul\":9228:9399   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9405:9847   */\n    tag_88:\n        /* \"#utility.yul\":9554:9558   */\n      0x00\n        /* \"#utility.yul\":9592:9594   */\n      0x60\n        /* \"#utility.yul\":9581:9590   */\n      dup3\n        /* \"#utility.yul\":9577:9595   */\n      add\n        /* \"#utility.yul\":9569:9595   */\n      swap1\n      pop\n        /* \"#utility.yul\":9605:9676   */\n      tag_265\n        /* \"#utility.yul\":9673:9674   */\n      0x00\n        /* \"#utility.yul\":9662:9671   */\n      dup4\n        /* \"#utility.yul\":9658:9675   */\n      add\n        /* \"#utility.yul\":9649:9655   */\n      dup7\n        /* \"#utility.yul\":9605:9676   */\n      tag_138\n      jump\t// in\n    tag_265:\n        /* \"#utility.yul\":9686:9758   */\n      tag_266\n        /* \"#utility.yul\":9754:9756   */\n      0x20\n        /* \"#utility.yul\":9743:9752   */\n      dup4\n        /* \"#utility.yul\":9739:9757   */\n      add\n        /* \"#utility.yul\":9730:9736   */\n      dup6\n        /* \"#utility.yul\":9686:9758   */\n      tag_138\n      jump\t// in\n    tag_266:\n        /* \"#utility.yul\":9768:9840   */\n      tag_267\n        /* \"#utility.yul\":9836:9838   */\n      0x40\n        /* \"#utility.yul\":9825:9834   */\n      dup4\n        /* \"#utility.yul\":9821:9839   */\n      add\n        /* \"#utility.yul\":9812:9818   */\n      dup5\n        /* \"#utility.yul\":9768:9840   */\n      tag_122\n      jump\t// in\n    tag_267:\n        /* \"#utility.yul\":9405:9847   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9853:10020   */\n    tag_144:\n        /* \"#utility.yul\":9993:10012   */\n      0x4e6f7468696e6720746f2072656465656d000000000000000000000000000000\n        /* \"#utility.yul\":9989:9990   */\n      0x00\n        /* \"#utility.yul\":9981:9987   */\n      dup3\n        /* \"#utility.yul\":9977:9991   */\n      add\n        /* \"#utility.yul\":9970:10013   */\n      mstore\n        /* \"#utility.yul\":9853:10020   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10026:10392   */\n    tag_145:\n        /* \"#utility.yul\":10168:10171   */\n      0x00\n        /* \"#utility.yul\":10189:10256   */\n      tag_270\n        /* \"#utility.yul\":10253:10255   */\n      0x11\n        /* \"#utility.yul\":10248:10251   */\n      dup4\n        /* \"#utility.yul\":10189:10256   */\n      tag_141\n      jump\t// in\n    tag_270:\n        /* \"#utility.yul\":10182:10256   */\n      swap2\n      pop\n        /* \"#utility.yul\":10265:10358   */\n      tag_271\n        /* \"#utility.yul\":10354:10357   */\n      dup3\n        /* \"#utility.yul\":10265:10358   */\n      tag_144\n      jump\t// in\n    tag_271:\n        /* \"#utility.yul\":10383:10385   */\n      0x20\n        /* \"#utility.yul\":10378:10381   */\n      dup3\n        /* \"#utility.yul\":10374:10386   */\n      add\n        /* \"#utility.yul\":10367:10386   */\n      swap1\n      pop\n        /* \"#utility.yul\":10026:10392   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10398:10817   */\n    tag_105:\n        /* \"#utility.yul\":10564:10568   */\n      0x00\n        /* \"#utility.yul\":10602:10604   */\n      0x20\n        /* \"#utility.yul\":10591:10600   */\n      dup3\n        /* \"#utility.yul\":10587:10605   */\n      add\n        /* \"#utility.yul\":10579:10605   */\n      swap1\n      pop\n        /* \"#utility.yul\":10651:10660   */\n      dup2\n        /* \"#utility.yul\":10645:10649   */\n      dup2\n        /* \"#utility.yul\":10641:10661   */\n      sub\n        /* \"#utility.yul\":10637:10638   */\n      0x00\n        /* \"#utility.yul\":10626:10635   */\n      dup4\n        /* \"#utility.yul\":10622:10639   */\n      add\n        /* \"#utility.yul\":10615:10662   */\n      mstore\n        /* \"#utility.yul\":10679:10810   */\n      tag_273\n        /* \"#utility.yul\":10805:10809   */\n      dup2\n        /* \"#utility.yul\":10679:10810   */\n      tag_145\n      jump\t// in\n    tag_273:\n        /* \"#utility.yul\":10671:10810   */\n      swap1\n      pop\n        /* \"#utility.yul\":10398:10817   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10823:10913   */\n    tag_146:\n        /* \"#utility.yul\":10857:10864   */\n      0x00\n        /* \"#utility.yul\":10900:10905   */\n      dup2\n        /* \"#utility.yul\":10893:10906   */\n      iszero\n        /* \"#utility.yul\":10886:10907   */\n      iszero\n        /* \"#utility.yul\":10875:10907   */\n      swap1\n      pop\n        /* \"#utility.yul\":10823:10913   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10919:11035   */\n    tag_147:\n        /* \"#utility.yul\":10989:11010   */\n      tag_276\n        /* \"#utility.yul\":11004:11009   */\n      dup2\n        /* \"#utility.yul\":10989:11010   */\n      tag_146\n      jump\t// in\n    tag_276:\n        /* \"#utility.yul\":10982:10987   */\n      dup2\n        /* \"#utility.yul\":10979:11011   */\n      eq\n        /* \"#utility.yul\":10969:11029   */\n      tag_277\n      jumpi\n        /* \"#utility.yul\":11025:11026   */\n      0x00\n        /* \"#utility.yul\":11022:11023   */\n      0x00\n        /* \"#utility.yul\":11015:11027   */\n      revert\n        /* \"#utility.yul\":10969:11029   */\n    tag_277:\n        /* \"#utility.yul\":10919:11035   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11041:11178   */\n    tag_148:\n        /* \"#utility.yul\":11095:11100   */\n      0x00\n        /* \"#utility.yul\":11126:11132   */\n      dup2\n        /* \"#utility.yul\":11120:11133   */\n      mload\n        /* \"#utility.yul\":11111:11133   */\n      swap1\n      pop\n        /* \"#utility.yul\":11142:11172   */\n      tag_279\n        /* \"#utility.yul\":11166:11171   */\n      dup2\n        /* \"#utility.yul\":11142:11172   */\n      tag_147\n      jump\t// in\n    tag_279:\n        /* \"#utility.yul\":11041:11178   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11184:11529   */\n    tag_112:\n        /* \"#utility.yul\":11251:11257   */\n      0x00\n        /* \"#utility.yul\":11300:11302   */\n      0x20\n        /* \"#utility.yul\":11288:11297   */\n      dup3\n        /* \"#utility.yul\":11279:11286   */\n      dup5\n        /* \"#utility.yul\":11275:11298   */\n      sub\n        /* \"#utility.yul\":11271:11303   */\n      slt\n        /* \"#utility.yul\":11268:11387   */\n      iszero\n      tag_281\n      jumpi\n        /* \"#utility.yul\":11306:11385   */\n      tag_282\n      tag_115\n      jump\t// in\n    tag_282:\n        /* \"#utility.yul\":11268:11387   */\n    tag_281:\n        /* \"#utility.yul\":11426:11427   */\n      0x00\n        /* \"#utility.yul\":11451:11512   */\n      tag_283\n        /* \"#utility.yul\":11504:11511   */\n      dup5\n        /* \"#utility.yul\":11495:11501   */\n      dup3\n        /* \"#utility.yul\":11484:11493   */\n      dup6\n        /* \"#utility.yul\":11480:11502   */\n      add\n        /* \"#utility.yul\":11451:11512   */\n      tag_148\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":11441:11512   */\n      swap2\n      pop\n        /* \"#utility.yul\":11397:11522   */\n      pop\n        /* \"#utility.yul\":11184:11529   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122064b464c6092f486cf518f787809ba4cee6f0c8b82c8b07624e120ab74619c3fd64736f6c634300081b0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_70": {
									"entryPoint": null,
									"id": 70,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 330,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 381,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_addresst_uint256_fromMemory": {
									"entryPoint": 401,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 291,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 260,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 350,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 256,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 308,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 359,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:2028:6",
										"nodeType": "YulBlock",
										"src": "0:2028:6",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:6",
													"nodeType": "YulBlock",
													"src": "47:35:6",
													"statements": [
														{
															"nativeSrc": "57:19:6",
															"nodeType": "YulAssignment",
															"src": "57:19:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:6",
																		"nodeType": "YulLiteral",
																		"src": "73:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:6"
																},
																"nativeSrc": "67:9:6",
																"nodeType": "YulFunctionCall",
																"src": "67:9:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:6"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:6",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:6",
														"nodeType": "YulTypedName",
														"src": "40:6:6",
														"type": ""
													}
												],
												"src": "7:75:6"
											},
											{
												"body": {
													"nativeSrc": "177:28:6",
													"nodeType": "YulBlock",
													"src": "177:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:6",
																		"nodeType": "YulLiteral",
																		"src": "194:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:6",
																		"nodeType": "YulLiteral",
																		"src": "197:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:6"
																},
																"nativeSrc": "187:12:6",
																"nodeType": "YulFunctionCall",
																"src": "187:12:6"
															},
															"nativeSrc": "187:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:6"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:6"
											},
											{
												"body": {
													"nativeSrc": "300:28:6",
													"nodeType": "YulBlock",
													"src": "300:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:6",
																		"nodeType": "YulLiteral",
																		"src": "317:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:6",
																		"nodeType": "YulLiteral",
																		"src": "320:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:6"
																},
																"nativeSrc": "310:12:6",
																"nodeType": "YulFunctionCall",
																"src": "310:12:6"
															},
															"nativeSrc": "310:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:6"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:6"
											},
											{
												"body": {
													"nativeSrc": "379:81:6",
													"nodeType": "YulBlock",
													"src": "379:81:6",
													"statements": [
														{
															"nativeSrc": "389:65:6",
															"nodeType": "YulAssignment",
															"src": "389:65:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:6",
																		"nodeType": "YulLiteral",
																		"src": "411:42:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:6"
																},
																"nativeSrc": "400:54:6",
																"nodeType": "YulFunctionCall",
																"src": "400:54:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:6",
														"nodeType": "YulTypedName",
														"src": "361:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:6",
														"nodeType": "YulTypedName",
														"src": "371:7:6",
														"type": ""
													}
												],
												"src": "334:126:6"
											},
											{
												"body": {
													"nativeSrc": "511:51:6",
													"nodeType": "YulBlock",
													"src": "511:51:6",
													"statements": [
														{
															"nativeSrc": "521:35:6",
															"nodeType": "YulAssignment",
															"src": "521:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:6"
																},
																"nativeSrc": "532:24:6",
																"nodeType": "YulFunctionCall",
																"src": "532:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:6",
														"nodeType": "YulTypedName",
														"src": "493:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:6",
														"nodeType": "YulTypedName",
														"src": "503:7:6",
														"type": ""
													}
												],
												"src": "466:96:6"
											},
											{
												"body": {
													"nativeSrc": "611:79:6",
													"nodeType": "YulBlock",
													"src": "611:79:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:6",
																"nodeType": "YulBlock",
																"src": "668:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:6",
																					"nodeType": "YulLiteral",
																					"src": "677:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:6",
																					"nodeType": "YulLiteral",
																					"src": "680:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:6"
																			},
																			"nativeSrc": "670:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:6"
																		},
																		"nativeSrc": "670:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:6"
																				},
																				"nativeSrc": "641:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:6"
																		},
																		"nativeSrc": "631:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:6"
																},
																"nativeSrc": "624:43:6",
																"nodeType": "YulFunctionCall",
																"src": "624:43:6"
															},
															"nativeSrc": "621:63:6",
															"nodeType": "YulIf",
															"src": "621:63:6"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:6",
														"nodeType": "YulTypedName",
														"src": "604:5:6",
														"type": ""
													}
												],
												"src": "568:122:6"
											},
											{
												"body": {
													"nativeSrc": "759:80:6",
													"nodeType": "YulBlock",
													"src": "759:80:6",
													"statements": [
														{
															"nativeSrc": "769:22:6",
															"nodeType": "YulAssignment",
															"src": "769:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:6"
																},
																"nativeSrc": "778:13:6",
																"nodeType": "YulFunctionCall",
																"src": "778:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:6"
																},
																"nativeSrc": "800:33:6",
																"nodeType": "YulFunctionCall",
																"src": "800:33:6"
															},
															"nativeSrc": "800:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:6"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:6",
														"nodeType": "YulTypedName",
														"src": "737:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:6",
														"nodeType": "YulTypedName",
														"src": "745:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:6",
														"nodeType": "YulTypedName",
														"src": "753:5:6",
														"type": ""
													}
												],
												"src": "696:143:6"
											},
											{
												"body": {
													"nativeSrc": "890:32:6",
													"nodeType": "YulBlock",
													"src": "890:32:6",
													"statements": [
														{
															"nativeSrc": "900:16:6",
															"nodeType": "YulAssignment",
															"src": "900:16:6",
															"value": {
																"name": "value",
																"nativeSrc": "911:5:6",
																"nodeType": "YulIdentifier",
																"src": "911:5:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "900:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "900:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "845:77:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "872:5:6",
														"nodeType": "YulTypedName",
														"src": "872:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "882:7:6",
														"nodeType": "YulTypedName",
														"src": "882:7:6",
														"type": ""
													}
												],
												"src": "845:77:6"
											},
											{
												"body": {
													"nativeSrc": "971:79:6",
													"nodeType": "YulBlock",
													"src": "971:79:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "1028:16:6",
																"nodeType": "YulBlock",
																"src": "1028:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1037:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1037:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1040:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1040:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1030:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1030:6:6"
																			},
																			"nativeSrc": "1030:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1030:12:6"
																		},
																		"nativeSrc": "1030:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1030:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "994:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "994:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1019:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "1019:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1001:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "1001:17:6"
																				},
																				"nativeSrc": "1001:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1001:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "991:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "991:2:6"
																		},
																		"nativeSrc": "991:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "991:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "984:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "984:6:6"
																},
																"nativeSrc": "984:43:6",
																"nodeType": "YulFunctionCall",
																"src": "984:43:6"
															},
															"nativeSrc": "981:63:6",
															"nodeType": "YulIf",
															"src": "981:63:6"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "928:122:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "964:5:6",
														"nodeType": "YulTypedName",
														"src": "964:5:6",
														"type": ""
													}
												],
												"src": "928:122:6"
											},
											{
												"body": {
													"nativeSrc": "1119:80:6",
													"nodeType": "YulBlock",
													"src": "1119:80:6",
													"statements": [
														{
															"nativeSrc": "1129:22:6",
															"nodeType": "YulAssignment",
															"src": "1129:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1144:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1144:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1138:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1138:5:6"
																},
																"nativeSrc": "1138:13:6",
																"nodeType": "YulFunctionCall",
																"src": "1138:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1129:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1129:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1187:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "1187:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "1160:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "1160:26:6"
																},
																"nativeSrc": "1160:33:6",
																"nodeType": "YulFunctionCall",
																"src": "1160:33:6"
															},
															"nativeSrc": "1160:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "1160:33:6"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "1056:143:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1097:6:6",
														"nodeType": "YulTypedName",
														"src": "1097:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1105:3:6",
														"nodeType": "YulTypedName",
														"src": "1105:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1113:5:6",
														"nodeType": "YulTypedName",
														"src": "1113:5:6",
														"type": ""
													}
												],
												"src": "1056:143:6"
											},
											{
												"body": {
													"nativeSrc": "1333:692:6",
													"nodeType": "YulBlock",
													"src": "1333:692:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "1380:83:6",
																"nodeType": "YulBlock",
																"src": "1380:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1382:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "1382:77:6"
																			},
																			"nativeSrc": "1382:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1382:79:6"
																		},
																		"nativeSrc": "1382:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1382:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1354:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1354:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1363:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1363:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1350:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1350:3:6"
																		},
																		"nativeSrc": "1350:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1350:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1375:3:6",
																		"nodeType": "YulLiteral",
																		"src": "1375:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1346:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1346:3:6"
																},
																"nativeSrc": "1346:33:6",
																"nodeType": "YulFunctionCall",
																"src": "1346:33:6"
															},
															"nativeSrc": "1343:120:6",
															"nodeType": "YulIf",
															"src": "1343:120:6"
														},
														{
															"nativeSrc": "1473:128:6",
															"nodeType": "YulBlock",
															"src": "1473:128:6",
															"statements": [
																{
																	"nativeSrc": "1488:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1488:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1502:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1502:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1492:6:6",
																			"nodeType": "YulTypedName",
																			"src": "1492:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1517:74:6",
																	"nodeType": "YulAssignment",
																	"src": "1517:74:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1563:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "1563:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1574:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "1574:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1559:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "1559:3:6"
																				},
																				"nativeSrc": "1559:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1559:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1583:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1583:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1527:31:6",
																			"nodeType": "YulIdentifier",
																			"src": "1527:31:6"
																		},
																		"nativeSrc": "1527:64:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1527:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1517:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "1517:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1611:129:6",
															"nodeType": "YulBlock",
															"src": "1611:129:6",
															"statements": [
																{
																	"nativeSrc": "1626:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1626:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1640:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1640:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1630:6:6",
																			"nodeType": "YulTypedName",
																			"src": "1630:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1656:74:6",
																	"nodeType": "YulAssignment",
																	"src": "1656:74:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1702:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "1702:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1713:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "1713:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1698:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "1698:3:6"
																				},
																				"nativeSrc": "1698:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1698:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1722:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1722:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1666:31:6",
																			"nodeType": "YulIdentifier",
																			"src": "1666:31:6"
																		},
																		"nativeSrc": "1666:64:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1666:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1656:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "1656:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1750:129:6",
															"nodeType": "YulBlock",
															"src": "1750:129:6",
															"statements": [
																{
																	"nativeSrc": "1765:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1765:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1779:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1779:2:6",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1769:6:6",
																			"nodeType": "YulTypedName",
																			"src": "1769:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1795:74:6",
																	"nodeType": "YulAssignment",
																	"src": "1795:74:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1841:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "1841:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1852:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "1852:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1837:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "1837:3:6"
																				},
																				"nativeSrc": "1837:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1837:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1861:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1861:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1805:31:6",
																			"nodeType": "YulIdentifier",
																			"src": "1805:31:6"
																		},
																		"nativeSrc": "1805:64:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1805:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "1795:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "1795:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1889:129:6",
															"nodeType": "YulBlock",
															"src": "1889:129:6",
															"statements": [
																{
																	"nativeSrc": "1904:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1904:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1918:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1918:2:6",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1908:6:6",
																			"nodeType": "YulTypedName",
																			"src": "1908:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1934:74:6",
																	"nodeType": "YulAssignment",
																	"src": "1934:74:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1980:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "1980:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1991:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "1991:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1976:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "1976:3:6"
																				},
																				"nativeSrc": "1976:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1976:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2000:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "2000:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "1944:31:6",
																			"nodeType": "YulIdentifier",
																			"src": "1944:31:6"
																		},
																		"nativeSrc": "1944:64:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1944:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "1934:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "1934:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_addresst_uint256_fromMemory",
												"nativeSrc": "1205:820:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1279:9:6",
														"nodeType": "YulTypedName",
														"src": "1279:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1290:7:6",
														"nodeType": "YulTypedName",
														"src": "1290:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1302:6:6",
														"nodeType": "YulTypedName",
														"src": "1302:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1310:6:6",
														"nodeType": "YulTypedName",
														"src": "1310:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1318:6:6",
														"nodeType": "YulTypedName",
														"src": "1318:6:6",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "1326:6:6",
														"nodeType": "YulTypedName",
														"src": "1326:6:6",
														"type": ""
													}
												],
												"src": "1205:820:6"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_addresst_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b5060405161129f38038061129f83398181016040528101906100319190610191565b835f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508260015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508160025f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600381905550505050506101f5565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61012d82610104565b9050919050565b61013d81610123565b8114610147575f5ffd5b50565b5f8151905061015881610134565b92915050565b5f819050919050565b6101708161015e565b811461017a575f5ffd5b50565b5f8151905061018b81610167565b92915050565b5f5f5f5f608085870312156101a9576101a8610100565b5b5f6101b68782880161014a565b94505060206101c78782880161014a565b93505060406101d88782880161014a565b92505060606101e98782880161017d565b91505092959194509250565b61109d806102025f395ff3fe608060405234801561000f575f5ffd5b50600436106100a7575f3560e01c806347ccca021161006f57806347ccca021461017557806370a0823114610193578063a694fc3a146101c3578063be040fb0146101df578063f7c618c1146101e9578063fb75b2c714610207576100a7565b806310098ad5146100ab578063150b7a02146100db5780632ce9aead1461010b5780632d6a1fa61461013b5780632e1a7d4d14610159575b5f5ffd5b6100c560048036038101906100c09190610a95565b610225565b6040516100d29190610ad8565b60405180910390f35b6100f560048036038101906100f09190610b7c565b61032b565b6040516101029190610c3a565b60405180910390f35b61012560048036038101906101209190610a95565b61046e565b6040516101329190610ad8565b60405180910390f35b610143610483565b6040516101509190610ad8565b60405180910390f35b610173600480360381019061016e9190610c53565b610489565b005b61017d6106e3565b60405161018a9190610cd9565b60405180910390f35b6101ad60048036038101906101a89190610a95565b610707565b6040516101ba9190610ad8565b60405180910390f35b6101dd60048036038101906101d89190610c53565b61071c565b005b6101e76107b0565b005b6101f16109e2565b6040516101fe9190610d12565b60405180910390f35b61020f610a07565b60405161021c9190610d3a565b60405180910390f35b5f5f60065f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054426102709190610d80565b90505f620151806003548360055f8873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20546102c39190610db3565b6102cd9190610db3565b6102d79190610e21565b90508060075f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20546103229190610e51565b92505050919050565b5f8461033681610225565b60075f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055504260065f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508560045f8781526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060055f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f81548092919061045590610e84565b919050555063150b7a0260e01b91505095945050505050565b6006602052805f5260405f205f915090505481565b60035481565b610491610a2c565b61049a81610225565b60075f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055504260065f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550610525610a2c565b73ffffffffffffffffffffffffffffffffffffffff1660045f8481526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146105c2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105b990610f25565b60405180910390fd5b60045f8381526020019081526020015f205f6101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560055f610600610a2c565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f81548092919061064990610f43565b91905055505f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd30610693610a2c565b856040518463ffffffff1660e01b81526004016106b293929190610f6a565b5f604051808303815f87803b1580156106c9575f5ffd5b505af11580156106db573d5f5f3e3d5ffd5b505050505050565b5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6005602052805f5260405f205f915090505481565b5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166342842e0e610760610a2c565b30846040518463ffffffff1660e01b815260040161078093929190610f6a565b5f604051808303815f87803b158015610797575f5ffd5b505af11580156107a9573d5f5f3e3d5ffd5b5050505050565b6107b8610a2c565b6107c181610225565b60075f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055504260065f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055505f60075f610850610a2c565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490505f81116108ce576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108c590610fe9565b60405180910390fd5b5f60075f6108da610a2c565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555060015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1661097e610a2c565b846040518463ffffffff1660e01b815260040161099d93929190610f6a565b6020604051808303815f875af11580156109b9573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906109dd919061103c565b505050565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f33905090565b5f5ffd5b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610a6482610a3b565b9050919050565b610a7481610a5a565b8114610a7e575f5ffd5b50565b5f81359050610a8f81610a6b565b92915050565b5f60208284031215610aaa57610aa9610a33565b5b5f610ab784828501610a81565b91505092915050565b5f819050919050565b610ad281610ac0565b82525050565b5f602082019050610aeb5f830184610ac9565b92915050565b610afa81610ac0565b8114610b04575f5ffd5b50565b5f81359050610b1581610af1565b92915050565b5f5ffd5b5f5ffd5b5f5ffd5b5f5f83601f840112610b3c57610b3b610b1b565b5b8235905067ffffffffffffffff811115610b5957610b58610b1f565b5b602083019150836001820283011115610b7557610b74610b23565b5b9250929050565b5f5f5f5f5f60808688031215610b9557610b94610a33565b5b5f610ba288828901610a81565b9550506020610bb388828901610a81565b9450506040610bc488828901610b07565b935050606086013567ffffffffffffffff811115610be557610be4610a37565b5b610bf188828901610b27565b92509250509295509295909350565b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b610c3481610c00565b82525050565b5f602082019050610c4d5f830184610c2b565b92915050565b5f60208284031215610c6857610c67610a33565b5b5f610c7584828501610b07565b91505092915050565b5f819050919050565b5f610ca1610c9c610c9784610a3b565b610c7e565b610a3b565b9050919050565b5f610cb282610c87565b9050919050565b5f610cc382610ca8565b9050919050565b610cd381610cb9565b82525050565b5f602082019050610cec5f830184610cca565b92915050565b5f610cfc82610ca8565b9050919050565b610d0c81610cf2565b82525050565b5f602082019050610d255f830184610d03565b92915050565b610d3481610a5a565b82525050565b5f602082019050610d4d5f830184610d2b565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610d8a82610ac0565b9150610d9583610ac0565b9250828203905081811115610dad57610dac610d53565b5b92915050565b5f610dbd82610ac0565b9150610dc883610ac0565b9250828202610dd681610ac0565b91508282048414831517610ded57610dec610d53565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f610e2b82610ac0565b9150610e3683610ac0565b925082610e4657610e45610df4565b5b828204905092915050565b5f610e5b82610ac0565b9150610e6683610ac0565b9250828201905080821115610e7e57610e7d610d53565b5b92915050565b5f610e8e82610ac0565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610ec057610ebf610d53565b5b600182019050919050565b5f82825260208201905092915050565b7f546f6b656e206973206e6f74207374616b65642e0000000000000000000000005f82015250565b5f610f0f601483610ecb565b9150610f1a82610edb565b602082019050919050565b5f6020820190508181035f830152610f3c81610f03565b9050919050565b5f610f4d82610ac0565b91505f8203610f5f57610f5e610d53565b5b600182039050919050565b5f606082019050610f7d5f830186610d2b565b610f8a6020830185610d2b565b610f976040830184610ac9565b949350505050565b7f4e6f7468696e6720746f2072656465656d0000000000000000000000000000005f82015250565b5f610fd3601183610ecb565b9150610fde82610f9f565b602082019050919050565b5f6020820190508181035f83015261100081610fc7565b9050919050565b5f8115159050919050565b61101b81611007565b8114611025575f5ffd5b50565b5f8151905061103681611012565b92915050565b5f6020828403121561105157611050610a33565b5b5f61105e84828501611028565b9150509291505056fea264697066735822122064b464c6092f486cf518f787809ba4cee6f0c8b82c8b07624e120ab74619c3fd64736f6c634300081b0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x129F CODESIZE SUB DUP1 PUSH2 0x129F DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x191 JUMP JUMPDEST DUP4 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x3 DUP2 SWAP1 SSTORE POP POP POP POP POP PUSH2 0x1F5 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x12D DUP3 PUSH2 0x104 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13D DUP2 PUSH2 0x123 JUMP JUMPDEST DUP2 EQ PUSH2 0x147 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x158 DUP2 PUSH2 0x134 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x170 DUP2 PUSH2 0x15E JUMP JUMPDEST DUP2 EQ PUSH2 0x17A JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x18B DUP2 PUSH2 0x167 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1A9 JUMPI PUSH2 0x1A8 PUSH2 0x100 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1B6 DUP8 DUP3 DUP9 ADD PUSH2 0x14A JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1C7 DUP8 DUP3 DUP9 ADD PUSH2 0x14A JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x1D8 DUP8 DUP3 DUP9 ADD PUSH2 0x14A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x1E9 DUP8 DUP3 DUP9 ADD PUSH2 0x17D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH2 0x109D DUP1 PUSH2 0x202 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA7 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x47CCCA02 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0x47CCCA02 EQ PUSH2 0x175 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x193 JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x1C3 JUMPI DUP1 PUSH4 0xBE040FB0 EQ PUSH2 0x1DF JUMPI DUP1 PUSH4 0xF7C618C1 EQ PUSH2 0x1E9 JUMPI DUP1 PUSH4 0xFB75B2C7 EQ PUSH2 0x207 JUMPI PUSH2 0xA7 JUMP JUMPDEST DUP1 PUSH4 0x10098AD5 EQ PUSH2 0xAB JUMPI DUP1 PUSH4 0x150B7A02 EQ PUSH2 0xDB JUMPI DUP1 PUSH4 0x2CE9AEAD EQ PUSH2 0x10B JUMPI DUP1 PUSH4 0x2D6A1FA6 EQ PUSH2 0x13B JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x159 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xC5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC0 SWAP2 SWAP1 PUSH2 0xA95 JUMP JUMPDEST PUSH2 0x225 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD2 SWAP2 SWAP1 PUSH2 0xAD8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF0 SWAP2 SWAP1 PUSH2 0xB7C JUMP JUMPDEST PUSH2 0x32B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x102 SWAP2 SWAP1 PUSH2 0xC3A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x125 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x120 SWAP2 SWAP1 PUSH2 0xA95 JUMP JUMPDEST PUSH2 0x46E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x132 SWAP2 SWAP1 PUSH2 0xAD8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x143 PUSH2 0x483 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x150 SWAP2 SWAP1 PUSH2 0xAD8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x173 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x16E SWAP2 SWAP1 PUSH2 0xC53 JUMP JUMPDEST PUSH2 0x489 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x17D PUSH2 0x6E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18A SWAP2 SWAP1 PUSH2 0xCD9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1AD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A8 SWAP2 SWAP1 PUSH2 0xA95 JUMP JUMPDEST PUSH2 0x707 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BA SWAP2 SWAP1 PUSH2 0xAD8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1DD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D8 SWAP2 SWAP1 PUSH2 0xC53 JUMP JUMPDEST PUSH2 0x71C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1E7 PUSH2 0x7B0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1F1 PUSH2 0x9E2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FE SWAP2 SWAP1 PUSH2 0xD12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20F PUSH2 0xA07 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21C SWAP2 SWAP1 PUSH2 0xD3A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH0 PUSH1 0x6 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD TIMESTAMP PUSH2 0x270 SWAP2 SWAP1 PUSH2 0xD80 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH3 0x15180 PUSH1 0x3 SLOAD DUP4 PUSH1 0x5 PUSH0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x2C3 SWAP2 SWAP1 PUSH2 0xDB3 JUMP JUMPDEST PUSH2 0x2CD SWAP2 SWAP1 PUSH2 0xDB3 JUMP JUMPDEST PUSH2 0x2D7 SWAP2 SWAP1 PUSH2 0xE21 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x7 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x322 SWAP2 SWAP1 PUSH2 0xE51 JUMP JUMPDEST SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP5 PUSH2 0x336 DUP2 PUSH2 0x225 JUMP JUMPDEST PUSH1 0x7 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x6 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP6 PUSH1 0x4 PUSH0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x5 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x455 SWAP1 PUSH2 0xE84 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH4 0x150B7A02 PUSH1 0xE0 SHL SWAP2 POP POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x491 PUSH2 0xA2C JUMP JUMPDEST PUSH2 0x49A DUP2 PUSH2 0x225 JUMP JUMPDEST PUSH1 0x7 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x6 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x525 PUSH2 0xA2C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x4 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x5C2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5B9 SWAP1 PUSH2 0xF25 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x5 PUSH0 PUSH2 0x600 PUSH2 0xA2C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x649 SWAP1 PUSH2 0xF43 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD ADDRESS PUSH2 0x693 PUSH2 0xA2C JUMP JUMPDEST DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B2 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xF6A JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6C9 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6DB JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x42842E0E PUSH2 0x760 PUSH2 0xA2C JUMP JUMPDEST ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x780 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xF6A JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x797 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x7A9 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x7B8 PUSH2 0xA2C JUMP JUMPDEST PUSH2 0x7C1 DUP2 PUSH2 0x225 JUMP JUMPDEST PUSH1 0x7 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x6 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH0 PUSH1 0x7 PUSH0 PUSH2 0x850 PUSH2 0xA2C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 DUP2 GT PUSH2 0x8CE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8C5 SWAP1 PUSH2 0xFE9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x7 PUSH0 PUSH2 0x8DA PUSH2 0xA2C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x97E PUSH2 0xA2C JUMP JUMPDEST DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x99D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xF6A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x9B9 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9DD SWAP2 SWAP1 PUSH2 0x103C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xA64 DUP3 PUSH2 0xA3B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA74 DUP2 PUSH2 0xA5A JUMP JUMPDEST DUP2 EQ PUSH2 0xA7E JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xA8F DUP2 PUSH2 0xA6B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xAAA JUMPI PUSH2 0xAA9 PUSH2 0xA33 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xAB7 DUP5 DUP3 DUP6 ADD PUSH2 0xA81 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAD2 DUP2 PUSH2 0xAC0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xAEB PUSH0 DUP4 ADD DUP5 PUSH2 0xAC9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xAFA DUP2 PUSH2 0xAC0 JUMP JUMPDEST DUP2 EQ PUSH2 0xB04 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB15 DUP2 PUSH2 0xAF1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0xB3C JUMPI PUSH2 0xB3B PUSH2 0xB1B JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xB59 JUMPI PUSH2 0xB58 PUSH2 0xB1F JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0xB75 JUMPI PUSH2 0xB74 PUSH2 0xB23 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xB95 JUMPI PUSH2 0xB94 PUSH2 0xA33 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xBA2 DUP9 DUP3 DUP10 ADD PUSH2 0xA81 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0xBB3 DUP9 DUP3 DUP10 ADD PUSH2 0xA81 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0xBC4 DUP9 DUP3 DUP10 ADD PUSH2 0xB07 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xBE5 JUMPI PUSH2 0xBE4 PUSH2 0xA37 JUMP JUMPDEST JUMPDEST PUSH2 0xBF1 DUP9 DUP3 DUP10 ADD PUSH2 0xB27 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC34 DUP2 PUSH2 0xC00 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC4D PUSH0 DUP4 ADD DUP5 PUSH2 0xC2B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC68 JUMPI PUSH2 0xC67 PUSH2 0xA33 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xC75 DUP5 DUP3 DUP6 ADD PUSH2 0xB07 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xCA1 PUSH2 0xC9C PUSH2 0xC97 DUP5 PUSH2 0xA3B JUMP JUMPDEST PUSH2 0xC7E JUMP JUMPDEST PUSH2 0xA3B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xCB2 DUP3 PUSH2 0xC87 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xCC3 DUP3 PUSH2 0xCA8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCD3 DUP2 PUSH2 0xCB9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCEC PUSH0 DUP4 ADD DUP5 PUSH2 0xCCA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xCFC DUP3 PUSH2 0xCA8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD0C DUP2 PUSH2 0xCF2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD25 PUSH0 DUP4 ADD DUP5 PUSH2 0xD03 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xD34 DUP2 PUSH2 0xA5A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD4D PUSH0 DUP4 ADD DUP5 PUSH2 0xD2B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xD8A DUP3 PUSH2 0xAC0 JUMP JUMPDEST SWAP2 POP PUSH2 0xD95 DUP4 PUSH2 0xAC0 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0xDAD JUMPI PUSH2 0xDAC PUSH2 0xD53 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xDBD DUP3 PUSH2 0xAC0 JUMP JUMPDEST SWAP2 POP PUSH2 0xDC8 DUP4 PUSH2 0xAC0 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0xDD6 DUP2 PUSH2 0xAC0 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0xDED JUMPI PUSH2 0xDEC PUSH2 0xD53 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xE2B DUP3 PUSH2 0xAC0 JUMP JUMPDEST SWAP2 POP PUSH2 0xE36 DUP4 PUSH2 0xAC0 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xE46 JUMPI PUSH2 0xE45 PUSH2 0xDF4 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xE5B DUP3 PUSH2 0xAC0 JUMP JUMPDEST SWAP2 POP PUSH2 0xE66 DUP4 PUSH2 0xAC0 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xE7E JUMPI PUSH2 0xE7D PUSH2 0xD53 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xE8E DUP3 PUSH2 0xAC0 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0xEC0 JUMPI PUSH2 0xEBF PUSH2 0xD53 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x546F6B656E206973206E6F74207374616B65642E000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xF0F PUSH1 0x14 DUP4 PUSH2 0xECB JUMP JUMPDEST SWAP2 POP PUSH2 0xF1A DUP3 PUSH2 0xEDB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xF3C DUP2 PUSH2 0xF03 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xF4D DUP3 PUSH2 0xAC0 JUMP JUMPDEST SWAP2 POP PUSH0 DUP3 SUB PUSH2 0xF5F JUMPI PUSH2 0xF5E PUSH2 0xD53 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xF7D PUSH0 DUP4 ADD DUP7 PUSH2 0xD2B JUMP JUMPDEST PUSH2 0xF8A PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xD2B JUMP JUMPDEST PUSH2 0xF97 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xAC9 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E6F7468696E6720746F2072656465656D000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xFD3 PUSH1 0x11 DUP4 PUSH2 0xECB JUMP JUMPDEST SWAP2 POP PUSH2 0xFDE DUP3 PUSH2 0xF9F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1000 DUP2 PUSH2 0xFC7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x101B DUP2 PUSH2 0x1007 JUMP JUMPDEST DUP2 EQ PUSH2 0x1025 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1036 DUP2 PUSH2 0x1012 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1051 JUMPI PUSH2 0x1050 PUSH2 0xA33 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x105E DUP5 DUP3 DUP6 ADD PUSH2 0x1028 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH5 0xB464C6092F BASEFEE PUSH13 0xF518F787809BA4CEE6F0C8B82C DUP12 SMOD PUSH3 0x4E120A 0xB7 CHAINID NOT 0xC3 REVERT PUSH5 0x736F6C6343 STOP ADDMOD SHL STOP CALLER ",
							"sourceMap": "2582:2918:0:-:0;;;3294:336;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3471:10;3457:3;;:25;;;;;;;;;;;;;;;;;;3514:18;3493:11;;:40;;;;;;;;;;;;;;;;;;3559:19;3544:12;;:34;;;;;;;;;;;;;;;;;;3612:10;3589:20;:33;;;;3294:336;;;;2582:2918;;88:117:6;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:77::-;882:7;911:5;900:16;;845:77;;;:::o;928:122::-;1001:24;1019:5;1001:24;:::i;:::-;994:5;991:35;981:63;;1040:1;1037;1030:12;981:63;928:122;:::o;1056:143::-;1113:5;1144:6;1138:13;1129:22;;1160:33;1187:5;1160:33;:::i;:::-;1056:143;;;;:::o;1205:820::-;1302:6;1310;1318;1326;1375:3;1363:9;1354:7;1350:23;1346:33;1343:120;;;1382:79;;:::i;:::-;1343:120;1502:1;1527:64;1583:7;1574:6;1563:9;1559:22;1527:64;:::i;:::-;1517:74;;1473:128;1640:2;1666:64;1722:7;1713:6;1702:9;1698:22;1666:64;:::i;:::-;1656:74;;1611:129;1779:2;1805:64;1861:7;1852:6;1841:9;1837:22;1805:64;:::i;:::-;1795:74;;1750:129;1918:2;1944:64;2000:7;1991:6;1980:9;1976:22;1944:64;:::i;:::-;1934:74;;1889:129;1205:820;;;;;;;:::o;2582:2918:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_msgSender_487": {
									"entryPoint": 2604,
									"id": 487,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@available_128": {
									"entryPoint": 549,
									"id": 128,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@balanceOf_29": {
									"entryPoint": 1799,
									"id": 29,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@lastUpdateTime_33": {
									"entryPoint": 1134,
									"id": 33,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@nft_13": {
									"entryPoint": 1763,
									"id": 13,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@onERC721Received_262": {
									"entryPoint": 811,
									"id": 262,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"@redeem_230": {
									"entryPoint": 1968,
									"id": 230,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rewardPerTokenPerDay_21": {
									"entryPoint": 1155,
									"id": 21,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rewardToken_16": {
									"entryPoint": 2530,
									"id": 16,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rewardWallet_18": {
									"entryPoint": 2567,
									"id": 18,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@stake_147": {
									"entryPoint": 1820,
									"id": 147,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@withdraw_191": {
									"entryPoint": 1161,
									"id": 191,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 2689,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 4136,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_calldata_ptr": {
									"entryPoint": 2855,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_t_uint256": {
									"entryPoint": 2823,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2709,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_calldata_ptr": {
									"entryPoint": 2940,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 4156,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 3155,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 3371,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes4_to_t_bytes4_fromStack": {
									"entryPoint": 3115,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC20_$341_to_t_address_fromStack": {
									"entryPoint": 3331,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC721_$457_to_t_address_fromStack": {
									"entryPoint": 3274,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_4814ee9298a6ee14dd8d406f87112f1967472b7011a3ae8ceed8f6adee3d0290_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4039,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_7047e1907ec48195b0277350fe86675187cd3cbb8bd2baa58bb8272dc08b5034_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3843,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2761,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 3386,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 3946,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed": {
									"entryPoint": 3130,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$341__to_t_address__fromStack_reversed": {
									"entryPoint": 3346,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC721_$457__to_t_address__fromStack_reversed": {
									"entryPoint": 3289,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4814ee9298a6ee14dd8d406f87112f1967472b7011a3ae8ceed8f6adee3d0290__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4073,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7047e1907ec48195b0277350fe86675187cd3cbb8bd2baa58bb8272dc08b5034__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3877,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2776,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 3787,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3665,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 3617,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 3507,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 3456,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 2650,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 4103,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 3072,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2619,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2752,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$341_to_t_address": {
									"entryPoint": 3314,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC721_$457_to_t_address": {
									"entryPoint": 3257,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 3240,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 3207,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"decrement_t_uint256": {
									"entryPoint": 3907,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 3198,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 3716,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 3411,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 3572,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490": {
									"entryPoint": 2847,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 2843,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 2851,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 2615,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 2611,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_4814ee9298a6ee14dd8d406f87112f1967472b7011a3ae8ceed8f6adee3d0290": {
									"entryPoint": 3999,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_7047e1907ec48195b0277350fe86675187cd3cbb8bd2baa58bb8272dc08b5034": {
									"entryPoint": 3803,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 2667,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 4114,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 2801,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:11532:6",
										"nodeType": "YulBlock",
										"src": "0:11532:6",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:6",
													"nodeType": "YulBlock",
													"src": "47:35:6",
													"statements": [
														{
															"nativeSrc": "57:19:6",
															"nodeType": "YulAssignment",
															"src": "57:19:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:6",
																		"nodeType": "YulLiteral",
																		"src": "73:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:6"
																},
																"nativeSrc": "67:9:6",
																"nodeType": "YulFunctionCall",
																"src": "67:9:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:6"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:6",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:6",
														"nodeType": "YulTypedName",
														"src": "40:6:6",
														"type": ""
													}
												],
												"src": "7:75:6"
											},
											{
												"body": {
													"nativeSrc": "177:28:6",
													"nodeType": "YulBlock",
													"src": "177:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:6",
																		"nodeType": "YulLiteral",
																		"src": "194:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:6",
																		"nodeType": "YulLiteral",
																		"src": "197:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:6"
																},
																"nativeSrc": "187:12:6",
																"nodeType": "YulFunctionCall",
																"src": "187:12:6"
															},
															"nativeSrc": "187:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:6"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:6"
											},
											{
												"body": {
													"nativeSrc": "300:28:6",
													"nodeType": "YulBlock",
													"src": "300:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:6",
																		"nodeType": "YulLiteral",
																		"src": "317:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:6",
																		"nodeType": "YulLiteral",
																		"src": "320:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:6"
																},
																"nativeSrc": "310:12:6",
																"nodeType": "YulFunctionCall",
																"src": "310:12:6"
															},
															"nativeSrc": "310:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:6"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:6"
											},
											{
												"body": {
													"nativeSrc": "379:81:6",
													"nodeType": "YulBlock",
													"src": "379:81:6",
													"statements": [
														{
															"nativeSrc": "389:65:6",
															"nodeType": "YulAssignment",
															"src": "389:65:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:6",
																		"nodeType": "YulLiteral",
																		"src": "411:42:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:6"
																},
																"nativeSrc": "400:54:6",
																"nodeType": "YulFunctionCall",
																"src": "400:54:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:6",
														"nodeType": "YulTypedName",
														"src": "361:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:6",
														"nodeType": "YulTypedName",
														"src": "371:7:6",
														"type": ""
													}
												],
												"src": "334:126:6"
											},
											{
												"body": {
													"nativeSrc": "511:51:6",
													"nodeType": "YulBlock",
													"src": "511:51:6",
													"statements": [
														{
															"nativeSrc": "521:35:6",
															"nodeType": "YulAssignment",
															"src": "521:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:6"
																},
																"nativeSrc": "532:24:6",
																"nodeType": "YulFunctionCall",
																"src": "532:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:6",
														"nodeType": "YulTypedName",
														"src": "493:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:6",
														"nodeType": "YulTypedName",
														"src": "503:7:6",
														"type": ""
													}
												],
												"src": "466:96:6"
											},
											{
												"body": {
													"nativeSrc": "611:79:6",
													"nodeType": "YulBlock",
													"src": "611:79:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:6",
																"nodeType": "YulBlock",
																"src": "668:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:6",
																					"nodeType": "YulLiteral",
																					"src": "677:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:6",
																					"nodeType": "YulLiteral",
																					"src": "680:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:6"
																			},
																			"nativeSrc": "670:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:6"
																		},
																		"nativeSrc": "670:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:6"
																				},
																				"nativeSrc": "641:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:6"
																		},
																		"nativeSrc": "631:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:6"
																},
																"nativeSrc": "624:43:6",
																"nodeType": "YulFunctionCall",
																"src": "624:43:6"
															},
															"nativeSrc": "621:63:6",
															"nodeType": "YulIf",
															"src": "621:63:6"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:6",
														"nodeType": "YulTypedName",
														"src": "604:5:6",
														"type": ""
													}
												],
												"src": "568:122:6"
											},
											{
												"body": {
													"nativeSrc": "748:87:6",
													"nodeType": "YulBlock",
													"src": "748:87:6",
													"statements": [
														{
															"nativeSrc": "758:29:6",
															"nodeType": "YulAssignment",
															"src": "758:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "780:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "767:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:6"
																},
																"nativeSrc": "767:20:6",
																"nodeType": "YulFunctionCall",
																"src": "767:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "758:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "823:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "796:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:6"
																},
																"nativeSrc": "796:33:6",
																"nodeType": "YulFunctionCall",
																"src": "796:33:6"
															},
															"nativeSrc": "796:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "796:33:6"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "696:139:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "726:6:6",
														"nodeType": "YulTypedName",
														"src": "726:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "734:3:6",
														"nodeType": "YulTypedName",
														"src": "734:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "742:5:6",
														"nodeType": "YulTypedName",
														"src": "742:5:6",
														"type": ""
													}
												],
												"src": "696:139:6"
											},
											{
												"body": {
													"nativeSrc": "907:263:6",
													"nodeType": "YulBlock",
													"src": "907:263:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "953:83:6",
																"nodeType": "YulBlock",
																"src": "953:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "955:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "955:77:6"
																			},
																			"nativeSrc": "955:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "955:79:6"
																		},
																		"nativeSrc": "955:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "955:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "928:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "928:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "937:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "937:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "924:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "924:3:6"
																		},
																		"nativeSrc": "924:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "924:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "949:2:6",
																		"nodeType": "YulLiteral",
																		"src": "949:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "920:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "920:3:6"
																},
																"nativeSrc": "920:32:6",
																"nodeType": "YulFunctionCall",
																"src": "920:32:6"
															},
															"nativeSrc": "917:119:6",
															"nodeType": "YulIf",
															"src": "917:119:6"
														},
														{
															"nativeSrc": "1046:117:6",
															"nodeType": "YulBlock",
															"src": "1046:117:6",
															"statements": [
																{
																	"nativeSrc": "1061:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1061:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1075:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1075:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1065:6:6",
																			"nodeType": "YulTypedName",
																			"src": "1065:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1090:63:6",
																	"nodeType": "YulAssignment",
																	"src": "1090:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1125:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "1125:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1136:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "1136:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1121:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "1121:3:6"
																				},
																				"nativeSrc": "1121:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1121:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1145:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1145:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1100:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "1100:20:6"
																		},
																		"nativeSrc": "1100:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1100:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1090:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "1090:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "841:329:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "877:9:6",
														"nodeType": "YulTypedName",
														"src": "877:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "888:7:6",
														"nodeType": "YulTypedName",
														"src": "888:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "900:6:6",
														"nodeType": "YulTypedName",
														"src": "900:6:6",
														"type": ""
													}
												],
												"src": "841:329:6"
											},
											{
												"body": {
													"nativeSrc": "1221:32:6",
													"nodeType": "YulBlock",
													"src": "1221:32:6",
													"statements": [
														{
															"nativeSrc": "1231:16:6",
															"nodeType": "YulAssignment",
															"src": "1231:16:6",
															"value": {
																"name": "value",
																"nativeSrc": "1242:5:6",
																"nodeType": "YulIdentifier",
																"src": "1242:5:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1231:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "1231:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1176:77:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1203:5:6",
														"nodeType": "YulTypedName",
														"src": "1203:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1213:7:6",
														"nodeType": "YulTypedName",
														"src": "1213:7:6",
														"type": ""
													}
												],
												"src": "1176:77:6"
											},
											{
												"body": {
													"nativeSrc": "1324:53:6",
													"nodeType": "YulBlock",
													"src": "1324:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1341:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "1341:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1364:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "1364:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "1346:17:6",
																			"nodeType": "YulIdentifier",
																			"src": "1346:17:6"
																		},
																		"nativeSrc": "1346:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1346:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1334:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1334:6:6"
																},
																"nativeSrc": "1334:37:6",
																"nodeType": "YulFunctionCall",
																"src": "1334:37:6"
															},
															"nativeSrc": "1334:37:6",
															"nodeType": "YulExpressionStatement",
															"src": "1334:37:6"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "1259:118:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1312:5:6",
														"nodeType": "YulTypedName",
														"src": "1312:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1319:3:6",
														"nodeType": "YulTypedName",
														"src": "1319:3:6",
														"type": ""
													}
												],
												"src": "1259:118:6"
											},
											{
												"body": {
													"nativeSrc": "1481:124:6",
													"nodeType": "YulBlock",
													"src": "1481:124:6",
													"statements": [
														{
															"nativeSrc": "1491:26:6",
															"nodeType": "YulAssignment",
															"src": "1491:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1503:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1503:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1514:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1514:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1499:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1499:3:6"
																},
																"nativeSrc": "1499:18:6",
																"nodeType": "YulFunctionCall",
																"src": "1499:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1491:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1491:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1571:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1571:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1584:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1584:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1595:1:6",
																				"nodeType": "YulLiteral",
																				"src": "1595:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1580:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1580:3:6"
																		},
																		"nativeSrc": "1580:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1580:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "1527:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "1527:43:6"
																},
																"nativeSrc": "1527:71:6",
																"nodeType": "YulFunctionCall",
																"src": "1527:71:6"
															},
															"nativeSrc": "1527:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "1527:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1383:222:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1453:9:6",
														"nodeType": "YulTypedName",
														"src": "1453:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1465:6:6",
														"nodeType": "YulTypedName",
														"src": "1465:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1476:4:6",
														"nodeType": "YulTypedName",
														"src": "1476:4:6",
														"type": ""
													}
												],
												"src": "1383:222:6"
											},
											{
												"body": {
													"nativeSrc": "1654:79:6",
													"nodeType": "YulBlock",
													"src": "1654:79:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "1711:16:6",
																"nodeType": "YulBlock",
																"src": "1711:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1720:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1720:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1723:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1723:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1713:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1713:6:6"
																			},
																			"nativeSrc": "1713:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1713:12:6"
																		},
																		"nativeSrc": "1713:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1713:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1677:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "1677:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1702:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "1702:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1684:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "1684:17:6"
																				},
																				"nativeSrc": "1684:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1684:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1674:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "1674:2:6"
																		},
																		"nativeSrc": "1674:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1674:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1667:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1667:6:6"
																},
																"nativeSrc": "1667:43:6",
																"nodeType": "YulFunctionCall",
																"src": "1667:43:6"
															},
															"nativeSrc": "1664:63:6",
															"nodeType": "YulIf",
															"src": "1664:63:6"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "1611:122:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1647:5:6",
														"nodeType": "YulTypedName",
														"src": "1647:5:6",
														"type": ""
													}
												],
												"src": "1611:122:6"
											},
											{
												"body": {
													"nativeSrc": "1791:87:6",
													"nodeType": "YulBlock",
													"src": "1791:87:6",
													"statements": [
														{
															"nativeSrc": "1801:29:6",
															"nodeType": "YulAssignment",
															"src": "1801:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1823:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1823:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1810:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "1810:12:6"
																},
																"nativeSrc": "1810:20:6",
																"nodeType": "YulFunctionCall",
																"src": "1810:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1801:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1801:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1866:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "1866:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "1839:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "1839:26:6"
																},
																"nativeSrc": "1839:33:6",
																"nodeType": "YulFunctionCall",
																"src": "1839:33:6"
															},
															"nativeSrc": "1839:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "1839:33:6"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "1739:139:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1769:6:6",
														"nodeType": "YulTypedName",
														"src": "1769:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1777:3:6",
														"nodeType": "YulTypedName",
														"src": "1777:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1785:5:6",
														"nodeType": "YulTypedName",
														"src": "1785:5:6",
														"type": ""
													}
												],
												"src": "1739:139:6"
											},
											{
												"body": {
													"nativeSrc": "1973:28:6",
													"nodeType": "YulBlock",
													"src": "1973:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1990:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1990:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1993:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1993:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1983:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1983:6:6"
																},
																"nativeSrc": "1983:12:6",
																"nodeType": "YulFunctionCall",
																"src": "1983:12:6"
															},
															"nativeSrc": "1983:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "1983:12:6"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "1884:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "1884:117:6"
											},
											{
												"body": {
													"nativeSrc": "2096:28:6",
													"nodeType": "YulBlock",
													"src": "2096:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2113:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2113:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2116:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2116:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2106:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2106:6:6"
																},
																"nativeSrc": "2106:12:6",
																"nodeType": "YulFunctionCall",
																"src": "2106:12:6"
															},
															"nativeSrc": "2106:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "2106:12:6"
														}
													]
												},
												"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
												"nativeSrc": "2007:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "2007:117:6"
											},
											{
												"body": {
													"nativeSrc": "2219:28:6",
													"nodeType": "YulBlock",
													"src": "2219:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2236:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2236:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2239:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2239:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2229:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2229:6:6"
																},
																"nativeSrc": "2229:12:6",
																"nodeType": "YulFunctionCall",
																"src": "2229:12:6"
															},
															"nativeSrc": "2229:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "2229:12:6"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nativeSrc": "2130:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "2130:117:6"
											},
											{
												"body": {
													"nativeSrc": "2340:478:6",
													"nodeType": "YulBlock",
													"src": "2340:478:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "2389:83:6",
																"nodeType": "YulBlock",
																"src": "2389:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "2391:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "2391:77:6"
																			},
																			"nativeSrc": "2391:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2391:79:6"
																		},
																		"nativeSrc": "2391:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2391:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "2368:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "2368:6:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2376:4:6",
																						"nodeType": "YulLiteral",
																						"src": "2376:4:6",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2364:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "2364:3:6"
																				},
																				"nativeSrc": "2364:17:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2364:17:6"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "2383:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "2383:3:6"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "2360:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2360:3:6"
																		},
																		"nativeSrc": "2360:27:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2360:27:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2353:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2353:6:6"
																},
																"nativeSrc": "2353:35:6",
																"nodeType": "YulFunctionCall",
																"src": "2353:35:6"
															},
															"nativeSrc": "2350:122:6",
															"nodeType": "YulIf",
															"src": "2350:122:6"
														},
														{
															"nativeSrc": "2481:30:6",
															"nodeType": "YulAssignment",
															"src": "2481:30:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2504:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2504:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2491:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "2491:12:6"
																},
																"nativeSrc": "2491:20:6",
																"nodeType": "YulFunctionCall",
																"src": "2491:20:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "2481:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2481:6:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2554:83:6",
																"nodeType": "YulBlock",
																"src": "2554:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
																				"nativeSrc": "2556:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "2556:77:6"
																			},
																			"nativeSrc": "2556:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2556:79:6"
																		},
																		"nativeSrc": "2556:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2556:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "2526:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2526:6:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2534:18:6",
																		"nodeType": "YulLiteral",
																		"src": "2534:18:6",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2523:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "2523:2:6"
																},
																"nativeSrc": "2523:30:6",
																"nodeType": "YulFunctionCall",
																"src": "2523:30:6"
															},
															"nativeSrc": "2520:117:6",
															"nodeType": "YulIf",
															"src": "2520:117:6"
														},
														{
															"nativeSrc": "2646:29:6",
															"nodeType": "YulAssignment",
															"src": "2646:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2662:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2662:6:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2670:4:6",
																		"nodeType": "YulLiteral",
																		"src": "2670:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2658:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2658:3:6"
																},
																"nativeSrc": "2658:17:6",
																"nodeType": "YulFunctionCall",
																"src": "2658:17:6"
															},
															"variableNames": [
																{
																	"name": "arrayPos",
																	"nativeSrc": "2646:8:6",
																	"nodeType": "YulIdentifier",
																	"src": "2646:8:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2729:83:6",
																"nodeType": "YulBlock",
																"src": "2729:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nativeSrc": "2731:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "2731:77:6"
																			},
																			"nativeSrc": "2731:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2731:79:6"
																		},
																		"nativeSrc": "2731:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2731:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "arrayPos",
																				"nativeSrc": "2694:8:6",
																				"nodeType": "YulIdentifier",
																				"src": "2694:8:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nativeSrc": "2708:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "2708:6:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2716:4:6",
																						"nodeType": "YulLiteral",
																						"src": "2716:4:6",
																						"type": "",
																						"value": "0x01"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "2704:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "2704:3:6"
																				},
																				"nativeSrc": "2704:17:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2704:17:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2690:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2690:3:6"
																		},
																		"nativeSrc": "2690:32:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2690:32:6"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2724:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2724:3:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2687:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "2687:2:6"
																},
																"nativeSrc": "2687:41:6",
																"nodeType": "YulFunctionCall",
																"src": "2687:41:6"
															},
															"nativeSrc": "2684:128:6",
															"nodeType": "YulIf",
															"src": "2684:128:6"
														}
													]
												},
												"name": "abi_decode_t_bytes_calldata_ptr",
												"nativeSrc": "2266:552:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2307:6:6",
														"nodeType": "YulTypedName",
														"src": "2307:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2315:3:6",
														"nodeType": "YulTypedName",
														"src": "2315:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "arrayPos",
														"nativeSrc": "2323:8:6",
														"nodeType": "YulTypedName",
														"src": "2323:8:6",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "2333:6:6",
														"nodeType": "YulTypedName",
														"src": "2333:6:6",
														"type": ""
													}
												],
												"src": "2266:552:6"
											},
											{
												"body": {
													"nativeSrc": "2960:827:6",
													"nodeType": "YulBlock",
													"src": "2960:827:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "3007:83:6",
																"nodeType": "YulBlock",
																"src": "3007:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3009:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "3009:77:6"
																			},
																			"nativeSrc": "3009:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3009:79:6"
																		},
																		"nativeSrc": "3009:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "3009:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2981:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "2981:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2990:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2990:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2977:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2977:3:6"
																		},
																		"nativeSrc": "2977:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2977:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3002:3:6",
																		"nodeType": "YulLiteral",
																		"src": "3002:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2973:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2973:3:6"
																},
																"nativeSrc": "2973:33:6",
																"nodeType": "YulFunctionCall",
																"src": "2973:33:6"
															},
															"nativeSrc": "2970:120:6",
															"nodeType": "YulIf",
															"src": "2970:120:6"
														},
														{
															"nativeSrc": "3100:117:6",
															"nodeType": "YulBlock",
															"src": "3100:117:6",
															"statements": [
																{
																	"nativeSrc": "3115:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3115:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3129:1:6",
																		"nodeType": "YulLiteral",
																		"src": "3129:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3119:6:6",
																			"nodeType": "YulTypedName",
																			"src": "3119:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3144:63:6",
																	"nodeType": "YulAssignment",
																	"src": "3144:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3179:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "3179:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3190:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "3190:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3175:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "3175:3:6"
																				},
																				"nativeSrc": "3175:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3175:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3199:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "3199:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3154:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "3154:20:6"
																		},
																		"nativeSrc": "3154:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3154:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3144:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "3144:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3227:118:6",
															"nodeType": "YulBlock",
															"src": "3227:118:6",
															"statements": [
																{
																	"nativeSrc": "3242:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3242:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3256:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3256:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3246:6:6",
																			"nodeType": "YulTypedName",
																			"src": "3246:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3272:63:6",
																	"nodeType": "YulAssignment",
																	"src": "3272:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3307:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "3307:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3318:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "3318:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3303:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "3303:3:6"
																				},
																				"nativeSrc": "3303:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3303:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3327:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "3327:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3282:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "3282:20:6"
																		},
																		"nativeSrc": "3282:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3282:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3272:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "3272:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3355:118:6",
															"nodeType": "YulBlock",
															"src": "3355:118:6",
															"statements": [
																{
																	"nativeSrc": "3370:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3370:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3384:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3384:2:6",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3374:6:6",
																			"nodeType": "YulTypedName",
																			"src": "3374:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3400:63:6",
																	"nodeType": "YulAssignment",
																	"src": "3400:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3435:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "3435:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3446:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "3446:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3431:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "3431:3:6"
																				},
																				"nativeSrc": "3431:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3431:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3455:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "3455:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3410:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "3410:20:6"
																		},
																		"nativeSrc": "3410:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3410:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "3400:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "3400:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3483:297:6",
															"nodeType": "YulBlock",
															"src": "3483:297:6",
															"statements": [
																{
																	"nativeSrc": "3498:46:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3498:46:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3529:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "3529:9:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3540:2:6",
																						"nodeType": "YulLiteral",
																						"src": "3540:2:6",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3525:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "3525:3:6"
																				},
																				"nativeSrc": "3525:18:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3525:18:6"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "3512:12:6",
																			"nodeType": "YulIdentifier",
																			"src": "3512:12:6"
																		},
																		"nativeSrc": "3512:32:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3512:32:6"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3502:6:6",
																			"nodeType": "YulTypedName",
																			"src": "3502:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "3591:83:6",
																		"nodeType": "YulBlock",
																		"src": "3591:83:6",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "3593:77:6",
																						"nodeType": "YulIdentifier",
																						"src": "3593:77:6"
																					},
																					"nativeSrc": "3593:79:6",
																					"nodeType": "YulFunctionCall",
																					"src": "3593:79:6"
																				},
																				"nativeSrc": "3593:79:6",
																				"nodeType": "YulExpressionStatement",
																				"src": "3593:79:6"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "3563:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "3563:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3571:18:6",
																				"nodeType": "YulLiteral",
																				"src": "3571:18:6",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "3560:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "3560:2:6"
																		},
																		"nativeSrc": "3560:30:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3560:30:6"
																	},
																	"nativeSrc": "3557:117:6",
																	"nodeType": "YulIf",
																	"src": "3557:117:6"
																},
																{
																	"nativeSrc": "3688:82:6",
																	"nodeType": "YulAssignment",
																	"src": "3688:82:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3742:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "3742:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3753:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "3753:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3738:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "3738:3:6"
																				},
																				"nativeSrc": "3738:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3738:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3762:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "3762:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_calldata_ptr",
																			"nativeSrc": "3706:31:6",
																			"nodeType": "YulIdentifier",
																			"src": "3706:31:6"
																		},
																		"nativeSrc": "3706:64:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3706:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "3688:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "3688:6:6"
																		},
																		{
																			"name": "value4",
																			"nativeSrc": "3696:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "3696:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_calldata_ptr",
												"nativeSrc": "2824:963:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2898:9:6",
														"nodeType": "YulTypedName",
														"src": "2898:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2909:7:6",
														"nodeType": "YulTypedName",
														"src": "2909:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2921:6:6",
														"nodeType": "YulTypedName",
														"src": "2921:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2929:6:6",
														"nodeType": "YulTypedName",
														"src": "2929:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "2937:6:6",
														"nodeType": "YulTypedName",
														"src": "2937:6:6",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "2945:6:6",
														"nodeType": "YulTypedName",
														"src": "2945:6:6",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "2953:6:6",
														"nodeType": "YulTypedName",
														"src": "2953:6:6",
														"type": ""
													}
												],
												"src": "2824:963:6"
											},
											{
												"body": {
													"nativeSrc": "3837:105:6",
													"nodeType": "YulBlock",
													"src": "3837:105:6",
													"statements": [
														{
															"nativeSrc": "3847:89:6",
															"nodeType": "YulAssignment",
															"src": "3847:89:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3862:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "3862:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3869:66:6",
																		"nodeType": "YulLiteral",
																		"src": "3869:66:6",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3858:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3858:3:6"
																},
																"nativeSrc": "3858:78:6",
																"nodeType": "YulFunctionCall",
																"src": "3858:78:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3847:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "3847:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nativeSrc": "3793:149:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3819:5:6",
														"nodeType": "YulTypedName",
														"src": "3819:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3829:7:6",
														"nodeType": "YulTypedName",
														"src": "3829:7:6",
														"type": ""
													}
												],
												"src": "3793:149:6"
											},
											{
												"body": {
													"nativeSrc": "4011:52:6",
													"nodeType": "YulBlock",
													"src": "4011:52:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4028:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "4028:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4050:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "4050:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes4",
																			"nativeSrc": "4033:16:6",
																			"nodeType": "YulIdentifier",
																			"src": "4033:16:6"
																		},
																		"nativeSrc": "4033:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4033:23:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4021:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4021:6:6"
																},
																"nativeSrc": "4021:36:6",
																"nodeType": "YulFunctionCall",
																"src": "4021:36:6"
															},
															"nativeSrc": "4021:36:6",
															"nodeType": "YulExpressionStatement",
															"src": "4021:36:6"
														}
													]
												},
												"name": "abi_encode_t_bytes4_to_t_bytes4_fromStack",
												"nativeSrc": "3948:115:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3999:5:6",
														"nodeType": "YulTypedName",
														"src": "3999:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4006:3:6",
														"nodeType": "YulTypedName",
														"src": "4006:3:6",
														"type": ""
													}
												],
												"src": "3948:115:6"
											},
											{
												"body": {
													"nativeSrc": "4165:122:6",
													"nodeType": "YulBlock",
													"src": "4165:122:6",
													"statements": [
														{
															"nativeSrc": "4175:26:6",
															"nodeType": "YulAssignment",
															"src": "4175:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4187:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "4187:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4198:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4198:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4183:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4183:3:6"
																},
																"nativeSrc": "4183:18:6",
																"nodeType": "YulFunctionCall",
																"src": "4183:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4175:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "4175:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4253:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "4253:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4266:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4266:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4277:1:6",
																				"nodeType": "YulLiteral",
																				"src": "4277:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4262:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4262:3:6"
																		},
																		"nativeSrc": "4262:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4262:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes4_to_t_bytes4_fromStack",
																	"nativeSrc": "4211:41:6",
																	"nodeType": "YulIdentifier",
																	"src": "4211:41:6"
																},
																"nativeSrc": "4211:69:6",
																"nodeType": "YulFunctionCall",
																"src": "4211:69:6"
															},
															"nativeSrc": "4211:69:6",
															"nodeType": "YulExpressionStatement",
															"src": "4211:69:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed",
												"nativeSrc": "4069:218:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4137:9:6",
														"nodeType": "YulTypedName",
														"src": "4137:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4149:6:6",
														"nodeType": "YulTypedName",
														"src": "4149:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4160:4:6",
														"nodeType": "YulTypedName",
														"src": "4160:4:6",
														"type": ""
													}
												],
												"src": "4069:218:6"
											},
											{
												"body": {
													"nativeSrc": "4359:263:6",
													"nodeType": "YulBlock",
													"src": "4359:263:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "4405:83:6",
																"nodeType": "YulBlock",
																"src": "4405:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4407:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "4407:77:6"
																			},
																			"nativeSrc": "4407:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4407:79:6"
																		},
																		"nativeSrc": "4407:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "4407:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4380:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "4380:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4389:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4389:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4376:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4376:3:6"
																		},
																		"nativeSrc": "4376:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4376:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4401:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4401:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4372:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4372:3:6"
																},
																"nativeSrc": "4372:32:6",
																"nodeType": "YulFunctionCall",
																"src": "4372:32:6"
															},
															"nativeSrc": "4369:119:6",
															"nodeType": "YulIf",
															"src": "4369:119:6"
														},
														{
															"nativeSrc": "4498:117:6",
															"nodeType": "YulBlock",
															"src": "4498:117:6",
															"statements": [
																{
																	"nativeSrc": "4513:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4513:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4527:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4527:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4517:6:6",
																			"nodeType": "YulTypedName",
																			"src": "4517:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4542:63:6",
																	"nodeType": "YulAssignment",
																	"src": "4542:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4577:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "4577:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4588:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "4588:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4573:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4573:3:6"
																				},
																				"nativeSrc": "4573:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4573:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4597:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "4597:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4552:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "4552:20:6"
																		},
																		"nativeSrc": "4552:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4552:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4542:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "4542:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "4293:329:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4329:9:6",
														"nodeType": "YulTypedName",
														"src": "4329:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4340:7:6",
														"nodeType": "YulTypedName",
														"src": "4340:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4352:6:6",
														"nodeType": "YulTypedName",
														"src": "4352:6:6",
														"type": ""
													}
												],
												"src": "4293:329:6"
											},
											{
												"body": {
													"nativeSrc": "4660:28:6",
													"nodeType": "YulBlock",
													"src": "4660:28:6",
													"statements": [
														{
															"nativeSrc": "4670:12:6",
															"nodeType": "YulAssignment",
															"src": "4670:12:6",
															"value": {
																"name": "value",
																"nativeSrc": "4677:5:6",
																"nodeType": "YulIdentifier",
																"src": "4677:5:6"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "4670:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4670:3:6"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "4628:60:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4646:5:6",
														"nodeType": "YulTypedName",
														"src": "4646:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "4656:3:6",
														"nodeType": "YulTypedName",
														"src": "4656:3:6",
														"type": ""
													}
												],
												"src": "4628:60:6"
											},
											{
												"body": {
													"nativeSrc": "4754:82:6",
													"nodeType": "YulBlock",
													"src": "4754:82:6",
													"statements": [
														{
															"nativeSrc": "4764:66:6",
															"nodeType": "YulAssignment",
															"src": "4764:66:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4822:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "4822:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "4804:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "4804:17:6"
																				},
																				"nativeSrc": "4804:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4804:24:6"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "4795:8:6",
																			"nodeType": "YulIdentifier",
																			"src": "4795:8:6"
																		},
																		"nativeSrc": "4795:34:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4795:34:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "4777:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "4777:17:6"
																},
																"nativeSrc": "4777:53:6",
																"nodeType": "YulFunctionCall",
																"src": "4777:53:6"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "4764:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "4764:9:6"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "4694:142:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4734:5:6",
														"nodeType": "YulTypedName",
														"src": "4734:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "4744:9:6",
														"nodeType": "YulTypedName",
														"src": "4744:9:6",
														"type": ""
													}
												],
												"src": "4694:142:6"
											},
											{
												"body": {
													"nativeSrc": "4902:66:6",
													"nodeType": "YulBlock",
													"src": "4902:66:6",
													"statements": [
														{
															"nativeSrc": "4912:50:6",
															"nodeType": "YulAssignment",
															"src": "4912:50:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4956:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "4956:5:6"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "4925:30:6",
																	"nodeType": "YulIdentifier",
																	"src": "4925:30:6"
																},
																"nativeSrc": "4925:37:6",
																"nodeType": "YulFunctionCall",
																"src": "4925:37:6"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "4912:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "4912:9:6"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "4842:126:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4882:5:6",
														"nodeType": "YulTypedName",
														"src": "4882:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "4892:9:6",
														"nodeType": "YulTypedName",
														"src": "4892:9:6",
														"type": ""
													}
												],
												"src": "4842:126:6"
											},
											{
												"body": {
													"nativeSrc": "5049:66:6",
													"nodeType": "YulBlock",
													"src": "5049:66:6",
													"statements": [
														{
															"nativeSrc": "5059:50:6",
															"nodeType": "YulAssignment",
															"src": "5059:50:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5103:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "5103:5:6"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "5072:30:6",
																	"nodeType": "YulIdentifier",
																	"src": "5072:30:6"
																},
																"nativeSrc": "5072:37:6",
																"nodeType": "YulFunctionCall",
																"src": "5072:37:6"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "5059:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "5059:9:6"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC721_$457_to_t_address",
												"nativeSrc": "4974:141:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5029:5:6",
														"nodeType": "YulTypedName",
														"src": "5029:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "5039:9:6",
														"nodeType": "YulTypedName",
														"src": "5039:9:6",
														"type": ""
													}
												],
												"src": "4974:141:6"
											},
											{
												"body": {
													"nativeSrc": "5201:81:6",
													"nodeType": "YulBlock",
													"src": "5201:81:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5218:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "5218:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5269:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "5269:5:6"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC721_$457_to_t_address",
																			"nativeSrc": "5223:45:6",
																			"nodeType": "YulIdentifier",
																			"src": "5223:45:6"
																		},
																		"nativeSrc": "5223:52:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5223:52:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5211:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5211:6:6"
																},
																"nativeSrc": "5211:65:6",
																"nodeType": "YulFunctionCall",
																"src": "5211:65:6"
															},
															"nativeSrc": "5211:65:6",
															"nodeType": "YulExpressionStatement",
															"src": "5211:65:6"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC721_$457_to_t_address_fromStack",
												"nativeSrc": "5121:161:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5189:5:6",
														"nodeType": "YulTypedName",
														"src": "5189:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5196:3:6",
														"nodeType": "YulTypedName",
														"src": "5196:3:6",
														"type": ""
													}
												],
												"src": "5121:161:6"
											},
											{
												"body": {
													"nativeSrc": "5401:139:6",
													"nodeType": "YulBlock",
													"src": "5401:139:6",
													"statements": [
														{
															"nativeSrc": "5411:26:6",
															"nodeType": "YulAssignment",
															"src": "5411:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5423:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "5423:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5434:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5434:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5419:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5419:3:6"
																},
																"nativeSrc": "5419:18:6",
																"nodeType": "YulFunctionCall",
																"src": "5419:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5411:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "5411:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5506:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "5506:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5519:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5519:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5530:1:6",
																				"nodeType": "YulLiteral",
																				"src": "5530:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5515:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5515:3:6"
																		},
																		"nativeSrc": "5515:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5515:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC721_$457_to_t_address_fromStack",
																	"nativeSrc": "5447:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "5447:58:6"
																},
																"nativeSrc": "5447:86:6",
																"nodeType": "YulFunctionCall",
																"src": "5447:86:6"
															},
															"nativeSrc": "5447:86:6",
															"nodeType": "YulExpressionStatement",
															"src": "5447:86:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC721_$457__to_t_address__fromStack_reversed",
												"nativeSrc": "5288:252:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5373:9:6",
														"nodeType": "YulTypedName",
														"src": "5373:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5385:6:6",
														"nodeType": "YulTypedName",
														"src": "5385:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5396:4:6",
														"nodeType": "YulTypedName",
														"src": "5396:4:6",
														"type": ""
													}
												],
												"src": "5288:252:6"
											},
											{
												"body": {
													"nativeSrc": "5620:66:6",
													"nodeType": "YulBlock",
													"src": "5620:66:6",
													"statements": [
														{
															"nativeSrc": "5630:50:6",
															"nodeType": "YulAssignment",
															"src": "5630:50:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5674:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "5674:5:6"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "5643:30:6",
																	"nodeType": "YulIdentifier",
																	"src": "5643:30:6"
																},
																"nativeSrc": "5643:37:6",
																"nodeType": "YulFunctionCall",
																"src": "5643:37:6"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "5630:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "5630:9:6"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$341_to_t_address",
												"nativeSrc": "5546:140:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5600:5:6",
														"nodeType": "YulTypedName",
														"src": "5600:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "5610:9:6",
														"nodeType": "YulTypedName",
														"src": "5610:9:6",
														"type": ""
													}
												],
												"src": "5546:140:6"
											},
											{
												"body": {
													"nativeSrc": "5771:80:6",
													"nodeType": "YulBlock",
													"src": "5771:80:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5788:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "5788:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5838:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "5838:5:6"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$341_to_t_address",
																			"nativeSrc": "5793:44:6",
																			"nodeType": "YulIdentifier",
																			"src": "5793:44:6"
																		},
																		"nativeSrc": "5793:51:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5793:51:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5781:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5781:6:6"
																},
																"nativeSrc": "5781:64:6",
																"nodeType": "YulFunctionCall",
																"src": "5781:64:6"
															},
															"nativeSrc": "5781:64:6",
															"nodeType": "YulExpressionStatement",
															"src": "5781:64:6"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$341_to_t_address_fromStack",
												"nativeSrc": "5692:159:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5759:5:6",
														"nodeType": "YulTypedName",
														"src": "5759:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5766:3:6",
														"nodeType": "YulTypedName",
														"src": "5766:3:6",
														"type": ""
													}
												],
												"src": "5692:159:6"
											},
											{
												"body": {
													"nativeSrc": "5969:138:6",
													"nodeType": "YulBlock",
													"src": "5969:138:6",
													"statements": [
														{
															"nativeSrc": "5979:26:6",
															"nodeType": "YulAssignment",
															"src": "5979:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5991:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "5991:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6002:2:6",
																		"nodeType": "YulLiteral",
																		"src": "6002:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5987:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5987:3:6"
																},
																"nativeSrc": "5987:18:6",
																"nodeType": "YulFunctionCall",
																"src": "5987:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5979:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "5979:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6073:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "6073:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6086:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "6086:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6097:1:6",
																				"nodeType": "YulLiteral",
																				"src": "6097:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6082:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6082:3:6"
																		},
																		"nativeSrc": "6082:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6082:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$341_to_t_address_fromStack",
																	"nativeSrc": "6015:57:6",
																	"nodeType": "YulIdentifier",
																	"src": "6015:57:6"
																},
																"nativeSrc": "6015:85:6",
																"nodeType": "YulFunctionCall",
																"src": "6015:85:6"
															},
															"nativeSrc": "6015:85:6",
															"nodeType": "YulExpressionStatement",
															"src": "6015:85:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$341__to_t_address__fromStack_reversed",
												"nativeSrc": "5857:250:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5941:9:6",
														"nodeType": "YulTypedName",
														"src": "5941:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5953:6:6",
														"nodeType": "YulTypedName",
														"src": "5953:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5964:4:6",
														"nodeType": "YulTypedName",
														"src": "5964:4:6",
														"type": ""
													}
												],
												"src": "5857:250:6"
											},
											{
												"body": {
													"nativeSrc": "6178:53:6",
													"nodeType": "YulBlock",
													"src": "6178:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6195:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "6195:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6218:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "6218:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "6200:17:6",
																			"nodeType": "YulIdentifier",
																			"src": "6200:17:6"
																		},
																		"nativeSrc": "6200:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6200:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6188:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6188:6:6"
																},
																"nativeSrc": "6188:37:6",
																"nodeType": "YulFunctionCall",
																"src": "6188:37:6"
															},
															"nativeSrc": "6188:37:6",
															"nodeType": "YulExpressionStatement",
															"src": "6188:37:6"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "6113:118:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6166:5:6",
														"nodeType": "YulTypedName",
														"src": "6166:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6173:3:6",
														"nodeType": "YulTypedName",
														"src": "6173:3:6",
														"type": ""
													}
												],
												"src": "6113:118:6"
											},
											{
												"body": {
													"nativeSrc": "6335:124:6",
													"nodeType": "YulBlock",
													"src": "6335:124:6",
													"statements": [
														{
															"nativeSrc": "6345:26:6",
															"nodeType": "YulAssignment",
															"src": "6345:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6357:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "6357:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6368:2:6",
																		"nodeType": "YulLiteral",
																		"src": "6368:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6353:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6353:3:6"
																},
																"nativeSrc": "6353:18:6",
																"nodeType": "YulFunctionCall",
																"src": "6353:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6345:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "6345:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6425:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "6425:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6438:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "6438:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6449:1:6",
																				"nodeType": "YulLiteral",
																				"src": "6449:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6434:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6434:3:6"
																		},
																		"nativeSrc": "6434:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6434:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6381:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "6381:43:6"
																},
																"nativeSrc": "6381:71:6",
																"nodeType": "YulFunctionCall",
																"src": "6381:71:6"
															},
															"nativeSrc": "6381:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "6381:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "6237:222:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6307:9:6",
														"nodeType": "YulTypedName",
														"src": "6307:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6319:6:6",
														"nodeType": "YulTypedName",
														"src": "6319:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6330:4:6",
														"nodeType": "YulTypedName",
														"src": "6330:4:6",
														"type": ""
													}
												],
												"src": "6237:222:6"
											},
											{
												"body": {
													"nativeSrc": "6493:152:6",
													"nodeType": "YulBlock",
													"src": "6493:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6510:1:6",
																		"nodeType": "YulLiteral",
																		"src": "6510:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6513:77:6",
																		"nodeType": "YulLiteral",
																		"src": "6513:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6503:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6503:6:6"
																},
																"nativeSrc": "6503:88:6",
																"nodeType": "YulFunctionCall",
																"src": "6503:88:6"
															},
															"nativeSrc": "6503:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "6503:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6607:1:6",
																		"nodeType": "YulLiteral",
																		"src": "6607:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6610:4:6",
																		"nodeType": "YulLiteral",
																		"src": "6610:4:6",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6600:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6600:6:6"
																},
																"nativeSrc": "6600:15:6",
																"nodeType": "YulFunctionCall",
																"src": "6600:15:6"
															},
															"nativeSrc": "6600:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "6600:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6631:1:6",
																		"nodeType": "YulLiteral",
																		"src": "6631:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6634:4:6",
																		"nodeType": "YulLiteral",
																		"src": "6634:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6624:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6624:6:6"
																},
																"nativeSrc": "6624:15:6",
																"nodeType": "YulFunctionCall",
																"src": "6624:15:6"
															},
															"nativeSrc": "6624:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "6624:15:6"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "6465:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "6465:180:6"
											},
											{
												"body": {
													"nativeSrc": "6696:149:6",
													"nodeType": "YulBlock",
													"src": "6696:149:6",
													"statements": [
														{
															"nativeSrc": "6706:25:6",
															"nodeType": "YulAssignment",
															"src": "6706:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6729:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "6729:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "6711:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "6711:17:6"
																},
																"nativeSrc": "6711:20:6",
																"nodeType": "YulFunctionCall",
																"src": "6711:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "6706:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "6706:1:6"
																}
															]
														},
														{
															"nativeSrc": "6740:25:6",
															"nodeType": "YulAssignment",
															"src": "6740:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "6763:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "6763:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "6745:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "6745:17:6"
																},
																"nativeSrc": "6745:20:6",
																"nodeType": "YulFunctionCall",
																"src": "6745:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "6740:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "6740:1:6"
																}
															]
														},
														{
															"nativeSrc": "6774:17:6",
															"nodeType": "YulAssignment",
															"src": "6774:17:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6786:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "6786:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "6789:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "6789:1:6"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "6782:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6782:3:6"
																},
																"nativeSrc": "6782:9:6",
																"nodeType": "YulFunctionCall",
																"src": "6782:9:6"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "6774:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "6774:4:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6816:22:6",
																"nodeType": "YulBlock",
																"src": "6816:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "6818:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "6818:16:6"
																			},
																			"nativeSrc": "6818:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "6818:18:6"
																		},
																		"nativeSrc": "6818:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "6818:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "6807:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "6807:4:6"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "6813:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "6813:1:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6804:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "6804:2:6"
																},
																"nativeSrc": "6804:11:6",
																"nodeType": "YulFunctionCall",
																"src": "6804:11:6"
															},
															"nativeSrc": "6801:37:6",
															"nodeType": "YulIf",
															"src": "6801:37:6"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "6651:194:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "6682:1:6",
														"nodeType": "YulTypedName",
														"src": "6682:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "6685:1:6",
														"nodeType": "YulTypedName",
														"src": "6685:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "6691:4:6",
														"nodeType": "YulTypedName",
														"src": "6691:4:6",
														"type": ""
													}
												],
												"src": "6651:194:6"
											},
											{
												"body": {
													"nativeSrc": "6899:362:6",
													"nodeType": "YulBlock",
													"src": "6899:362:6",
													"statements": [
														{
															"nativeSrc": "6909:25:6",
															"nodeType": "YulAssignment",
															"src": "6909:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6932:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "6932:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "6914:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "6914:17:6"
																},
																"nativeSrc": "6914:20:6",
																"nodeType": "YulFunctionCall",
																"src": "6914:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "6909:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "6909:1:6"
																}
															]
														},
														{
															"nativeSrc": "6943:25:6",
															"nodeType": "YulAssignment",
															"src": "6943:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "6966:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "6966:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "6948:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "6948:17:6"
																},
																"nativeSrc": "6948:20:6",
																"nodeType": "YulFunctionCall",
																"src": "6948:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "6943:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "6943:1:6"
																}
															]
														},
														{
															"nativeSrc": "6977:28:6",
															"nodeType": "YulVariableDeclaration",
															"src": "6977:28:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7000:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "7000:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "7003:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "7003:1:6"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "6996:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6996:3:6"
																},
																"nativeSrc": "6996:9:6",
																"nodeType": "YulFunctionCall",
																"src": "6996:9:6"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "6981:11:6",
																	"nodeType": "YulTypedName",
																	"src": "6981:11:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7014:41:6",
															"nodeType": "YulAssignment",
															"src": "7014:41:6",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "7043:11:6",
																		"nodeType": "YulIdentifier",
																		"src": "7043:11:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7025:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "7025:17:6"
																},
																"nativeSrc": "7025:30:6",
																"nodeType": "YulFunctionCall",
																"src": "7025:30:6"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "7014:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "7014:7:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7232:22:6",
																"nodeType": "YulBlock",
																"src": "7232:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "7234:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "7234:16:6"
																			},
																			"nativeSrc": "7234:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "7234:18:6"
																		},
																		"nativeSrc": "7234:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "7234:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "7165:1:6",
																						"nodeType": "YulIdentifier",
																						"src": "7165:1:6"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "7158:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "7158:6:6"
																				},
																				"nativeSrc": "7158:9:6",
																				"nodeType": "YulFunctionCall",
																				"src": "7158:9:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "7188:1:6",
																						"nodeType": "YulIdentifier",
																						"src": "7188:1:6"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "7195:7:6",
																								"nodeType": "YulIdentifier",
																								"src": "7195:7:6"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "7204:1:6",
																								"nodeType": "YulIdentifier",
																								"src": "7204:1:6"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "7191:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "7191:3:6"
																						},
																						"nativeSrc": "7191:15:6",
																						"nodeType": "YulFunctionCall",
																						"src": "7191:15:6"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "7185:2:6",
																					"nodeType": "YulIdentifier",
																					"src": "7185:2:6"
																				},
																				"nativeSrc": "7185:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "7185:22:6"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "7138:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "7138:2:6"
																		},
																		"nativeSrc": "7138:83:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7138:83:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7118:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7118:6:6"
																},
																"nativeSrc": "7118:113:6",
																"nodeType": "YulFunctionCall",
																"src": "7118:113:6"
															},
															"nativeSrc": "7115:139:6",
															"nodeType": "YulIf",
															"src": "7115:139:6"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "6851:410:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "6882:1:6",
														"nodeType": "YulTypedName",
														"src": "6882:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "6885:1:6",
														"nodeType": "YulTypedName",
														"src": "6885:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "6891:7:6",
														"nodeType": "YulTypedName",
														"src": "6891:7:6",
														"type": ""
													}
												],
												"src": "6851:410:6"
											},
											{
												"body": {
													"nativeSrc": "7295:152:6",
													"nodeType": "YulBlock",
													"src": "7295:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7312:1:6",
																		"nodeType": "YulLiteral",
																		"src": "7312:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7315:77:6",
																		"nodeType": "YulLiteral",
																		"src": "7315:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7305:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7305:6:6"
																},
																"nativeSrc": "7305:88:6",
																"nodeType": "YulFunctionCall",
																"src": "7305:88:6"
															},
															"nativeSrc": "7305:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "7305:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7409:1:6",
																		"nodeType": "YulLiteral",
																		"src": "7409:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7412:4:6",
																		"nodeType": "YulLiteral",
																		"src": "7412:4:6",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7402:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7402:6:6"
																},
																"nativeSrc": "7402:15:6",
																"nodeType": "YulFunctionCall",
																"src": "7402:15:6"
															},
															"nativeSrc": "7402:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "7402:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7433:1:6",
																		"nodeType": "YulLiteral",
																		"src": "7433:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7436:4:6",
																		"nodeType": "YulLiteral",
																		"src": "7436:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7426:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7426:6:6"
																},
																"nativeSrc": "7426:15:6",
																"nodeType": "YulFunctionCall",
																"src": "7426:15:6"
															},
															"nativeSrc": "7426:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "7426:15:6"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "7267:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "7267:180:6"
											},
											{
												"body": {
													"nativeSrc": "7495:143:6",
													"nodeType": "YulBlock",
													"src": "7495:143:6",
													"statements": [
														{
															"nativeSrc": "7505:25:6",
															"nodeType": "YulAssignment",
															"src": "7505:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7528:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "7528:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7510:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "7510:17:6"
																},
																"nativeSrc": "7510:20:6",
																"nodeType": "YulFunctionCall",
																"src": "7510:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "7505:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "7505:1:6"
																}
															]
														},
														{
															"nativeSrc": "7539:25:6",
															"nodeType": "YulAssignment",
															"src": "7539:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "7562:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "7562:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7544:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "7544:17:6"
																},
																"nativeSrc": "7544:20:6",
																"nodeType": "YulFunctionCall",
																"src": "7544:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "7539:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "7539:1:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7586:22:6",
																"nodeType": "YulBlock",
																"src": "7586:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "7588:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "7588:16:6"
																			},
																			"nativeSrc": "7588:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "7588:18:6"
																		},
																		"nativeSrc": "7588:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "7588:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "7583:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "7583:1:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7576:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7576:6:6"
																},
																"nativeSrc": "7576:9:6",
																"nodeType": "YulFunctionCall",
																"src": "7576:9:6"
															},
															"nativeSrc": "7573:35:6",
															"nodeType": "YulIf",
															"src": "7573:35:6"
														},
														{
															"nativeSrc": "7618:14:6",
															"nodeType": "YulAssignment",
															"src": "7618:14:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7627:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "7627:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "7630:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "7630:1:6"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "7623:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7623:3:6"
																},
																"nativeSrc": "7623:9:6",
																"nodeType": "YulFunctionCall",
																"src": "7623:9:6"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "7618:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "7618:1:6"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "7453:185:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "7484:1:6",
														"nodeType": "YulTypedName",
														"src": "7484:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7487:1:6",
														"nodeType": "YulTypedName",
														"src": "7487:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "7493:1:6",
														"nodeType": "YulTypedName",
														"src": "7493:1:6",
														"type": ""
													}
												],
												"src": "7453:185:6"
											},
											{
												"body": {
													"nativeSrc": "7688:147:6",
													"nodeType": "YulBlock",
													"src": "7688:147:6",
													"statements": [
														{
															"nativeSrc": "7698:25:6",
															"nodeType": "YulAssignment",
															"src": "7698:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7721:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "7721:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7703:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "7703:17:6"
																},
																"nativeSrc": "7703:20:6",
																"nodeType": "YulFunctionCall",
																"src": "7703:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "7698:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "7698:1:6"
																}
															]
														},
														{
															"nativeSrc": "7732:25:6",
															"nodeType": "YulAssignment",
															"src": "7732:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "7755:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "7755:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7737:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "7737:17:6"
																},
																"nativeSrc": "7737:20:6",
																"nodeType": "YulFunctionCall",
																"src": "7737:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "7732:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "7732:1:6"
																}
															]
														},
														{
															"nativeSrc": "7766:16:6",
															"nodeType": "YulAssignment",
															"src": "7766:16:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7777:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "7777:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "7780:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "7780:1:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7773:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7773:3:6"
																},
																"nativeSrc": "7773:9:6",
																"nodeType": "YulFunctionCall",
																"src": "7773:9:6"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "7766:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7766:3:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7806:22:6",
																"nodeType": "YulBlock",
																"src": "7806:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "7808:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "7808:16:6"
																			},
																			"nativeSrc": "7808:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "7808:18:6"
																		},
																		"nativeSrc": "7808:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "7808:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7798:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "7798:1:6"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "7801:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "7801:3:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7795:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "7795:2:6"
																},
																"nativeSrc": "7795:10:6",
																"nodeType": "YulFunctionCall",
																"src": "7795:10:6"
															},
															"nativeSrc": "7792:36:6",
															"nodeType": "YulIf",
															"src": "7792:36:6"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "7644:191:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "7675:1:6",
														"nodeType": "YulTypedName",
														"src": "7675:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7678:1:6",
														"nodeType": "YulTypedName",
														"src": "7678:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "7684:3:6",
														"nodeType": "YulTypedName",
														"src": "7684:3:6",
														"type": ""
													}
												],
												"src": "7644:191:6"
											},
											{
												"body": {
													"nativeSrc": "7884:190:6",
													"nodeType": "YulBlock",
													"src": "7884:190:6",
													"statements": [
														{
															"nativeSrc": "7894:33:6",
															"nodeType": "YulAssignment",
															"src": "7894:33:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7921:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "7921:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7903:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "7903:17:6"
																},
																"nativeSrc": "7903:24:6",
																"nodeType": "YulFunctionCall",
																"src": "7903:24:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "7894:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "7894:5:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8017:22:6",
																"nodeType": "YulBlock",
																"src": "8017:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "8019:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "8019:16:6"
																			},
																			"nativeSrc": "8019:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "8019:18:6"
																		},
																		"nativeSrc": "8019:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "8019:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7942:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "7942:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7949:66:6",
																		"nodeType": "YulLiteral",
																		"src": "7949:66:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "7939:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "7939:2:6"
																},
																"nativeSrc": "7939:77:6",
																"nodeType": "YulFunctionCall",
																"src": "7939:77:6"
															},
															"nativeSrc": "7936:103:6",
															"nodeType": "YulIf",
															"src": "7936:103:6"
														},
														{
															"nativeSrc": "8048:20:6",
															"nodeType": "YulAssignment",
															"src": "8048:20:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8059:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "8059:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8066:1:6",
																		"nodeType": "YulLiteral",
																		"src": "8066:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8055:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "8055:3:6"
																},
																"nativeSrc": "8055:13:6",
																"nodeType": "YulFunctionCall",
																"src": "8055:13:6"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "8048:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "8048:3:6"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nativeSrc": "7841:233:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7870:5:6",
														"nodeType": "YulTypedName",
														"src": "7870:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "7880:3:6",
														"nodeType": "YulTypedName",
														"src": "7880:3:6",
														"type": ""
													}
												],
												"src": "7841:233:6"
											},
											{
												"body": {
													"nativeSrc": "8176:73:6",
													"nodeType": "YulBlock",
													"src": "8176:73:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8193:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "8193:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8198:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "8198:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8186:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8186:6:6"
																},
																"nativeSrc": "8186:19:6",
																"nodeType": "YulFunctionCall",
																"src": "8186:19:6"
															},
															"nativeSrc": "8186:19:6",
															"nodeType": "YulExpressionStatement",
															"src": "8186:19:6"
														},
														{
															"nativeSrc": "8214:29:6",
															"nodeType": "YulAssignment",
															"src": "8214:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8233:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "8233:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8238:4:6",
																		"nodeType": "YulLiteral",
																		"src": "8238:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8229:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "8229:3:6"
																},
																"nativeSrc": "8229:14:6",
																"nodeType": "YulFunctionCall",
																"src": "8229:14:6"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "8214:11:6",
																	"nodeType": "YulIdentifier",
																	"src": "8214:11:6"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "8080:169:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8148:3:6",
														"nodeType": "YulTypedName",
														"src": "8148:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "8153:6:6",
														"nodeType": "YulTypedName",
														"src": "8153:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "8164:11:6",
														"nodeType": "YulTypedName",
														"src": "8164:11:6",
														"type": ""
													}
												],
												"src": "8080:169:6"
											},
											{
												"body": {
													"nativeSrc": "8361:64:6",
													"nodeType": "YulBlock",
													"src": "8361:64:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "8383:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "8383:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8391:1:6",
																				"nodeType": "YulLiteral",
																				"src": "8391:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8379:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8379:3:6"
																		},
																		"nativeSrc": "8379:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8379:14:6"
																	},
																	{
																		"hexValue": "546f6b656e206973206e6f74207374616b65642e",
																		"kind": "string",
																		"nativeSrc": "8395:22:6",
																		"nodeType": "YulLiteral",
																		"src": "8395:22:6",
																		"type": "",
																		"value": "Token is not staked."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8372:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8372:6:6"
																},
																"nativeSrc": "8372:46:6",
																"nodeType": "YulFunctionCall",
																"src": "8372:46:6"
															},
															"nativeSrc": "8372:46:6",
															"nodeType": "YulExpressionStatement",
															"src": "8372:46:6"
														}
													]
												},
												"name": "store_literal_in_memory_7047e1907ec48195b0277350fe86675187cd3cbb8bd2baa58bb8272dc08b5034",
												"nativeSrc": "8255:170:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "8353:6:6",
														"nodeType": "YulTypedName",
														"src": "8353:6:6",
														"type": ""
													}
												],
												"src": "8255:170:6"
											},
											{
												"body": {
													"nativeSrc": "8577:220:6",
													"nodeType": "YulBlock",
													"src": "8577:220:6",
													"statements": [
														{
															"nativeSrc": "8587:74:6",
															"nodeType": "YulAssignment",
															"src": "8587:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8653:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "8653:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8658:2:6",
																		"nodeType": "YulLiteral",
																		"src": "8658:2:6",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8594:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "8594:58:6"
																},
																"nativeSrc": "8594:67:6",
																"nodeType": "YulFunctionCall",
																"src": "8594:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8587:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "8587:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8759:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "8759:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_7047e1907ec48195b0277350fe86675187cd3cbb8bd2baa58bb8272dc08b5034",
																	"nativeSrc": "8670:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "8670:88:6"
																},
																"nativeSrc": "8670:93:6",
																"nodeType": "YulFunctionCall",
																"src": "8670:93:6"
															},
															"nativeSrc": "8670:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "8670:93:6"
														},
														{
															"nativeSrc": "8772:19:6",
															"nodeType": "YulAssignment",
															"src": "8772:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8783:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "8783:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8788:2:6",
																		"nodeType": "YulLiteral",
																		"src": "8788:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8779:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "8779:3:6"
																},
																"nativeSrc": "8779:12:6",
																"nodeType": "YulFunctionCall",
																"src": "8779:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8772:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "8772:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_7047e1907ec48195b0277350fe86675187cd3cbb8bd2baa58bb8272dc08b5034_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "8431:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8565:3:6",
														"nodeType": "YulTypedName",
														"src": "8565:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8573:3:6",
														"nodeType": "YulTypedName",
														"src": "8573:3:6",
														"type": ""
													}
												],
												"src": "8431:366:6"
											},
											{
												"body": {
													"nativeSrc": "8974:248:6",
													"nodeType": "YulBlock",
													"src": "8974:248:6",
													"statements": [
														{
															"nativeSrc": "8984:26:6",
															"nodeType": "YulAssignment",
															"src": "8984:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8996:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "8996:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9007:2:6",
																		"nodeType": "YulLiteral",
																		"src": "9007:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8992:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "8992:3:6"
																},
																"nativeSrc": "8992:18:6",
																"nodeType": "YulFunctionCall",
																"src": "8992:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8984:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "8984:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9031:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "9031:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9042:1:6",
																				"nodeType": "YulLiteral",
																				"src": "9042:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9027:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9027:3:6"
																		},
																		"nativeSrc": "9027:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9027:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "9050:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "9050:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9056:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "9056:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9046:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9046:3:6"
																		},
																		"nativeSrc": "9046:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9046:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9020:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "9020:6:6"
																},
																"nativeSrc": "9020:47:6",
																"nodeType": "YulFunctionCall",
																"src": "9020:47:6"
															},
															"nativeSrc": "9020:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "9020:47:6"
														},
														{
															"nativeSrc": "9076:139:6",
															"nodeType": "YulAssignment",
															"src": "9076:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "9210:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "9210:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_7047e1907ec48195b0277350fe86675187cd3cbb8bd2baa58bb8272dc08b5034_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9084:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "9084:124:6"
																},
																"nativeSrc": "9084:131:6",
																"nodeType": "YulFunctionCall",
																"src": "9084:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9076:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "9076:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7047e1907ec48195b0277350fe86675187cd3cbb8bd2baa58bb8272dc08b5034__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8803:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8954:9:6",
														"nodeType": "YulTypedName",
														"src": "8954:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8969:4:6",
														"nodeType": "YulTypedName",
														"src": "8969:4:6",
														"type": ""
													}
												],
												"src": "8803:419:6"
											},
											{
												"body": {
													"nativeSrc": "9271:128:6",
													"nodeType": "YulBlock",
													"src": "9271:128:6",
													"statements": [
														{
															"nativeSrc": "9281:33:6",
															"nodeType": "YulAssignment",
															"src": "9281:33:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9308:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "9308:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9290:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "9290:17:6"
																},
																"nativeSrc": "9290:24:6",
																"nodeType": "YulFunctionCall",
																"src": "9290:24:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "9281:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "9281:5:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9342:22:6",
																"nodeType": "YulBlock",
																"src": "9342:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9344:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "9344:16:6"
																			},
																			"nativeSrc": "9344:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "9344:18:6"
																		},
																		"nativeSrc": "9344:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "9344:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9329:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "9329:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9336:4:6",
																		"nodeType": "YulLiteral",
																		"src": "9336:4:6",
																		"type": "",
																		"value": "0x00"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "9326:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "9326:2:6"
																},
																"nativeSrc": "9326:15:6",
																"nodeType": "YulFunctionCall",
																"src": "9326:15:6"
															},
															"nativeSrc": "9323:41:6",
															"nodeType": "YulIf",
															"src": "9323:41:6"
														},
														{
															"nativeSrc": "9373:20:6",
															"nodeType": "YulAssignment",
															"src": "9373:20:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9384:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "9384:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9391:1:6",
																		"nodeType": "YulLiteral",
																		"src": "9391:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "9380:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "9380:3:6"
																},
																"nativeSrc": "9380:13:6",
																"nodeType": "YulFunctionCall",
																"src": "9380:13:6"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "9373:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "9373:3:6"
																}
															]
														}
													]
												},
												"name": "decrement_t_uint256",
												"nativeSrc": "9228:171:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9257:5:6",
														"nodeType": "YulTypedName",
														"src": "9257:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "9267:3:6",
														"nodeType": "YulTypedName",
														"src": "9267:3:6",
														"type": ""
													}
												],
												"src": "9228:171:6"
											},
											{
												"body": {
													"nativeSrc": "9559:288:6",
													"nodeType": "YulBlock",
													"src": "9559:288:6",
													"statements": [
														{
															"nativeSrc": "9569:26:6",
															"nodeType": "YulAssignment",
															"src": "9569:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9581:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "9581:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9592:2:6",
																		"nodeType": "YulLiteral",
																		"src": "9592:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9577:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "9577:3:6"
																},
																"nativeSrc": "9577:18:6",
																"nodeType": "YulFunctionCall",
																"src": "9577:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9569:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "9569:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9649:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "9649:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9662:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "9662:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9673:1:6",
																				"nodeType": "YulLiteral",
																				"src": "9673:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9658:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9658:3:6"
																		},
																		"nativeSrc": "9658:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9658:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "9605:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "9605:43:6"
																},
																"nativeSrc": "9605:71:6",
																"nodeType": "YulFunctionCall",
																"src": "9605:71:6"
															},
															"nativeSrc": "9605:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "9605:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "9730:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "9730:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9743:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "9743:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9754:2:6",
																				"nodeType": "YulLiteral",
																				"src": "9754:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9739:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9739:3:6"
																		},
																		"nativeSrc": "9739:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9739:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "9686:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "9686:43:6"
																},
																"nativeSrc": "9686:72:6",
																"nodeType": "YulFunctionCall",
																"src": "9686:72:6"
															},
															"nativeSrc": "9686:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "9686:72:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "9812:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "9812:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9825:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "9825:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9836:2:6",
																				"nodeType": "YulLiteral",
																				"src": "9836:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9821:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9821:3:6"
																		},
																		"nativeSrc": "9821:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9821:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9768:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "9768:43:6"
																},
																"nativeSrc": "9768:72:6",
																"nodeType": "YulFunctionCall",
																"src": "9768:72:6"
															},
															"nativeSrc": "9768:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "9768:72:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "9405:442:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9515:9:6",
														"nodeType": "YulTypedName",
														"src": "9515:9:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "9527:6:6",
														"nodeType": "YulTypedName",
														"src": "9527:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9535:6:6",
														"nodeType": "YulTypedName",
														"src": "9535:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9543:6:6",
														"nodeType": "YulTypedName",
														"src": "9543:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9554:4:6",
														"nodeType": "YulTypedName",
														"src": "9554:4:6",
														"type": ""
													}
												],
												"src": "9405:442:6"
											},
											{
												"body": {
													"nativeSrc": "9959:61:6",
													"nodeType": "YulBlock",
													"src": "9959:61:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9981:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "9981:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9989:1:6",
																				"nodeType": "YulLiteral",
																				"src": "9989:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9977:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9977:3:6"
																		},
																		"nativeSrc": "9977:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9977:14:6"
																	},
																	{
																		"hexValue": "4e6f7468696e6720746f2072656465656d",
																		"kind": "string",
																		"nativeSrc": "9993:19:6",
																		"nodeType": "YulLiteral",
																		"src": "9993:19:6",
																		"type": "",
																		"value": "Nothing to redeem"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9970:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "9970:6:6"
																},
																"nativeSrc": "9970:43:6",
																"nodeType": "YulFunctionCall",
																"src": "9970:43:6"
															},
															"nativeSrc": "9970:43:6",
															"nodeType": "YulExpressionStatement",
															"src": "9970:43:6"
														}
													]
												},
												"name": "store_literal_in_memory_4814ee9298a6ee14dd8d406f87112f1967472b7011a3ae8ceed8f6adee3d0290",
												"nativeSrc": "9853:167:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "9951:6:6",
														"nodeType": "YulTypedName",
														"src": "9951:6:6",
														"type": ""
													}
												],
												"src": "9853:167:6"
											},
											{
												"body": {
													"nativeSrc": "10172:220:6",
													"nodeType": "YulBlock",
													"src": "10172:220:6",
													"statements": [
														{
															"nativeSrc": "10182:74:6",
															"nodeType": "YulAssignment",
															"src": "10182:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10248:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "10248:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10253:2:6",
																		"nodeType": "YulLiteral",
																		"src": "10253:2:6",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10189:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "10189:58:6"
																},
																"nativeSrc": "10189:67:6",
																"nodeType": "YulFunctionCall",
																"src": "10189:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10182:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "10182:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10354:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "10354:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_4814ee9298a6ee14dd8d406f87112f1967472b7011a3ae8ceed8f6adee3d0290",
																	"nativeSrc": "10265:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "10265:88:6"
																},
																"nativeSrc": "10265:93:6",
																"nodeType": "YulFunctionCall",
																"src": "10265:93:6"
															},
															"nativeSrc": "10265:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "10265:93:6"
														},
														{
															"nativeSrc": "10367:19:6",
															"nodeType": "YulAssignment",
															"src": "10367:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10378:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "10378:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10383:2:6",
																		"nodeType": "YulLiteral",
																		"src": "10383:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10374:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "10374:3:6"
																},
																"nativeSrc": "10374:12:6",
																"nodeType": "YulFunctionCall",
																"src": "10374:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10367:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "10367:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_4814ee9298a6ee14dd8d406f87112f1967472b7011a3ae8ceed8f6adee3d0290_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "10026:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10160:3:6",
														"nodeType": "YulTypedName",
														"src": "10160:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10168:3:6",
														"nodeType": "YulTypedName",
														"src": "10168:3:6",
														"type": ""
													}
												],
												"src": "10026:366:6"
											},
											{
												"body": {
													"nativeSrc": "10569:248:6",
													"nodeType": "YulBlock",
													"src": "10569:248:6",
													"statements": [
														{
															"nativeSrc": "10579:26:6",
															"nodeType": "YulAssignment",
															"src": "10579:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10591:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "10591:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10602:2:6",
																		"nodeType": "YulLiteral",
																		"src": "10602:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10587:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "10587:3:6"
																},
																"nativeSrc": "10587:18:6",
																"nodeType": "YulFunctionCall",
																"src": "10587:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10579:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "10579:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10626:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "10626:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10637:1:6",
																				"nodeType": "YulLiteral",
																				"src": "10637:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10622:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "10622:3:6"
																		},
																		"nativeSrc": "10622:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "10622:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10645:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "10645:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10651:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "10651:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10641:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "10641:3:6"
																		},
																		"nativeSrc": "10641:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "10641:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10615:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "10615:6:6"
																},
																"nativeSrc": "10615:47:6",
																"nodeType": "YulFunctionCall",
																"src": "10615:47:6"
															},
															"nativeSrc": "10615:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "10615:47:6"
														},
														{
															"nativeSrc": "10671:139:6",
															"nodeType": "YulAssignment",
															"src": "10671:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "10805:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "10805:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_4814ee9298a6ee14dd8d406f87112f1967472b7011a3ae8ceed8f6adee3d0290_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10679:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "10679:124:6"
																},
																"nativeSrc": "10679:131:6",
																"nodeType": "YulFunctionCall",
																"src": "10679:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10671:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "10671:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4814ee9298a6ee14dd8d406f87112f1967472b7011a3ae8ceed8f6adee3d0290__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10398:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10549:9:6",
														"nodeType": "YulTypedName",
														"src": "10549:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10564:4:6",
														"nodeType": "YulTypedName",
														"src": "10564:4:6",
														"type": ""
													}
												],
												"src": "10398:419:6"
											},
											{
												"body": {
													"nativeSrc": "10865:48:6",
													"nodeType": "YulBlock",
													"src": "10865:48:6",
													"statements": [
														{
															"nativeSrc": "10875:32:6",
															"nodeType": "YulAssignment",
															"src": "10875:32:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "10900:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "10900:5:6"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "10893:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "10893:6:6"
																		},
																		"nativeSrc": "10893:13:6",
																		"nodeType": "YulFunctionCall",
																		"src": "10893:13:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10886:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "10886:6:6"
																},
																"nativeSrc": "10886:21:6",
																"nodeType": "YulFunctionCall",
																"src": "10886:21:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "10875:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "10875:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "10823:90:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10847:5:6",
														"nodeType": "YulTypedName",
														"src": "10847:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "10857:7:6",
														"nodeType": "YulTypedName",
														"src": "10857:7:6",
														"type": ""
													}
												],
												"src": "10823:90:6"
											},
											{
												"body": {
													"nativeSrc": "10959:76:6",
													"nodeType": "YulBlock",
													"src": "10959:76:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "11013:16:6",
																"nodeType": "YulBlock",
																"src": "11013:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "11022:1:6",
																					"nodeType": "YulLiteral",
																					"src": "11022:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "11025:1:6",
																					"nodeType": "YulLiteral",
																					"src": "11025:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "11015:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "11015:6:6"
																			},
																			"nativeSrc": "11015:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "11015:12:6"
																		},
																		"nativeSrc": "11015:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "11015:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "10982:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "10982:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "11004:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "11004:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "10989:14:6",
																					"nodeType": "YulIdentifier",
																					"src": "10989:14:6"
																				},
																				"nativeSrc": "10989:21:6",
																				"nodeType": "YulFunctionCall",
																				"src": "10989:21:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "10979:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "10979:2:6"
																		},
																		"nativeSrc": "10979:32:6",
																		"nodeType": "YulFunctionCall",
																		"src": "10979:32:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10972:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "10972:6:6"
																},
																"nativeSrc": "10972:40:6",
																"nodeType": "YulFunctionCall",
																"src": "10972:40:6"
															},
															"nativeSrc": "10969:60:6",
															"nodeType": "YulIf",
															"src": "10969:60:6"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "10919:116:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10952:5:6",
														"nodeType": "YulTypedName",
														"src": "10952:5:6",
														"type": ""
													}
												],
												"src": "10919:116:6"
											},
											{
												"body": {
													"nativeSrc": "11101:77:6",
													"nodeType": "YulBlock",
													"src": "11101:77:6",
													"statements": [
														{
															"nativeSrc": "11111:22:6",
															"nodeType": "YulAssignment",
															"src": "11111:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "11126:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "11126:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "11120:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "11120:5:6"
																},
																"nativeSrc": "11120:13:6",
																"nodeType": "YulFunctionCall",
																"src": "11120:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "11111:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "11111:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "11166:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "11166:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "11142:23:6",
																	"nodeType": "YulIdentifier",
																	"src": "11142:23:6"
																},
																"nativeSrc": "11142:30:6",
																"nodeType": "YulFunctionCall",
																"src": "11142:30:6"
															},
															"nativeSrc": "11142:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "11142:30:6"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "11041:137:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "11079:6:6",
														"nodeType": "YulTypedName",
														"src": "11079:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "11087:3:6",
														"nodeType": "YulTypedName",
														"src": "11087:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "11095:5:6",
														"nodeType": "YulTypedName",
														"src": "11095:5:6",
														"type": ""
													}
												],
												"src": "11041:137:6"
											},
											{
												"body": {
													"nativeSrc": "11258:271:6",
													"nodeType": "YulBlock",
													"src": "11258:271:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "11304:83:6",
																"nodeType": "YulBlock",
																"src": "11304:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "11306:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "11306:77:6"
																			},
																			"nativeSrc": "11306:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "11306:79:6"
																		},
																		"nativeSrc": "11306:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "11306:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11279:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "11279:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11288:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "11288:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11275:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "11275:3:6"
																		},
																		"nativeSrc": "11275:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "11275:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11300:2:6",
																		"nodeType": "YulLiteral",
																		"src": "11300:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "11271:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "11271:3:6"
																},
																"nativeSrc": "11271:32:6",
																"nodeType": "YulFunctionCall",
																"src": "11271:32:6"
															},
															"nativeSrc": "11268:119:6",
															"nodeType": "YulIf",
															"src": "11268:119:6"
														},
														{
															"nativeSrc": "11397:125:6",
															"nodeType": "YulBlock",
															"src": "11397:125:6",
															"statements": [
																{
																	"nativeSrc": "11412:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11412:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11426:1:6",
																		"nodeType": "YulLiteral",
																		"src": "11426:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11416:6:6",
																			"nodeType": "YulTypedName",
																			"src": "11416:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "11441:71:6",
																	"nodeType": "YulAssignment",
																	"src": "11441:71:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11484:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "11484:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11495:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "11495:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11480:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "11480:3:6"
																				},
																				"nativeSrc": "11480:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "11480:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11504:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "11504:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "11451:28:6",
																			"nodeType": "YulIdentifier",
																			"src": "11451:28:6"
																		},
																		"nativeSrc": "11451:61:6",
																		"nodeType": "YulFunctionCall",
																		"src": "11451:61:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "11441:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "11441:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "11184:345:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11228:9:6",
														"nodeType": "YulTypedName",
														"src": "11228:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "11239:7:6",
														"nodeType": "YulTypedName",
														"src": "11239:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "11251:6:6",
														"nodeType": "YulTypedName",
														"src": "11251:6:6",
														"type": ""
													}
												],
												"src": "11184:345:6"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x01)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3, value4 := abi_decode_t_bytes_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function abi_encode_t_bytes4_to_t_bytes4_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes4(value))\n    }\n\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes4_to_t_bytes4_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC721_$457_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC721_$457_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC721_$457_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC721_$457__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC721_$457_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function convert_t_contract$_IERC20_$341_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$341_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$341_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$341__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$341_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_7047e1907ec48195b0277350fe86675187cd3cbb8bd2baa58bb8272dc08b5034(memPtr) {\n\n        mstore(add(memPtr, 0), \"Token is not staked.\")\n\n    }\n\n    function abi_encode_t_stringliteral_7047e1907ec48195b0277350fe86675187cd3cbb8bd2baa58bb8272dc08b5034_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_7047e1907ec48195b0277350fe86675187cd3cbb8bd2baa58bb8272dc08b5034(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7047e1907ec48195b0277350fe86675187cd3cbb8bd2baa58bb8272dc08b5034__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7047e1907ec48195b0277350fe86675187cd3cbb8bd2baa58bb8272dc08b5034_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function decrement_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0x00) { panic_error_0x11() }\n        ret := sub(value, 1)\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_4814ee9298a6ee14dd8d406f87112f1967472b7011a3ae8ceed8f6adee3d0290(memPtr) {\n\n        mstore(add(memPtr, 0), \"Nothing to redeem\")\n\n    }\n\n    function abi_encode_t_stringliteral_4814ee9298a6ee14dd8d406f87112f1967472b7011a3ae8ceed8f6adee3d0290_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 17)\n        store_literal_in_memory_4814ee9298a6ee14dd8d406f87112f1967472b7011a3ae8ceed8f6adee3d0290(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4814ee9298a6ee14dd8d406f87112f1967472b7011a3ae8ceed8f6adee3d0290__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4814ee9298a6ee14dd8d406f87112f1967472b7011a3ae8ceed8f6adee3d0290_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b50600436106100a7575f3560e01c806347ccca021161006f57806347ccca021461017557806370a0823114610193578063a694fc3a146101c3578063be040fb0146101df578063f7c618c1146101e9578063fb75b2c714610207576100a7565b806310098ad5146100ab578063150b7a02146100db5780632ce9aead1461010b5780632d6a1fa61461013b5780632e1a7d4d14610159575b5f5ffd5b6100c560048036038101906100c09190610a95565b610225565b6040516100d29190610ad8565b60405180910390f35b6100f560048036038101906100f09190610b7c565b61032b565b6040516101029190610c3a565b60405180910390f35b61012560048036038101906101209190610a95565b61046e565b6040516101329190610ad8565b60405180910390f35b610143610483565b6040516101509190610ad8565b60405180910390f35b610173600480360381019061016e9190610c53565b610489565b005b61017d6106e3565b60405161018a9190610cd9565b60405180910390f35b6101ad60048036038101906101a89190610a95565b610707565b6040516101ba9190610ad8565b60405180910390f35b6101dd60048036038101906101d89190610c53565b61071c565b005b6101e76107b0565b005b6101f16109e2565b6040516101fe9190610d12565b60405180910390f35b61020f610a07565b60405161021c9190610d3a565b60405180910390f35b5f5f60065f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054426102709190610d80565b90505f620151806003548360055f8873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20546102c39190610db3565b6102cd9190610db3565b6102d79190610e21565b90508060075f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20546103229190610e51565b92505050919050565b5f8461033681610225565b60075f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055504260065f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508560045f8781526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060055f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f81548092919061045590610e84565b919050555063150b7a0260e01b91505095945050505050565b6006602052805f5260405f205f915090505481565b60035481565b610491610a2c565b61049a81610225565b60075f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055504260065f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550610525610a2c565b73ffffffffffffffffffffffffffffffffffffffff1660045f8481526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146105c2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105b990610f25565b60405180910390fd5b60045f8381526020019081526020015f205f6101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560055f610600610a2c565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f81548092919061064990610f43565b91905055505f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd30610693610a2c565b856040518463ffffffff1660e01b81526004016106b293929190610f6a565b5f604051808303815f87803b1580156106c9575f5ffd5b505af11580156106db573d5f5f3e3d5ffd5b505050505050565b5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6005602052805f5260405f205f915090505481565b5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166342842e0e610760610a2c565b30846040518463ffffffff1660e01b815260040161078093929190610f6a565b5f604051808303815f87803b158015610797575f5ffd5b505af11580156107a9573d5f5f3e3d5ffd5b5050505050565b6107b8610a2c565b6107c181610225565b60075f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055504260065f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055505f60075f610850610a2c565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490505f81116108ce576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108c590610fe9565b60405180910390fd5b5f60075f6108da610a2c565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555060015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1661097e610a2c565b846040518463ffffffff1660e01b815260040161099d93929190610f6a565b6020604051808303815f875af11580156109b9573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906109dd919061103c565b505050565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f33905090565b5f5ffd5b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610a6482610a3b565b9050919050565b610a7481610a5a565b8114610a7e575f5ffd5b50565b5f81359050610a8f81610a6b565b92915050565b5f60208284031215610aaa57610aa9610a33565b5b5f610ab784828501610a81565b91505092915050565b5f819050919050565b610ad281610ac0565b82525050565b5f602082019050610aeb5f830184610ac9565b92915050565b610afa81610ac0565b8114610b04575f5ffd5b50565b5f81359050610b1581610af1565b92915050565b5f5ffd5b5f5ffd5b5f5ffd5b5f5f83601f840112610b3c57610b3b610b1b565b5b8235905067ffffffffffffffff811115610b5957610b58610b1f565b5b602083019150836001820283011115610b7557610b74610b23565b5b9250929050565b5f5f5f5f5f60808688031215610b9557610b94610a33565b5b5f610ba288828901610a81565b9550506020610bb388828901610a81565b9450506040610bc488828901610b07565b935050606086013567ffffffffffffffff811115610be557610be4610a37565b5b610bf188828901610b27565b92509250509295509295909350565b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b610c3481610c00565b82525050565b5f602082019050610c4d5f830184610c2b565b92915050565b5f60208284031215610c6857610c67610a33565b5b5f610c7584828501610b07565b91505092915050565b5f819050919050565b5f610ca1610c9c610c9784610a3b565b610c7e565b610a3b565b9050919050565b5f610cb282610c87565b9050919050565b5f610cc382610ca8565b9050919050565b610cd381610cb9565b82525050565b5f602082019050610cec5f830184610cca565b92915050565b5f610cfc82610ca8565b9050919050565b610d0c81610cf2565b82525050565b5f602082019050610d255f830184610d03565b92915050565b610d3481610a5a565b82525050565b5f602082019050610d4d5f830184610d2b565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610d8a82610ac0565b9150610d9583610ac0565b9250828203905081811115610dad57610dac610d53565b5b92915050565b5f610dbd82610ac0565b9150610dc883610ac0565b9250828202610dd681610ac0565b91508282048414831517610ded57610dec610d53565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f610e2b82610ac0565b9150610e3683610ac0565b925082610e4657610e45610df4565b5b828204905092915050565b5f610e5b82610ac0565b9150610e6683610ac0565b9250828201905080821115610e7e57610e7d610d53565b5b92915050565b5f610e8e82610ac0565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610ec057610ebf610d53565b5b600182019050919050565b5f82825260208201905092915050565b7f546f6b656e206973206e6f74207374616b65642e0000000000000000000000005f82015250565b5f610f0f601483610ecb565b9150610f1a82610edb565b602082019050919050565b5f6020820190508181035f830152610f3c81610f03565b9050919050565b5f610f4d82610ac0565b91505f8203610f5f57610f5e610d53565b5b600182039050919050565b5f606082019050610f7d5f830186610d2b565b610f8a6020830185610d2b565b610f976040830184610ac9565b949350505050565b7f4e6f7468696e6720746f2072656465656d0000000000000000000000000000005f82015250565b5f610fd3601183610ecb565b9150610fde82610f9f565b602082019050919050565b5f6020820190508181035f83015261100081610fc7565b9050919050565b5f8115159050919050565b61101b81611007565b8114611025575f5ffd5b50565b5f8151905061103681611012565b92915050565b5f6020828403121561105157611050610a33565b5b5f61105e84828501611028565b9150509291505056fea264697066735822122064b464c6092f486cf518f787809ba4cee6f0c8b82c8b07624e120ab74619c3fd64736f6c634300081b0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA7 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x47CCCA02 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0x47CCCA02 EQ PUSH2 0x175 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x193 JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x1C3 JUMPI DUP1 PUSH4 0xBE040FB0 EQ PUSH2 0x1DF JUMPI DUP1 PUSH4 0xF7C618C1 EQ PUSH2 0x1E9 JUMPI DUP1 PUSH4 0xFB75B2C7 EQ PUSH2 0x207 JUMPI PUSH2 0xA7 JUMP JUMPDEST DUP1 PUSH4 0x10098AD5 EQ PUSH2 0xAB JUMPI DUP1 PUSH4 0x150B7A02 EQ PUSH2 0xDB JUMPI DUP1 PUSH4 0x2CE9AEAD EQ PUSH2 0x10B JUMPI DUP1 PUSH4 0x2D6A1FA6 EQ PUSH2 0x13B JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x159 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xC5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC0 SWAP2 SWAP1 PUSH2 0xA95 JUMP JUMPDEST PUSH2 0x225 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD2 SWAP2 SWAP1 PUSH2 0xAD8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF0 SWAP2 SWAP1 PUSH2 0xB7C JUMP JUMPDEST PUSH2 0x32B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x102 SWAP2 SWAP1 PUSH2 0xC3A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x125 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x120 SWAP2 SWAP1 PUSH2 0xA95 JUMP JUMPDEST PUSH2 0x46E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x132 SWAP2 SWAP1 PUSH2 0xAD8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x143 PUSH2 0x483 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x150 SWAP2 SWAP1 PUSH2 0xAD8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x173 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x16E SWAP2 SWAP1 PUSH2 0xC53 JUMP JUMPDEST PUSH2 0x489 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x17D PUSH2 0x6E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18A SWAP2 SWAP1 PUSH2 0xCD9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1AD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A8 SWAP2 SWAP1 PUSH2 0xA95 JUMP JUMPDEST PUSH2 0x707 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BA SWAP2 SWAP1 PUSH2 0xAD8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1DD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D8 SWAP2 SWAP1 PUSH2 0xC53 JUMP JUMPDEST PUSH2 0x71C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1E7 PUSH2 0x7B0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1F1 PUSH2 0x9E2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FE SWAP2 SWAP1 PUSH2 0xD12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20F PUSH2 0xA07 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21C SWAP2 SWAP1 PUSH2 0xD3A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH0 PUSH1 0x6 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD TIMESTAMP PUSH2 0x270 SWAP2 SWAP1 PUSH2 0xD80 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH3 0x15180 PUSH1 0x3 SLOAD DUP4 PUSH1 0x5 PUSH0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x2C3 SWAP2 SWAP1 PUSH2 0xDB3 JUMP JUMPDEST PUSH2 0x2CD SWAP2 SWAP1 PUSH2 0xDB3 JUMP JUMPDEST PUSH2 0x2D7 SWAP2 SWAP1 PUSH2 0xE21 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x7 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x322 SWAP2 SWAP1 PUSH2 0xE51 JUMP JUMPDEST SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP5 PUSH2 0x336 DUP2 PUSH2 0x225 JUMP JUMPDEST PUSH1 0x7 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x6 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP6 PUSH1 0x4 PUSH0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x5 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x455 SWAP1 PUSH2 0xE84 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH4 0x150B7A02 PUSH1 0xE0 SHL SWAP2 POP POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x491 PUSH2 0xA2C JUMP JUMPDEST PUSH2 0x49A DUP2 PUSH2 0x225 JUMP JUMPDEST PUSH1 0x7 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x6 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x525 PUSH2 0xA2C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x4 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x5C2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5B9 SWAP1 PUSH2 0xF25 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x5 PUSH0 PUSH2 0x600 PUSH2 0xA2C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x649 SWAP1 PUSH2 0xF43 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD ADDRESS PUSH2 0x693 PUSH2 0xA2C JUMP JUMPDEST DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B2 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xF6A JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6C9 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6DB JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x42842E0E PUSH2 0x760 PUSH2 0xA2C JUMP JUMPDEST ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x780 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xF6A JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x797 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x7A9 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x7B8 PUSH2 0xA2C JUMP JUMPDEST PUSH2 0x7C1 DUP2 PUSH2 0x225 JUMP JUMPDEST PUSH1 0x7 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x6 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH0 PUSH1 0x7 PUSH0 PUSH2 0x850 PUSH2 0xA2C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 DUP2 GT PUSH2 0x8CE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8C5 SWAP1 PUSH2 0xFE9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x7 PUSH0 PUSH2 0x8DA PUSH2 0xA2C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x97E PUSH2 0xA2C JUMP JUMPDEST DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x99D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xF6A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x9B9 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9DD SWAP2 SWAP1 PUSH2 0x103C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xA64 DUP3 PUSH2 0xA3B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA74 DUP2 PUSH2 0xA5A JUMP JUMPDEST DUP2 EQ PUSH2 0xA7E JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xA8F DUP2 PUSH2 0xA6B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xAAA JUMPI PUSH2 0xAA9 PUSH2 0xA33 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xAB7 DUP5 DUP3 DUP6 ADD PUSH2 0xA81 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAD2 DUP2 PUSH2 0xAC0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xAEB PUSH0 DUP4 ADD DUP5 PUSH2 0xAC9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xAFA DUP2 PUSH2 0xAC0 JUMP JUMPDEST DUP2 EQ PUSH2 0xB04 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB15 DUP2 PUSH2 0xAF1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0xB3C JUMPI PUSH2 0xB3B PUSH2 0xB1B JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xB59 JUMPI PUSH2 0xB58 PUSH2 0xB1F JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0xB75 JUMPI PUSH2 0xB74 PUSH2 0xB23 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xB95 JUMPI PUSH2 0xB94 PUSH2 0xA33 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xBA2 DUP9 DUP3 DUP10 ADD PUSH2 0xA81 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0xBB3 DUP9 DUP3 DUP10 ADD PUSH2 0xA81 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0xBC4 DUP9 DUP3 DUP10 ADD PUSH2 0xB07 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xBE5 JUMPI PUSH2 0xBE4 PUSH2 0xA37 JUMP JUMPDEST JUMPDEST PUSH2 0xBF1 DUP9 DUP3 DUP10 ADD PUSH2 0xB27 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC34 DUP2 PUSH2 0xC00 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC4D PUSH0 DUP4 ADD DUP5 PUSH2 0xC2B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC68 JUMPI PUSH2 0xC67 PUSH2 0xA33 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xC75 DUP5 DUP3 DUP6 ADD PUSH2 0xB07 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xCA1 PUSH2 0xC9C PUSH2 0xC97 DUP5 PUSH2 0xA3B JUMP JUMPDEST PUSH2 0xC7E JUMP JUMPDEST PUSH2 0xA3B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xCB2 DUP3 PUSH2 0xC87 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xCC3 DUP3 PUSH2 0xCA8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCD3 DUP2 PUSH2 0xCB9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCEC PUSH0 DUP4 ADD DUP5 PUSH2 0xCCA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xCFC DUP3 PUSH2 0xCA8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD0C DUP2 PUSH2 0xCF2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD25 PUSH0 DUP4 ADD DUP5 PUSH2 0xD03 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xD34 DUP2 PUSH2 0xA5A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD4D PUSH0 DUP4 ADD DUP5 PUSH2 0xD2B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xD8A DUP3 PUSH2 0xAC0 JUMP JUMPDEST SWAP2 POP PUSH2 0xD95 DUP4 PUSH2 0xAC0 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0xDAD JUMPI PUSH2 0xDAC PUSH2 0xD53 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xDBD DUP3 PUSH2 0xAC0 JUMP JUMPDEST SWAP2 POP PUSH2 0xDC8 DUP4 PUSH2 0xAC0 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0xDD6 DUP2 PUSH2 0xAC0 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0xDED JUMPI PUSH2 0xDEC PUSH2 0xD53 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xE2B DUP3 PUSH2 0xAC0 JUMP JUMPDEST SWAP2 POP PUSH2 0xE36 DUP4 PUSH2 0xAC0 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xE46 JUMPI PUSH2 0xE45 PUSH2 0xDF4 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xE5B DUP3 PUSH2 0xAC0 JUMP JUMPDEST SWAP2 POP PUSH2 0xE66 DUP4 PUSH2 0xAC0 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xE7E JUMPI PUSH2 0xE7D PUSH2 0xD53 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xE8E DUP3 PUSH2 0xAC0 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0xEC0 JUMPI PUSH2 0xEBF PUSH2 0xD53 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x546F6B656E206973206E6F74207374616B65642E000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xF0F PUSH1 0x14 DUP4 PUSH2 0xECB JUMP JUMPDEST SWAP2 POP PUSH2 0xF1A DUP3 PUSH2 0xEDB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xF3C DUP2 PUSH2 0xF03 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xF4D DUP3 PUSH2 0xAC0 JUMP JUMPDEST SWAP2 POP PUSH0 DUP3 SUB PUSH2 0xF5F JUMPI PUSH2 0xF5E PUSH2 0xD53 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xF7D PUSH0 DUP4 ADD DUP7 PUSH2 0xD2B JUMP JUMPDEST PUSH2 0xF8A PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xD2B JUMP JUMPDEST PUSH2 0xF97 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xAC9 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E6F7468696E6720746F2072656465656D000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xFD3 PUSH1 0x11 DUP4 PUSH2 0xECB JUMP JUMPDEST SWAP2 POP PUSH2 0xFDE DUP3 PUSH2 0xF9F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1000 DUP2 PUSH2 0xFC7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x101B DUP2 PUSH2 0x1007 JUMP JUMPDEST DUP2 EQ PUSH2 0x1025 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1036 DUP2 PUSH2 0x1012 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1051 JUMPI PUSH2 0x1050 PUSH2 0xA33 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x105E DUP5 DUP3 DUP6 ADD PUSH2 0x1028 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH5 0xB464C6092F BASEFEE PUSH13 0xF518F787809BA4CEE6F0C8B82C DUP12 SMOD PUSH3 0x4E120A 0xB7 CHAINID NOT 0xC3 REVERT PUSH5 0x736F6C6343 STOP ADDMOD SHL STOP CALLER ",
							"sourceMap": "2582:2918:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3921:309;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5199:298;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2916:49;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2766:35;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4558:294;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2645:18;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2865:44;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4326:118;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4930:261;;;:::i;:::-;;2670:25;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2702:27;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3921:309;3978:7;3998:19;4038:14;:23;4053:7;4038:23;;;;;;;;;;;;;;;;4020:15;:41;;;;:::i;:::-;3998:63;;4072:14;4175:5;4151:20;;4124:11;4090:9;:18;4100:7;4090:18;;;;;;;;;;;;;;;;:45;;;;:::i;:::-;:81;;;;:::i;:::-;4089:91;;;;:::i;:::-;4072:108;;4216:6;4198;:15;4205:7;4198:15;;;;;;;;;;;;;;;;:24;;;;:::i;:::-;4191:31;;;;3921:309;;;:::o;5199:298::-;5355:6;5340:4;3700:18;3710:7;3700:9;:18::i;:::-;3682:6;:15;3689:7;3682:15;;;;;;;;;;;;;;;:36;;;;3755:15;3729:14;:23;3744:7;3729:23;;;;;;;;;;;;;;;:41;;;;5398:4:::1;5374:12;:21;5387:7;5374:21;;;;;;;;;;;;:28;;;;;;;;;;;;;;;;;;5413:9;:15;5423:4;5413:15;;;;;;;;;;;;;;;;:17;;;;;;;;;:::i;:::-;;;;;;5448:41;;;5441:48;;5199:298:::0;;;;;;;;:::o;2916:49::-;;;;;;;;;;;;;;;;;:::o;2766:35::-;;;;:::o;4558:294::-;4609:12;:10;:12::i;:::-;3700:18;3710:7;3700:9;:18::i;:::-;3682:6;:15;3689:7;3682:15;;;;;;;;;;;;;;;:36;;;;3755:15;3729:14;:23;3744:7;3729:23;;;;;;;;;;;;;;;:41;;;;4667:12:::1;:10;:12::i;:::-;4642:37;;:12;:21;4655:7;4642:21;;;;;;;;;;;;;;;;;;;;;:37;;;4634:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;4722:12;:21;4735:7;4722:21;;;;;;;;;;;;4715:28;;;;;;;;;;;4754:9;:23;4764:12;:10;:12::i;:::-;4754:23;;;;;;;;;;;;;;;;:25;;;;;;;;;:::i;:::-;;;;;;4790:3;;;;;;;;;;;:16;;;4815:4;4822:12;:10;:12::i;:::-;4836:7;4790:54;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4558:294:::0;;:::o;2645:18::-;;;;;;;;;;;;;:::o;2865:44::-;;;;;;;;;;;;;;;;;:::o;4326:118::-;4378:3;;;;;;;;;;;:20;;;4399:12;:10;:12::i;:::-;4421:4;4428:7;4378:58;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4326:118;:::o;4930:261::-;4964:12;:10;:12::i;:::-;3700:18;3710:7;3700:9;:18::i;:::-;3682:6;:15;3689:7;3682:15;;;;;;;;;;;;;;;:36;;;;3755:15;3729:14;:23;3744:7;3729:23;;;;;;;;;;;;;;;:41;;;;4989:14:::1;5006:6;:20;5013:12;:10;:12::i;:::-;5006:20;;;;;;;;;;;;;;;;4989:37;;5054:1;5045:6;:10;5037:40;;;;;;;;;;;;:::i;:::-;;;;;;;;;5111:1;5088:6;:20;5095:12;:10;:12::i;:::-;5088:20;;;;;;;;;;;;;;;:24;;;;5123:11;;;;;;;;;;;:24;;;5148:12;;;;;;;;;;;5162;:10;:12::i;:::-;5176:6;5123:60;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4978:213;4930:261:::0;:::o;2670:25::-;;;;;;;;;;;;;:::o;2702:27::-;;;;;;;;;;;;;:::o;1934:96:4:-;1987:7;2013:10;2006:17;;1934:96;:::o;88:117:6:-;197:1;194;187:12;211:117;320:1;317;310:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:329::-;900:6;949:2;937:9;928:7;924:23;920:32;917:119;;;955:79;;:::i;:::-;917:119;1075:1;1100:53;1145:7;1136:6;1125:9;1121:22;1100:53;:::i;:::-;1090:63;;1046:117;841:329;;;;:::o;1176:77::-;1213:7;1242:5;1231:16;;1176:77;;;:::o;1259:118::-;1346:24;1364:5;1346:24;:::i;:::-;1341:3;1334:37;1259:118;;:::o;1383:222::-;1476:4;1514:2;1503:9;1499:18;1491:26;;1527:71;1595:1;1584:9;1580:17;1571:6;1527:71;:::i;:::-;1383:222;;;;:::o;1611:122::-;1684:24;1702:5;1684:24;:::i;:::-;1677:5;1674:35;1664:63;;1723:1;1720;1713:12;1664:63;1611:122;:::o;1739:139::-;1785:5;1823:6;1810:20;1801:29;;1839:33;1866:5;1839:33;:::i;:::-;1739:139;;;;:::o;1884:117::-;1993:1;1990;1983:12;2007:117;2116:1;2113;2106:12;2130:117;2239:1;2236;2229:12;2266:552;2323:8;2333:6;2383:3;2376:4;2368:6;2364:17;2360:27;2350:122;;2391:79;;:::i;:::-;2350:122;2504:6;2491:20;2481:30;;2534:18;2526:6;2523:30;2520:117;;;2556:79;;:::i;:::-;2520:117;2670:4;2662:6;2658:17;2646:29;;2724:3;2716:4;2708:6;2704:17;2694:8;2690:32;2687:41;2684:128;;;2731:79;;:::i;:::-;2684:128;2266:552;;;;;:::o;2824:963::-;2921:6;2929;2937;2945;2953;3002:3;2990:9;2981:7;2977:23;2973:33;2970:120;;;3009:79;;:::i;:::-;2970:120;3129:1;3154:53;3199:7;3190:6;3179:9;3175:22;3154:53;:::i;:::-;3144:63;;3100:117;3256:2;3282:53;3327:7;3318:6;3307:9;3303:22;3282:53;:::i;:::-;3272:63;;3227:118;3384:2;3410:53;3455:7;3446:6;3435:9;3431:22;3410:53;:::i;:::-;3400:63;;3355:118;3540:2;3529:9;3525:18;3512:32;3571:18;3563:6;3560:30;3557:117;;;3593:79;;:::i;:::-;3557:117;3706:64;3762:7;3753:6;3742:9;3738:22;3706:64;:::i;:::-;3688:82;;;;3483:297;2824:963;;;;;;;;:::o;3793:149::-;3829:7;3869:66;3862:5;3858:78;3847:89;;3793:149;;;:::o;3948:115::-;4033:23;4050:5;4033:23;:::i;:::-;4028:3;4021:36;3948:115;;:::o;4069:218::-;4160:4;4198:2;4187:9;4183:18;4175:26;;4211:69;4277:1;4266:9;4262:17;4253:6;4211:69;:::i;:::-;4069:218;;;;:::o;4293:329::-;4352:6;4401:2;4389:9;4380:7;4376:23;4372:32;4369:119;;;4407:79;;:::i;:::-;4369:119;4527:1;4552:53;4597:7;4588:6;4577:9;4573:22;4552:53;:::i;:::-;4542:63;;4498:117;4293:329;;;;:::o;4628:60::-;4656:3;4677:5;4670:12;;4628:60;;;:::o;4694:142::-;4744:9;4777:53;4795:34;4804:24;4822:5;4804:24;:::i;:::-;4795:34;:::i;:::-;4777:53;:::i;:::-;4764:66;;4694:142;;;:::o;4842:126::-;4892:9;4925:37;4956:5;4925:37;:::i;:::-;4912:50;;4842:126;;;:::o;4974:141::-;5039:9;5072:37;5103:5;5072:37;:::i;:::-;5059:50;;4974:141;;;:::o;5121:161::-;5223:52;5269:5;5223:52;:::i;:::-;5218:3;5211:65;5121:161;;:::o;5288:252::-;5396:4;5434:2;5423:9;5419:18;5411:26;;5447:86;5530:1;5519:9;5515:17;5506:6;5447:86;:::i;:::-;5288:252;;;;:::o;5546:140::-;5610:9;5643:37;5674:5;5643:37;:::i;:::-;5630:50;;5546:140;;;:::o;5692:159::-;5793:51;5838:5;5793:51;:::i;:::-;5788:3;5781:64;5692:159;;:::o;5857:250::-;5964:4;6002:2;5991:9;5987:18;5979:26;;6015:85;6097:1;6086:9;6082:17;6073:6;6015:85;:::i;:::-;5857:250;;;;:::o;6113:118::-;6200:24;6218:5;6200:24;:::i;:::-;6195:3;6188:37;6113:118;;:::o;6237:222::-;6330:4;6368:2;6357:9;6353:18;6345:26;;6381:71;6449:1;6438:9;6434:17;6425:6;6381:71;:::i;:::-;6237:222;;;;:::o;6465:180::-;6513:77;6510:1;6503:88;6610:4;6607:1;6600:15;6634:4;6631:1;6624:15;6651:194;6691:4;6711:20;6729:1;6711:20;:::i;:::-;6706:25;;6745:20;6763:1;6745:20;:::i;:::-;6740:25;;6789:1;6786;6782:9;6774:17;;6813:1;6807:4;6804:11;6801:37;;;6818:18;;:::i;:::-;6801:37;6651:194;;;;:::o;6851:410::-;6891:7;6914:20;6932:1;6914:20;:::i;:::-;6909:25;;6948:20;6966:1;6948:20;:::i;:::-;6943:25;;7003:1;7000;6996:9;7025:30;7043:11;7025:30;:::i;:::-;7014:41;;7204:1;7195:7;7191:15;7188:1;7185:22;7165:1;7158:9;7138:83;7115:139;;7234:18;;:::i;:::-;7115:139;6899:362;6851:410;;;;:::o;7267:180::-;7315:77;7312:1;7305:88;7412:4;7409:1;7402:15;7436:4;7433:1;7426:15;7453:185;7493:1;7510:20;7528:1;7510:20;:::i;:::-;7505:25;;7544:20;7562:1;7544:20;:::i;:::-;7539:25;;7583:1;7573:35;;7588:18;;:::i;:::-;7573:35;7630:1;7627;7623:9;7618:14;;7453:185;;;;:::o;7644:191::-;7684:3;7703:20;7721:1;7703:20;:::i;:::-;7698:25;;7737:20;7755:1;7737:20;:::i;:::-;7732:25;;7780:1;7777;7773:9;7766:16;;7801:3;7798:1;7795:10;7792:36;;;7808:18;;:::i;:::-;7792:36;7644:191;;;;:::o;7841:233::-;7880:3;7903:24;7921:5;7903:24;:::i;:::-;7894:33;;7949:66;7942:5;7939:77;7936:103;;8019:18;;:::i;:::-;7936:103;8066:1;8059:5;8055:13;8048:20;;7841:233;;;:::o;8080:169::-;8164:11;8198:6;8193:3;8186:19;8238:4;8233:3;8229:14;8214:29;;8080:169;;;;:::o;8255:170::-;8395:22;8391:1;8383:6;8379:14;8372:46;8255:170;:::o;8431:366::-;8573:3;8594:67;8658:2;8653:3;8594:67;:::i;:::-;8587:74;;8670:93;8759:3;8670:93;:::i;:::-;8788:2;8783:3;8779:12;8772:19;;8431:366;;;:::o;8803:419::-;8969:4;9007:2;8996:9;8992:18;8984:26;;9056:9;9050:4;9046:20;9042:1;9031:9;9027:17;9020:47;9084:131;9210:4;9084:131;:::i;:::-;9076:139;;8803:419;;;:::o;9228:171::-;9267:3;9290:24;9308:5;9290:24;:::i;:::-;9281:33;;9336:4;9329:5;9326:15;9323:41;;9344:18;;:::i;:::-;9323:41;9391:1;9384:5;9380:13;9373:20;;9228:171;;;:::o;9405:442::-;9554:4;9592:2;9581:9;9577:18;9569:26;;9605:71;9673:1;9662:9;9658:17;9649:6;9605:71;:::i;:::-;9686:72;9754:2;9743:9;9739:18;9730:6;9686:72;:::i;:::-;9768;9836:2;9825:9;9821:18;9812:6;9768:72;:::i;:::-;9405:442;;;;;;:::o;9853:167::-;9993:19;9989:1;9981:6;9977:14;9970:43;9853:167;:::o;10026:366::-;10168:3;10189:67;10253:2;10248:3;10189:67;:::i;:::-;10182:74;;10265:93;10354:3;10265:93;:::i;:::-;10383:2;10378:3;10374:12;10367:19;;10026:366;;;:::o;10398:419::-;10564:4;10602:2;10591:9;10587:18;10579:26;;10651:9;10645:4;10641:20;10637:1;10626:9;10622:17;10615:47;10679:131;10805:4;10679:131;:::i;:::-;10671:139;;10398:419;;;:::o;10823:90::-;10857:7;10900:5;10893:13;10886:21;10875:32;;10823:90;;;:::o;10919:116::-;10989:21;11004:5;10989:21;:::i;:::-;10982:5;10979:32;10969:60;;11025:1;11022;11015:12;10969:60;10919:116;:::o;11041:137::-;11095:5;11126:6;11120:13;11111:22;;11142:30;11166:5;11142:30;:::i;:::-;11041:137;;;;:::o;11184:345::-;11251:6;11300:2;11288:9;11279:7;11275:23;11271:32;11268:119;;;11306:79;;:::i;:::-;11268:119;11426:1;11451:61;11504:7;11495:6;11484:9;11480:22;11451:61;:::i;:::-;11441:71;;11397:125;11184:345;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "850600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"available(address)": "infinite",
								"balanceOf(address)": "2824",
								"lastUpdateTime(address)": "2847",
								"nft()": "infinite",
								"onERC721Received(address,address,uint256,bytes)": "infinite",
								"redeem()": "infinite",
								"rewardPerTokenPerDay()": "2492",
								"rewardToken()": "infinite",
								"rewardWallet()": "2618",
								"stake(uint256)": "infinite",
								"withdraw(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 2582,
									"end": 5500,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 2582,
									"end": 5500,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2582,
									"end": 5500,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3294,
									"end": 3630,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 3294,
									"end": 3630,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3294,
									"end": 3630,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 3294,
									"end": 3630,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 3294,
									"end": 3630,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 3294,
									"end": 3630,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3294,
									"end": 3630,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3294,
									"end": 3630,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 3294,
									"end": 3630,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 3294,
									"end": 3630,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3294,
									"end": 3630,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3294,
									"end": 3630,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3294,
									"end": 3630,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3294,
									"end": 3630,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 3294,
									"end": 3630,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 3294,
									"end": 3630,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3294,
									"end": 3630,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3294,
									"end": 3630,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 3294,
									"end": 3630,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3294,
									"end": 3630,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 3294,
									"end": 3630,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3294,
									"end": 3630,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3294,
									"end": 3630,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3294,
									"end": 3630,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3294,
									"end": 3630,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3294,
									"end": 3630,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3294,
									"end": 3630,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3294,
									"end": 3630,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3294,
									"end": 3630,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 3294,
									"end": 3630,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3294,
									"end": 3630,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3294,
									"end": 3630,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 3294,
									"end": 3630,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 3294,
									"end": 3630,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 3294,
									"end": 3630,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3471,
									"end": 3481,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3457,
									"end": 3460,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3457,
									"end": 3460,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3457,
									"end": 3482,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3457,
									"end": 3482,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3457,
									"end": 3482,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3457,
									"end": 3482,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3457,
									"end": 3482,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3457,
									"end": 3482,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3457,
									"end": 3482,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3457,
									"end": 3482,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3457,
									"end": 3482,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3457,
									"end": 3482,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3457,
									"end": 3482,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3457,
									"end": 3482,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3457,
									"end": 3482,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3457,
									"end": 3482,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3457,
									"end": 3482,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3457,
									"end": 3482,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3457,
									"end": 3482,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3457,
									"end": 3482,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3514,
									"end": 3532,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3493,
									"end": 3504,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 3493,
									"end": 3504,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3493,
									"end": 3533,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3493,
									"end": 3533,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3493,
									"end": 3533,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3493,
									"end": 3533,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3493,
									"end": 3533,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3493,
									"end": 3533,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3493,
									"end": 3533,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3493,
									"end": 3533,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3493,
									"end": 3533,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3493,
									"end": 3533,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3493,
									"end": 3533,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3493,
									"end": 3533,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3493,
									"end": 3533,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3493,
									"end": 3533,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3493,
									"end": 3533,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3493,
									"end": 3533,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3493,
									"end": 3533,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3493,
									"end": 3533,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3559,
									"end": 3578,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3544,
									"end": 3556,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 3544,
									"end": 3556,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3544,
									"end": 3578,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3544,
									"end": 3578,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3544,
									"end": 3578,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3544,
									"end": 3578,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3544,
									"end": 3578,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3544,
									"end": 3578,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3544,
									"end": 3578,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3544,
									"end": 3578,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3544,
									"end": 3578,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3544,
									"end": 3578,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3544,
									"end": 3578,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3544,
									"end": 3578,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3544,
									"end": 3578,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3544,
									"end": 3578,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3544,
									"end": 3578,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3544,
									"end": 3578,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3544,
									"end": 3578,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3544,
									"end": 3578,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3612,
									"end": 3622,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3589,
									"end": 3609,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 3589,
									"end": 3622,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3589,
									"end": 3622,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3589,
									"end": 3622,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3589,
									"end": 3622,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3294,
									"end": 3630,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3294,
									"end": 3630,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3294,
									"end": 3630,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3294,
									"end": 3630,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2582,
									"end": 5500,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 2582,
									"end": 5500,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 6,
									"value": "10"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "10"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 6,
									"value": "12"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "26"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 6,
									"value": "26"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "12"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 845,
									"end": 922,
									"name": "tag",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 845,
									"end": 922,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 882,
									"end": 889,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 911,
									"end": 916,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 900,
									"end": 916,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 900,
									"end": 916,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 845,
									"end": 922,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 845,
									"end": 922,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 845,
									"end": 922,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 845,
									"end": 922,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "tag",
									"source": 6,
									"value": "15"
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "31"
								},
								{
									"begin": 1019,
									"end": 1024,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 1001,
									"end": 1025,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "tag",
									"source": 6,
									"value": "31"
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 994,
									"end": 999,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 991,
									"end": 1026,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "32"
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1040,
									"end": 1041,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1037,
									"end": 1038,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1030,
									"end": 1042,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "tag",
									"source": 6,
									"value": "32"
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 928,
									"end": 1050,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "tag",
									"source": 6,
									"value": "16"
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1113,
									"end": 1118,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1144,
									"end": 1150,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1138,
									"end": 1151,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1129,
									"end": 1151,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1129,
									"end": 1151,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "34"
								},
								{
									"begin": 1187,
									"end": 1192,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "15"
								},
								{
									"begin": 1160,
									"end": 1193,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "tag",
									"source": 6,
									"value": "34"
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1056,
									"end": 1199,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1205,
									"end": 2025,
									"name": "tag",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 1205,
									"end": 2025,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1302,
									"end": 1308,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1310,
									"end": 1316,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1318,
									"end": 1324,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1326,
									"end": 1332,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1375,
									"end": 1378,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 1363,
									"end": 1372,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 1354,
									"end": 1361,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 1350,
									"end": 1373,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 1346,
									"end": 1379,
									"name": "SLT",
									"source": 6
								},
								{
									"begin": 1343,
									"end": 1463,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1343,
									"end": 1463,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "36"
								},
								{
									"begin": 1343,
									"end": 1463,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1382,
									"end": 1461,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "37"
								},
								{
									"begin": 1382,
									"end": 1461,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 1382,
									"end": 1461,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1382,
									"end": 1461,
									"name": "tag",
									"source": 6,
									"value": "37"
								},
								{
									"begin": 1382,
									"end": 1461,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1343,
									"end": 1463,
									"name": "tag",
									"source": 6,
									"value": "36"
								},
								{
									"begin": 1343,
									"end": 1463,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1502,
									"end": 1503,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1527,
									"end": 1591,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "38"
								},
								{
									"begin": 1583,
									"end": 1590,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 1574,
									"end": 1580,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1563,
									"end": 1572,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 1559,
									"end": 1581,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1527,
									"end": 1591,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 1527,
									"end": 1591,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1527,
									"end": 1591,
									"name": "tag",
									"source": 6,
									"value": "38"
								},
								{
									"begin": 1527,
									"end": 1591,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1517,
									"end": 1591,
									"name": "SWAP5",
									"source": 6
								},
								{
									"begin": 1517,
									"end": 1591,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1473,
									"end": 1601,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1640,
									"end": 1642,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1666,
									"end": 1730,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "39"
								},
								{
									"begin": 1722,
									"end": 1729,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 1713,
									"end": 1719,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1702,
									"end": 1711,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 1698,
									"end": 1720,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1666,
									"end": 1730,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 1666,
									"end": 1730,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1666,
									"end": 1730,
									"name": "tag",
									"source": 6,
									"value": "39"
								},
								{
									"begin": 1666,
									"end": 1730,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1656,
									"end": 1730,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 1656,
									"end": 1730,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1611,
									"end": 1740,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1779,
									"end": 1781,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1805,
									"end": 1869,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1861,
									"end": 1868,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 1852,
									"end": 1858,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1841,
									"end": 1850,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 1837,
									"end": 1859,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1805,
									"end": 1869,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 1805,
									"end": 1869,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1805,
									"end": 1869,
									"name": "tag",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1805,
									"end": 1869,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1795,
									"end": 1869,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1795,
									"end": 1869,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1750,
									"end": 1879,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1918,
									"end": 1920,
									"name": "PUSH",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 1944,
									"end": 2008,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 2000,
									"end": 2007,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 1991,
									"end": 1997,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1980,
									"end": 1989,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 1976,
									"end": 1998,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1944,
									"end": 2008,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "16"
								},
								{
									"begin": 1944,
									"end": 2008,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1944,
									"end": 2008,
									"name": "tag",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 1944,
									"end": 2008,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1934,
									"end": 2008,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1934,
									"end": 2008,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1889,
									"end": 2018,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1205,
									"end": 2025,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1205,
									"end": 2025,
									"name": "SWAP6",
									"source": 6
								},
								{
									"begin": 1205,
									"end": 2025,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1205,
									"end": 2025,
									"name": "SWAP5",
									"source": 6
								},
								{
									"begin": 1205,
									"end": 2025,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1205,
									"end": 2025,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1205,
									"end": 2025,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1205,
									"end": 2025,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2582,
									"end": 5500,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 2582,
									"end": 5500,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2582,
									"end": 5500,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2582,
									"end": 5500,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2582,
									"end": 5500,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2582,
									"end": 5500,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2582,
									"end": 5500,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 2582,
									"end": 5500,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2582,
									"end": 5500,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122064b464c6092f486cf518f787809ba4cee6f0c8b82c8b07624e120ab74619c3fd64736f6c634300081b0033",
									".code": [
										{
											"begin": 2582,
											"end": 5500,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2582,
											"end": 5500,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2582,
											"end": 5500,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 5500,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 5500,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 5500,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 5500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2582,
											"end": 5500,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 5500,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2582,
											"end": 5500,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2582,
											"end": 5500,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 5500,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2582,
											"end": 5500,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 5500,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 5500,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2582,
											"end": 5500,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 5500,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 5500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2582,
											"end": 5500,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 5500,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2582,
											"end": 5500,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 5500,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 2582,
											"end": 5500,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 5500,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 5500,
											"name": "PUSH",
											"source": 0,
											"value": "47CCCA02"
										},
										{
											"begin": 2582,
											"end": 5500,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 5500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 2582,
											"end": 5500,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 5500,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 5500,
											"name": "PUSH",
											"source": 0,
											"value": "47CCCA02"
										},
										{
											"begin": 2582,
											"end": 5500,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 5500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 2582,
											"end": 5500,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 5500,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 5500,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 2582,
											"end": 5500,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 5500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 2582,
											"end": 5500,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 5500,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 5500,
											"name": "PUSH",
											"source": 0,
											"value": "A694FC3A"
										},
										{
											"begin": 2582,
											"end": 5500,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 5500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 2582,
											"end": 5500,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 5500,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 5500,
											"name": "PUSH",
											"source": 0,
											"value": "BE040FB0"
										},
										{
											"begin": 2582,
											"end": 5500,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 5500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 2582,
											"end": 5500,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 5500,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 5500,
											"name": "PUSH",
											"source": 0,
											"value": "F7C618C1"
										},
										{
											"begin": 2582,
											"end": 5500,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 5500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2582,
											"end": 5500,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 5500,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 5500,
											"name": "PUSH",
											"source": 0,
											"value": "FB75B2C7"
										},
										{
											"begin": 2582,
											"end": 5500,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 5500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 2582,
											"end": 5500,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 5500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2582,
											"end": 5500,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 5500,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 2582,
											"end": 5500,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 5500,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 5500,
											"name": "PUSH",
											"source": 0,
											"value": "10098AD5"
										},
										{
											"begin": 2582,
											"end": 5500,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 5500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2582,
											"end": 5500,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 5500,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 5500,
											"name": "PUSH",
											"source": 0,
											"value": "150B7A02"
										},
										{
											"begin": 2582,
											"end": 5500,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 5500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2582,
											"end": 5500,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 5500,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 5500,
											"name": "PUSH",
											"source": 0,
											"value": "2CE9AEAD"
										},
										{
											"begin": 2582,
											"end": 5500,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 5500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2582,
											"end": 5500,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 5500,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 5500,
											"name": "PUSH",
											"source": 0,
											"value": "2D6A1FA6"
										},
										{
											"begin": 2582,
											"end": 5500,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 5500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 2582,
											"end": 5500,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 5500,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 5500,
											"name": "PUSH",
											"source": 0,
											"value": "2E1A7D4D"
										},
										{
											"begin": 2582,
											"end": 5500,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 5500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 2582,
											"end": 5500,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 5500,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2582,
											"end": 5500,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 5500,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2582,
											"end": 5500,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2582,
											"end": 5500,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3921,
											"end": 4230,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 3921,
											"end": 4230,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3921,
											"end": 4230,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 3921,
											"end": 4230,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3921,
											"end": 4230,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3921,
											"end": 4230,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3921,
											"end": 4230,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3921,
											"end": 4230,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3921,
											"end": 4230,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3921,
											"end": 4230,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3921,
											"end": 4230,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 3921,
											"end": 4230,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3921,
											"end": 4230,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3921,
											"end": 4230,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 3921,
											"end": 4230,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3921,
											"end": 4230,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 3921,
											"end": 4230,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3921,
											"end": 4230,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 3921,
											"end": 4230,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3921,
											"end": 4230,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 3921,
											"end": 4230,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3921,
											"end": 4230,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3921,
											"end": 4230,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3921,
											"end": 4230,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 3921,
											"end": 4230,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3921,
											"end": 4230,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3921,
											"end": 4230,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3921,
											"end": 4230,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3921,
											"end": 4230,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 3921,
											"end": 4230,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3921,
											"end": 4230,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3921,
											"end": 4230,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3921,
											"end": 4230,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3921,
											"end": 4230,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3921,
											"end": 4230,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3921,
											"end": 4230,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3921,
											"end": 4230,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 5199,
											"end": 5497,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5199,
											"end": 5497,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5199,
											"end": 5497,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 5199,
											"end": 5497,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5199,
											"end": 5497,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5199,
											"end": 5497,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5199,
											"end": 5497,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5199,
											"end": 5497,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5199,
											"end": 5497,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5199,
											"end": 5497,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5199,
											"end": 5497,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 5199,
											"end": 5497,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5199,
											"end": 5497,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5199,
											"end": 5497,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 5199,
											"end": 5497,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5199,
											"end": 5497,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 5199,
											"end": 5497,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5199,
											"end": 5497,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 5199,
											"end": 5497,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5199,
											"end": 5497,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 5199,
											"end": 5497,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5199,
											"end": 5497,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5199,
											"end": 5497,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5199,
											"end": 5497,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 5199,
											"end": 5497,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5199,
											"end": 5497,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5199,
											"end": 5497,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 5199,
											"end": 5497,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5199,
											"end": 5497,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 5199,
											"end": 5497,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5199,
											"end": 5497,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5199,
											"end": 5497,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5199,
											"end": 5497,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5199,
											"end": 5497,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5199,
											"end": 5497,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5199,
											"end": 5497,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5199,
											"end": 5497,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2916,
											"end": 2965,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2916,
											"end": 2965,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2916,
											"end": 2965,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2916,
											"end": 2965,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2916,
											"end": 2965,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2916,
											"end": 2965,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2916,
											"end": 2965,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2916,
											"end": 2965,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2916,
											"end": 2965,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2916,
											"end": 2965,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2916,
											"end": 2965,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2916,
											"end": 2965,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2916,
											"end": 2965,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2916,
											"end": 2965,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 2916,
											"end": 2965,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2916,
											"end": 2965,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2916,
											"end": 2965,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2916,
											"end": 2965,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 2916,
											"end": 2965,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2916,
											"end": 2965,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2916,
											"end": 2965,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2916,
											"end": 2965,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2916,
											"end": 2965,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2916,
											"end": 2965,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2916,
											"end": 2965,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2916,
											"end": 2965,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2916,
											"end": 2965,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2916,
											"end": 2965,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2916,
											"end": 2965,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2916,
											"end": 2965,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2916,
											"end": 2965,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2916,
											"end": 2965,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2916,
											"end": 2965,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2916,
											"end": 2965,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2916,
											"end": 2965,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2916,
											"end": 2965,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2916,
											"end": 2965,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2766,
											"end": 2801,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 2766,
											"end": 2801,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2766,
											"end": 2801,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2766,
											"end": 2801,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2766,
											"end": 2801,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2766,
											"end": 2801,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2766,
											"end": 2801,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2766,
											"end": 2801,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2766,
											"end": 2801,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2766,
											"end": 2801,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 2766,
											"end": 2801,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2766,
											"end": 2801,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2766,
											"end": 2801,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2766,
											"end": 2801,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2766,
											"end": 2801,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 2766,
											"end": 2801,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2766,
											"end": 2801,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2766,
											"end": 2801,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2766,
											"end": 2801,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2766,
											"end": 2801,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2766,
											"end": 2801,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2766,
											"end": 2801,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2766,
											"end": 2801,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4558,
											"end": 4852,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 4558,
											"end": 4852,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4558,
											"end": 4852,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 4558,
											"end": 4852,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4558,
											"end": 4852,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4558,
											"end": 4852,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4558,
											"end": 4852,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4558,
											"end": 4852,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4558,
											"end": 4852,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4558,
											"end": 4852,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4558,
											"end": 4852,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 4558,
											"end": 4852,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4558,
											"end": 4852,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4558,
											"end": 4852,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 4558,
											"end": 4852,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4558,
											"end": 4852,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 4558,
											"end": 4852,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4558,
											"end": 4852,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 4558,
											"end": 4852,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4558,
											"end": 4852,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 4558,
											"end": 4852,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4558,
											"end": 4852,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2645,
											"end": 2663,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 2645,
											"end": 2663,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2645,
											"end": 2663,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 2645,
											"end": 2663,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 2645,
											"end": 2663,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2645,
											"end": 2663,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 2645,
											"end": 2663,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2645,
											"end": 2663,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2645,
											"end": 2663,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2645,
											"end": 2663,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2645,
											"end": 2663,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2645,
											"end": 2663,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2645,
											"end": 2663,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 2645,
											"end": 2663,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2645,
											"end": 2663,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2645,
											"end": 2663,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2645,
											"end": 2663,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2645,
											"end": 2663,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2645,
											"end": 2663,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2645,
											"end": 2663,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2645,
											"end": 2663,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2645,
											"end": 2663,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2645,
											"end": 2663,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2865,
											"end": 2909,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 2865,
											"end": 2909,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2865,
											"end": 2909,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 2865,
											"end": 2909,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2865,
											"end": 2909,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2865,
											"end": 2909,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2865,
											"end": 2909,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2865,
											"end": 2909,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2865,
											"end": 2909,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2865,
											"end": 2909,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2865,
											"end": 2909,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 2865,
											"end": 2909,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2865,
											"end": 2909,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2865,
											"end": 2909,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 2865,
											"end": 2909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2865,
											"end": 2909,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 2865,
											"end": 2909,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2865,
											"end": 2909,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 2865,
											"end": 2909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2865,
											"end": 2909,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 2865,
											"end": 2909,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2865,
											"end": 2909,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2865,
											"end": 2909,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2865,
											"end": 2909,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 2865,
											"end": 2909,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2865,
											"end": 2909,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2865,
											"end": 2909,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2865,
											"end": 2909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2865,
											"end": 2909,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 2865,
											"end": 2909,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2865,
											"end": 2909,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2865,
											"end": 2909,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2865,
											"end": 2909,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2865,
											"end": 2909,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2865,
											"end": 2909,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2865,
											"end": 2909,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2865,
											"end": 2909,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4326,
											"end": 4444,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 4326,
											"end": 4444,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4326,
											"end": 4444,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 4326,
											"end": 4444,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4326,
											"end": 4444,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4326,
											"end": 4444,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4326,
											"end": 4444,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4326,
											"end": 4444,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4326,
											"end": 4444,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4326,
											"end": 4444,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4326,
											"end": 4444,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 4326,
											"end": 4444,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4326,
											"end": 4444,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4326,
											"end": 4444,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 4326,
											"end": 4444,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4326,
											"end": 4444,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 4326,
											"end": 4444,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4326,
											"end": 4444,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 4326,
											"end": 4444,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4326,
											"end": 4444,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 4326,
											"end": 4444,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4326,
											"end": 4444,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 4930,
											"end": 5191,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 4930,
											"end": 5191,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4930,
											"end": 5191,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 4930,
											"end": 5191,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 4930,
											"end": 5191,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4930,
											"end": 5191,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 4930,
											"end": 5191,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4930,
											"end": 5191,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2670,
											"end": 2695,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2670,
											"end": 2695,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2670,
											"end": 2695,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 2670,
											"end": 2695,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 2670,
											"end": 2695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2670,
											"end": 2695,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 2670,
											"end": 2695,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2670,
											"end": 2695,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2670,
											"end": 2695,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2670,
											"end": 2695,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 2670,
											"end": 2695,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2670,
											"end": 2695,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2670,
											"end": 2695,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 2670,
											"end": 2695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2670,
											"end": 2695,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 2670,
											"end": 2695,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2670,
											"end": 2695,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2670,
											"end": 2695,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2670,
											"end": 2695,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2670,
											"end": 2695,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2670,
											"end": 2695,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2670,
											"end": 2695,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2670,
											"end": 2695,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2702,
											"end": 2729,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 2702,
											"end": 2729,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2702,
											"end": 2729,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 2702,
											"end": 2729,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 2702,
											"end": 2729,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2702,
											"end": 2729,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 2702,
											"end": 2729,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2702,
											"end": 2729,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2702,
											"end": 2729,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2702,
											"end": 2729,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 2702,
											"end": 2729,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2702,
											"end": 2729,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2702,
											"end": 2729,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 2702,
											"end": 2729,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2702,
											"end": 2729,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 2702,
											"end": 2729,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2702,
											"end": 2729,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2702,
											"end": 2729,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2702,
											"end": 2729,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2702,
											"end": 2729,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2702,
											"end": 2729,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2702,
											"end": 2729,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2702,
											"end": 2729,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3921,
											"end": 4230,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 3921,
											"end": 4230,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3978,
											"end": 3985,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3998,
											"end": 4017,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4038,
											"end": 4052,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 4038,
											"end": 4061,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4053,
											"end": 4060,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4038,
											"end": 4061,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4038,
											"end": 4061,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4038,
											"end": 4061,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4038,
											"end": 4061,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4038,
											"end": 4061,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4038,
											"end": 4061,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4038,
											"end": 4061,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4038,
											"end": 4061,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4038,
											"end": 4061,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4038,
											"end": 4061,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4038,
											"end": 4061,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4038,
											"end": 4061,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4038,
											"end": 4061,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4038,
											"end": 4061,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4038,
											"end": 4061,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4038,
											"end": 4061,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4020,
											"end": 4035,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 4020,
											"end": 4061,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 4020,
											"end": 4061,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4020,
											"end": 4061,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4020,
											"end": 4061,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 4020,
											"end": 4061,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4020,
											"end": 4061,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 4020,
											"end": 4061,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3998,
											"end": 4061,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3998,
											"end": 4061,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4072,
											"end": 4086,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4175,
											"end": 4180,
											"name": "PUSH",
											"source": 0,
											"value": "15180"
										},
										{
											"begin": 4151,
											"end": 4171,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 4151,
											"end": 4171,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4124,
											"end": 4135,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4090,
											"end": 4099,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 4090,
											"end": 4108,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4100,
											"end": 4107,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 4090,
											"end": 4108,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4090,
											"end": 4108,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4090,
											"end": 4108,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4090,
											"end": 4108,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4090,
											"end": 4108,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4090,
											"end": 4108,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4090,
											"end": 4108,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4090,
											"end": 4108,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4090,
											"end": 4108,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4090,
											"end": 4108,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4090,
											"end": 4108,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4090,
											"end": 4108,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4090,
											"end": 4108,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4090,
											"end": 4108,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4090,
											"end": 4108,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4090,
											"end": 4108,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4090,
											"end": 4135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 4090,
											"end": 4135,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4090,
											"end": 4135,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4090,
											"end": 4135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 4090,
											"end": 4135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4090,
											"end": 4135,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 4090,
											"end": 4135,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4090,
											"end": 4171,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 4090,
											"end": 4171,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4090,
											"end": 4171,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4090,
											"end": 4171,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 4090,
											"end": 4171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4090,
											"end": 4171,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 4090,
											"end": 4171,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4089,
											"end": 4180,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 4089,
											"end": 4180,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4089,
											"end": 4180,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4089,
											"end": 4180,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 4089,
											"end": 4180,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4089,
											"end": 4180,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 4089,
											"end": 4180,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4072,
											"end": 4180,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4072,
											"end": 4180,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4216,
											"end": 4222,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4198,
											"end": 4204,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 4198,
											"end": 4213,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4205,
											"end": 4212,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 4198,
											"end": 4213,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4198,
											"end": 4213,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4198,
											"end": 4213,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4198,
											"end": 4213,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4198,
											"end": 4213,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4198,
											"end": 4213,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4198,
											"end": 4213,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4198,
											"end": 4213,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4198,
											"end": 4213,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4198,
											"end": 4213,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4198,
											"end": 4213,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4198,
											"end": 4213,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4198,
											"end": 4213,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4198,
											"end": 4213,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4198,
											"end": 4213,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4198,
											"end": 4213,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4198,
											"end": 4222,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 4198,
											"end": 4222,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4198,
											"end": 4222,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4198,
											"end": 4222,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 4198,
											"end": 4222,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4198,
											"end": 4222,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 4198,
											"end": 4222,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4191,
											"end": 4222,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4191,
											"end": 4222,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4191,
											"end": 4222,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4191,
											"end": 4222,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3921,
											"end": 4230,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3921,
											"end": 4230,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3921,
											"end": 4230,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3921,
											"end": 4230,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5199,
											"end": 5497,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 5199,
											"end": 5497,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5355,
											"end": 5361,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5340,
											"end": 5344,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3700,
											"end": 3718,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 3710,
											"end": 3717,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3700,
											"end": 3709,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 3700,
											"end": 3718,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3700,
											"end": 3718,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 3700,
											"end": 3718,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3682,
											"end": 3688,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 3682,
											"end": 3697,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3689,
											"end": 3696,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3682,
											"end": 3697,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3682,
											"end": 3697,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3682,
											"end": 3697,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3682,
											"end": 3697,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3682,
											"end": 3697,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3682,
											"end": 3697,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3682,
											"end": 3697,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3682,
											"end": 3697,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3682,
											"end": 3697,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3682,
											"end": 3697,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3682,
											"end": 3697,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3682,
											"end": 3697,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3682,
											"end": 3697,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3682,
											"end": 3697,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3682,
											"end": 3697,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3682,
											"end": 3718,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3682,
											"end": 3718,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3682,
											"end": 3718,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3682,
											"end": 3718,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3755,
											"end": 3770,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 3729,
											"end": 3743,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 3729,
											"end": 3752,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3744,
											"end": 3751,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3729,
											"end": 3752,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3729,
											"end": 3752,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3729,
											"end": 3752,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3729,
											"end": 3752,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3729,
											"end": 3752,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3729,
											"end": 3752,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3729,
											"end": 3752,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3729,
											"end": 3752,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3729,
											"end": 3752,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3729,
											"end": 3752,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3729,
											"end": 3752,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3729,
											"end": 3752,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3729,
											"end": 3752,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3729,
											"end": 3752,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3729,
											"end": 3752,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3729,
											"end": 3770,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3729,
											"end": 3770,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3729,
											"end": 3770,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3729,
											"end": 3770,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5398,
											"end": 5402,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5374,
											"end": 5386,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5374,
											"end": 5395,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5387,
											"end": 5394,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 5374,
											"end": 5395,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5374,
											"end": 5395,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5374,
											"end": 5395,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5374,
											"end": 5395,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5374,
											"end": 5395,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5374,
											"end": 5395,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5374,
											"end": 5395,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5374,
											"end": 5395,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5374,
											"end": 5395,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5374,
											"end": 5395,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5374,
											"end": 5395,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5374,
											"end": 5395,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5374,
											"end": 5402,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 5374,
											"end": 5402,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 5374,
											"end": 5402,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5374,
											"end": 5402,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5374,
											"end": 5402,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5374,
											"end": 5402,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5374,
											"end": 5402,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 5374,
											"end": 5402,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 5374,
											"end": 5402,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5374,
											"end": 5402,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5374,
											"end": 5402,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5374,
											"end": 5402,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5374,
											"end": 5402,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5374,
											"end": 5402,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 5374,
											"end": 5402,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 5374,
											"end": 5402,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5374,
											"end": 5402,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 5374,
											"end": 5402,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5413,
											"end": 5422,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 5413,
											"end": 5428,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5423,
											"end": 5427,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 5413,
											"end": 5428,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5413,
											"end": 5428,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5413,
											"end": 5428,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5413,
											"end": 5428,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5413,
											"end": 5428,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5413,
											"end": 5428,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5413,
											"end": 5428,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5413,
											"end": 5428,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5413,
											"end": 5428,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5413,
											"end": 5428,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5413,
											"end": 5428,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5413,
											"end": 5428,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5413,
											"end": 5428,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5413,
											"end": 5428,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5413,
											"end": 5428,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5413,
											"end": 5428,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5413,
											"end": 5430,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5413,
											"end": 5430,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5413,
											"end": 5430,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5413,
											"end": 5430,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5413,
											"end": 5430,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5413,
											"end": 5430,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5413,
											"end": 5430,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 5413,
											"end": 5430,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5413,
											"end": 5430,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 5413,
											"end": 5430,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5413,
											"end": 5430,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 5413,
											"end": 5430,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5413,
											"end": 5430,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5413,
											"end": 5430,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5413,
											"end": 5430,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5413,
											"end": 5430,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 5413,
											"end": 5430,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5448,
											"end": 5489,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "150B7A02"
										},
										{
											"begin": 5448,
											"end": 5489,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 5448,
											"end": 5489,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 5441,
											"end": 5489,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5441,
											"end": 5489,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5199,
											"end": 5497,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5199,
											"end": 5497,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 5199,
											"end": 5497,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 5199,
											"end": 5497,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5199,
											"end": 5497,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5199,
											"end": 5497,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5199,
											"end": 5497,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5199,
											"end": 5497,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5199,
											"end": 5497,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2916,
											"end": 2965,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 2916,
											"end": 2965,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2916,
											"end": 2965,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 2916,
											"end": 2965,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2916,
											"end": 2965,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2916,
											"end": 2965,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2916,
											"end": 2965,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2916,
											"end": 2965,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2916,
											"end": 2965,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2916,
											"end": 2965,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2916,
											"end": 2965,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2916,
											"end": 2965,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2916,
											"end": 2965,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2916,
											"end": 2965,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2916,
											"end": 2965,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2916,
											"end": 2965,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2916,
											"end": 2965,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2916,
											"end": 2965,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2916,
											"end": 2965,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2766,
											"end": 2801,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2766,
											"end": 2801,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2766,
											"end": 2801,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2766,
											"end": 2801,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2766,
											"end": 2801,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2766,
											"end": 2801,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4558,
											"end": 4852,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 4558,
											"end": 4852,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4609,
											"end": 4621,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 4609,
											"end": 4619,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 4609,
											"end": 4621,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4609,
											"end": 4621,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 4609,
											"end": 4621,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3700,
											"end": 3718,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 3710,
											"end": 3717,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3700,
											"end": 3709,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 3700,
											"end": 3718,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3700,
											"end": 3718,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 3700,
											"end": 3718,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3682,
											"end": 3688,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 3682,
											"end": 3697,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3689,
											"end": 3696,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3682,
											"end": 3697,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3682,
											"end": 3697,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3682,
											"end": 3697,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3682,
											"end": 3697,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3682,
											"end": 3697,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3682,
											"end": 3697,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3682,
											"end": 3697,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3682,
											"end": 3697,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3682,
											"end": 3697,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3682,
											"end": 3697,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3682,
											"end": 3697,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3682,
											"end": 3697,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3682,
											"end": 3697,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3682,
											"end": 3697,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3682,
											"end": 3697,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3682,
											"end": 3718,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3682,
											"end": 3718,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3682,
											"end": 3718,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3682,
											"end": 3718,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3755,
											"end": 3770,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 3729,
											"end": 3743,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 3729,
											"end": 3752,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3744,
											"end": 3751,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3729,
											"end": 3752,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3729,
											"end": 3752,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3729,
											"end": 3752,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3729,
											"end": 3752,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3729,
											"end": 3752,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3729,
											"end": 3752,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3729,
											"end": 3752,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3729,
											"end": 3752,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3729,
											"end": 3752,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3729,
											"end": 3752,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3729,
											"end": 3752,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3729,
											"end": 3752,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3729,
											"end": 3752,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3729,
											"end": 3752,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3729,
											"end": 3752,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3729,
											"end": 3770,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3729,
											"end": 3770,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3729,
											"end": 3770,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3729,
											"end": 3770,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4667,
											"end": 4679,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 4667,
											"end": 4677,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 4667,
											"end": 4679,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4667,
											"end": 4679,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 4667,
											"end": 4679,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4679,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4642,
											"end": 4679,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4654,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4642,
											"end": 4663,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4655,
											"end": 4662,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4663,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4663,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4663,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4642,
											"end": 4663,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4663,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4663,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4663,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4663,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4642,
											"end": 4663,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4663,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4642,
											"end": 4663,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4663,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4642,
											"end": 4663,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4663,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4663,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4663,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4642,
											"end": 4663,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4663,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4663,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4663,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4642,
											"end": 4663,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4679,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4642,
											"end": 4679,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4679,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4634,
											"end": 4704,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 4634,
											"end": 4704,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4634,
											"end": 4704,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4634,
											"end": 4704,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4634,
											"end": 4704,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4634,
											"end": 4704,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4634,
											"end": 4704,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4634,
											"end": 4704,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4634,
											"end": 4704,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4634,
											"end": 4704,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 4634,
											"end": 4704,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4634,
											"end": 4704,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 4634,
											"end": 4704,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4634,
											"end": 4704,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 4634,
											"end": 4704,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4634,
											"end": 4704,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4634,
											"end": 4704,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4634,
											"end": 4704,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4634,
											"end": 4704,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4634,
											"end": 4704,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4634,
											"end": 4704,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4634,
											"end": 4704,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4634,
											"end": 4704,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 4634,
											"end": 4704,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4722,
											"end": 4734,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4722,
											"end": 4743,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4735,
											"end": 4742,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4722,
											"end": 4743,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4722,
											"end": 4743,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4722,
											"end": 4743,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4722,
											"end": 4743,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4722,
											"end": 4743,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4722,
											"end": 4743,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4722,
											"end": 4743,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4722,
											"end": 4743,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4722,
											"end": 4743,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4722,
											"end": 4743,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4722,
											"end": 4743,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4722,
											"end": 4743,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4715,
											"end": 4743,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4715,
											"end": 4743,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 4715,
											"end": 4743,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4715,
											"end": 4743,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4715,
											"end": 4743,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4715,
											"end": 4743,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4715,
											"end": 4743,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 4715,
											"end": 4743,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 4715,
											"end": 4743,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4715,
											"end": 4743,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4715,
											"end": 4743,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 4754,
											"end": 4763,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 4754,
											"end": 4777,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4764,
											"end": 4776,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 4764,
											"end": 4774,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 4764,
											"end": 4776,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4764,
											"end": 4776,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 4764,
											"end": 4776,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4754,
											"end": 4777,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4754,
											"end": 4777,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4754,
											"end": 4777,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4754,
											"end": 4777,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4754,
											"end": 4777,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4754,
											"end": 4777,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4754,
											"end": 4777,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4754,
											"end": 4777,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4754,
											"end": 4777,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4754,
											"end": 4777,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4754,
											"end": 4777,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4754,
											"end": 4777,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4754,
											"end": 4777,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4754,
											"end": 4777,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4754,
											"end": 4777,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4754,
											"end": 4777,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4754,
											"end": 4779,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4754,
											"end": 4779,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4754,
											"end": 4779,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4754,
											"end": 4779,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4754,
											"end": 4779,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4754,
											"end": 4779,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4754,
											"end": 4779,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 4754,
											"end": 4779,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4754,
											"end": 4779,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 4754,
											"end": 4779,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4754,
											"end": 4779,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 4754,
											"end": 4779,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4754,
											"end": 4779,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4754,
											"end": 4779,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4754,
											"end": 4779,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4754,
											"end": 4779,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 4754,
											"end": 4779,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4790,
											"end": 4793,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4790,
											"end": 4793,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4790,
											"end": 4793,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4790,
											"end": 4793,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4790,
											"end": 4793,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4790,
											"end": 4793,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4790,
											"end": 4793,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 4790,
											"end": 4793,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4790,
											"end": 4793,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 4790,
											"end": 4793,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4790,
											"end": 4793,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4790,
											"end": 4806,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4790,
											"end": 4806,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4790,
											"end": 4806,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 4815,
											"end": 4819,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 4822,
											"end": 4834,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 4822,
											"end": 4832,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 4822,
											"end": 4834,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4822,
											"end": 4834,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 4822,
											"end": 4834,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4836,
											"end": 4843,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4790,
											"end": 4844,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4790,
											"end": 4844,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4790,
											"end": 4844,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4790,
											"end": 4844,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4790,
											"end": 4844,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4790,
											"end": 4844,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 4790,
											"end": 4844,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 4790,
											"end": 4844,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4790,
											"end": 4844,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4790,
											"end": 4844,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4790,
											"end": 4844,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4790,
											"end": 4844,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 4790,
											"end": 4844,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 4790,
											"end": 4844,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4790,
											"end": 4844,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4790,
											"end": 4844,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4790,
											"end": 4844,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 4790,
											"end": 4844,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4790,
											"end": 4844,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 4790,
											"end": 4844,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4790,
											"end": 4844,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4790,
											"end": 4844,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4790,
											"end": 4844,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4790,
											"end": 4844,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4790,
											"end": 4844,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4790,
											"end": 4844,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4790,
											"end": 4844,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4790,
											"end": 4844,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4790,
											"end": 4844,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 4790,
											"end": 4844,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4790,
											"end": 4844,
											"modifierDepth": 1,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 4790,
											"end": 4844,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4790,
											"end": 4844,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4790,
											"end": 4844,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4790,
											"end": 4844,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 4790,
											"end": 4844,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4790,
											"end": 4844,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4790,
											"end": 4844,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4790,
											"end": 4844,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4790,
											"end": 4844,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 4790,
											"end": 4844,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4790,
											"end": 4844,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4790,
											"end": 4844,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 4790,
											"end": 4844,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 4790,
											"end": 4844,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4790,
											"end": 4844,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4790,
											"end": 4844,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4790,
											"end": 4844,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 4790,
											"end": 4844,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4790,
											"end": 4844,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 4790,
											"end": 4844,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4790,
											"end": 4844,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4790,
											"end": 4844,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 4790,
											"end": 4844,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 4790,
											"end": 4844,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4790,
											"end": 4844,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4790,
											"end": 4844,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 4790,
											"end": 4844,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4790,
											"end": 4844,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4790,
											"end": 4844,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4790,
											"end": 4844,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4790,
											"end": 4844,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4558,
											"end": 4852,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4558,
											"end": 4852,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4558,
											"end": 4852,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2645,
											"end": 2663,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 2645,
											"end": 2663,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2645,
											"end": 2663,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2645,
											"end": 2663,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2645,
											"end": 2663,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2645,
											"end": 2663,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2645,
											"end": 2663,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2645,
											"end": 2663,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2645,
											"end": 2663,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2645,
											"end": 2663,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2645,
											"end": 2663,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2645,
											"end": 2663,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2645,
											"end": 2663,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2645,
											"end": 2663,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2645,
											"end": 2663,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2865,
											"end": 2909,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 2865,
											"end": 2909,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2865,
											"end": 2909,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2865,
											"end": 2909,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2865,
											"end": 2909,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2865,
											"end": 2909,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2865,
											"end": 2909,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2865,
											"end": 2909,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2865,
											"end": 2909,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2865,
											"end": 2909,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2865,
											"end": 2909,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2865,
											"end": 2909,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2865,
											"end": 2909,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2865,
											"end": 2909,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2865,
											"end": 2909,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2865,
											"end": 2909,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2865,
											"end": 2909,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2865,
											"end": 2909,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2865,
											"end": 2909,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4326,
											"end": 4444,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 4326,
											"end": 4444,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4381,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4378,
											"end": 4381,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4378,
											"end": 4381,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4381,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4381,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4381,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4378,
											"end": 4381,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4381,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4381,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4381,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4378,
											"end": 4381,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4398,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4378,
											"end": 4398,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4398,
											"name": "PUSH",
											"source": 0,
											"value": "42842E0E"
										},
										{
											"begin": 4399,
											"end": 4411,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 4399,
											"end": 4409,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 4399,
											"end": 4411,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4399,
											"end": 4411,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 4399,
											"end": 4411,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4421,
											"end": 4425,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 4428,
											"end": 4435,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4436,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4378,
											"end": 4436,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4436,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4436,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4378,
											"end": 4436,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4436,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 4378,
											"end": 4436,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4436,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4436,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4436,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4378,
											"end": 4436,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4436,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 4378,
											"end": 4436,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4436,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4436,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4436,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4436,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 4378,
											"end": 4436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4436,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 4378,
											"end": 4436,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4436,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4378,
											"end": 4436,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4378,
											"end": 4436,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4436,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4436,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4436,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4436,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4436,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4378,
											"end": 4436,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4436,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4436,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4436,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4436,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4436,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4436,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 4378,
											"end": 4436,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4436,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4378,
											"end": 4436,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4378,
											"end": 4436,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4436,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 4378,
											"end": 4436,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4436,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4436,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4436,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4436,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4436,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4436,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4436,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 4378,
											"end": 4436,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4436,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4436,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4378,
											"end": 4436,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4378,
											"end": 4436,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4436,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4436,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4378,
											"end": 4436,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4436,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 4378,
											"end": 4436,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4436,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4436,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4436,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4436,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4326,
											"end": 4444,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4326,
											"end": 4444,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4930,
											"end": 5191,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 4930,
											"end": 5191,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4964,
											"end": 4976,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 4964,
											"end": 4974,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 4964,
											"end": 4976,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4964,
											"end": 4976,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 4964,
											"end": 4976,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3700,
											"end": 3718,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3710,
											"end": 3717,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3700,
											"end": 3709,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 3700,
											"end": 3718,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3700,
											"end": 3718,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3700,
											"end": 3718,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3682,
											"end": 3688,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 3682,
											"end": 3697,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3689,
											"end": 3696,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3682,
											"end": 3697,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3682,
											"end": 3697,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3682,
											"end": 3697,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3682,
											"end": 3697,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3682,
											"end": 3697,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3682,
											"end": 3697,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3682,
											"end": 3697,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3682,
											"end": 3697,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3682,
											"end": 3697,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3682,
											"end": 3697,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3682,
											"end": 3697,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3682,
											"end": 3697,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3682,
											"end": 3697,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3682,
											"end": 3697,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3682,
											"end": 3697,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3682,
											"end": 3718,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3682,
											"end": 3718,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3682,
											"end": 3718,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3682,
											"end": 3718,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3755,
											"end": 3770,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 3729,
											"end": 3743,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 3729,
											"end": 3752,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3744,
											"end": 3751,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3729,
											"end": 3752,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3729,
											"end": 3752,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3729,
											"end": 3752,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3729,
											"end": 3752,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3729,
											"end": 3752,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3729,
											"end": 3752,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3729,
											"end": 3752,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3729,
											"end": 3752,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3729,
											"end": 3752,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3729,
											"end": 3752,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3729,
											"end": 3752,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3729,
											"end": 3752,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3729,
											"end": 3752,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3729,
											"end": 3752,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3729,
											"end": 3752,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3729,
											"end": 3770,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3729,
											"end": 3770,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3729,
											"end": 3770,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3729,
											"end": 3770,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4989,
											"end": 5003,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5006,
											"end": 5012,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 5006,
											"end": 5026,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5013,
											"end": 5025,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 5013,
											"end": 5023,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 5013,
											"end": 5025,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5013,
											"end": 5025,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 5013,
											"end": 5025,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5006,
											"end": 5026,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5006,
											"end": 5026,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5006,
											"end": 5026,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5006,
											"end": 5026,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5006,
											"end": 5026,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5006,
											"end": 5026,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5006,
											"end": 5026,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5006,
											"end": 5026,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5006,
											"end": 5026,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5006,
											"end": 5026,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5006,
											"end": 5026,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5006,
											"end": 5026,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5006,
											"end": 5026,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5006,
											"end": 5026,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5006,
											"end": 5026,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5006,
											"end": 5026,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4989,
											"end": 5026,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4989,
											"end": 5026,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5054,
											"end": 5055,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5045,
											"end": 5051,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5045,
											"end": 5055,
											"modifierDepth": 1,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 5037,
											"end": 5077,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 5037,
											"end": 5077,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5037,
											"end": 5077,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5037,
											"end": 5077,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5037,
											"end": 5077,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5037,
											"end": 5077,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5037,
											"end": 5077,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5037,
											"end": 5077,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5037,
											"end": 5077,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5037,
											"end": 5077,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 5037,
											"end": 5077,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5037,
											"end": 5077,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 5037,
											"end": 5077,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5037,
											"end": 5077,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 5037,
											"end": 5077,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5037,
											"end": 5077,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5037,
											"end": 5077,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5037,
											"end": 5077,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5037,
											"end": 5077,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5037,
											"end": 5077,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5037,
											"end": 5077,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5037,
											"end": 5077,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5037,
											"end": 5077,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 5037,
											"end": 5077,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5111,
											"end": 5112,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5088,
											"end": 5094,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 5088,
											"end": 5108,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5095,
											"end": 5107,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 5095,
											"end": 5105,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 5095,
											"end": 5107,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5095,
											"end": 5107,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 5095,
											"end": 5107,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5088,
											"end": 5108,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5088,
											"end": 5108,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5088,
											"end": 5108,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5088,
											"end": 5108,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5088,
											"end": 5108,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5088,
											"end": 5108,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5088,
											"end": 5108,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5088,
											"end": 5108,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5088,
											"end": 5108,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5088,
											"end": 5108,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5088,
											"end": 5108,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5088,
											"end": 5108,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5088,
											"end": 5108,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5088,
											"end": 5108,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5088,
											"end": 5108,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5088,
											"end": 5112,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5088,
											"end": 5112,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5088,
											"end": 5112,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 5088,
											"end": 5112,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5134,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5123,
											"end": 5134,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5123,
											"end": 5134,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5134,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5134,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5134,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 5123,
											"end": 5134,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5134,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5134,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5134,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5123,
											"end": 5134,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5147,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5123,
											"end": 5147,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5147,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 5148,
											"end": 5160,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 5148,
											"end": 5160,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5148,
											"end": 5160,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5148,
											"end": 5160,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5148,
											"end": 5160,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5148,
											"end": 5160,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 5148,
											"end": 5160,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 5148,
											"end": 5160,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5148,
											"end": 5160,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 5148,
											"end": 5160,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5148,
											"end": 5160,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5162,
											"end": 5174,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 5162,
											"end": 5172,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 5162,
											"end": 5174,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5162,
											"end": 5174,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 5162,
											"end": 5174,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5176,
											"end": 5182,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5183,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5123,
											"end": 5183,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5183,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5183,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5123,
											"end": 5183,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5183,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 5123,
											"end": 5183,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5183,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5183,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5183,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5123,
											"end": 5183,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5183,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 5123,
											"end": 5183,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5183,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5183,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5183,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5183,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 5123,
											"end": 5183,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5183,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 5123,
											"end": 5183,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5183,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5123,
											"end": 5183,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5123,
											"end": 5183,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5183,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5183,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5183,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5183,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5183,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5123,
											"end": 5183,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5183,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5183,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5183,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5183,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5183,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5183,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 5123,
											"end": 5183,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5183,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5183,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5123,
											"end": 5183,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5123,
											"end": 5183,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5183,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5183,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5123,
											"end": 5183,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5183,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 5123,
											"end": 5183,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5183,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5183,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5183,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5183,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5183,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5123,
											"end": 5183,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5183,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5183,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 5123,
											"end": 5183,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5183,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 5123,
											"end": 5183,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5183,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5183,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5183,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5183,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5183,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5183,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5123,
											"end": 5183,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5183,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5183,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5183,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5183,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5183,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 5123,
											"end": 5183,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5183,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5183,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 5123,
											"end": 5183,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5183,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 5123,
											"end": 5183,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5183,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4978,
											"end": 5191,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4930,
											"end": 5191,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4930,
											"end": 5191,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2670,
											"end": 2695,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 2670,
											"end": 2695,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2670,
											"end": 2695,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2670,
											"end": 2695,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2670,
											"end": 2695,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2670,
											"end": 2695,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2670,
											"end": 2695,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2670,
											"end": 2695,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2670,
											"end": 2695,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2670,
											"end": 2695,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2670,
											"end": 2695,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2670,
											"end": 2695,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2670,
											"end": 2695,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2670,
											"end": 2695,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2670,
											"end": 2695,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2702,
											"end": 2729,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 2702,
											"end": 2729,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2702,
											"end": 2729,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2702,
											"end": 2729,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2702,
											"end": 2729,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2702,
											"end": 2729,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2702,
											"end": 2729,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2702,
											"end": 2729,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2702,
											"end": 2729,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2702,
											"end": 2729,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2702,
											"end": 2729,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2702,
											"end": 2729,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2702,
											"end": 2729,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2702,
											"end": 2729,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2702,
											"end": 2729,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1934,
											"end": 2030,
											"name": "tag",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 1934,
											"end": 2030,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1987,
											"end": 1994,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2013,
											"end": 2023,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 2006,
											"end": 2023,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2006,
											"end": 2023,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1934,
											"end": 2030,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1934,
											"end": 2030,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "tag",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 900,
											"end": 906,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 951,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 946,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 928,
											"end": 935,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 924,
											"end": 947,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 920,
											"end": 952,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 955,
											"end": 1034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "tag",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "tag",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1075,
											"end": 1076,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 1145,
											"end": 1152,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1125,
											"end": 1134,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1121,
											"end": 1143,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 1100,
											"end": 1153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "tag",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1046,
											"end": 1163,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 841,
											"end": 1170,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "tag",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1213,
											"end": 1220,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1242,
											"end": 1247,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1231,
											"end": 1247,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1231,
											"end": 1247,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1176,
											"end": 1253,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "tag",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 1364,
											"end": 1369,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 1346,
											"end": 1370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "tag",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1341,
											"end": 1344,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1334,
											"end": 1371,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1259,
											"end": 1377,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "tag",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1476,
											"end": 1480,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1514,
											"end": 1516,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1503,
											"end": 1512,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1499,
											"end": 1517,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1491,
											"end": 1517,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1491,
											"end": 1517,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 1595,
											"end": 1596,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1584,
											"end": 1593,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1580,
											"end": 1597,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1571,
											"end": 1577,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 1527,
											"end": 1598,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "tag",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1383,
											"end": 1605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1611,
											"end": 1733,
											"name": "tag",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 1611,
											"end": 1733,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 1702,
											"end": 1707,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 1684,
											"end": 1708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "tag",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1677,
											"end": 1682,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1674,
											"end": 1709,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1723,
											"end": 1724,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1720,
											"end": 1721,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1713,
											"end": 1725,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "tag",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1611,
											"end": 1733,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1611,
											"end": 1733,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "tag",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1785,
											"end": 1790,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1823,
											"end": 1829,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1810,
											"end": 1830,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1801,
											"end": 1830,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1801,
											"end": 1830,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 1866,
											"end": 1871,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 1839,
											"end": 1872,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "tag",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1739,
											"end": 1878,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1884,
											"end": 2001,
											"name": "tag",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 1884,
											"end": 2001,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1993,
											"end": 1994,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1990,
											"end": 1991,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1983,
											"end": 1995,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2007,
											"end": 2124,
											"name": "tag",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 2007,
											"end": 2124,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2116,
											"end": 2117,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2113,
											"end": 2114,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2106,
											"end": 2118,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2130,
											"end": 2247,
											"name": "tag",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 2130,
											"end": 2247,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2239,
											"end": 2240,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2236,
											"end": 2237,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2229,
											"end": 2241,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2266,
											"end": 2818,
											"name": "tag",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 2266,
											"end": 2818,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2323,
											"end": 2331,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2333,
											"end": 2339,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2383,
											"end": 2386,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2376,
											"end": 2380,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2368,
											"end": 2374,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2364,
											"end": 2381,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2360,
											"end": 2387,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 2350,
											"end": 2472,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 2350,
											"end": 2472,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2391,
											"end": 2470,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "180"
										},
										{
											"begin": 2391,
											"end": 2470,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 2391,
											"end": 2470,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2391,
											"end": 2470,
											"name": "tag",
											"source": 6,
											"value": "180"
										},
										{
											"begin": 2391,
											"end": 2470,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2350,
											"end": 2472,
											"name": "tag",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 2350,
											"end": 2472,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2504,
											"end": 2510,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2491,
											"end": 2511,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 2481,
											"end": 2511,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2481,
											"end": 2511,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2534,
											"end": 2552,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2526,
											"end": 2532,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2523,
											"end": 2553,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 2520,
											"end": 2637,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2520,
											"end": 2637,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "181"
										},
										{
											"begin": 2520,
											"end": 2637,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2556,
											"end": 2635,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 2556,
											"end": 2635,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 2556,
											"end": 2635,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2556,
											"end": 2635,
											"name": "tag",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 2556,
											"end": 2635,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2520,
											"end": 2637,
											"name": "tag",
											"source": 6,
											"value": "181"
										},
										{
											"begin": 2520,
											"end": 2637,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2670,
											"end": 2674,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2662,
											"end": 2668,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2658,
											"end": 2675,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2646,
											"end": 2675,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2646,
											"end": 2675,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2724,
											"end": 2727,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2716,
											"end": 2720,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2708,
											"end": 2714,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2704,
											"end": 2721,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2694,
											"end": 2702,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2690,
											"end": 2722,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2687,
											"end": 2728,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 2684,
											"end": 2812,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2684,
											"end": 2812,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 2684,
											"end": 2812,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2731,
											"end": 2810,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 2731,
											"end": 2810,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 2731,
											"end": 2810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2731,
											"end": 2810,
											"name": "tag",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 2731,
											"end": 2810,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2684,
											"end": 2812,
											"name": "tag",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 2684,
											"end": 2812,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2266,
											"end": 2818,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2266,
											"end": 2818,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2266,
											"end": 2818,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2266,
											"end": 2818,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2266,
											"end": 2818,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2266,
											"end": 2818,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2824,
											"end": 3787,
											"name": "tag",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 2824,
											"end": 3787,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2921,
											"end": 2927,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2929,
											"end": 2935,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2937,
											"end": 2943,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2945,
											"end": 2951,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2953,
											"end": 2959,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3002,
											"end": 3005,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 2990,
											"end": 2999,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2981,
											"end": 2988,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 2977,
											"end": 3000,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2973,
											"end": 3006,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 2970,
											"end": 3090,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2970,
											"end": 3090,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 2970,
											"end": 3090,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3009,
											"end": 3088,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 3009,
											"end": 3088,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 3009,
											"end": 3088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3009,
											"end": 3088,
											"name": "tag",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 3009,
											"end": 3088,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2970,
											"end": 3090,
											"name": "tag",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 2970,
											"end": 3090,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3129,
											"end": 3130,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3154,
											"end": 3207,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 3199,
											"end": 3206,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 3190,
											"end": 3196,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3179,
											"end": 3188,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 3175,
											"end": 3197,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3154,
											"end": 3207,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 3154,
											"end": 3207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3154,
											"end": 3207,
											"name": "tag",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 3154,
											"end": 3207,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3144,
											"end": 3207,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 3144,
											"end": 3207,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3100,
											"end": 3217,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3256,
											"end": 3258,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3282,
											"end": 3335,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 3327,
											"end": 3334,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 3318,
											"end": 3324,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3307,
											"end": 3316,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 3303,
											"end": 3325,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3282,
											"end": 3335,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 3282,
											"end": 3335,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3282,
											"end": 3335,
											"name": "tag",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 3282,
											"end": 3335,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3272,
											"end": 3335,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 3272,
											"end": 3335,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3227,
											"end": 3345,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3384,
											"end": 3386,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3410,
											"end": 3463,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 3455,
											"end": 3462,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 3446,
											"end": 3452,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3435,
											"end": 3444,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 3431,
											"end": 3453,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3410,
											"end": 3463,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 3410,
											"end": 3463,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3410,
											"end": 3463,
											"name": "tag",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 3410,
											"end": 3463,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3400,
											"end": 3463,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 3400,
											"end": 3463,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3355,
											"end": 3473,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3540,
											"end": 3542,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 3529,
											"end": 3538,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3525,
											"end": 3543,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3512,
											"end": 3544,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 3571,
											"end": 3589,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3563,
											"end": 3569,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3560,
											"end": 3590,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 3557,
											"end": 3674,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3557,
											"end": 3674,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 3557,
											"end": 3674,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3593,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 3593,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 3593,
											"end": 3672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3593,
											"end": 3672,
											"name": "tag",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 3593,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3557,
											"end": 3674,
											"name": "tag",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 3557,
											"end": 3674,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3706,
											"end": 3770,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 3762,
											"end": 3769,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 3753,
											"end": 3759,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3742,
											"end": 3751,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 3738,
											"end": 3760,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3706,
											"end": 3770,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 3706,
											"end": 3770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3706,
											"end": 3770,
											"name": "tag",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 3706,
											"end": 3770,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3688,
											"end": 3770,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3688,
											"end": 3770,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3688,
											"end": 3770,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3688,
											"end": 3770,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3483,
											"end": 3780,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2824,
											"end": 3787,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2824,
											"end": 3787,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 2824,
											"end": 3787,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2824,
											"end": 3787,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2824,
											"end": 3787,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 2824,
											"end": 3787,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2824,
											"end": 3787,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 2824,
											"end": 3787,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2824,
											"end": 3787,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3793,
											"end": 3942,
											"name": "tag",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 3793,
											"end": 3942,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3829,
											"end": 3836,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3869,
											"end": 3935,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3862,
											"end": 3867,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3858,
											"end": 3936,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3847,
											"end": 3936,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3847,
											"end": 3936,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3793,
											"end": 3942,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3793,
											"end": 3942,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3793,
											"end": 3942,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3793,
											"end": 3942,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3948,
											"end": 4063,
											"name": "tag",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 3948,
											"end": 4063,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4033,
											"end": 4056,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 4050,
											"end": 4055,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4033,
											"end": 4056,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 4033,
											"end": 4056,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4033,
											"end": 4056,
											"name": "tag",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 4033,
											"end": 4056,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4028,
											"end": 4031,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4021,
											"end": 4057,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3948,
											"end": 4063,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3948,
											"end": 4063,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3948,
											"end": 4063,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4069,
											"end": 4287,
											"name": "tag",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 4069,
											"end": 4287,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4160,
											"end": 4164,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4198,
											"end": 4200,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4187,
											"end": 4196,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4183,
											"end": 4201,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4175,
											"end": 4201,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4175,
											"end": 4201,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4211,
											"end": 4280,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 4277,
											"end": 4278,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4266,
											"end": 4275,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4262,
											"end": 4279,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4253,
											"end": 4259,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4211,
											"end": 4280,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 4211,
											"end": 4280,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4211,
											"end": 4280,
											"name": "tag",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 4211,
											"end": 4280,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4069,
											"end": 4287,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4069,
											"end": 4287,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4069,
											"end": 4287,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4069,
											"end": 4287,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4069,
											"end": 4287,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4293,
											"end": 4622,
											"name": "tag",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 4293,
											"end": 4622,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4352,
											"end": 4358,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4401,
											"end": 4403,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4389,
											"end": 4398,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4380,
											"end": 4387,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4376,
											"end": 4399,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4372,
											"end": 4404,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 4369,
											"end": 4488,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4369,
											"end": 4488,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 4369,
											"end": 4488,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4407,
											"end": 4486,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 4407,
											"end": 4486,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 4407,
											"end": 4486,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4407,
											"end": 4486,
											"name": "tag",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 4407,
											"end": 4486,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4369,
											"end": 4488,
											"name": "tag",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 4369,
											"end": 4488,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4527,
											"end": 4528,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4552,
											"end": 4605,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 4597,
											"end": 4604,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4588,
											"end": 4594,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4577,
											"end": 4586,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4573,
											"end": 4595,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4552,
											"end": 4605,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 4552,
											"end": 4605,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4552,
											"end": 4605,
											"name": "tag",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 4552,
											"end": 4605,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4542,
											"end": 4605,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4542,
											"end": 4605,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4498,
											"end": 4615,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4293,
											"end": 4622,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4293,
											"end": 4622,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4293,
											"end": 4622,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4293,
											"end": 4622,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4293,
											"end": 4622,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4628,
											"end": 4688,
											"name": "tag",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 4628,
											"end": 4688,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4656,
											"end": 4659,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4677,
											"end": 4682,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4670,
											"end": 4682,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4670,
											"end": 4682,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4628,
											"end": 4688,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4628,
											"end": 4688,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4628,
											"end": 4688,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4628,
											"end": 4688,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4694,
											"end": 4836,
											"name": "tag",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 4694,
											"end": 4836,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4744,
											"end": 4753,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4777,
											"end": 4830,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 4795,
											"end": 4829,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 4804,
											"end": 4828,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 4822,
											"end": 4827,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4804,
											"end": 4828,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 4804,
											"end": 4828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4804,
											"end": 4828,
											"name": "tag",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 4804,
											"end": 4828,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4795,
											"end": 4829,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 4795,
											"end": 4829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4795,
											"end": 4829,
											"name": "tag",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 4795,
											"end": 4829,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4777,
											"end": 4830,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 4777,
											"end": 4830,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4777,
											"end": 4830,
											"name": "tag",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 4777,
											"end": 4830,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4764,
											"end": 4830,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4764,
											"end": 4830,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4694,
											"end": 4836,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4694,
											"end": 4836,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4694,
											"end": 4836,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4694,
											"end": 4836,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4842,
											"end": 4968,
											"name": "tag",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 4842,
											"end": 4968,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4892,
											"end": 4901,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4925,
											"end": 4962,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 4956,
											"end": 4961,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4925,
											"end": 4962,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 4925,
											"end": 4962,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4925,
											"end": 4962,
											"name": "tag",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 4925,
											"end": 4962,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4912,
											"end": 4962,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4912,
											"end": 4962,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4842,
											"end": 4968,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4842,
											"end": 4968,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4842,
											"end": 4968,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4842,
											"end": 4968,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4974,
											"end": 5115,
											"name": "tag",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 4974,
											"end": 5115,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5039,
											"end": 5048,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5072,
											"end": 5109,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 5103,
											"end": 5108,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5072,
											"end": 5109,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 5072,
											"end": 5109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5072,
											"end": 5109,
											"name": "tag",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 5072,
											"end": 5109,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5059,
											"end": 5109,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5059,
											"end": 5109,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4974,
											"end": 5115,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4974,
											"end": 5115,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4974,
											"end": 5115,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4974,
											"end": 5115,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5121,
											"end": 5282,
											"name": "tag",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 5121,
											"end": 5282,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5223,
											"end": 5275,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 5269,
											"end": 5274,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5223,
											"end": 5275,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 5223,
											"end": 5275,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5223,
											"end": 5275,
											"name": "tag",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 5223,
											"end": 5275,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5218,
											"end": 5221,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5211,
											"end": 5276,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5121,
											"end": 5282,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5121,
											"end": 5282,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5121,
											"end": 5282,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5288,
											"end": 5540,
											"name": "tag",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 5288,
											"end": 5540,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5396,
											"end": 5400,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5434,
											"end": 5436,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5423,
											"end": 5432,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5419,
											"end": 5437,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5411,
											"end": 5437,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5411,
											"end": 5437,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5447,
											"end": 5533,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 5530,
											"end": 5531,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5519,
											"end": 5528,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5515,
											"end": 5532,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5506,
											"end": 5512,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5447,
											"end": 5533,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 5447,
											"end": 5533,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5447,
											"end": 5533,
											"name": "tag",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 5447,
											"end": 5533,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5288,
											"end": 5540,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5288,
											"end": 5540,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5288,
											"end": 5540,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5288,
											"end": 5540,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5288,
											"end": 5540,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5546,
											"end": 5686,
											"name": "tag",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 5546,
											"end": 5686,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5610,
											"end": 5619,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5643,
											"end": 5680,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 5674,
											"end": 5679,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5643,
											"end": 5680,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 5643,
											"end": 5680,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5643,
											"end": 5680,
											"name": "tag",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 5643,
											"end": 5680,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5630,
											"end": 5680,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5630,
											"end": 5680,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5546,
											"end": 5686,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5546,
											"end": 5686,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5546,
											"end": 5686,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5546,
											"end": 5686,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5692,
											"end": 5851,
											"name": "tag",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 5692,
											"end": 5851,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5793,
											"end": 5844,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "219"
										},
										{
											"begin": 5838,
											"end": 5843,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5793,
											"end": 5844,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 5793,
											"end": 5844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5793,
											"end": 5844,
											"name": "tag",
											"source": 6,
											"value": "219"
										},
										{
											"begin": 5793,
											"end": 5844,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5788,
											"end": 5791,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5781,
											"end": 5845,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5692,
											"end": 5851,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5692,
											"end": 5851,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5692,
											"end": 5851,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5857,
											"end": 6107,
											"name": "tag",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 5857,
											"end": 6107,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5964,
											"end": 5968,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6002,
											"end": 6004,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5991,
											"end": 6000,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5987,
											"end": 6005,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5979,
											"end": 6005,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5979,
											"end": 6005,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6015,
											"end": 6100,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "221"
										},
										{
											"begin": 6097,
											"end": 6098,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6086,
											"end": 6095,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6082,
											"end": 6099,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6073,
											"end": 6079,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6015,
											"end": 6100,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 6015,
											"end": 6100,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6015,
											"end": 6100,
											"name": "tag",
											"source": 6,
											"value": "221"
										},
										{
											"begin": 6015,
											"end": 6100,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5857,
											"end": 6107,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5857,
											"end": 6107,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5857,
											"end": 6107,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5857,
											"end": 6107,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5857,
											"end": 6107,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6113,
											"end": 6231,
											"name": "tag",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 6113,
											"end": 6231,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6200,
											"end": 6224,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 6218,
											"end": 6223,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6200,
											"end": 6224,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 6200,
											"end": 6224,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6200,
											"end": 6224,
											"name": "tag",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 6200,
											"end": 6224,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6195,
											"end": 6198,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6188,
											"end": 6225,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6113,
											"end": 6231,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6113,
											"end": 6231,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6113,
											"end": 6231,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6237,
											"end": 6459,
											"name": "tag",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 6237,
											"end": 6459,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6330,
											"end": 6334,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6368,
											"end": 6370,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6357,
											"end": 6366,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6353,
											"end": 6371,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6345,
											"end": 6371,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6345,
											"end": 6371,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6381,
											"end": 6452,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "225"
										},
										{
											"begin": 6449,
											"end": 6450,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6438,
											"end": 6447,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6434,
											"end": 6451,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6425,
											"end": 6431,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6381,
											"end": 6452,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 6381,
											"end": 6452,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6381,
											"end": 6452,
											"name": "tag",
											"source": 6,
											"value": "225"
										},
										{
											"begin": 6381,
											"end": 6452,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6237,
											"end": 6459,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6237,
											"end": 6459,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6237,
											"end": 6459,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6237,
											"end": 6459,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6237,
											"end": 6459,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6465,
											"end": 6645,
											"name": "tag",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 6465,
											"end": 6645,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6513,
											"end": 6590,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6510,
											"end": 6511,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6503,
											"end": 6591,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6610,
											"end": 6614,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 6607,
											"end": 6608,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6600,
											"end": 6615,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6634,
											"end": 6638,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 6631,
											"end": 6632,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6624,
											"end": 6639,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 6651,
											"end": 6845,
											"name": "tag",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 6651,
											"end": 6845,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6691,
											"end": 6695,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6711,
											"end": 6731,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "228"
										},
										{
											"begin": 6729,
											"end": 6730,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6711,
											"end": 6731,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 6711,
											"end": 6731,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6711,
											"end": 6731,
											"name": "tag",
											"source": 6,
											"value": "228"
										},
										{
											"begin": 6711,
											"end": 6731,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6706,
											"end": 6731,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6706,
											"end": 6731,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6745,
											"end": 6765,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "229"
										},
										{
											"begin": 6763,
											"end": 6764,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6745,
											"end": 6765,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 6745,
											"end": 6765,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6745,
											"end": 6765,
											"name": "tag",
											"source": 6,
											"value": "229"
										},
										{
											"begin": 6745,
											"end": 6765,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6740,
											"end": 6765,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6740,
											"end": 6765,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6789,
											"end": 6790,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6786,
											"end": 6787,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6782,
											"end": 6791,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6774,
											"end": 6791,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6774,
											"end": 6791,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6813,
											"end": 6814,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6807,
											"end": 6811,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6804,
											"end": 6815,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 6801,
											"end": 6838,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6801,
											"end": 6838,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "230"
										},
										{
											"begin": 6801,
											"end": 6838,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6818,
											"end": 6836,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "231"
										},
										{
											"begin": 6818,
											"end": 6836,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 6818,
											"end": 6836,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6818,
											"end": 6836,
											"name": "tag",
											"source": 6,
											"value": "231"
										},
										{
											"begin": 6818,
											"end": 6836,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6801,
											"end": 6838,
											"name": "tag",
											"source": 6,
											"value": "230"
										},
										{
											"begin": 6801,
											"end": 6838,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6651,
											"end": 6845,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6651,
											"end": 6845,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6651,
											"end": 6845,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6651,
											"end": 6845,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6651,
											"end": 6845,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6851,
											"end": 7261,
											"name": "tag",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 6851,
											"end": 7261,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6891,
											"end": 6898,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6914,
											"end": 6934,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "233"
										},
										{
											"begin": 6932,
											"end": 6933,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6914,
											"end": 6934,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 6914,
											"end": 6934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6914,
											"end": 6934,
											"name": "tag",
											"source": 6,
											"value": "233"
										},
										{
											"begin": 6914,
											"end": 6934,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6909,
											"end": 6934,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6909,
											"end": 6934,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6948,
											"end": 6968,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "234"
										},
										{
											"begin": 6966,
											"end": 6967,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6948,
											"end": 6968,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 6948,
											"end": 6968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6948,
											"end": 6968,
											"name": "tag",
											"source": 6,
											"value": "234"
										},
										{
											"begin": 6948,
											"end": 6968,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6943,
											"end": 6968,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6943,
											"end": 6968,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7003,
											"end": 7004,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7000,
											"end": 7001,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6996,
											"end": 7005,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 7025,
											"end": 7055,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "235"
										},
										{
											"begin": 7043,
											"end": 7054,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7025,
											"end": 7055,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 7025,
											"end": 7055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7025,
											"end": 7055,
											"name": "tag",
											"source": 6,
											"value": "235"
										},
										{
											"begin": 7025,
											"end": 7055,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7014,
											"end": 7055,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7014,
											"end": 7055,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7204,
											"end": 7205,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7195,
											"end": 7202,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7191,
											"end": 7206,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 7188,
											"end": 7189,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7185,
											"end": 7207,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 7165,
											"end": 7166,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7158,
											"end": 7167,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7138,
											"end": 7221,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 7115,
											"end": 7254,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "236"
										},
										{
											"begin": 7115,
											"end": 7254,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7234,
											"end": 7252,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "237"
										},
										{
											"begin": 7234,
											"end": 7252,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 7234,
											"end": 7252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7234,
											"end": 7252,
											"name": "tag",
											"source": 6,
											"value": "237"
										},
										{
											"begin": 7234,
											"end": 7252,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7115,
											"end": 7254,
											"name": "tag",
											"source": 6,
											"value": "236"
										},
										{
											"begin": 7115,
											"end": 7254,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6899,
											"end": 7261,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6851,
											"end": 7261,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6851,
											"end": 7261,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6851,
											"end": 7261,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6851,
											"end": 7261,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6851,
											"end": 7261,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7267,
											"end": 7447,
											"name": "tag",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 7267,
											"end": 7447,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7315,
											"end": 7392,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7312,
											"end": 7313,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7305,
											"end": 7393,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7412,
											"end": 7416,
											"name": "PUSH",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 7409,
											"end": 7410,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 7402,
											"end": 7417,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7436,
											"end": 7440,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 7433,
											"end": 7434,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7426,
											"end": 7441,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 7453,
											"end": 7638,
											"name": "tag",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 7453,
											"end": 7638,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7493,
											"end": 7494,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7510,
											"end": 7530,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 7528,
											"end": 7529,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7510,
											"end": 7530,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 7510,
											"end": 7530,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7510,
											"end": 7530,
											"name": "tag",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 7510,
											"end": 7530,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7505,
											"end": 7530,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7505,
											"end": 7530,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7544,
											"end": 7564,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "241"
										},
										{
											"begin": 7562,
											"end": 7563,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7544,
											"end": 7564,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 7544,
											"end": 7564,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7544,
											"end": 7564,
											"name": "tag",
											"source": 6,
											"value": "241"
										},
										{
											"begin": 7544,
											"end": 7564,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7539,
											"end": 7564,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7539,
											"end": 7564,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7583,
											"end": 7584,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7573,
											"end": 7608,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "242"
										},
										{
											"begin": 7573,
											"end": 7608,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7588,
											"end": 7606,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "243"
										},
										{
											"begin": 7588,
											"end": 7606,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 7588,
											"end": 7606,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7588,
											"end": 7606,
											"name": "tag",
											"source": 6,
											"value": "243"
										},
										{
											"begin": 7588,
											"end": 7606,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7573,
											"end": 7608,
											"name": "tag",
											"source": 6,
											"value": "242"
										},
										{
											"begin": 7573,
											"end": 7608,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7630,
											"end": 7631,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7627,
											"end": 7628,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7623,
											"end": 7632,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 7618,
											"end": 7632,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7618,
											"end": 7632,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7453,
											"end": 7638,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7453,
											"end": 7638,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7453,
											"end": 7638,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7453,
											"end": 7638,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7453,
											"end": 7638,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7644,
											"end": 7835,
											"name": "tag",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 7644,
											"end": 7835,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7684,
											"end": 7687,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7703,
											"end": 7723,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "245"
										},
										{
											"begin": 7721,
											"end": 7722,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7703,
											"end": 7723,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 7703,
											"end": 7723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7703,
											"end": 7723,
											"name": "tag",
											"source": 6,
											"value": "245"
										},
										{
											"begin": 7703,
											"end": 7723,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7698,
											"end": 7723,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7698,
											"end": 7723,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7737,
											"end": 7757,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "246"
										},
										{
											"begin": 7755,
											"end": 7756,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7737,
											"end": 7757,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 7737,
											"end": 7757,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7737,
											"end": 7757,
											"name": "tag",
											"source": 6,
											"value": "246"
										},
										{
											"begin": 7737,
											"end": 7757,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7732,
											"end": 7757,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7732,
											"end": 7757,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7780,
											"end": 7781,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7777,
											"end": 7778,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7773,
											"end": 7782,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7766,
											"end": 7782,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7766,
											"end": 7782,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7801,
											"end": 7804,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7798,
											"end": 7799,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7795,
											"end": 7805,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 7792,
											"end": 7828,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7792,
											"end": 7828,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "247"
										},
										{
											"begin": 7792,
											"end": 7828,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7808,
											"end": 7826,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "248"
										},
										{
											"begin": 7808,
											"end": 7826,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 7808,
											"end": 7826,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7808,
											"end": 7826,
											"name": "tag",
											"source": 6,
											"value": "248"
										},
										{
											"begin": 7808,
											"end": 7826,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7792,
											"end": 7828,
											"name": "tag",
											"source": 6,
											"value": "247"
										},
										{
											"begin": 7792,
											"end": 7828,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7644,
											"end": 7835,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7644,
											"end": 7835,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7644,
											"end": 7835,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7644,
											"end": 7835,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7644,
											"end": 7835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7841,
											"end": 8074,
											"name": "tag",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 7841,
											"end": 8074,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7880,
											"end": 7883,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7903,
											"end": 7927,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "250"
										},
										{
											"begin": 7921,
											"end": 7926,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7903,
											"end": 7927,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 7903,
											"end": 7927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7903,
											"end": 7927,
											"name": "tag",
											"source": 6,
											"value": "250"
										},
										{
											"begin": 7903,
											"end": 7927,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7894,
											"end": 7927,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7894,
											"end": 7927,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7949,
											"end": 8015,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7942,
											"end": 7947,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7939,
											"end": 8016,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7936,
											"end": 8039,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "251"
										},
										{
											"begin": 7936,
											"end": 8039,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8019,
											"end": 8037,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "252"
										},
										{
											"begin": 8019,
											"end": 8037,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 8019,
											"end": 8037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8019,
											"end": 8037,
											"name": "tag",
											"source": 6,
											"value": "252"
										},
										{
											"begin": 8019,
											"end": 8037,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7936,
											"end": 8039,
											"name": "tag",
											"source": 6,
											"value": "251"
										},
										{
											"begin": 7936,
											"end": 8039,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8066,
											"end": 8067,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 8059,
											"end": 8064,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8055,
											"end": 8068,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8048,
											"end": 8068,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8048,
											"end": 8068,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7841,
											"end": 8074,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7841,
											"end": 8074,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7841,
											"end": 8074,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7841,
											"end": 8074,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8080,
											"end": 8249,
											"name": "tag",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 8080,
											"end": 8249,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8164,
											"end": 8175,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8198,
											"end": 8204,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8193,
											"end": 8196,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8186,
											"end": 8205,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8238,
											"end": 8242,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8233,
											"end": 8236,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8229,
											"end": 8243,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8214,
											"end": 8243,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8214,
											"end": 8243,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8080,
											"end": 8249,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8080,
											"end": 8249,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8080,
											"end": 8249,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8080,
											"end": 8249,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8080,
											"end": 8249,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8255,
											"end": 8425,
											"name": "tag",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 8255,
											"end": 8425,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8395,
											"end": 8417,
											"name": "PUSH",
											"source": 6,
											"value": "546F6B656E206973206E6F74207374616B65642E000000000000000000000000"
										},
										{
											"begin": 8391,
											"end": 8392,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8383,
											"end": 8389,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8379,
											"end": 8393,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8372,
											"end": 8418,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8255,
											"end": 8425,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8255,
											"end": 8425,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8431,
											"end": 8797,
											"name": "tag",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 8431,
											"end": 8797,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8573,
											"end": 8576,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8594,
											"end": 8661,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "256"
										},
										{
											"begin": 8658,
											"end": 8660,
											"name": "PUSH",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 8653,
											"end": 8656,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8594,
											"end": 8661,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 8594,
											"end": 8661,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8594,
											"end": 8661,
											"name": "tag",
											"source": 6,
											"value": "256"
										},
										{
											"begin": 8594,
											"end": 8661,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8587,
											"end": 8661,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8587,
											"end": 8661,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8670,
											"end": 8763,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "257"
										},
										{
											"begin": 8759,
											"end": 8762,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8670,
											"end": 8763,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 8670,
											"end": 8763,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8670,
											"end": 8763,
											"name": "tag",
											"source": 6,
											"value": "257"
										},
										{
											"begin": 8670,
											"end": 8763,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8788,
											"end": 8790,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8783,
											"end": 8786,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8779,
											"end": 8791,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8772,
											"end": 8791,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8772,
											"end": 8791,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8431,
											"end": 8797,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8431,
											"end": 8797,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8431,
											"end": 8797,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8431,
											"end": 8797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8803,
											"end": 9222,
											"name": "tag",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 8803,
											"end": 9222,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8969,
											"end": 8973,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9007,
											"end": 9009,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8996,
											"end": 9005,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8992,
											"end": 9010,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8984,
											"end": 9010,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8984,
											"end": 9010,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9056,
											"end": 9065,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9050,
											"end": 9054,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9046,
											"end": 9066,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 9042,
											"end": 9043,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9031,
											"end": 9040,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9027,
											"end": 9044,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9020,
											"end": 9067,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9084,
											"end": 9215,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "259"
										},
										{
											"begin": 9210,
											"end": 9214,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9084,
											"end": 9215,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 9084,
											"end": 9215,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9084,
											"end": 9215,
											"name": "tag",
											"source": 6,
											"value": "259"
										},
										{
											"begin": 9084,
											"end": 9215,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9076,
											"end": 9215,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9076,
											"end": 9215,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8803,
											"end": 9222,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8803,
											"end": 9222,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8803,
											"end": 9222,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8803,
											"end": 9222,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9228,
											"end": 9399,
											"name": "tag",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 9228,
											"end": 9399,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9267,
											"end": 9270,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9290,
											"end": 9314,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "261"
										},
										{
											"begin": 9308,
											"end": 9313,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9290,
											"end": 9314,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 9290,
											"end": 9314,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9290,
											"end": 9314,
											"name": "tag",
											"source": 6,
											"value": "261"
										},
										{
											"begin": 9290,
											"end": 9314,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9281,
											"end": 9314,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9281,
											"end": 9314,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9336,
											"end": 9340,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9329,
											"end": 9334,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9326,
											"end": 9341,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 9323,
											"end": 9364,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "262"
										},
										{
											"begin": 9323,
											"end": 9364,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9344,
											"end": 9362,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "263"
										},
										{
											"begin": 9344,
											"end": 9362,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 9344,
											"end": 9362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9344,
											"end": 9362,
											"name": "tag",
											"source": 6,
											"value": "263"
										},
										{
											"begin": 9344,
											"end": 9362,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9323,
											"end": 9364,
											"name": "tag",
											"source": 6,
											"value": "262"
										},
										{
											"begin": 9323,
											"end": 9364,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9391,
											"end": 9392,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 9384,
											"end": 9389,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9380,
											"end": 9393,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 9373,
											"end": 9393,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9373,
											"end": 9393,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9228,
											"end": 9399,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9228,
											"end": 9399,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9228,
											"end": 9399,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9228,
											"end": 9399,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9405,
											"end": 9847,
											"name": "tag",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 9405,
											"end": 9847,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9554,
											"end": 9558,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9592,
											"end": 9594,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 9581,
											"end": 9590,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9577,
											"end": 9595,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9569,
											"end": 9595,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9569,
											"end": 9595,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9605,
											"end": 9676,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "265"
										},
										{
											"begin": 9673,
											"end": 9674,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9662,
											"end": 9671,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9658,
											"end": 9675,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9649,
											"end": 9655,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 9605,
											"end": 9676,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 9605,
											"end": 9676,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9605,
											"end": 9676,
											"name": "tag",
											"source": 6,
											"value": "265"
										},
										{
											"begin": 9605,
											"end": 9676,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9686,
											"end": 9758,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "266"
										},
										{
											"begin": 9754,
											"end": 9756,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9743,
											"end": 9752,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9739,
											"end": 9757,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9730,
											"end": 9736,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 9686,
											"end": 9758,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 9686,
											"end": 9758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9686,
											"end": 9758,
											"name": "tag",
											"source": 6,
											"value": "266"
										},
										{
											"begin": 9686,
											"end": 9758,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9768,
											"end": 9840,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "267"
										},
										{
											"begin": 9836,
											"end": 9838,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9825,
											"end": 9834,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9821,
											"end": 9839,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9812,
											"end": 9818,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 9768,
											"end": 9840,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 9768,
											"end": 9840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9768,
											"end": 9840,
											"name": "tag",
											"source": 6,
											"value": "267"
										},
										{
											"begin": 9768,
											"end": 9840,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9405,
											"end": 9847,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 9405,
											"end": 9847,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 9405,
											"end": 9847,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9405,
											"end": 9847,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9405,
											"end": 9847,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9405,
											"end": 9847,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9405,
											"end": 9847,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9853,
											"end": 10020,
											"name": "tag",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 9853,
											"end": 10020,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9993,
											"end": 10012,
											"name": "PUSH",
											"source": 6,
											"value": "4E6F7468696E6720746F2072656465656D000000000000000000000000000000"
										},
										{
											"begin": 9989,
											"end": 9990,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9981,
											"end": 9987,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9977,
											"end": 9991,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9970,
											"end": 10013,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9853,
											"end": 10020,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9853,
											"end": 10020,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10026,
											"end": 10392,
											"name": "tag",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 10026,
											"end": 10392,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10168,
											"end": 10171,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10189,
											"end": 10256,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "270"
										},
										{
											"begin": 10253,
											"end": 10255,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 10248,
											"end": 10251,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10189,
											"end": 10256,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 10189,
											"end": 10256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10189,
											"end": 10256,
											"name": "tag",
											"source": 6,
											"value": "270"
										},
										{
											"begin": 10189,
											"end": 10256,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10182,
											"end": 10256,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10182,
											"end": 10256,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10265,
											"end": 10358,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "271"
										},
										{
											"begin": 10354,
											"end": 10357,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10265,
											"end": 10358,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 10265,
											"end": 10358,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10265,
											"end": 10358,
											"name": "tag",
											"source": 6,
											"value": "271"
										},
										{
											"begin": 10265,
											"end": 10358,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10383,
											"end": 10385,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10378,
											"end": 10381,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10374,
											"end": 10386,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10367,
											"end": 10386,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10367,
											"end": 10386,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10026,
											"end": 10392,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10026,
											"end": 10392,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10026,
											"end": 10392,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10026,
											"end": 10392,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10398,
											"end": 10817,
											"name": "tag",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 10398,
											"end": 10817,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10564,
											"end": 10568,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10602,
											"end": 10604,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10591,
											"end": 10600,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10587,
											"end": 10605,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10579,
											"end": 10605,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10579,
											"end": 10605,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10651,
											"end": 10660,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10645,
											"end": 10649,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10641,
											"end": 10661,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 10637,
											"end": 10638,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10626,
											"end": 10635,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10622,
											"end": 10639,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10615,
											"end": 10662,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10679,
											"end": 10810,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "273"
										},
										{
											"begin": 10805,
											"end": 10809,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10679,
											"end": 10810,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 10679,
											"end": 10810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10679,
											"end": 10810,
											"name": "tag",
											"source": 6,
											"value": "273"
										},
										{
											"begin": 10679,
											"end": 10810,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10671,
											"end": 10810,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10671,
											"end": 10810,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10398,
											"end": 10817,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10398,
											"end": 10817,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10398,
											"end": 10817,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10398,
											"end": 10817,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10823,
											"end": 10913,
											"name": "tag",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 10823,
											"end": 10913,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10857,
											"end": 10864,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10900,
											"end": 10905,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10893,
											"end": 10906,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10886,
											"end": 10907,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10875,
											"end": 10907,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10875,
											"end": 10907,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10823,
											"end": 10913,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10823,
											"end": 10913,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10823,
											"end": 10913,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10823,
											"end": 10913,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10919,
											"end": 11035,
											"name": "tag",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 10919,
											"end": 11035,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10989,
											"end": 11010,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "276"
										},
										{
											"begin": 11004,
											"end": 11009,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10989,
											"end": 11010,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 10989,
											"end": 11010,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10989,
											"end": 11010,
											"name": "tag",
											"source": 6,
											"value": "276"
										},
										{
											"begin": 10989,
											"end": 11010,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10982,
											"end": 10987,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10979,
											"end": 11011,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 10969,
											"end": 11029,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "277"
										},
										{
											"begin": 10969,
											"end": 11029,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 11025,
											"end": 11026,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11022,
											"end": 11023,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11015,
											"end": 11027,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 10969,
											"end": 11029,
											"name": "tag",
											"source": 6,
											"value": "277"
										},
										{
											"begin": 10969,
											"end": 11029,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10919,
											"end": 11035,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10919,
											"end": 11035,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11041,
											"end": 11178,
											"name": "tag",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 11041,
											"end": 11178,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11095,
											"end": 11100,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11126,
											"end": 11132,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11120,
											"end": 11133,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 11111,
											"end": 11133,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11111,
											"end": 11133,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11142,
											"end": 11172,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "279"
										},
										{
											"begin": 11166,
											"end": 11171,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11142,
											"end": 11172,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 11142,
											"end": 11172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11142,
											"end": 11172,
											"name": "tag",
											"source": 6,
											"value": "279"
										},
										{
											"begin": 11142,
											"end": 11172,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11041,
											"end": 11178,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 11041,
											"end": 11178,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11041,
											"end": 11178,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11041,
											"end": 11178,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11041,
											"end": 11178,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11184,
											"end": 11529,
											"name": "tag",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 11184,
											"end": 11529,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11251,
											"end": 11257,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11300,
											"end": 11302,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11288,
											"end": 11297,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11279,
											"end": 11286,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 11275,
											"end": 11298,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 11271,
											"end": 11303,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 11268,
											"end": 11387,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 11268,
											"end": 11387,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "281"
										},
										{
											"begin": 11268,
											"end": 11387,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 11306,
											"end": 11385,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "282"
										},
										{
											"begin": 11306,
											"end": 11385,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 11306,
											"end": 11385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11306,
											"end": 11385,
											"name": "tag",
											"source": 6,
											"value": "282"
										},
										{
											"begin": 11306,
											"end": 11385,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11268,
											"end": 11387,
											"name": "tag",
											"source": 6,
											"value": "281"
										},
										{
											"begin": 11268,
											"end": 11387,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11426,
											"end": 11427,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11451,
											"end": 11512,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "283"
										},
										{
											"begin": 11504,
											"end": 11511,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 11495,
											"end": 11501,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11484,
											"end": 11493,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 11480,
											"end": 11502,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11451,
											"end": 11512,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 11451,
											"end": 11512,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11451,
											"end": 11512,
											"name": "tag",
											"source": 6,
											"value": "283"
										},
										{
											"begin": 11451,
											"end": 11512,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11441,
											"end": 11512,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11441,
											"end": 11512,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11397,
											"end": 11522,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11184,
											"end": 11529,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 11184,
											"end": 11529,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11184,
											"end": 11529,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11184,
											"end": 11529,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11184,
											"end": 11529,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol",
								"nft-staking-with-infinite-rewards/@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"nft-staking-with-infinite-rewards/@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"nft-staking-with-infinite-rewards/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"nft-staking-with-infinite-rewards/@openzeppelin/contracts/utils/Context.sol",
								"nft-staking-with-infinite-rewards/@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"available(address)": "10098ad5",
							"balanceOf(address)": "70a08231",
							"lastUpdateTime(address)": "2ce9aead",
							"nft()": "47ccca02",
							"onERC721Received(address,address,uint256,bytes)": "150b7a02",
							"redeem()": "be040fb0",
							"rewardPerTokenPerDay()": "2d6a1fa6",
							"rewardToken()": "f7c618c1",
							"rewardWallet()": "fb75b2c7",
							"stake(uint256)": "a694fc3a",
							"withdraw(uint256)": "2e1a7d4d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"rewardTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"rewardWalletAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"rewardRate\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"available\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"lastUpdateTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nft\",\"outputs\":[{\"internalType\":\"contract IERC721\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"redeem\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardPerTokenPerDay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Breakthrough Labs Inc.\",\"custom:address\":\"51\",\"custom:default-precision\":\"0\",\"custom:simple-description\":\"NFT staking contract that rewards stakers with an exact number of ERC20 tokens per day.\",\"custom:version\":\"1.0.0\",\"details\":\"NFT staking contract that rewards stakers with an exact number of ERC20 tokens per day. On deployment, the owner specifies a daily reward rate, and an address that tokens will be pulled from. Neither of these can be changed. Each staked NFT receives the same number of tokens every day. The per NFT rate stays the same even when the number of staked NFTs increases/decreases. A common usecase is for blockchain-based games, where each NFT rewards a certain number of lives per day.\",\"kind\":\"dev\",\"methods\":{\"available(address)\":{\"details\":\"returns the number of reward tokens available for an address\",\"params\":{\"account\":\"account\"}},\"constructor\":{\"params\":{\"nftAddress\":\"Staked NFT Address\",\"rewardRate\":\"# of tokens per staked NFT per day | precision:18\",\"rewardTokenAddress\":\"Reward Token Address\",\"rewardWalletAddress\":\"Wallet that holds rewards to be paid out\"}},\"redeem()\":{\"details\":\"redeems all of a user's reward tokens.\"},\"stake(uint256)\":{\"details\":\"stakes a specific tokenID\",\"params\":{\"tokenId\":\"tokenId\"}},\"withdraw(uint256)\":{\"details\":\"withdraws a token from the staking contract\",\"params\":{\"tokenId\":\"tokenId\"}}},\"stateVariables\":{\"rewardPerTokenPerDay\":{\"custom:precision\":\"18\"}},\"title\":\"NFT Staking with Infinite Rewards\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Staking, NFT, ERC721\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":\"NFTStakingPerToken\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":{\"keccak256\":\"0x70f4fd5f6c305f9eb44e883cd054cc304264dba768f4a0e299b0eaccf3525a3d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9a6be26926c9424530d162590e53331654a40649de81e91e52aea1debca4232\",\"dweb:/ipfs/QmcmEm92goGguPYSkvifeat2J7yB6V46ytDSsmv8LtnaN2\"]},\"nft-staking-with-infinite-rewards/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5c5aa4dacc753e5375a0e19b159849e82b020052579b4a546669585041fc3777\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eab50e4c7cceee5d032da46f15c9e732039464f58cd2c6466ce14950af5fb860\",\"dweb:/ipfs/QmQgzjQ8TWyWAGsv5e4f1fWm5wpizQvUqCVUsjkkR4Ru22\"]},\"nft-staking-with-infinite-rewards/@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xde5e97f248f6fc86c870a25d11f75cdd818c2a3aafed34ae8f0feaf241d2c5b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9bd8ae9da43450817d47f6580b9b2de592263fb20360d0a683ab8ed3152fdda1\",\"dweb:/ipfs/QmZCCnyP6RNLNXRkpUnJaQjuHUa4NZZuDQmJofmbgkQMfQ\"]},\"nft-staking-with-infinite-rewards/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x225d4e860183e7d82ef25b0c31b579e87ac0964c382fef8c92a3fbca818d590d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://752c834b7d33c5ab675d958a87c79622401327d3e1e28284851b5cc3fdc3b0a4\",\"dweb:/ipfs/Qmb5qK7mmQ6PpWQXZDFXNyL2os9fjGtgLJyg3cQN5B2PVG\"]},\"nft-staking-with-infinite-rewards/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xaabd25ddbc91c7c09b05e6fb7eb79d1851e509fa21a405100967568542e1c08b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://911616537df7b67957a53adb57c4e02542c4a0f1388f367ff7c56303fddfea26\",\"dweb:/ipfs/QmXNsCDS4aHhN4Li9DUZ36w7XHu7wp2pkjfqSM8b9UdGry\"]},\"nft-staking-with-infinite-rewards/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x668ff4050c0126670a9f09988abf10045122365391d356080aff18c6c78002c1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://933bcc6a8ab217cd9943c4f3fbb615b6a6c1f0a7af06a3a5a82f9de743c85641\",\"dweb:/ipfs/QmZCW29EG1VpLJNJfMq4ajxii3S5cByPW8UabbCqnK6yiK\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 13,
								"contract": "nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol:NFTStakingPerToken",
								"label": "nft",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(IERC721)457"
							},
							{
								"astId": 16,
								"contract": "nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol:NFTStakingPerToken",
								"label": "rewardToken",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IERC20)341"
							},
							{
								"astId": 18,
								"contract": "nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol:NFTStakingPerToken",
								"label": "rewardWallet",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							},
							{
								"astId": 21,
								"contract": "nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol:NFTStakingPerToken",
								"label": "rewardPerTokenPerDay",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 25,
								"contract": "nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol:NFTStakingPerToken",
								"label": "stakedTokens",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 29,
								"contract": "nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol:NFTStakingPerToken",
								"label": "balanceOf",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 33,
								"contract": "nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol:NFTStakingPerToken",
								"label": "lastUpdateTime",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 37,
								"contract": "nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol:NFTStakingPerToken",
								"label": "reward",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(IERC20)341": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_contract(IERC721)457": {
								"encoding": "inplace",
								"label": "contract IERC721",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Staking, NFT, ERC721",
						"version": 1
					}
				}
			},
			"nft-staking-with-infinite-rewards/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"nft-staking-with-infinite-rewards/@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"nft-staking-with-infinite-rewards/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5c5aa4dacc753e5375a0e19b159849e82b020052579b4a546669585041fc3777\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eab50e4c7cceee5d032da46f15c9e732039464f58cd2c6466ce14950af5fb860\",\"dweb:/ipfs/QmQgzjQ8TWyWAGsv5e4f1fWm5wpizQvUqCVUsjkkR4Ru22\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"nft-staking-with-infinite-rewards/@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"nft-staking-with-infinite-rewards/@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"nft-staking-with-infinite-rewards/@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xde5e97f248f6fc86c870a25d11f75cdd818c2a3aafed34ae8f0feaf241d2c5b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9bd8ae9da43450817d47f6580b9b2de592263fb20360d0a683ab8ed3152fdda1\",\"dweb:/ipfs/QmZCCnyP6RNLNXRkpUnJaQjuHUa4NZZuDQmJofmbgkQMfQ\"]},\"nft-staking-with-infinite-rewards/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x668ff4050c0126670a9f09988abf10045122365391d356080aff18c6c78002c1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://933bcc6a8ab217cd9943c4f3fbb615b6a6c1f0a7af06a3a5a82f9de743c85641\",\"dweb:/ipfs/QmZCW29EG1VpLJNJfMq4ajxii3S5cByPW8UabbCqnK6yiK\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"nft-staking-with-infinite-rewards/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.",
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
							}
						},
						"title": "ERC721 token receiver interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"nft-staking-with-infinite-rewards/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"nft-staking-with-infinite-rewards/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x225d4e860183e7d82ef25b0c31b579e87ac0964c382fef8c92a3fbca818d590d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://752c834b7d33c5ab675d958a87c79622401327d3e1e28284851b5cc3fdc3b0a4\",\"dweb:/ipfs/Qmb5qK7mmQ6PpWQXZDFXNyL2os9fjGtgLJyg3cQN5B2PVG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"nft-staking-with-infinite-rewards/@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"nft-staking-with-infinite-rewards/@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"nft-staking-with-infinite-rewards/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xaabd25ddbc91c7c09b05e6fb7eb79d1851e509fa21a405100967568542e1c08b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://911616537df7b67957a53adb57c4e02542c4a0f1388f367ff7c56303fddfea26\",\"dweb:/ipfs/QmXNsCDS4aHhN4Li9DUZ36w7XHu7wp2pkjfqSM8b9UdGry\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"nft-staking-with-infinite-rewards/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"nft-staking-with-infinite-rewards/@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"nft-staking-with-infinite-rewards/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x668ff4050c0126670a9f09988abf10045122365391d356080aff18c6c78002c1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://933bcc6a8ab217cd9943c4f3fbb615b6a6c1f0a7af06a3a5a82f9de743c85641\",\"dweb:/ipfs/QmZCW29EG1VpLJNJfMq4ajxii3S5cByPW8UabbCqnK6yiK\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol": {
				"ast": {
					"absolutePath": "nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol",
					"exportedSymbols": {
						"Context": [
							497
						],
						"IERC165": [
							509
						],
						"IERC20": [
							341
						],
						"IERC721": [
							457
						],
						"IERC721Receiver": [
							475
						],
						"NFTStakingPerToken": [
							263
						]
					},
					"id": 264,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "1344:23:0"
						},
						{
							"absolutePath": "nft-staking-with-infinite-rewards/@openzeppelin/contracts/utils/Context.sol",
							"file": "nft-staking-with-infinite-rewards/@openzeppelin/contracts/utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 264,
							"sourceUnit": 498,
							"src": "1371:85:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "nft-staking-with-infinite-rewards/@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "nft-staking-with-infinite-rewards/@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 264,
							"sourceUnit": 342,
							"src": "1458:90:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "nft-staking-with-infinite-rewards/@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "nft-staking-with-infinite-rewards/@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"id": 4,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 264,
							"sourceUnit": 458,
							"src": "1550:92:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "nft-staking-with-infinite-rewards/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
							"file": "nft-staking-with-infinite-rewards/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 264,
							"sourceUnit": 476,
							"src": "1644:100:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 7,
										"name": "Context",
										"nameLocations": [
											"2613:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 497,
										"src": "2613:7:0"
									},
									"id": 8,
									"nodeType": "InheritanceSpecifier",
									"src": "2613:7:0"
								},
								{
									"baseName": {
										"id": 9,
										"name": "IERC721Receiver",
										"nameLocations": [
											"2622:15:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 475,
										"src": "2622:15:0"
									},
									"id": 10,
									"nodeType": "InheritanceSpecifier",
									"src": "2622:15:0"
								}
							],
							"canonicalName": "NFTStakingPerToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 6,
								"nodeType": "StructuredDocumentation",
								"src": "1748:832:0",
								"text": " @title NFT Staking with Infinite Rewards\n @author Breakthrough Labs Inc.\n @notice Staking, NFT, ERC721\n @custom:version 1.0.0\n @custom:address 51\n @custom:default-precision 0\n @custom:simple-description NFT staking contract that rewards stakers with an exact number of ERC20 tokens per day.\n @dev NFT staking contract that rewards stakers with an exact number of ERC20 tokens per day. On deployment, the owner specifies a daily reward rate,\n and an address that tokens will be pulled from. Neither of these can be changed. Each staked NFT receives the same number of tokens every day. The per NFT\n rate stays the same even when the number of staked NFTs increases/decreases.\n A common usecase is for blockchain-based games, where each NFT rewards a certain number of lives per day."
							},
							"fullyImplemented": true,
							"id": 263,
							"linearizedBaseContracts": [
								263,
								475,
								497
							],
							"name": "NFTStakingPerToken",
							"nameLocation": "2591:18:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "47ccca02",
									"id": 13,
									"mutability": "mutable",
									"name": "nft",
									"nameLocation": "2660:3:0",
									"nodeType": "VariableDeclaration",
									"scope": 263,
									"src": "2645:18:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC721_$457",
										"typeString": "contract IERC721"
									},
									"typeName": {
										"id": 12,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 11,
											"name": "IERC721",
											"nameLocations": [
												"2645:7:0"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 457,
											"src": "2645:7:0"
										},
										"referencedDeclaration": 457,
										"src": "2645:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC721_$457",
											"typeString": "contract IERC721"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f7c618c1",
									"id": 16,
									"mutability": "mutable",
									"name": "rewardToken",
									"nameLocation": "2684:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 263,
									"src": "2670:25:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$341",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 15,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 14,
											"name": "IERC20",
											"nameLocations": [
												"2670:6:0"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 341,
											"src": "2670:6:0"
										},
										"referencedDeclaration": 341,
										"src": "2670:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$341",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "fb75b2c7",
									"id": 18,
									"mutability": "mutable",
									"name": "rewardWallet",
									"nameLocation": "2717:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 263,
									"src": "2702:27:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 17,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "2702:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 19,
										"nodeType": "StructuredDocumentation",
										"src": "2736:24:0",
										"text": "@custom:precision 18"
									},
									"functionSelector": "2d6a1fa6",
									"id": 21,
									"mutability": "mutable",
									"name": "rewardPerTokenPerDay",
									"nameLocation": "2781:20:0",
									"nodeType": "VariableDeclaration",
									"scope": 263,
									"src": "2766:35:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 20,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2766:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 25,
									"mutability": "mutable",
									"name": "stakedTokens",
									"nameLocation": "2846:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 263,
									"src": "2810:48:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 24,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 22,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "2818:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "2810:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 23,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2829:7:0",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "70a08231",
									"id": 29,
									"mutability": "mutable",
									"name": "balanceOf",
									"nameLocation": "2900:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 263,
									"src": "2865:44:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 28,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 26,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2873:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2865:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 27,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "2884:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "2ce9aead",
									"id": 33,
									"mutability": "mutable",
									"name": "lastUpdateTime",
									"nameLocation": "2951:14:0",
									"nodeType": "VariableDeclaration",
									"scope": 263,
									"src": "2916:49:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 32,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 30,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2924:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2916:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 31,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "2935:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 37,
									"mutability": "mutable",
									"name": "reward",
									"nameLocation": "3008:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 263,
									"src": "2972:42:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 36,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 34,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2980:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2972:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 35,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "2991:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 69,
										"nodeType": "Block",
										"src": "3446:184:0",
										"statements": [
											{
												"expression": {
													"id": 53,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 49,
														"name": "nft",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "3457:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC721_$457",
															"typeString": "contract IERC721"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 51,
																"name": "nftAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 40,
																"src": "3471:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 50,
															"name": "IERC721",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "3463:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC721_$457_$",
																"typeString": "type(contract IERC721)"
															}
														},
														"id": 52,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3463:19:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC721_$457",
															"typeString": "contract IERC721"
														}
													},
													"src": "3457:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC721_$457",
														"typeString": "contract IERC721"
													}
												},
												"id": 54,
												"nodeType": "ExpressionStatement",
												"src": "3457:25:0"
											},
											{
												"expression": {
													"id": 59,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 55,
														"name": "rewardToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 16,
														"src": "3493:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$341",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 57,
																"name": "rewardTokenAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 42,
																"src": "3514:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 56,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 341,
															"src": "3507:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$341_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 58,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3507:26:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$341",
															"typeString": "contract IERC20"
														}
													},
													"src": "3493:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$341",
														"typeString": "contract IERC20"
													}
												},
												"id": 60,
												"nodeType": "ExpressionStatement",
												"src": "3493:40:0"
											},
											{
												"expression": {
													"id": 63,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 61,
														"name": "rewardWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 18,
														"src": "3544:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 62,
														"name": "rewardWalletAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 44,
														"src": "3559:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3544:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 64,
												"nodeType": "ExpressionStatement",
												"src": "3544:34:0"
											},
											{
												"expression": {
													"id": 67,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 65,
														"name": "rewardPerTokenPerDay",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 21,
														"src": "3589:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 66,
														"name": "rewardRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 46,
														"src": "3612:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3589:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 68,
												"nodeType": "ExpressionStatement",
												"src": "3589:33:0"
											}
										]
									},
									"documentation": {
										"id": 38,
										"nodeType": "StructuredDocumentation",
										"src": "3023:265:0",
										"text": " @param nftAddress  Staked NFT Address\n @param rewardTokenAddress Reward Token Address\n @param rewardWalletAddress Wallet that holds rewards to be paid out\n @param rewardRate # of tokens per staked NFT per day | precision:18"
									},
									"id": 70,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 40,
												"mutability": "mutable",
												"name": "nftAddress",
												"nameLocation": "3324:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "3316:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 39,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3316:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "rewardTokenAddress",
												"nameLocation": "3353:18:0",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "3345:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 41,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3345:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "rewardWalletAddress",
												"nameLocation": "3390:19:0",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "3382:27:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 43,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3382:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 46,
												"mutability": "mutable",
												"name": "rewardRate",
												"nameLocation": "3428:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "3420:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 45,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3420:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3305:140:0"
									},
									"returnParameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3446:0:0"
									},
									"scope": 263,
									"src": "3294:336:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 90,
										"nodeType": "Block",
										"src": "3671:119:0",
										"statements": [
											{
												"expression": {
													"id": 80,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 74,
															"name": "reward",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 37,
															"src": "3682:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 76,
														"indexExpression": {
															"id": 75,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 72,
															"src": "3689:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3682:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 78,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 72,
																"src": "3710:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 77,
															"name": "available",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 128,
															"src": "3700:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view returns (uint256)"
															}
														},
														"id": 79,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3700:18:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3682:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 81,
												"nodeType": "ExpressionStatement",
												"src": "3682:36:0"
											},
											{
												"expression": {
													"id": 87,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 82,
															"name": "lastUpdateTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 33,
															"src": "3729:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 84,
														"indexExpression": {
															"id": 83,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 72,
															"src": "3744:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3729:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 85,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "3755:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 86,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3761:9:0",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "3755:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3729:41:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 88,
												"nodeType": "ExpressionStatement",
												"src": "3729:41:0"
											},
											{
												"id": 89,
												"nodeType": "PlaceholderStatement",
												"src": "3781:1:0"
											}
										]
									},
									"id": 91,
									"name": "update",
									"nameLocation": "3647:6:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 73,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 72,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3662:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "3654:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 71,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3654:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3653:17:0"
									},
									"src": "3638:152:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 127,
										"nodeType": "Block",
										"src": "3987:243:0",
										"statements": [
											{
												"assignments": [
													100
												],
												"declarations": [
													{
														"constant": false,
														"id": 100,
														"mutability": "mutable",
														"name": "timeElapsed",
														"nameLocation": "4006:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 127,
														"src": "3998:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 99,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3998:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 107,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 106,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 101,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "4020:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 102,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4026:9:0",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "4020:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"baseExpression": {
															"id": 103,
															"name": "lastUpdateTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 33,
															"src": "4038:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 105,
														"indexExpression": {
															"id": 104,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "4053:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4038:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4020:41:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3998:63:0"
											},
											{
												"assignments": [
													109
												],
												"declarations": [
													{
														"constant": false,
														"id": 109,
														"mutability": "mutable",
														"name": "earned",
														"nameLocation": "4080:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 127,
														"src": "4072:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 108,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4072:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 120,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 119,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 116,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 114,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"baseExpression": {
																			"id": 110,
																			"name": "balanceOf",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 29,
																			"src": "4090:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																				"typeString": "mapping(address => uint256)"
																			}
																		},
																		"id": 112,
																		"indexExpression": {
																			"id": 111,
																			"name": "account",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 94,
																			"src": "4100:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4090:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 113,
																		"name": "timeElapsed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 100,
																		"src": "4124:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4090:45:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 115,
																	"name": "rewardPerTokenPerDay",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "4151:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4090:81:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 117,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "4089:83:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "3836343030",
														"id": 118,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4175:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_86400_by_1",
															"typeString": "int_const 86400"
														},
														"value": "86400"
													},
													"src": "4089:91:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4072:108:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 125,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 121,
															"name": "reward",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 37,
															"src": "4198:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 123,
														"indexExpression": {
															"id": 122,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "4205:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4198:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 124,
														"name": "earned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 109,
														"src": "4216:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4198:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 98,
												"id": 126,
												"nodeType": "Return",
												"src": "4191:31:0"
											}
										]
									},
									"documentation": {
										"id": 92,
										"nodeType": "StructuredDocumentation",
										"src": "3798:117:0",
										"text": " @dev returns the number of reward tokens available for an address\n @param account account"
									},
									"functionSelector": "10098ad5",
									"id": 128,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "available",
									"nameLocation": "3930:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3948:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "3940:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3939:17:0"
									},
									"returnParameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "3978:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3978:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3977:9:0"
									},
									"scope": 263,
									"src": "3921:309:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 146,
										"nodeType": "Block",
										"src": "4367:77:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 137,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 487,
																"src": "4399:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 138,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4399:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 141,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "4421:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_NFTStakingPerToken_$263",
																		"typeString": "contract NFTStakingPerToken"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_NFTStakingPerToken_$263",
																		"typeString": "contract NFTStakingPerToken"
																	}
																],
																"id": 140,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4413:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 139,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4413:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 142,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4413:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 143,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 131,
															"src": "4428:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 134,
															"name": "nft",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 13,
															"src": "4378:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC721_$457",
																"typeString": "contract IERC721"
															}
														},
														"id": 136,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4382:16:0",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 412,
														"src": "4378:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256) external"
														}
													},
													"id": 144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4378:58:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 145,
												"nodeType": "ExpressionStatement",
												"src": "4378:58:0"
											}
										]
									},
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "4238:82:0",
										"text": " @dev stakes a specific tokenID\n @param tokenId tokenId"
									},
									"functionSelector": "a694fc3a",
									"id": 147,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "stake",
									"nameLocation": "4335:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 132,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4349:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "4341:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4341:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4340:17:0"
									},
									"returnParameters": {
										"id": 133,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4367:0:0"
									},
									"scope": 263,
									"src": "4326:118:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 190,
										"nodeType": "Block",
										"src": "4623:229:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 163,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 158,
																	"name": "stakedTokens",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 25,
																	"src": "4642:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																		"typeString": "mapping(uint256 => address)"
																	}
																},
																"id": 160,
																"indexExpression": {
																	"id": 159,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 150,
																	"src": "4655:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4642:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 161,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 487,
																	"src": "4667:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 162,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4667:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4642:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546f6b656e206973206e6f74207374616b65642e",
															"id": 164,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4681:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7047e1907ec48195b0277350fe86675187cd3cbb8bd2baa58bb8272dc08b5034",
																"typeString": "literal_string \"Token is not staked.\""
															},
															"value": "Token is not staked."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7047e1907ec48195b0277350fe86675187cd3cbb8bd2baa58bb8272dc08b5034",
																"typeString": "literal_string \"Token is not staked.\""
															}
														],
														"id": 157,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4634:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 165,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4634:70:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 166,
												"nodeType": "ExpressionStatement",
												"src": "4634:70:0"
											},
											{
												"expression": {
													"id": 170,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "4715:28:0",
													"subExpression": {
														"baseExpression": {
															"id": 167,
															"name": "stakedTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 25,
															"src": "4722:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 169,
														"indexExpression": {
															"id": 168,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 150,
															"src": "4735:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4722:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 171,
												"nodeType": "ExpressionStatement",
												"src": "4715:28:0"
											},
											{
												"expression": {
													"id": 176,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "--",
													"prefix": false,
													"src": "4754:25:0",
													"subExpression": {
														"baseExpression": {
															"id": 172,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 29,
															"src": "4754:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 175,
														"indexExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 173,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 487,
																"src": "4764:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 174,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4764:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4754:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 177,
												"nodeType": "ExpressionStatement",
												"src": "4754:25:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 183,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "4815:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_NFTStakingPerToken_$263",
																		"typeString": "contract NFTStakingPerToken"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_NFTStakingPerToken_$263",
																		"typeString": "contract NFTStakingPerToken"
																	}
																],
																"id": 182,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4807:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 181,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4807:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 184,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4807:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 185,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 487,
																"src": "4822:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 186,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4822:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 187,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 150,
															"src": "4836:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 178,
															"name": "nft",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 13,
															"src": "4790:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC721_$457",
																"typeString": "contract IERC721"
															}
														},
														"id": 180,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4794:12:0",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 422,
														"src": "4790:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256) external"
														}
													},
													"id": 188,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4790:54:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 189,
												"nodeType": "ExpressionStatement",
												"src": "4790:54:0"
											}
										]
									},
									"documentation": {
										"id": 148,
										"nodeType": "StructuredDocumentation",
										"src": "4452:100:0",
										"text": " @dev withdraws a token from the staking contract\n @param tokenId tokenId"
									},
									"functionSelector": "2e1a7d4d",
									"id": 191,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 153,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 487,
														"src": "4609:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 154,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4609:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 155,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 152,
												"name": "update",
												"nameLocations": [
													"4602:6:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 91,
												"src": "4602:6:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4602:20:0"
										}
									],
									"name": "withdraw",
									"nameLocation": "4567:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4584:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 191,
												"src": "4576:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 149,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4576:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4575:17:0"
									},
									"returnParameters": {
										"id": 156,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4623:0:0"
									},
									"scope": 263,
									"src": "4558:294:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 229,
										"nodeType": "Block",
										"src": "4978:213:0",
										"statements": [
											{
												"assignments": [
													200
												],
												"declarations": [
													{
														"constant": false,
														"id": 200,
														"mutability": "mutable",
														"name": "amount",
														"nameLocation": "4997:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 229,
														"src": "4989:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 199,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4989:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 205,
												"initialValue": {
													"baseExpression": {
														"id": 201,
														"name": "reward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 37,
														"src": "5006:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 204,
													"indexExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 202,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 487,
															"src": "5013:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 203,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5013:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5006:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4989:37:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 209,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 207,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 200,
																"src": "5045:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 208,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5054:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5045:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7468696e6720746f2072656465656d",
															"id": 210,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5057:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4814ee9298a6ee14dd8d406f87112f1967472b7011a3ae8ceed8f6adee3d0290",
																"typeString": "literal_string \"Nothing to redeem\""
															},
															"value": "Nothing to redeem"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4814ee9298a6ee14dd8d406f87112f1967472b7011a3ae8ceed8f6adee3d0290",
																"typeString": "literal_string \"Nothing to redeem\""
															}
														],
														"id": 206,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5037:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 211,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5037:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 212,
												"nodeType": "ExpressionStatement",
												"src": "5037:40:0"
											},
											{
												"expression": {
													"id": 218,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 213,
															"name": "reward",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 37,
															"src": "5088:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 216,
														"indexExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 214,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 487,
																"src": "5095:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 215,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5095:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5088:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 217,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5111:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5088:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 219,
												"nodeType": "ExpressionStatement",
												"src": "5088:24:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 223,
															"name": "rewardWallet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 18,
															"src": "5148:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 224,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 487,
																"src": "5162:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 225,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5162:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 226,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 200,
															"src": "5176:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 220,
															"name": "rewardToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 16,
															"src": "5123:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$341",
																"typeString": "contract IERC20"
															}
														},
														"id": 222,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5135:12:0",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 340,
														"src": "5123:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 227,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5123:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 228,
												"nodeType": "ExpressionStatement",
												"src": "5123:60:0"
											}
										]
									},
									"documentation": {
										"id": 192,
										"nodeType": "StructuredDocumentation",
										"src": "4860:64:0",
										"text": " @dev redeems all of a user's reward tokens."
									},
									"functionSelector": "be040fb0",
									"id": 230,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 195,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 487,
														"src": "4964:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 196,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4964:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 197,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 194,
												"name": "update",
												"nameLocations": [
													"4957:6:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 91,
												"src": "4957:6:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4957:20:0"
										}
									],
									"name": "redeem",
									"nameLocation": "4939:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4945:2:0"
									},
									"returnParameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4978:0:0"
									},
									"scope": 263,
									"src": "4930:261:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										474
									],
									"body": {
										"id": 261,
										"nodeType": "Block",
										"src": "5363:134:0",
										"statements": [
											{
												"expression": {
													"id": 250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 246,
															"name": "stakedTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 25,
															"src": "5374:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 248,
														"indexExpression": {
															"id": 247,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 236,
															"src": "5387:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5374:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 249,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 234,
														"src": "5398:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5374:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 251,
												"nodeType": "ExpressionStatement",
												"src": "5374:28:0"
											},
											{
												"expression": {
													"id": 255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "5413:17:0",
													"subExpression": {
														"baseExpression": {
															"id": 252,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 29,
															"src": "5413:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 254,
														"indexExpression": {
															"id": 253,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 234,
															"src": "5423:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5413:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 256,
												"nodeType": "ExpressionStatement",
												"src": "5413:17:0"
											},
											{
												"expression": {
													"expression": {
														"expression": {
															"id": 257,
															"name": "IERC721Receiver",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 475,
															"src": "5448:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$475_$",
																"typeString": "type(contract IERC721Receiver)"
															}
														},
														"id": 258,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "5464:16:0",
														"memberName": "onERC721Received",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 474,
														"src": "5448:32:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
															"typeString": "function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"
														}
													},
													"id": 259,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberLocation": "5481:8:0",
													"memberName": "selector",
													"nodeType": "MemberAccess",
													"src": "5448:41:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"functionReturnParameters": 245,
												"id": 260,
												"nodeType": "Return",
												"src": "5441:48:0"
											}
										]
									},
									"functionSelector": "150b7a02",
									"id": 262,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 241,
													"name": "from",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 234,
													"src": "5340:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 242,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 240,
												"name": "update",
												"nameLocations": [
													"5333:6:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 91,
												"src": "5333:6:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "5333:12:0"
										}
									],
									"name": "onERC721Received",
									"nameLocation": "5208:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 232,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "5235:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 231,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5235:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5261:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "5253:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5253:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5284:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "5276:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 235,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5276:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 238,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "5302:14:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 237,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5302:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5224:99:0"
									},
									"returnParameters": {
										"id": 245,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 244,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "5355:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 243,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "5355:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5354:8:0"
									},
									"scope": 263,
									"src": "5199:298:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 264,
							"src": "2582:2918:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "1344:4160:0"
				},
				"id": 0
			},
			"nft-staking-with-infinite-rewards/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "nft-staking-with-infinite-rewards/@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							341
						]
					},
					"id": 342,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 265,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "1400:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 266,
								"nodeType": "StructuredDocumentation",
								"src": "1425:70:1",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 341,
							"linearizedBaseContracts": [
								341
							],
							"name": "IERC20",
							"nameLocation": "1506:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "1519:158:1",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 275,
									"name": "Transfer",
									"nameLocation": "1688:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1713:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 275,
												"src": "1697:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1697:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 271,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1735:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 275,
												"src": "1719:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 270,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1719:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 273,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1747:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 275,
												"src": "1739:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 272,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1739:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1696:57:1"
									},
									"src": "1682:72:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 276,
										"nodeType": "StructuredDocumentation",
										"src": "1760:148:1",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 284,
									"name": "Approval",
									"nameLocation": "1919:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 283,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 278,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1944:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 284,
												"src": "1928:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 277,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1928:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 280,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1967:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 284,
												"src": "1951:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 279,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1951:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 282,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1984:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 284,
												"src": "1976:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 281,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1976:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1927:63:1"
									},
									"src": "1913:78:1"
								},
								{
									"documentation": {
										"id": 285,
										"nodeType": "StructuredDocumentation",
										"src": "1997:66:1",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 290,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2077:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 286,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2088:2:1"
									},
									"returnParameters": {
										"id": 289,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 290,
												"src": "2114:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 287,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2114:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2113:9:1"
									},
									"scope": 341,
									"src": "2068:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 291,
										"nodeType": "StructuredDocumentation",
										"src": "2129:72:1",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 298,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "2215:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 294,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 293,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2233:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 298,
												"src": "2225:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 292,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2225:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2224:17:1"
									},
									"returnParameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 296,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 298,
												"src": "2265:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 295,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2265:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2264:9:1"
									},
									"scope": 341,
									"src": "2206:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 299,
										"nodeType": "StructuredDocumentation",
										"src": "2280:202:1",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 308,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "2496:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2513:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "2505:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 300,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2505:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2525:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "2517:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 302,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2517:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2504:28:1"
									},
									"returnParameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 306,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "2551:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 305,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2551:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2550:6:1"
									},
									"scope": 341,
									"src": "2487:70:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 309,
										"nodeType": "StructuredDocumentation",
										"src": "2563:264:1",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 318,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "2841:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 314,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 311,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2859:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "2851:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 310,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2851:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 313,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2874:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "2866:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 312,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2866:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2850:32:1"
									},
									"returnParameters": {
										"id": 317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 316,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "2906:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 315,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2906:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2905:9:1"
									},
									"scope": 341,
									"src": "2832:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 319,
										"nodeType": "StructuredDocumentation",
										"src": "2921:642:1",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 328,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3577:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 324,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 321,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3593:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 328,
												"src": "3585:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 320,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3585:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 323,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3610:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 328,
												"src": "3602:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 322,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3602:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3584:33:1"
									},
									"returnParameters": {
										"id": 327,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 326,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 328,
												"src": "3636:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 325,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3636:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3635:6:1"
									},
									"scope": 341,
									"src": "3568:74:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 329,
										"nodeType": "StructuredDocumentation",
										"src": "3648:287:1",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 340,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3949:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 331,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3979:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "3971:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 330,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3971:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 333,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4001:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "3993:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 332,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3993:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 335,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4021:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "4013:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 334,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4013:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3961:72:1"
									},
									"returnParameters": {
										"id": 339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 338,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "4052:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 337,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4052:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4051:6:1"
									},
									"scope": 341,
									"src": "3940:118:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 342,
							"src": "1496:2564:1",
							"usedErrors": [],
							"usedEvents": [
								275,
								284
							]
						}
					],
					"src": "1400:2661:1"
				},
				"id": 1
			},
			"nft-staking-with-infinite-rewards/@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"ast": {
					"absolutePath": "nft-staking-with-infinite-rewards/@openzeppelin/contracts/token/ERC721/IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							509
						],
						"IERC721": [
							457
						]
					},
					"id": 458,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 343,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "1402:23:2"
						},
						{
							"absolutePath": "nft-staking-with-infinite-rewards/@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 344,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 458,
							"sourceUnit": 510,
							"src": "1427:47:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 346,
										"name": "IERC165",
										"nameLocations": [
											"1565:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 509,
										"src": "1565:7:2"
									},
									"id": 347,
									"nodeType": "InheritanceSpecifier",
									"src": "1565:7:2"
								}
							],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 345,
								"nodeType": "StructuredDocumentation",
								"src": "1476:67:2",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 457,
							"linearizedBaseContracts": [
								457,
								509
							],
							"name": "IERC721",
							"nameLocation": "1554:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 348,
										"nodeType": "StructuredDocumentation",
										"src": "1579:88:2",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 356,
									"name": "Transfer",
									"nameLocation": "1678:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 355,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 350,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1703:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 356,
												"src": "1687:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 349,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1687:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 352,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1725:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 356,
												"src": "1709:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 351,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1709:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 354,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1745:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 356,
												"src": "1729:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 353,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1729:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1686:67:2"
									},
									"src": "1672:82:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 357,
										"nodeType": "StructuredDocumentation",
										"src": "1760:94:2",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 365,
									"name": "Approval",
									"nameLocation": "1865:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 364,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 359,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1890:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 365,
												"src": "1874:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 358,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1874:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 361,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "1913:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 365,
												"src": "1897:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 360,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1897:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 363,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1939:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 365,
												"src": "1923:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 362,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1923:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1873:74:2"
									},
									"src": "1859:89:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 366,
										"nodeType": "StructuredDocumentation",
										"src": "1954:117:2",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 374,
									"name": "ApprovalForAll",
									"nameLocation": "2082:14:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 373,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 368,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2113:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 374,
												"src": "2097:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 367,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2097:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 370,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2136:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 374,
												"src": "2120:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 369,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2120:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 372,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "2151:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 374,
												"src": "2146:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 371,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2146:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2096:64:2"
									},
									"src": "2076:85:2"
								},
								{
									"documentation": {
										"id": 375,
										"nodeType": "StructuredDocumentation",
										"src": "2167:76:2",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 382,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "2257:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 377,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2275:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 382,
												"src": "2267:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 376,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2267:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2266:15:2"
									},
									"returnParameters": {
										"id": 381,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 380,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "2313:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 382,
												"src": "2305:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 379,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2305:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2304:17:2"
									},
									"scope": 457,
									"src": "2248:74:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 383,
										"nodeType": "StructuredDocumentation",
										"src": "2328:131:2",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 390,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "2473:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 386,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 385,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2489:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "2481:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 384,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2481:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2480:17:2"
									},
									"returnParameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2529:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "2521:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2521:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2520:15:2"
									},
									"scope": 457,
									"src": "2464:72:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 391,
										"nodeType": "StructuredDocumentation",
										"src": "2542:556:2",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 402,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "3112:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 400,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3146:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "3138:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 392,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3138:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3168:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "3160:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 394,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3160:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 397,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3188:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "3180:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 396,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3180:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 399,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3220:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "3205:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 398,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3205:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3128:102:2"
									},
									"returnParameters": {
										"id": 401,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3239:0:2"
									},
									"scope": 457,
									"src": "3103:137:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 403,
										"nodeType": "StructuredDocumentation",
										"src": "3246:687:2",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 412,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "3947:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 405,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3981:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "3973:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 404,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3973:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 407,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4003:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "3995:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 406,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3995:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 409,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4023:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "4015:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 408,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4015:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3963:73:2"
									},
									"returnParameters": {
										"id": 411,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4045:0:2"
									},
									"scope": 457,
									"src": "3938:108:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 413,
										"nodeType": "StructuredDocumentation",
										"src": "4052:504:2",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 422,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4570:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 420,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 415,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4600:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "4592:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 414,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4592:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4622:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "4614:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 416,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4614:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 419,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4642:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "4634:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 418,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4634:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4582:73:2"
									},
									"returnParameters": {
										"id": 421,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4664:0:2"
									},
									"scope": 457,
									"src": "4561:104:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 423,
										"nodeType": "StructuredDocumentation",
										"src": "4671:452:2",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 430,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "5137:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 428,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 425,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5153:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 430,
												"src": "5145:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 424,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5145:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 427,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5165:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 430,
												"src": "5157:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 426,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5157:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5144:29:2"
									},
									"returnParameters": {
										"id": 429,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5182:0:2"
									},
									"scope": 457,
									"src": "5128:55:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 431,
										"nodeType": "StructuredDocumentation",
										"src": "5189:309:2",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 438,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "5512:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 436,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 433,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5538:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "5530:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 432,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5530:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 435,
												"mutability": "mutable",
												"name": "_approved",
												"nameLocation": "5553:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "5548:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 434,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5548:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5529:34:2"
									},
									"returnParameters": {
										"id": 437,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5572:0:2"
									},
									"scope": 457,
									"src": "5503:70:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 439,
										"nodeType": "StructuredDocumentation",
										"src": "5579:139:2",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 446,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "5732:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 442,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 441,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5752:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 446,
												"src": "5744:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 440,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5744:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5743:17:2"
									},
									"returnParameters": {
										"id": 445,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 444,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5792:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 446,
												"src": "5784:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 443,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5784:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5783:18:2"
									},
									"scope": 457,
									"src": "5723:79:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 447,
										"nodeType": "StructuredDocumentation",
										"src": "5808:138:2",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 456,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "5960:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 452,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 449,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5985:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 456,
												"src": "5977:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 448,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5977:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 451,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6000:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 456,
												"src": "5992:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 450,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5992:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5976:33:2"
									},
									"returnParameters": {
										"id": 455,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 454,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 456,
												"src": "6033:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 453,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6033:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6032:6:2"
									},
									"scope": 457,
									"src": "5951:88:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 458,
							"src": "1544:4497:2",
							"usedErrors": [],
							"usedEvents": [
								356,
								365,
								374
							]
						}
					],
					"src": "1402:4640:2"
				},
				"id": 2
			},
			"nft-staking-with-infinite-rewards/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"ast": {
					"absolutePath": "nft-staking-with-infinite-rewards/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
					"exportedSymbols": {
						"IERC721Receiver": [
							475
						]
					},
					"id": 476,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 459,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "1410:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 460,
								"nodeType": "StructuredDocumentation",
								"src": "1435:152:3",
								"text": " @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."
							},
							"fullyImplemented": false,
							"id": 475,
							"linearizedBaseContracts": [
								475
							],
							"name": "IERC721Receiver",
							"nameLocation": "1598:15:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 461,
										"nodeType": "StructuredDocumentation",
										"src": "1620:493:3",
										"text": " @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
									},
									"functionSelector": "150b7a02",
									"id": 474,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "2127:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 470,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2161:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 474,
												"src": "2153:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 462,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2153:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 465,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2187:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 474,
												"src": "2179:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 464,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2179:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 467,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2209:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 474,
												"src": "2201:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 466,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2201:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 469,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2241:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 474,
												"src": "2226:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 468,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2226:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2143:108:3"
									},
									"returnParameters": {
										"id": 473,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 472,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 474,
												"src": "2270:6:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 471,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2270:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2269:8:3"
									},
									"scope": 475,
									"src": "2118:160:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 476,
							"src": "1588:692:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "1410:871:3"
				},
				"id": 3
			},
			"nft-staking-with-infinite-rewards/@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "nft-staking-with-infinite-rewards/@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							497
						]
					},
					"id": 498,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 477,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "1380:23:4"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 478,
								"nodeType": "StructuredDocumentation",
								"src": "1405:496:4",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 497,
							"linearizedBaseContracts": [
								497
							],
							"name": "Context",
							"nameLocation": "1920:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 486,
										"nodeType": "Block",
										"src": "1996:34:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 483,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "2013:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 484,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2017:6:4",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "2013:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 482,
												"id": 485,
												"nodeType": "Return",
												"src": "2006:17:4"
											}
										]
									},
									"id": 487,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "1943:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 479,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1953:2:4"
									},
									"returnParameters": {
										"id": 482,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 481,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 487,
												"src": "1987:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 480,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1987:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1986:9:4"
									},
									"scope": 497,
									"src": "1934:96:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 495,
										"nodeType": "Block",
										"src": "2103:32:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 492,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "2120:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 493,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2124:4:4",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "2120:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 491,
												"id": 494,
												"nodeType": "Return",
												"src": "2113:15:4"
											}
										]
									},
									"id": 496,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "2045:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 488,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2053:2:4"
									},
									"returnParameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 490,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 496,
												"src": "2087:14:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 489,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2087:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2086:16:4"
									},
									"scope": 497,
									"src": "2036:99:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 498,
							"src": "1902:235:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "1380:758:4"
				},
				"id": 4
			},
			"nft-staking-with-infinite-rewards/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "nft-staking-with-infinite-rewards/@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							509
						]
					},
					"id": 510,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 499,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "1394:23:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 500,
								"nodeType": "StructuredDocumentation",
								"src": "1419:279:5",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 509,
							"linearizedBaseContracts": [
								509
							],
							"name": "IERC165",
							"nameLocation": "1709:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 501,
										"nodeType": "StructuredDocumentation",
										"src": "1723:340:5",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 508,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "2077:17:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 504,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 503,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "2102:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 508,
												"src": "2095:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 502,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2095:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2094:20:5"
									},
									"returnParameters": {
										"id": 507,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 506,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 508,
												"src": "2138:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 505,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2138:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2137:6:5"
									},
									"scope": 509,
									"src": "2068:76:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 510,
							"src": "1699:447:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "1394:753:5"
				},
				"id": 5
			}
		}
	}
}