{
	"id": "9beffab6ab794206237266b268225f7d",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.27",
	"solcLongVersion": "0.8.27+commit.40a35a09",
	"input": {
		"language": "Solidity",
		"sources": {
			"Delegate(copy)(copy)//contracts/DelegationRegistry.sol": {
				"content": "/*\n    \n   ██████  ██████   ██████  ██   ██ ██████   ██████   ██████  ██   ██    ██████  ███████ ██    ██\n  ██      ██    ██ ██    ██ ██  ██  ██   ██ ██    ██ ██    ██ ██  ██     ██   ██ ██      ██    ██\n  ██      ██    ██ ██    ██ █████   ██████  ██    ██ ██    ██ █████      ██   ██ █████   ██    ██\n  ██      ██    ██ ██    ██ ██  ██  ██   ██ ██    ██ ██    ██ ██  ██     ██   ██ ██       ██  ██\n   ██████  ██████   ██████  ██   ██ ██████   ██████   ██████  ██   ██ ██ ██████  ███████   ████\n  \n  Find any smart contract, and build your project faster: https://www.cookbook.dev\n  Twitter: https://twitter.com/cookbook_dev\n  Discord: https://discord.gg/cookbookdev\n  \n  Find this contract on Cookbook: https://www.cookbook.dev/protocols/Delegate?utm=code\n  */\n  \n  // SPDX-License-Identifier: CC0-1.0\npragma solidity ^0.8.17;\n\nimport {IDelegationRegistry} from \"./IDelegationRegistry.sol\";\nimport {EnumerableSet} from \"Delegate/@openzeppelin/contracts/utils/structs/EnumerableSet.sol\";\nimport {ERC165} from \"Delegate/@openzeppelin/contracts/utils/introspection/ERC165.sol\";\n\n/**\n * @title DelegationRegistry\n * @custom:version 1.0\n * @notice An immutable registry contract to be deployed as a standalone primitive.\n * @dev See EIP-5639, new project launches can read previous cold wallet -> hot wallet delegations\n * from here and integrate those permissions into their flow.\n * @custom:coauthor foobar (0xfoobar)\n * @custom:coauthor wwchung (manifoldxyz)\n * @custom:coauthor purplehat (artblocks)\n * @custom:coauthor ryley-o (artblocks)\n * @custom:coauthor andy8052 (tessera)\n * @custom:coauthor punk6529 (open metaverse)\n * @custom:coauthor loopify (loopiverse)\n * @custom:coauthor emiliano (nftrentals)\n * @custom:coauthor arran (proof)\n * @custom:coauthor james (collabland)\n * @custom:coauthor john (gnosis safe)\n * @custom:coauthor 0xrusowsky\n */\ncontract DelegationRegistry is IDelegationRegistry, ERC165 {\n    using EnumerableSet for EnumerableSet.AddressSet;\n    using EnumerableSet for EnumerableSet.Bytes32Set;\n\n    /// @notice The global mapping and single source of truth for delegations\n    /// @dev vault -> vaultVersion -> delegationHash\n    mapping(address => mapping(uint256 => EnumerableSet.Bytes32Set))\n        internal delegations;\n\n    /// @notice A mapping of wallets to versions (for cheap revocation)\n    mapping(address => uint256) internal vaultVersion;\n\n    /// @notice A mapping of wallets to delegates to versions (for cheap revocation)\n    mapping(address => mapping(address => uint256)) internal delegateVersion;\n\n    /// @notice A secondary mapping to return onchain enumerability of delegations that a given address can perform\n    /// @dev delegate -> delegationHashes\n    mapping(address => EnumerableSet.Bytes32Set) internal delegationHashes;\n\n    /// @notice A secondary mapping used to return delegation information about a delegation\n    /// @dev delegationHash -> DelegateInfo\n    mapping(bytes32 => IDelegationRegistry.DelegationInfo)\n        internal delegationInfo;\n\n    /**\n     * @inheritdoc ERC165\n     */\n    function supportsInterface(\n        bytes4 interfaceId\n    ) public view virtual override(ERC165) returns (bool) {\n        return\n            interfaceId == type(IDelegationRegistry).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * -----------  WRITE -----------\n     */\n\n    /**\n     * @inheritdoc IDelegationRegistry\n     */\n    function delegateForAll(address delegate, bool value) external override {\n        bytes32 delegationHash = _computeAllDelegationHash(\n            msg.sender,\n            delegate\n        );\n        _setDelegationValues(\n            delegate,\n            delegationHash,\n            value,\n            IDelegationRegistry.DelegationType.ALL,\n            msg.sender,\n            address(0),\n            0\n        );\n        emit IDelegationRegistry.DelegateForAll(msg.sender, delegate, value);\n    }\n\n    /**\n     * @inheritdoc IDelegationRegistry\n     */\n    function delegateForContract(\n        address delegate,\n        address contract_,\n        bool value\n    ) external override {\n        bytes32 delegationHash = _computeContractDelegationHash(\n            msg.sender,\n            delegate,\n            contract_\n        );\n        _setDelegationValues(\n            delegate,\n            delegationHash,\n            value,\n            IDelegationRegistry.DelegationType.CONTRACT,\n            msg.sender,\n            contract_,\n            0\n        );\n        emit IDelegationRegistry.DelegateForContract(\n            msg.sender,\n            delegate,\n            contract_,\n            value\n        );\n    }\n\n    /**\n     * @inheritdoc IDelegationRegistry\n     */\n    function delegateForToken(\n        address delegate,\n        address contract_,\n        uint256 tokenId,\n        bool value\n    ) external override {\n        bytes32 delegationHash = _computeTokenDelegationHash(\n            msg.sender,\n            delegate,\n            contract_,\n            tokenId\n        );\n        _setDelegationValues(\n            delegate,\n            delegationHash,\n            value,\n            IDelegationRegistry.DelegationType.TOKEN,\n            msg.sender,\n            contract_,\n            tokenId\n        );\n        emit IDelegationRegistry.DelegateForToken(\n            msg.sender,\n            delegate,\n            contract_,\n            tokenId,\n            value\n        );\n    }\n\n    /**\n     * @dev Helper function to set all delegation values and enumeration sets\n     */\n    function _setDelegationValues(\n        address delegate,\n        bytes32 delegateHash,\n        bool value,\n        IDelegationRegistry.DelegationType type_,\n        address vault,\n        address contract_,\n        uint256 tokenId\n    ) internal {\n        if (value) {\n            delegations[vault][vaultVersion[vault]].add(delegateHash);\n            delegationHashes[delegate].add(delegateHash);\n            delegationInfo[delegateHash] = DelegationInfo({\n                vault: vault,\n                delegate: delegate,\n                type_: type_,\n                contract_: contract_,\n                tokenId: tokenId\n            });\n        } else {\n            delegations[vault][vaultVersion[vault]].remove(delegateHash);\n            delegationHashes[delegate].remove(delegateHash);\n            delete delegationInfo[delegateHash];\n        }\n    }\n\n    /**\n     * @dev Helper function to compute delegation hash for wallet delegation\n     */\n    function _computeAllDelegationHash(\n        address vault,\n        address delegate\n    ) internal view returns (bytes32) {\n        uint256 vaultVersion_ = vaultVersion[vault];\n        uint256 delegateVersion_ = delegateVersion[vault][delegate];\n        return\n            keccak256(\n                abi.encode(delegate, vault, vaultVersion_, delegateVersion_)\n            );\n    }\n\n    /**\n     * @dev Helper function to compute delegation hash for contract delegation\n     */\n    function _computeContractDelegationHash(\n        address vault,\n        address delegate,\n        address contract_\n    ) internal view returns (bytes32) {\n        uint256 vaultVersion_ = vaultVersion[vault];\n        uint256 delegateVersion_ = delegateVersion[vault][delegate];\n        return\n            keccak256(\n                abi.encode(\n                    delegate,\n                    vault,\n                    contract_,\n                    vaultVersion_,\n                    delegateVersion_\n                )\n            );\n    }\n\n    /**\n     * @dev Helper function to compute delegation hash for token delegation\n     */\n    function _computeTokenDelegationHash(\n        address vault,\n        address delegate,\n        address contract_,\n        uint256 tokenId\n    ) internal view returns (bytes32) {\n        uint256 vaultVersion_ = vaultVersion[vault];\n        uint256 delegateVersion_ = delegateVersion[vault][delegate];\n        return\n            keccak256(\n                abi.encode(\n                    delegate,\n                    vault,\n                    contract_,\n                    tokenId,\n                    vaultVersion_,\n                    delegateVersion_\n                )\n            );\n    }\n\n    /**\n     * @inheritdoc IDelegationRegistry\n     */\n    function revokeAllDelegates() external override {\n        ++vaultVersion[msg.sender];\n        emit IDelegationRegistry.RevokeAllDelegates(msg.sender);\n    }\n\n    /**\n     * @inheritdoc IDelegationRegistry\n     */\n    function revokeDelegate(address delegate) external override {\n        _revokeDelegate(delegate, msg.sender);\n    }\n\n    /**\n     * @inheritdoc IDelegationRegistry\n     */\n    function revokeSelf(address vault) external override {\n        _revokeDelegate(msg.sender, vault);\n    }\n\n    /**\n     * @dev Revoke the `delegate` hotwallet from the `vault` coldwallet.\n     */\n    function _revokeDelegate(address delegate, address vault) internal {\n        ++delegateVersion[vault][delegate];\n        // For enumerations, filter in the view functions\n        emit IDelegationRegistry.RevokeDelegate(vault, msg.sender);\n    }\n\n    /**\n     * -----------  READ -----------\n     */\n\n    /**\n     * @inheritdoc IDelegationRegistry\n     */\n    function getDelegationsByDelegate(\n        address delegate\n    ) external view returns (IDelegationRegistry.DelegationInfo[] memory info) {\n        EnumerableSet.Bytes32Set\n            storage potentialDelegationHashes = delegationHashes[delegate];\n        uint256 potentialDelegationHashesLength = potentialDelegationHashes\n            .length();\n        uint256 delegationCount = 0;\n        info = new IDelegationRegistry.DelegationInfo[](\n            potentialDelegationHashesLength\n        );\n        for (uint256 i = 0; i < potentialDelegationHashesLength; ) {\n            bytes32 delegateHash = potentialDelegationHashes.at(i);\n            IDelegationRegistry.DelegationInfo\n                memory delegationInfo_ = delegationInfo[delegateHash];\n            address vault = delegationInfo_.vault;\n            IDelegationRegistry.DelegationType type_ = delegationInfo_.type_;\n            bool valid = false;\n            if (type_ == IDelegationRegistry.DelegationType.ALL) {\n                if (\n                    delegateHash == _computeAllDelegationHash(vault, delegate)\n                ) {\n                    valid = true;\n                }\n            } else if (type_ == IDelegationRegistry.DelegationType.CONTRACT) {\n                if (\n                    delegateHash ==\n                    _computeContractDelegationHash(\n                        vault,\n                        delegate,\n                        delegationInfo_.contract_\n                    )\n                ) {\n                    valid = true;\n                }\n            } else if (type_ == IDelegationRegistry.DelegationType.TOKEN) {\n                if (\n                    delegateHash ==\n                    _computeTokenDelegationHash(\n                        vault,\n                        delegate,\n                        delegationInfo_.contract_,\n                        delegationInfo_.tokenId\n                    )\n                ) {\n                    valid = true;\n                }\n            }\n            if (valid) {\n                info[delegationCount++] = delegationInfo_;\n            }\n            unchecked {\n                ++i;\n            }\n        }\n        if (potentialDelegationHashesLength > delegationCount) {\n            assembly {\n                let decrease := sub(\n                    potentialDelegationHashesLength,\n                    delegationCount\n                )\n                mstore(info, sub(mload(info), decrease))\n            }\n        }\n    }\n\n    /**\n     * @inheritdoc IDelegationRegistry\n     */\n    function getDelegatesForAll(\n        address vault\n    ) external view returns (address[] memory delegates) {\n        return\n            _getDelegatesForLevel(\n                vault,\n                IDelegationRegistry.DelegationType.ALL,\n                address(0),\n                0\n            );\n    }\n\n    /**\n     * @inheritdoc IDelegationRegistry\n     */\n    function getDelegatesForContract(\n        address vault,\n        address contract_\n    ) external view override returns (address[] memory delegates) {\n        return\n            _getDelegatesForLevel(\n                vault,\n                IDelegationRegistry.DelegationType.CONTRACT,\n                contract_,\n                0\n            );\n    }\n\n    /**\n     * @inheritdoc IDelegationRegistry\n     */\n    function getDelegatesForToken(\n        address vault,\n        address contract_,\n        uint256 tokenId\n    ) external view override returns (address[] memory delegates) {\n        return\n            _getDelegatesForLevel(\n                vault,\n                IDelegationRegistry.DelegationType.TOKEN,\n                contract_,\n                tokenId\n            );\n    }\n\n    function _getDelegatesForLevel(\n        address vault,\n        IDelegationRegistry.DelegationType delegationType,\n        address contract_,\n        uint256 tokenId\n    ) internal view returns (address[] memory delegates) {\n        EnumerableSet.Bytes32Set storage delegationHashes_ = delegations[vault][\n            vaultVersion[vault]\n        ];\n        uint256 potentialDelegatesLength = delegationHashes_.length();\n        uint256 delegatesCount = 0;\n        delegates = new address[](potentialDelegatesLength);\n        for (uint256 i = 0; i < potentialDelegatesLength; ) {\n            bytes32 delegationHash = delegationHashes_.at(i);\n            DelegationInfo storage delegationInfo_ = delegationInfo[\n                delegationHash\n            ];\n            if (delegationInfo_.type_ == delegationType) {\n                if (delegationType == IDelegationRegistry.DelegationType.ALL) {\n                    // check delegate version by validating the hash\n                    if (\n                        delegationHash ==\n                        _computeAllDelegationHash(\n                            vault,\n                            delegationInfo_.delegate\n                        )\n                    ) {\n                        delegates[delegatesCount++] = delegationInfo_.delegate;\n                    }\n                } else if (\n                    delegationType ==\n                    IDelegationRegistry.DelegationType.CONTRACT\n                ) {\n                    if (delegationInfo_.contract_ == contract_) {\n                        // check delegate version by validating the hash\n                        if (\n                            delegationHash ==\n                            _computeContractDelegationHash(\n                                vault,\n                                delegationInfo_.delegate,\n                                contract_\n                            )\n                        ) {\n                            delegates[delegatesCount++] = delegationInfo_\n                                .delegate;\n                        }\n                    }\n                } else if (\n                    delegationType == IDelegationRegistry.DelegationType.TOKEN\n                ) {\n                    if (\n                        delegationInfo_.contract_ == contract_ &&\n                        delegationInfo_.tokenId == tokenId\n                    ) {\n                        // check delegate version by validating the hash\n                        if (\n                            delegationHash ==\n                            _computeTokenDelegationHash(\n                                vault,\n                                delegationInfo_.delegate,\n                                contract_,\n                                tokenId\n                            )\n                        ) {\n                            delegates[delegatesCount++] = delegationInfo_\n                                .delegate;\n                        }\n                    }\n                }\n            }\n            unchecked {\n                ++i;\n            }\n        }\n        if (potentialDelegatesLength > delegatesCount) {\n            assembly {\n                let decrease := sub(potentialDelegatesLength, delegatesCount)\n                mstore(delegates, sub(mload(delegates), decrease))\n            }\n        }\n    }\n\n    /**\n     * @inheritdoc IDelegationRegistry\n     */\n    function getContractLevelDelegations(\n        address vault\n    )\n        external\n        view\n        returns (\n            IDelegationRegistry.ContractDelegation[] memory contractDelegations\n        )\n    {\n        EnumerableSet.Bytes32Set storage delegationHashes_ = delegations[vault][\n            vaultVersion[vault]\n        ];\n        uint256 potentialLength = delegationHashes_.length();\n        uint256 delegationCount = 0;\n        contractDelegations = new IDelegationRegistry.ContractDelegation[](\n            potentialLength\n        );\n        for (uint256 i = 0; i < potentialLength; ) {\n            bytes32 delegationHash = delegationHashes_.at(i);\n            DelegationInfo storage delegationInfo_ = delegationInfo[\n                delegationHash\n            ];\n            if (\n                delegationInfo_.type_ ==\n                IDelegationRegistry.DelegationType.CONTRACT\n            ) {\n                // check delegate version by validating the hash\n                if (\n                    delegationHash ==\n                    _computeContractDelegationHash(\n                        vault,\n                        delegationInfo_.delegate,\n                        delegationInfo_.contract_\n                    )\n                ) {\n                    contractDelegations[delegationCount++] = IDelegationRegistry\n                        .ContractDelegation({\n                            contract_: delegationInfo_.contract_,\n                            delegate: delegationInfo_.delegate\n                        });\n                }\n            }\n            unchecked {\n                ++i;\n            }\n        }\n        if (potentialLength > delegationCount) {\n            assembly {\n                let decrease := sub(potentialLength, delegationCount)\n                mstore(\n                    contractDelegations,\n                    sub(mload(contractDelegations), decrease)\n                )\n            }\n        }\n    }\n\n    /**\n     * @inheritdoc IDelegationRegistry\n     */\n    function getTokenLevelDelegations(\n        address vault\n    )\n        external\n        view\n        returns (IDelegationRegistry.TokenDelegation[] memory tokenDelegations)\n    {\n        EnumerableSet.Bytes32Set storage delegationHashes_ = delegations[vault][\n            vaultVersion[vault]\n        ];\n        uint256 potentialLength = delegationHashes_.length();\n        uint256 delegationCount = 0;\n        tokenDelegations = new IDelegationRegistry.TokenDelegation[](\n            potentialLength\n        );\n        for (uint256 i = 0; i < potentialLength; ) {\n            bytes32 delegationHash = delegationHashes_.at(i);\n            DelegationInfo storage delegationInfo_ = delegationInfo[\n                delegationHash\n            ];\n            if (\n                delegationInfo_.type_ ==\n                IDelegationRegistry.DelegationType.TOKEN\n            ) {\n                // check delegate version by validating the hash\n                if (\n                    delegationHash ==\n                    _computeTokenDelegationHash(\n                        vault,\n                        delegationInfo_.delegate,\n                        delegationInfo_.contract_,\n                        delegationInfo_.tokenId\n                    )\n                ) {\n                    tokenDelegations[delegationCount++] = IDelegationRegistry\n                        .TokenDelegation({\n                            contract_: delegationInfo_.contract_,\n                            tokenId: delegationInfo_.tokenId,\n                            delegate: delegationInfo_.delegate\n                        });\n                }\n            }\n            unchecked {\n                ++i;\n            }\n        }\n        if (potentialLength > delegationCount) {\n            assembly {\n                let decrease := sub(potentialLength, delegationCount)\n                mstore(tokenDelegations, sub(mload(tokenDelegations), decrease))\n            }\n        }\n    }\n\n    /**\n     * @inheritdoc IDelegationRegistry\n     */\n    function checkDelegateForAll(\n        address delegate,\n        address vault\n    ) public view override returns (bool) {\n        bytes32 delegateHash = keccak256(\n            abi.encode(\n                delegate,\n                vault,\n                vaultVersion[vault],\n                delegateVersion[vault][delegate]\n            )\n        );\n        return delegations[vault][vaultVersion[vault]].contains(delegateHash);\n    }\n\n    /**\n     * @inheritdoc IDelegationRegistry\n     */\n    function checkDelegateForContract(\n        address delegate,\n        address vault,\n        address contract_\n    ) public view override returns (bool) {\n        bytes32 delegateHash = keccak256(\n            abi.encode(\n                delegate,\n                vault,\n                contract_,\n                vaultVersion[vault],\n                delegateVersion[vault][delegate]\n            )\n        );\n        return\n            delegations[vault][vaultVersion[vault]].contains(delegateHash)\n                ? true\n                : checkDelegateForAll(delegate, vault);\n    }\n\n    /**\n     * @inheritdoc IDelegationRegistry\n     */\n    function checkDelegateForToken(\n        address delegate,\n        address vault,\n        address contract_,\n        uint256 tokenId\n    ) public view override returns (bool) {\n        bytes32 delegateHash = keccak256(\n            abi.encode(\n                delegate,\n                vault,\n                contract_,\n                tokenId,\n                vaultVersion[vault],\n                delegateVersion[vault][delegate]\n            )\n        );\n        return\n            delegations[vault][vaultVersion[vault]].contains(delegateHash)\n                ? true\n                : checkDelegateForContract(delegate, vault, contract_);\n    }\n}\n"
			},
			"Delegate/@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "/*\n    \n   ██████  ██████   ██████  ██   ██ ██████   ██████   ██████  ██   ██    ██████  ███████ ██    ██\n  ██      ██    ██ ██    ██ ██  ██  ██   ██ ██    ██ ██    ██ ██  ██     ██   ██ ██      ██    ██\n  ██      ██    ██ ██    ██ █████   ██████  ██    ██ ██    ██ █████      ██   ██ █████   ██    ██\n  ██      ██    ██ ██    ██ ██  ██  ██   ██ ██    ██ ██    ██ ██  ██     ██   ██ ██       ██  ██\n   ██████  ██████   ██████  ██   ██ ██████   ██████   ██████  ██   ██ ██ ██████  ███████   ████\n  \n  Find any smart contract, and build your project faster: https://www.cookbook.dev\n  Twitter: https://twitter.com/cookbook_dev\n  Discord: https://discord.gg/cookbookdev\n  \n  Find this contract on Cookbook: https://www.cookbook.dev/protocols/Delegate?utm=code\n  */\n  \n  // SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"Delegate/@openzeppelin/contracts/utils/structs/EnumerableSet.sol": {
				"content": "/*\n    \n   ██████  ██████   ██████  ██   ██ ██████   ██████   ██████  ██   ██    ██████  ███████ ██    ██\n  ██      ██    ██ ██    ██ ██  ██  ██   ██ ██    ██ ██    ██ ██  ██     ██   ██ ██      ██    ██\n  ██      ██    ██ ██    ██ █████   ██████  ██    ██ ██    ██ █████      ██   ██ █████   ██    ██\n  ██      ██    ██ ██    ██ ██  ██  ██   ██ ██    ██ ██    ██ ██  ██     ██   ██ ██       ██  ██\n   ██████  ██████   ██████  ██   ██ ██████   ██████   ██████  ██   ██ ██ ██████  ███████   ████\n  \n  Find any smart contract, and build your project faster: https://www.cookbook.dev\n  Twitter: https://twitter.com/cookbook_dev\n  Discord: https://discord.gg/cookbookdev\n  \n  Find this contract on Cookbook: https://www.cookbook.dev/protocols/Delegate?utm=code\n  */\n  \n  // SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/structs/EnumerableSet.sol)\n// This file was procedurally generated from scripts/generate/templates/EnumerableSet.js.\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Library for managing\n * https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n * types.\n *\n * Sets have the following properties:\n *\n * - Elements are added, removed, and checked for existence in constant time\n * (O(1)).\n * - Elements are enumerated in O(n). No guarantees are made on the ordering.\n *\n * ```solidity\n * contract Example {\n *     // Add the library methods\n *     using EnumerableSet for EnumerableSet.AddressSet;\n *\n *     // Declare a set state variable\n *     EnumerableSet.AddressSet private mySet;\n * }\n * ```\n *\n * As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\n * and `uint256` (`UintSet`) are supported.\n *\n * [WARNING]\n * ====\n * Trying to delete such a structure from storage will likely result in data corruption, rendering the structure\n * unusable.\n * See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\n *\n * In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an\n * array of EnumerableSet.\n * ====\n */\nlibrary EnumerableSet {\n    // To implement this library for multiple types with as little code\n    // repetition as possible, we write it in terms of a generic Set type with\n    // bytes32 values.\n    // The Set implementation uses private functions, and user-facing\n    // implementations (such as AddressSet) are just wrappers around the\n    // underlying Set.\n    // This means that we can only create new EnumerableSets for types that fit\n    // in bytes32.\n\n    struct Set {\n        // Storage of set values\n        bytes32[] _values;\n        // Position of the value in the `values` array, plus 1 because index 0\n        // means a value is not in the set.\n        mapping(bytes32 => uint256) _indexes;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function _add(Set storage set, bytes32 value) private returns (bool) {\n        if (!_contains(set, value)) {\n            set._values.push(value);\n            // The value is stored at length-1, but we add 1 to all indexes\n            // and use 0 as a sentinel value\n            set._indexes[value] = set._values.length;\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function _remove(Set storage set, bytes32 value) private returns (bool) {\n        // We read and store the value's index to prevent multiple reads from the same storage slot\n        uint256 valueIndex = set._indexes[value];\n\n        if (valueIndex != 0) {\n            // Equivalent to contains(set, value)\n            // To delete an element from the _values array in O(1), we swap the element to delete with the last one in\n            // the array, and then remove the last element (sometimes called as 'swap and pop').\n            // This modifies the order of the array, as noted in {at}.\n\n            uint256 toDeleteIndex = valueIndex - 1;\n            uint256 lastIndex = set._values.length - 1;\n\n            if (lastIndex != toDeleteIndex) {\n                bytes32 lastValue = set._values[lastIndex];\n\n                // Move the last value to the index where the value to delete is\n                set._values[toDeleteIndex] = lastValue;\n                // Update the index for the moved value\n                set._indexes[lastValue] = valueIndex; // Replace lastValue's index to valueIndex\n            }\n\n            // Delete the slot where the moved value was stored\n            set._values.pop();\n\n            // Delete the index for the deleted slot\n            delete set._indexes[value];\n\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function _contains(Set storage set, bytes32 value) private view returns (bool) {\n        return set._indexes[value] != 0;\n    }\n\n    /**\n     * @dev Returns the number of values on the set. O(1).\n     */\n    function _length(Set storage set) private view returns (uint256) {\n        return set._values.length;\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function _at(Set storage set, uint256 index) private view returns (bytes32) {\n        return set._values[index];\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function _values(Set storage set) private view returns (bytes32[] memory) {\n        return set._values;\n    }\n\n    // Bytes32Set\n\n    struct Bytes32Set {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(Bytes32Set storage set, bytes32 value) internal returns (bool) {\n        return _add(set._inner, value);\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(Bytes32Set storage set, bytes32 value) internal returns (bool) {\n        return _remove(set._inner, value);\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(Bytes32Set storage set, bytes32 value) internal view returns (bool) {\n        return _contains(set._inner, value);\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(Bytes32Set storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(Bytes32Set storage set, uint256 index) internal view returns (bytes32) {\n        return _at(set._inner, index);\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(Bytes32Set storage set) internal view returns (bytes32[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        bytes32[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n\n    // AddressSet\n\n    struct AddressSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(AddressSet storage set, address value) internal returns (bool) {\n        return _add(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(AddressSet storage set, address value) internal returns (bool) {\n        return _remove(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(AddressSet storage set, address value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(AddressSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(AddressSet storage set, uint256 index) internal view returns (address) {\n        return address(uint160(uint256(_at(set._inner, index))));\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(AddressSet storage set) internal view returns (address[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        address[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n\n    // UintSet\n\n    struct UintSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(UintSet storage set, uint256 value) internal returns (bool) {\n        return _add(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(UintSet storage set, uint256 value) internal returns (bool) {\n        return _remove(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(UintSet storage set, uint256 value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(UintSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(UintSet storage set, uint256 index) internal view returns (uint256) {\n        return uint256(_at(set._inner, index));\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(UintSet storage set) internal view returns (uint256[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        uint256[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n}\n"
			},
			"Delegate(copy)(copy)//contracts/IDelegationRegistry.sol": {
				"content": "/*\n    \n   ██████  ██████   ██████  ██   ██ ██████   ██████   ██████  ██   ██    ██████  ███████ ██    ██\n  ██      ██    ██ ██    ██ ██  ██  ██   ██ ██    ██ ██    ██ ██  ██     ██   ██ ██      ██    ██\n  ██      ██    ██ ██    ██ █████   ██████  ██    ██ ██    ██ █████      ██   ██ █████   ██    ██\n  ██      ██    ██ ██    ██ ██  ██  ██   ██ ██    ██ ██    ██ ██  ██     ██   ██ ██       ██  ██\n   ██████  ██████   ██████  ██   ██ ██████   ██████   ██████  ██   ██ ██ ██████  ███████   ████\n  \n  Find any smart contract, and build your project faster: https://www.cookbook.dev\n  Twitter: https://twitter.com/cookbook_dev\n  Discord: https://discord.gg/cookbookdev\n  \n  Find this contract on Cookbook: https://www.cookbook.dev/protocols/Delegate?utm=code\n  */\n  \n  // SPDX-License-Identifier: CC0-1.0\npragma solidity ^0.8.17;\n\n/**\n * @title An immutable registry contract to be deployed as a standalone primitive\n * @dev See EIP-5639, new project launches can read previous cold wallet -> hot wallet delegations\n * from here and integrate those permissions into their flow\n */\ninterface IDelegationRegistry {\n    /// @notice Delegation type\n    enum DelegationType {\n        NONE,\n        ALL,\n        CONTRACT,\n        TOKEN\n    }\n\n    /// @notice Info about a single delegation, used for onchain enumeration\n    struct DelegationInfo {\n        DelegationType type_;\n        address vault;\n        address delegate;\n        address contract_;\n        uint256 tokenId;\n    }\n\n    /// @notice Info about a single contract-level delegation\n    struct ContractDelegation {\n        address contract_;\n        address delegate;\n    }\n\n    /// @notice Info about a single token-level delegation\n    struct TokenDelegation {\n        address contract_;\n        uint256 tokenId;\n        address delegate;\n    }\n\n    /// @notice Emitted when a user delegates their entire wallet\n    event DelegateForAll(address vault, address delegate, bool value);\n\n    /// @notice Emitted when a user delegates a specific contract\n    event DelegateForContract(address vault, address delegate, address contract_, bool value);\n\n    /// @notice Emitted when a user delegates a specific token\n    event DelegateForToken(address vault, address delegate, address contract_, uint256 tokenId, bool value);\n\n    /// @notice Emitted when a user revokes all delegations\n    event RevokeAllDelegates(address vault);\n\n    /// @notice Emitted when a user revoes all delegations for a given delegate\n    event RevokeDelegate(address vault, address delegate);\n\n    /**\n     * -----------  WRITE -----------\n     */\n\n    /**\n     * @notice Allow the delegate to act on your behalf for all contracts\n     * @param delegate The hotwallet to act on your behalf\n     * @param value Whether to enable or disable delegation for this address, true for setting and false for revoking\n     */\n    function delegateForAll(address delegate, bool value) external;\n\n    /**\n     * @notice Allow the delegate to act on your behalf for a specific contract\n     * @param delegate The hotwallet to act on your behalf\n     * @param contract_ The address for the contract you're delegating\n     * @param value Whether to enable or disable delegation for this address, true for setting and false for revoking\n     */\n    function delegateForContract(address delegate, address contract_, bool value) external;\n\n    /**\n     * @notice Allow the delegate to act on your behalf for a specific token\n     * @param delegate The hotwallet to act on your behalf\n     * @param contract_ The address for the contract you're delegating\n     * @param tokenId The token id for the token you're delegating\n     * @param value Whether to enable or disable delegation for this address, true for setting and false for revoking\n     */\n    function delegateForToken(address delegate, address contract_, uint256 tokenId, bool value) external;\n\n    /**\n     * @notice Revoke all delegates\n     */\n    function revokeAllDelegates() external;\n\n    /**\n     * @notice Revoke a specific delegate for all their permissions\n     * @param delegate The hotwallet to revoke\n     */\n    function revokeDelegate(address delegate) external;\n\n    /**\n     * @notice Remove yourself as a delegate for a specific vault\n     * @param vault The vault which delegated to the msg.sender, and should be removed\n     */\n    function revokeSelf(address vault) external;\n\n    /**\n     * -----------  READ -----------\n     */\n\n    /**\n     * @notice Returns all active delegations a given delegate is able to claim on behalf of\n     * @param delegate The delegate that you would like to retrieve delegations for\n     * @return info Array of DelegationInfo structs\n     */\n    function getDelegationsByDelegate(address delegate) external view returns (DelegationInfo[] memory);\n\n    /**\n     * @notice Returns an array of wallet-level delegates for a given vault\n     * @param vault The cold wallet who issued the delegation\n     * @return addresses Array of wallet-level delegates for a given vault\n     */\n    function getDelegatesForAll(address vault) external view returns (address[] memory);\n\n    /**\n     * @notice Returns an array of contract-level delegates for a given vault and contract\n     * @param vault The cold wallet who issued the delegation\n     * @param contract_ The address for the contract you're delegating\n     * @return addresses Array of contract-level delegates for a given vault and contract\n     */\n    function getDelegatesForContract(address vault, address contract_) external view returns (address[] memory);\n\n    /**\n     * @notice Returns an array of contract-level delegates for a given vault's token\n     * @param vault The cold wallet who issued the delegation\n     * @param contract_ The address for the contract holding the token\n     * @param tokenId The token id for the token you're delegating\n     * @return addresses Array of contract-level delegates for a given vault's token\n     */\n    function getDelegatesForToken(address vault, address contract_, uint256 tokenId)\n        external\n        view\n        returns (address[] memory);\n\n    /**\n     * @notice Returns all contract-level delegations for a given vault\n     * @param vault The cold wallet who issued the delegations\n     * @return delegations Array of ContractDelegation structs\n     */\n    function getContractLevelDelegations(address vault)\n        external\n        view\n        returns (ContractDelegation[] memory delegations);\n\n    /**\n     * @notice Returns all token-level delegations for a given vault\n     * @param vault The cold wallet who issued the delegations\n     * @return delegations Array of TokenDelegation structs\n     */\n    function getTokenLevelDelegations(address vault) external view returns (TokenDelegation[] memory delegations);\n\n    /**\n     * @notice Returns true if the address is delegated to act on the entire vault\n     * @param delegate The hotwallet to act on your behalf\n     * @param vault The cold wallet who issued the delegation\n     */\n    function checkDelegateForAll(address delegate, address vault) external view returns (bool);\n\n    /**\n     * @notice Returns true if the address is delegated to act on your behalf for a token contract or an entire vault\n     * @param delegate The hotwallet to act on your behalf\n     * @param contract_ The address for the contract you're delegating\n     * @param vault The cold wallet who issued the delegation\n     */\n    function checkDelegateForContract(address delegate, address vault, address contract_)\n        external\n        view\n        returns (bool);\n\n    /**\n     * @notice Returns true if the address is delegated to act on your behalf for a specific token, the token's contract or an entire vault\n     * @param delegate The hotwallet to act on your behalf\n     * @param contract_ The address for the contract you're delegating\n     * @param tokenId The token id for the token you're delegating\n     * @param vault The cold wallet who issued the delegation\n     */\n    function checkDelegateForToken(address delegate, address vault, address contract_, uint256 tokenId)\n        external\n        view\n        returns (bool);\n}\n"
			},
			"Delegate/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "/*\n    \n   ██████  ██████   ██████  ██   ██ ██████   ██████   ██████  ██   ██    ██████  ███████ ██    ██\n  ██      ██    ██ ██    ██ ██  ██  ██   ██ ██    ██ ██    ██ ██  ██     ██   ██ ██      ██    ██\n  ██      ██    ██ ██    ██ █████   ██████  ██    ██ ██    ██ █████      ██   ██ █████   ██    ██\n  ██      ██    ██ ██    ██ ██  ██  ██   ██ ██    ██ ██    ██ ██  ██     ██   ██ ██       ██  ██\n   ██████  ██████   ██████  ██   ██ ██████   ██████   ██████  ██   ██ ██ ██████  ███████   ████\n  \n  Find any smart contract, and build your project faster: https://www.cookbook.dev\n  Twitter: https://twitter.com/cookbook_dev\n  Discord: https://discord.gg/cookbookdev\n  \n  Find this contract on Cookbook: https://www.cookbook.dev/protocols/Delegate?utm=code\n  */\n  \n  // SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"Delegate(copy)(copy)//contracts/DelegationRegistry.sol": {
				"DelegationRegistry": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "vault",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "delegate",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "value",
									"type": "bool"
								}
							],
							"name": "DelegateForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "vault",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "delegate",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "contract_",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "value",
									"type": "bool"
								}
							],
							"name": "DelegateForContract",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "vault",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "delegate",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "contract_",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "value",
									"type": "bool"
								}
							],
							"name": "DelegateForToken",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "vault",
									"type": "address"
								}
							],
							"name": "RevokeAllDelegates",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "vault",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "delegate",
									"type": "address"
								}
							],
							"name": "RevokeDelegate",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "delegate",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "vault",
									"type": "address"
								}
							],
							"name": "checkDelegateForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "delegate",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "vault",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "contract_",
									"type": "address"
								}
							],
							"name": "checkDelegateForContract",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "delegate",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "vault",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "contract_",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "checkDelegateForToken",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "delegate",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "value",
									"type": "bool"
								}
							],
							"name": "delegateForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "delegate",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "contract_",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "value",
									"type": "bool"
								}
							],
							"name": "delegateForContract",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "delegate",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "contract_",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "value",
									"type": "bool"
								}
							],
							"name": "delegateForToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "vault",
									"type": "address"
								}
							],
							"name": "getContractLevelDelegations",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "contract_",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "delegate",
											"type": "address"
										}
									],
									"internalType": "struct IDelegationRegistry.ContractDelegation[]",
									"name": "contractDelegations",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "vault",
									"type": "address"
								}
							],
							"name": "getDelegatesForAll",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "delegates",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "vault",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "contract_",
									"type": "address"
								}
							],
							"name": "getDelegatesForContract",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "delegates",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "vault",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "contract_",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getDelegatesForToken",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "delegates",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "delegate",
									"type": "address"
								}
							],
							"name": "getDelegationsByDelegate",
							"outputs": [
								{
									"components": [
										{
											"internalType": "enum IDelegationRegistry.DelegationType",
											"name": "type_",
											"type": "uint8"
										},
										{
											"internalType": "address",
											"name": "vault",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "delegate",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "contract_",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										}
									],
									"internalType": "struct IDelegationRegistry.DelegationInfo[]",
									"name": "info",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "vault",
									"type": "address"
								}
							],
							"name": "getTokenLevelDelegations",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "contract_",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "delegate",
											"type": "address"
										}
									],
									"internalType": "struct IDelegationRegistry.TokenDelegation[]",
									"name": "tokenDelegations",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "revokeAllDelegates",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "delegate",
									"type": "address"
								}
							],
							"name": "revokeDelegate",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "vault",
									"type": "address"
								}
							],
							"name": "revokeSelf",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"custom:coauthor": "foobar (0xfoobar)wwchung (manifoldxyz)purplehat (artblocks)ryley-o (artblocks)andy8052 (tessera)punk6529 (open metaverse)loopify (loopiverse)emiliano (nftrentals)arran (proof)james (collabland)john (gnosis safe)0xrusowsky",
						"custom:version": "1.0",
						"details": "See EIP-5639, new project launches can read previous cold wallet -> hot wallet delegations from here and integrate those permissions into their flow.",
						"kind": "dev",
						"methods": {
							"checkDelegateForAll(address,address)": {
								"params": {
									"delegate": "The hotwallet to act on your behalf",
									"vault": "The cold wallet who issued the delegation"
								}
							},
							"checkDelegateForContract(address,address,address)": {
								"params": {
									"contract_": "The address for the contract you're delegating",
									"delegate": "The hotwallet to act on your behalf",
									"vault": "The cold wallet who issued the delegation"
								}
							},
							"checkDelegateForToken(address,address,address,uint256)": {
								"params": {
									"contract_": "The address for the contract you're delegating",
									"delegate": "The hotwallet to act on your behalf",
									"tokenId": "The token id for the token you're delegating",
									"vault": "The cold wallet who issued the delegation"
								}
							},
							"delegateForAll(address,bool)": {
								"params": {
									"delegate": "The hotwallet to act on your behalf",
									"value": "Whether to enable or disable delegation for this address, true for setting and false for revoking"
								}
							},
							"delegateForContract(address,address,bool)": {
								"params": {
									"contract_": "The address for the contract you're delegating",
									"delegate": "The hotwallet to act on your behalf",
									"value": "Whether to enable or disable delegation for this address, true for setting and false for revoking"
								}
							},
							"delegateForToken(address,address,uint256,bool)": {
								"params": {
									"contract_": "The address for the contract you're delegating",
									"delegate": "The hotwallet to act on your behalf",
									"tokenId": "The token id for the token you're delegating",
									"value": "Whether to enable or disable delegation for this address, true for setting and false for revoking"
								}
							},
							"getContractLevelDelegations(address)": {
								"params": {
									"vault": "The cold wallet who issued the delegations"
								},
								"returns": {
									"contractDelegations": "Array of ContractDelegation structs"
								}
							},
							"getDelegatesForAll(address)": {
								"params": {
									"vault": "The cold wallet who issued the delegation"
								},
								"returns": {
									"delegates": "addresses Array of wallet-level delegates for a given vault"
								}
							},
							"getDelegatesForContract(address,address)": {
								"params": {
									"contract_": "The address for the contract you're delegating",
									"vault": "The cold wallet who issued the delegation"
								},
								"returns": {
									"delegates": "addresses Array of contract-level delegates for a given vault and contract"
								}
							},
							"getDelegatesForToken(address,address,uint256)": {
								"params": {
									"contract_": "The address for the contract holding the token",
									"tokenId": "The token id for the token you're delegating",
									"vault": "The cold wallet who issued the delegation"
								},
								"returns": {
									"delegates": "addresses Array of contract-level delegates for a given vault's token"
								}
							},
							"getDelegationsByDelegate(address)": {
								"params": {
									"delegate": "The delegate that you would like to retrieve delegations for"
								},
								"returns": {
									"info": "Array of DelegationInfo structs"
								}
							},
							"getTokenLevelDelegations(address)": {
								"params": {
									"vault": "The cold wallet who issued the delegations"
								},
								"returns": {
									"tokenDelegations": "Array of TokenDelegation structs"
								}
							},
							"revokeDelegate(address)": {
								"params": {
									"delegate": "The hotwallet to revoke"
								}
							},
							"revokeSelf(address)": {
								"params": {
									"vault": "The vault which delegated to the msg.sender, and should be removed"
								}
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"stateVariables": {
							"delegationHashes": {
								"details": "delegate -> delegationHashes"
							},
							"delegationInfo": {
								"details": "delegationHash -> DelegateInfo"
							},
							"delegations": {
								"details": "vault -> vaultVersion -> delegationHash"
							}
						},
						"title": "DelegationRegistry",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":2357:22671  contract DelegationRegistry is IDelegationRegistry, ERC165 {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":2357:22671  contract DelegationRegistry is IDelegationRegistry, ERC165 {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x685ee3e8\n      gt\n      tag_19\n      jumpi\n      dup1\n      0xaba69cf8\n      gt\n      tag_20\n      jumpi\n      dup1\n      0xaba69cf8\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xed4b878e\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xf956cf94\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xfa352c00\n      eq\n      tag_18\n      jumpi\n      revert(0x00, 0x00)\n    tag_20:\n      dup1\n      0x685ee3e8\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x6f007d87\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x90c9a2d0\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x9c395bc2\n      eq\n      tag_14\n      jumpi\n      revert(0x00, 0x00)\n    tag_19:\n      dup1\n      0x36137872\n      gt\n      tag_21\n      jumpi\n      dup1\n      0x36137872\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x49c95d29\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x4fc69282\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x537a5c3d\n      eq\n      tag_10\n      jumpi\n      revert(0x00, 0x00)\n    tag_21:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x1221156b\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x1b61f675\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x219044b0\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":3561:3814  function supportsInterface(... */\n    tag_3:\n      tag_22\n      tag_23\n      calldatasize\n      0x04\n      tag_24\n      jump\t// in\n    tag_23:\n      tag_25\n      jump\t// in\n    tag_22:\n      mload(0x40)\n        /* \"#utility.yul\":470:484   */\n      swap1\n      iszero\n        /* \"#utility.yul\":463:485   */\n      iszero\n        /* \"#utility.yul\":445:486   */\n      dup2\n      mstore\n        /* \"#utility.yul\":433:435   */\n      0x20\n        /* \"#utility.yul\":418:436   */\n      add\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":3561:3814  function supportsInterface(... */\n    tag_26:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":13033:13408  function getDelegatesForToken(... */\n    tag_4:\n      tag_28\n      tag_29\n      calldatasize\n      0x04\n      tag_30\n      jump\t// in\n    tag_29:\n      tag_31\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      tag_26\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":12256:12561  function getDelegatesForAll(... */\n    tag_5:\n      tag_28\n      tag_35\n      calldatasize\n      0x04\n      tag_36\n      jump\t// in\n    tag_35:\n      tag_37\n      jump\t// in\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":9148:9252  function revokeSelf(address vault) external override {... */\n    tag_6:\n      tag_39\n      tag_40\n      calldatasize\n      0x04\n      tag_36\n      jump\t// in\n    tag_40:\n      tag_41\n      jump\t// in\n    tag_39:\n      stop\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":8756:8912  function revokeAllDelegates() external override {... */\n    tag_7:\n      tag_39\n      tag_43\n      jump\t// in\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":4488:5145  function delegateForContract(... */\n    tag_8:\n      tag_39\n      tag_45\n      calldatasize\n      0x04\n      tag_46\n      jump\t// in\n    tag_45:\n      tag_47\n      jump\t// in\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":9706:12195  function getDelegationsByDelegate(... */\n    tag_9:\n      tag_48\n      tag_49\n      calldatasize\n      0x04\n      tag_36\n      jump\t// in\n    tag_49:\n      tag_50\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      tag_26\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":5206:5924  function delegateForToken(... */\n    tag_10:\n      tag_39\n      tag_54\n      calldatasize\n      0x04\n      tag_55\n      jump\t// in\n    tag_54:\n      tag_56\n      jump\t// in\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":3930:4427  function delegateForAll(address delegate, bool value) external override {... */\n    tag_11:\n      tag_39\n      tag_58\n      calldatasize\n      0x04\n      tag_59\n      jump\t// in\n    tag_58:\n      tag_60\n      jump\t// in\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":18869:20829  function getTokenLevelDelegations(... */\n    tag_12:\n      tag_61\n      tag_62\n      calldatasize\n      0x04\n      tag_36\n      jump\t// in\n    tag_62:\n      tag_63\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      tag_26\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":21383:21964  function checkDelegateForContract(... */\n    tag_13:\n      tag_22\n      tag_67\n      calldatasize\n      0x04\n      tag_68\n      jump\t// in\n    tag_67:\n      tag_69\n      jump\t// in\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":20890:21322  function checkDelegateForAll(... */\n    tag_14:\n      tag_22\n      tag_72\n      calldatasize\n      0x04\n      tag_73\n      jump\t// in\n    tag_72:\n      tag_74\n      jump\t// in\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":22025:22669  function checkDelegateForToken(... */\n    tag_15:\n      tag_22\n      tag_77\n      calldatasize\n      0x04\n      tag_78\n      jump\t// in\n    tag_77:\n      tag_79\n      jump\t// in\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":12622:12972  function getDelegatesForContract(... */\n    tag_16:\n      tag_28\n      tag_82\n      calldatasize\n      0x04\n      tag_73\n      jump\t// in\n    tag_82:\n      tag_83\n      jump\t// in\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":16846:18808  function getContractLevelDelegations(... */\n    tag_17:\n      tag_85\n      tag_86\n      calldatasize\n      0x04\n      tag_36\n      jump\t// in\n    tag_86:\n      tag_87\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      tag_26\n      swap2\n      swap1\n      tag_89\n      jump\t// in\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":8973:9087  function revokeDelegate(address delegate) external override {... */\n    tag_18:\n      tag_39\n      tag_91\n      calldatasize\n      0x04\n      tag_36\n      jump\t// in\n    tag_91:\n      tag_92\n      jump\t// in\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":3561:3814  function supportsInterface(... */\n    tag_25:\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":3668:3672  bool */\n      0x00\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":3703:3755  interfaceId == type(IDelegationRegistry).interfaceId */\n      dup3\n      and\n      shl(0xe0, 0x0596d3d5)\n      eq\n      dup1\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":3703:3807  interfaceId == type(IDelegationRegistry).interfaceId ||... */\n      tag_95\n      jumpi\n      pop\n      shl(0xe0, 0x01ffc9a7)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"Delegate/@openzeppelin/contracts/utils/introspection/ERC165.sol\":2206:2246  interfaceId == type(IERC165).interfaceId */\n      dup4\n      and\n      eq\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":3771:3807  super.supportsInterface(interfaceId) */\n    tag_95:\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":3684:3807  return... */\n      swap3\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":3561:3814  function supportsInterface(... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":13033:13408  function getDelegatesForToken(... */\n    tag_31:\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":13176:13202  address[] memory delegates */\n      0x60\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":13233:13401  _getDelegatesForLevel(... */\n      tag_98\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":13272:13277  vault */\n      dup5\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":13295:13335  IDelegationRegistry.DelegationType.TOKEN */\n      0x03\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":13353:13362  contract_ */\n      dup6\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":13380:13387  tokenId */\n      dup6\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":13233:13254  _getDelegatesForLevel */\n      tag_99\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":13233:13401  _getDelegatesForLevel(... */\n      jump\t// in\n    tag_98:\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":13214:13401  return... */\n      swap5\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":13033:13408  function getDelegatesForToken(... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":12256:12561  function getDelegatesForAll(... */\n    tag_37:\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":12336:12362  address[] memory delegates */\n      0x60\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":12393:12554  _getDelegatesForLevel(... */\n      tag_95\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":12432:12437  vault */\n      dup3\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":12455:12493  IDelegationRegistry.DelegationType.ALL */\n      0x01\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":12519:12520  0 */\n      0x00\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":12539:12540  0 */\n      0x00\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":12393:12414  _getDelegatesForLevel */\n      tag_99\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":12393:12554  _getDelegatesForLevel(... */\n      jump\t// in\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":9148:9252  function revokeSelf(address vault) external override {... */\n    tag_41:\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":9211:9245  _revokeDelegate(msg.sender, vault) */\n      tag_103\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":9227:9237  msg.sender */\n      caller\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":9239:9244  vault */\n      dup3\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":9211:9226  _revokeDelegate */\n      tag_104\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":9211:9245  _revokeDelegate(msg.sender, vault) */\n      jump\t// in\n    tag_103:\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":9148:9252  function revokeSelf(address vault) external override {... */\n      pop\n      jump\t// out\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":8756:8912  function revokeAllDelegates() external override {... */\n    tag_43:\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":8829:8839  msg.sender */\n      caller\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":8816:8840  vaultVersion[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":8816:8828  vaultVersion */\n      0x01\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":8816:8840  vaultVersion[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":8814:8840  ++vaultVersion[msg.sender] */\n      dup1\n      sload\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":8816:8840  vaultVersion[msg.sender] */\n      swap1\n      swap2\n      swap1\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":8814:8840  ++vaultVersion[msg.sender] */\n      tag_106\n      swap1\n      tag_107\n      jump\t// in\n    tag_106:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":8855:8905  IDelegationRegistry.RevokeAllDelegates(msg.sender) */\n      mload(0x40)\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":8894:8904  msg.sender */\n      caller\n        /* \"#utility.yul\":7609:7660   */\n      dup2\n      mstore\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":8855:8905  IDelegationRegistry.RevokeAllDelegates(msg.sender) */\n      0x32d74befd0b842e19694e3e3af46263e18bcce41352c8b600ff0002b49edf662\n      swap1\n        /* \"#utility.yul\":7597:7599   */\n      0x20\n        /* \"#utility.yul\":7582:7600   */\n      add\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":8855:8905  IDelegationRegistry.RevokeAllDelegates(msg.sender) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":8756:8912  function revokeAllDelegates() external override {... */\n      jump\t// out\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":4488:5145  function delegateForContract(... */\n    tag_47:\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":4624:4646  bytes32 delegationHash */\n      0x00\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":4649:4758  _computeContractDelegationHash(... */\n      tag_111\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":4693:4703  msg.sender */\n      caller\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":4717:4725  delegate */\n      dup6\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":4739:4748  contract_ */\n      dup6\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":4649:4679  _computeContractDelegationHash */\n      tag_112\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":4649:4758  _computeContractDelegationHash(... */\n      jump\t// in\n    tag_111:\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":4624:4758  bytes32 delegationHash = _computeContractDelegationHash(... */\n      swap1\n      pop\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":4768:4986  _setDelegationValues(... */\n      tag_113\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":4802:4810  delegate */\n      dup5\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":4824:4838  delegationHash */\n      dup3\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":4852:4857  value */\n      dup5\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":4871:4914  IDelegationRegistry.DelegationType.CONTRACT */\n      0x02\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":4928:4938  msg.sender */\n      caller\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":4952:4961  contract_ */\n      dup9\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":4975:4976  0 */\n      0x00\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":4768:4788  _setDelegationValues */\n      tag_114\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":4768:4986  _setDelegationValues(... */\n      jump\t// in\n    tag_113:\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":5001:5138  IDelegationRegistry.DelegateForContract(... */\n      0x40\n      dup1\n      mload\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":5054:5064  msg.sender */\n      caller\n        /* \"#utility.yul\":7896:7947   */\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":7983:8015   */\n      dup7\n      dup2\n      and\n        /* \"#utility.yul\":7978:7980   */\n      0x20\n        /* \"#utility.yul\":7963:7981   */\n      dup4\n      add\n        /* \"#utility.yul\":7956:8016   */\n      mstore\n        /* \"#utility.yul\":8052:8084   */\n      dup6\n      and\n        /* \"#utility.yul\":8032:8050   */\n      dup2\n      dup4\n      add\n        /* \"#utility.yul\":8025:8085   */\n      mstore\n        /* \"#utility.yul\":8128:8142   */\n      dup4\n      iszero\n        /* \"#utility.yul\":8121:8143   */\n      iszero\n        /* \"#utility.yul\":8116:8118   */\n      0x60\n        /* \"#utility.yul\":8101:8119   */\n      dup3\n      add\n        /* \"#utility.yul\":8094:8144   */\n      mstore\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":5001:5138  IDelegationRegistry.DelegateForContract(... */\n      swap1\n      mload\n      0x8d6b2f5255b8d815cc368855b2251146e003bf4e2fcccaec66145fff5c174b4f\n      swap2\n      dup2\n      swap1\n      sub\n        /* \"#utility.yul\":7883:7886   */\n      0x80\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":5001:5138  IDelegationRegistry.DelegateForContract(... */\n      add\n      swap1\n      log1\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":4614:5145  {... */\n      pop\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":4488:5145  function delegateForContract(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":9706:12195  function getDelegationsByDelegate(... */\n    tag_50:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":9928:9954  delegationHashes[delegate] */\n      dup2\n      and\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":9855:9925  EnumerableSet.Bytes32Set... */\n      0x00\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":9928:9954  delegationHashes[delegate] */\n      swap1\n      dup2\n      mstore\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":9928:9944  delegationHashes */\n      0x03\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":9928:9954  delegationHashes[delegate] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":9795:9843  IDelegationRegistry.DelegationInfo[] memory info */\n      0x60\n      swap2\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":10006:10053  potentialDelegationHashes... */\n      tag_118\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":9928:9954  delegationHashes[delegate] */\n      dup3\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":10006:10051  potentialDelegationHashes... */\n      tag_119\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":10006:10053  potentialDelegationHashes... */\n      jump\t// in\n    tag_118:\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":9964:10053  uint256 potentialDelegationHashesLength = potentialDelegationHashes... */\n      swap1\n      pop\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":10063:10086  uint256 delegationCount */\n      0x00\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":9964:10053  uint256 potentialDelegationHashesLength = potentialDelegationHashes... */\n      dup2\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":10107:10202  new IDelegationRegistry.DelegationInfo[](... */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_121\n      jumpi\n      tag_121\n      tag_122\n      jump\t// in\n    tag_121:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_123\n      jumpi\n      dup2\n      0x20\n      add\n    tag_124:\n      0x40\n      dup1\n      mload\n      0xa0\n      dup2\n      add\n      dup3\n      mstore\n      0x00\n      dup1\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      add\n      dup3\n      swap1\n      mstore\n      swap3\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x60\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x80\n      dup3\n      add\n      mstore\n      dup3\n      mstore\n      not(0x00)\n      swap1\n      swap3\n      add\n      swap2\n      add\n      dup2\n      tag_124\n      jumpi\n      swap1\n      pop\n    tag_123:\n      pop\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":10100:10202  info = new IDelegationRegistry.DelegationInfo[](... */\n      swap4\n      pop\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":10217:10226  uint256 i */\n      0x00\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":10212:11876  for (uint256 i = 0; i < potentialDelegationHashesLength; ) {... */\n    tag_127:\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":10236:10267  potentialDelegationHashesLength */\n      dup3\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":10232:10233  i */\n      dup2\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":10232:10267  i < potentialDelegationHashesLength */\n      lt\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":10212:11876  for (uint256 i = 0; i < potentialDelegationHashesLength; ) {... */\n      iszero\n      tag_128\n      jumpi\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":10285:10305  bytes32 delegateHash */\n      0x00\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":10308:10339  potentialDelegationHashes.at(i) */\n      tag_130\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":10308:10333  potentialDelegationHashes */\n      dup6\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":10337:10338  i */\n      dup4\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":10308:10336  potentialDelegationHashes.at */\n      tag_131\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":10308:10339  potentialDelegationHashes.at(i) */\n      jump\t// in\n    tag_130:\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":10353:10426  IDelegationRegistry.DelegationInfo... */\n      0x00\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":10429:10457  delegationInfo[delegateHash] */\n      dup2\n      dup2\n      mstore\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":10429:10443  delegationInfo */\n      0x04\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":10429:10457  delegationInfo[delegateHash] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":10353:10457  IDelegationRegistry.DelegationInfo... */\n      dup2\n      mload\n      0xa0\n      dup2\n      add\n      swap1\n      swap3\n      mstore\n      dup1\n      sload\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":10285:10339  bytes32 delegateHash = potentialDelegationHashes.at(i) */\n      swap4\n      swap5\n      pop\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":10353:10426  IDelegationRegistry.DelegationInfo... */\n      swap2\n      swap3\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":10353:10457  IDelegationRegistry.DelegationInfo... */\n      swap1\n      swap2\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":10429:10457  delegationInfo[delegateHash] */\n      swap1\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":10353:10457  IDelegationRegistry.DelegationInfo... */\n      dup3\n      swap1\n      0xff\n      and\n      0x03\n      dup2\n      gt\n      iszero\n      tag_133\n      jumpi\n      tag_133\n      tag_134\n      jump\t// in\n    tag_133:\n      0x03\n      dup2\n      gt\n      iszero\n      tag_136\n      jumpi\n      tag_136\n      tag_134\n      jump\t// in\n    tag_136:\n      dup2\n      mstore\n      dup2\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      0x0100\n      swap1\n      swap2\n      div\n      dup2\n      and\n      0x20\n      dup1\n      dup5\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      0x01\n      dup1\n      dup6\n      add\n      sload\n      dup4\n      and\n      0x40\n      dup6\n      add\n      mstore\n      0x02\n      dup6\n      add\n      sload\n      swap1\n      swap3\n      and\n      0x60\n      dup5\n      add\n      mstore\n      0x03\n      swap1\n      swap4\n      add\n      sload\n      0x80\n      swap1\n      swap3\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":10487:10508  delegationInfo_.vault */\n      swap1\n      dup3\n      add\n      mload\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":10565:10586  delegationInfo_.type_ */\n      dup3\n      mload\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":10353:10457  IDelegationRegistry.DelegationInfo... */\n      swap3\n      swap4\n      pop\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":10487:10508  delegationInfo_.vault */\n      swap2\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":10565:10586  delegationInfo_.type_ */\n      swap1\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":10353:10457  IDelegationRegistry.DelegationInfo... */\n      0x00\n      swap1\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":10636:10641  type_ */\n      dup3\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":10636:10683  type_ == IDelegationRegistry.DelegationType.ALL */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_140\n      jumpi\n      tag_140\n      tag_134\n      jump\t// in\n    tag_140:\n      sub\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":10632:11709  if (type_ == IDelegationRegistry.DelegationType.ALL) {... */\n      tag_141\n      jumpi\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":10744:10786  _computeAllDelegationHash(vault, delegate) */\n      tag_142\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":10770:10775  vault */\n      dup4\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":10777:10785  delegate */\n      dup13\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":10744:10769  _computeAllDelegationHash */\n      tag_143\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":10744:10786  _computeAllDelegationHash(vault, delegate) */\n      jump\t// in\n    tag_142:\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":10728:10740  delegateHash */\n      dup6\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":10728:10786  delegateHash == _computeAllDelegationHash(vault, delegate) */\n      sub\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":10703:10858  if (... */\n      tag_144\n      jumpi\n      pop\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":10835:10839  true */\n      0x01\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":10703:10858  if (... */\n    tag_144:\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":10632:11709  if (type_ == IDelegationRegistry.DelegationType.ALL) {... */\n      jump(tag_161)\n    tag_141:\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":10891:10934  IDelegationRegistry.DelegationType.CONTRACT */\n      0x02\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":10882:10887  type_ */\n      dup3\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":10882:10934  type_ == IDelegationRegistry.DelegationType.CONTRACT */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_149\n      jumpi\n      tag_149\n      tag_134\n      jump\t// in\n    tag_149:\n      sub\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":10878:11709  if (type_ == IDelegationRegistry.DelegationType.CONTRACT) {... */\n      tag_150\n      jumpi\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":11015:11183  _computeContractDelegationHash(... */\n      tag_142\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":11071:11076  vault */\n      dup4\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":11102:11110  delegate */\n      dup13\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":11136:11151  delegationInfo_ */\n      dup7\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":11136:11161  delegationInfo_.contract_ */\n      0x60\n      add\n      mload\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":11015:11045  _computeContractDelegationHash */\n      tag_112\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":11015:11183  _computeContractDelegationHash(... */\n      jump\t// in\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":10878:11709  if (type_ == IDelegationRegistry.DelegationType.CONTRACT) {... */\n    tag_150:\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":11288:11328  IDelegationRegistry.DelegationType.TOKEN */\n      0x03\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":11279:11284  type_ */\n      dup3\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":11279:11328  type_ == IDelegationRegistry.DelegationType.TOKEN */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_157\n      jumpi\n      tag_157\n      tag_134\n      jump\t// in\n    tag_157:\n      sub\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":11275:11709  if (type_ == IDelegationRegistry.DelegationType.TOKEN) {... */\n      tag_161\n      jumpi\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":11409:11623  _computeTokenDelegationHash(... */\n      tag_159\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":11462:11467  vault */\n      dup4\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":11493:11501  delegate */\n      dup13\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":11527:11542  delegationInfo_ */\n      dup7\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":11527:11552  delegationInfo_.contract_ */\n      0x60\n      add\n      mload\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":11578:11593  delegationInfo_ */\n      dup8\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":11578:11601  delegationInfo_.tokenId */\n      0x80\n      add\n      mload\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":11409:11436  _computeTokenDelegationHash */\n      tag_160\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":11409:11623  _computeTokenDelegationHash(... */\n      jump\t// in\n    tag_159:\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":11373:11385  delegateHash */\n      dup6\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":11373:11623  delegateHash ==... */\n      sub\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":11348:11695  if (... */\n      tag_161\n      jumpi\n      pop\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":11672:11676  true */\n      0x01\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":11348:11695  if (... */\n    tag_161:\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":11726:11731  valid */\n      dup1\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":11722:11807  if (valid) {... */\n      iszero\n      tag_162\n      jumpi\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":11777:11792  delegationInfo_ */\n      dup4\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":11751:11755  info */\n      dup11\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":11756:11773  delegationCount++ */\n      dup9\n      tag_163\n      dup2\n      tag_107\n      jump\t// in\n    tag_163:\n      swap10\n      pop\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":11751:11774  info[delegationCount++] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_165\n      jumpi\n      tag_165\n      tag_166\n      jump\t// in\n    tag_165:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":11751:11792  info[delegationCount++] = delegationInfo_ */\n      dup2\n      swap1\n      mstore\n      pop\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":11722:11807  if (valid) {... */\n    tag_162:\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":11848:11851  ++i */\n      dup6\n      0x01\n      add\n      swap6\n      pop\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":10271:11876  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":10212:11876  for (uint256 i = 0; i < potentialDelegationHashesLength; ) {... */\n      jump(tag_127)\n    tag_128:\n      pop\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":11923:11938  delegationCount */\n      dup1\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":11889:11920  potentialDelegationHashesLength */\n      dup3\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":11889:11938  potentialDelegationHashesLength > delegationCount */\n      gt\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":11885:12189  if (potentialDelegationHashesLength > delegationCount) {... */\n      iszero\n      tag_167\n      jumpi\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":12142:12153  mload(info) */\n      dup4\n      mload\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":11997:12108  sub(... */\n      dup2\n      dup4\n      sub\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":12138:12164  sub(mload(info), decrease) */\n      swap1\n      sub\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":12125:12165  mstore(info, sub(mload(info), decrease)) */\n      dup5\n      mstore\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":11885:12189  if (potentialDelegationHashesLength > delegationCount) {... */\n    tag_167:\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":9845:12195  {... */\n      pop\n      pop\n      pop\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":9706:12195  function getDelegationsByDelegate(... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":5206:5924  function delegateForToken(... */\n    tag_56:\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":5364:5386  bytes32 delegationHash */\n      0x00\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":5389:5516  _computeTokenDelegationHash(... */\n      tag_169\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":5430:5440  msg.sender */\n      caller\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":5454:5462  delegate */\n      dup7\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":5476:5485  contract_ */\n      dup7\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":5499:5506  tokenId */\n      dup7\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":5389:5416  _computeTokenDelegationHash */\n      tag_160\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":5389:5516  _computeTokenDelegationHash(... */\n      jump\t// in\n    tag_169:\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":5364:5516  bytes32 delegationHash = _computeTokenDelegationHash(... */\n      swap1\n      pop\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":5526:5747  _setDelegationValues(... */\n      tag_170\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":5560:5568  delegate */\n      dup6\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":5582:5596  delegationHash */\n      dup3\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":5610:5615  value */\n      dup5\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":5629:5669  IDelegationRegistry.DelegationType.TOKEN */\n      0x03\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":5683:5693  msg.sender */\n      caller\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":5707:5716  contract_ */\n      dup10\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":5730:5737  tokenId */\n      dup10\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":5526:5546  _setDelegationValues */\n      tag_114\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":5526:5747  _setDelegationValues(... */\n      jump\t// in\n    tag_170:\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":5762:5917  IDelegationRegistry.DelegateForToken(... */\n      0x40\n      dup1\n      mload\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":5812:5822  msg.sender */\n      caller\n        /* \"#utility.yul\":8672:8723   */\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":8759:8791   */\n      dup8\n      dup2\n      and\n        /* \"#utility.yul\":8754:8756   */\n      0x20\n        /* \"#utility.yul\":8739:8757   */\n      dup4\n      add\n        /* \"#utility.yul\":8732:8792   */\n      mstore\n        /* \"#utility.yul\":8828:8860   */\n      dup7\n      and\n        /* \"#utility.yul\":8808:8826   */\n      dup2\n      dup4\n      add\n        /* \"#utility.yul\":8801:8861   */\n      mstore\n        /* \"#utility.yul\":8892:8894   */\n      0x60\n        /* \"#utility.yul\":8877:8895   */\n      dup2\n      add\n        /* \"#utility.yul\":8870:8904   */\n      dup6\n      swap1\n      mstore\n        /* \"#utility.yul\":8948:8962   */\n      dup4\n      iszero\n        /* \"#utility.yul\":8941:8963   */\n      iszero\n        /* \"#utility.yul\":8935:8938   */\n      0x80\n        /* \"#utility.yul\":8920:8939   */\n      dup3\n      add\n        /* \"#utility.yul\":8913:8964   */\n      mstore\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":5762:5917  IDelegationRegistry.DelegateForToken(... */\n      swap1\n      mload\n      0xe89c6ba1e8957285aed22618f52aa1dcb9d5bb64e1533d8b55136c72fcf5aa5d\n      swap2\n      dup2\n      swap1\n      sub\n        /* \"#utility.yul\":8659:8662   */\n      0xa0\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":5762:5917  IDelegationRegistry.DelegateForToken(... */\n      add\n      swap1\n      log1\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":5354:5924  {... */\n      pop\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":5206:5924  function delegateForToken(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":3930:4427  function delegateForAll(address delegate, bool value) external override {... */\n    tag_60:\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":4012:4034  bytes32 delegationHash */\n      0x00\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":4037:4118  _computeAllDelegationHash(... */\n      tag_174\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":4076:4086  msg.sender */\n      caller\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":4100:4108  delegate */\n      dup5\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":4037:4062  _computeAllDelegationHash */\n      tag_143\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":4037:4118  _computeAllDelegationHash(... */\n      jump\t// in\n    tag_174:\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":4012:4118  bytes32 delegationHash = _computeAllDelegationHash(... */\n      swap1\n      pop\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":4128:4342  _setDelegationValues(... */\n      tag_175\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":4162:4170  delegate */\n      dup4\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":4184:4198  delegationHash */\n      dup3\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":4212:4217  value */\n      dup5\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":4231:4269  IDelegationRegistry.DelegationType.ALL */\n      0x01\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":4283:4293  msg.sender */\n      caller\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":4315:4316  0 */\n      0x00\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":4331:4332  0 */\n      0x00\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":4128:4148  _setDelegationValues */\n      tag_114\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":4128:4342  _setDelegationValues(... */\n      jump\t// in\n    tag_175:\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":4357:4420  IDelegationRegistry.DelegateForAll(msg.sender, delegate, value) */\n      0x40\n      dup1\n      mload\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":4392:4402  msg.sender */\n      caller\n        /* \"#utility.yul\":9171:9222   */\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":9258:9290   */\n      dup6\n      and\n        /* \"#utility.yul\":9253:9255   */\n      0x20\n        /* \"#utility.yul\":9238:9256   */\n      dup3\n      add\n        /* \"#utility.yul\":9231:9291   */\n      mstore\n        /* \"#utility.yul\":9334:9348   */\n      dup4\n      iszero\n        /* \"#utility.yul\":9327:9349   */\n      iszero\n        /* \"#utility.yul\":9307:9325   */\n      dup2\n      dup4\n      add\n        /* \"#utility.yul\":9300:9350   */\n      mstore\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":4357:4420  IDelegationRegistry.DelegateForAll(msg.sender, delegate, value) */\n      swap1\n      mload\n      0x58781eab4a0743ab1c285a238be846a235f06cdb5b968030573a635e5f8c92fa\n      swap2\n      dup2\n      swap1\n      sub\n        /* \"#utility.yul\":9159:9161   */\n      0x60\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":4357:4420  IDelegationRegistry.DelegateForAll(msg.sender, delegate, value) */\n      add\n      swap1\n      log1\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":4002:4427  {... */\n      pop\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":3930:4427  function delegateForAll(address delegate, bool value) external override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":18869:20829  function getTokenLevelDelegations(... */\n    tag_63:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":19109:19127  delegations[vault] */\n      dup2\n      and\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":19056:19106  EnumerableSet.Bytes32Set storage delegationHashes_ */\n      0x00\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":19109:19127  delegations[vault] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":19141:19153  vaultVersion */\n      0x01\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":19141:19160  vaultVersion[vault] */\n      dup4\n      mstore\n      dup2\n      dup5\n      keccak256\n      sload\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":19109:19170  delegations[vault][... */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":18979:19040  IDelegationRegistry.TokenDelegation[] memory tokenDelegations */\n      0x60\n      swap2\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":19206:19232  delegationHashes_.length() */\n      tag_179\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":19109:19170  delegations[vault][... */\n      dup3\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":19206:19230  delegationHashes_.length */\n      tag_119\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":19206:19232  delegationHashes_.length() */\n      jump\t// in\n    tag_179:\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":19180:19232  uint256 potentialLength = delegationHashes_.length() */\n      swap1\n      pop\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":19242:19265  uint256 delegationCount */\n      0x00\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":19180:19232  uint256 potentialLength = delegationHashes_.length() */\n      dup2\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":19298:19378  new IDelegationRegistry.TokenDelegation[](... */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_181\n      jumpi\n      tag_181\n      tag_122\n      jump\t// in\n    tag_181:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_182\n      jumpi\n      dup2\n      0x20\n      add\n    tag_183:\n      0x40\n      dup1\n      mload\n      0x60\n      dup2\n      add\n      dup3\n      mstore\n      0x00\n      dup1\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      add\n      dup3\n      swap1\n      mstore\n      swap3\n      dup3\n      add\n      mstore\n      dup3\n      mstore\n      not(0x00)\n      swap1\n      swap3\n      add\n      swap2\n      add\n      dup2\n      tag_183\n      jumpi\n      swap1\n      pop\n    tag_182:\n      pop\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":19279:19378  tokenDelegations = new IDelegationRegistry.TokenDelegation[](... */\n      swap4\n      pop\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":19393:19402  uint256 i */\n      0x00\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":19388:20576  for (uint256 i = 0; i < potentialLength; ) {... */\n    tag_186:\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":19412:19427  potentialLength */\n      dup3\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":19408:19409  i */\n      dup2\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":19408:19427  i < potentialLength */\n      lt\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":19388:20576  for (uint256 i = 0; i < potentialLength; ) {... */\n      iszero\n      tag_128\n      jumpi\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":19445:19467  bytes32 delegationHash */\n      0x00\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":19470:19493  delegationHashes_.at(i) */\n      tag_189\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":19470:19487  delegationHashes_ */\n      dup6\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":19491:19492  i */\n      dup4\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":19470:19490  delegationHashes_.at */\n      tag_131\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":19470:19493  delegationHashes_.at(i) */\n      jump\t// in\n    tag_189:\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":19507:19545  DelegationInfo storage delegationInfo_ */\n      0x00\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":19548:19608  delegationInfo[... */\n      dup2\n      dup2\n      mstore\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":19548:19562  delegationInfo */\n      0x04\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":19548:19608  delegationInfo[... */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":19445:19493  bytes32 delegationHash = delegationHashes_.at(i) */\n      swap1\n      swap2\n      pop\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":19684:19724  IDelegationRegistry.DelegationType.TOKEN */\n      0x03\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":19643:19664  delegationInfo_.type_ */\n      dup2\n      sload\n      0xff\n      and\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":19643:19724  delegationInfo_.type_ ==... */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_193\n      jumpi\n      tag_193\n      tag_134\n      jump\t// in\n    tag_193:\n      sub\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":19622:20507  if (... */\n      tag_196\n      jumpi\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":19969:19993  delegationInfo_.delegate */\n      0x01\n      dup2\n      add\n      sload\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":20019:20044  delegationInfo_.contract_ */\n      0x02\n      dup3\n      add\n      sload\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":20070:20093  delegationInfo_.tokenId */\n      0x03\n      dup4\n      add\n      sload\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":19885:20115  _computeTokenDelegationHash(... */\n      tag_195\n      swap3\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":19938:19943  vault */\n      dup12\n      swap3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":19969:19993  delegationInfo_.delegate */\n      swap2\n      dup3\n      and\n      swap3\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":20019:20044  delegationInfo_.contract_ */\n      swap2\n      and\n      swap1\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":19885:19912  _computeTokenDelegationHash */\n      tag_160\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":19885:20115  _computeTokenDelegationHash(... */\n      jump\t// in\n    tag_195:\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":19847:19861  delegationHash */\n      dup3\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":19847:20115  delegationHash ==... */\n      sub\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":19822:20493  if (... */\n      tag_196\n      jumpi\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":20194:20474  IDelegationRegistry... */\n      0x40\n      dup1\n      mload\n      0x60\n      dup2\n      add\n      dup3\n      mstore\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":20296:20321  delegationInfo_.contract_ */\n      0x02\n      dup4\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":20194:20474  IDelegationRegistry... */\n      dup3\n      mstore\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":20360:20383  delegationInfo_.tokenId */\n      0x03\n      dup5\n      add\n      sload\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":20194:20474  IDelegationRegistry... */\n      0x20\n      dup4\n      add\n      mstore\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":20296:20321  delegationInfo_.contract_ */\n      0x01\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":20423:20447  delegationInfo_.delegate */\n      dup5\n      add\n      sload\n      and\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":20194:20474  IDelegationRegistry... */\n      swap2\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":20156:20172  tokenDelegations */\n      dup8\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":20173:20190  delegationCount++ */\n      dup6\n      tag_197\n      dup2\n      tag_107\n      jump\t// in\n    tag_197:\n      swap7\n      pop\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":20156:20191  tokenDelegations[delegationCount++] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_199\n      jumpi\n      tag_199\n      tag_166\n      jump\t// in\n    tag_199:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":20156:20474  tokenDelegations[delegationCount++] = IDelegationRegistry... */\n      dup2\n      swap1\n      mstore\n      pop\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":19822:20493  if (... */\n    tag_196:\n      pop\n      pop\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":20548:20551  ++i */\n      0x01\n      add\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":19388:20576  for (uint256 i = 0; i < potentialLength; ) {... */\n      jump(tag_186)\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":21383:21964  function checkDelegateForContract(... */\n    tag_69:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":21695:21714  vaultVersion[vault] */\n      dup3\n      dup2\n      and\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":21529:21533  bool */\n      0x00\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":21695:21714  vaultVersion[vault] */\n      dup2\n      dup2\n      mstore\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":21695:21707  vaultVersion */\n      0x01\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":21695:21714  vaultVersion[vault] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sload\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":21732:21747  delegateVersion */\n      0x02\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":21732:21754  delegateVersion[vault] */\n      dup4\n      mstore\n      dup2\n      dup5\n      keccak256\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":21732:21764  delegateVersion[vault][delegate] */\n      dup10\n      dup8\n      and\n      dup1\n      dup7\n      mstore\n      swap1\n      dup5\n      mstore\n      dup3\n      dup6\n      keccak256\n      sload\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":21591:21778  abi.encode(... */\n      dup4\n      mload\n      dup1\n      dup7\n      add\n        /* \"#utility.yul\":9620:9671   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":9687:9705   */\n      dup2\n      dup5\n      add\n        /* \"#utility.yul\":9680:9740   */\n      dup8\n      swap1\n      mstore\n        /* \"#utility.yul\":9776:9808   */\n      swap7\n      dup9\n      and\n        /* \"#utility.yul\":9756:9774   */\n      0x60\n      dup3\n      add\n        /* \"#utility.yul\":9749:9809   */\n      mstore\n        /* \"#utility.yul\":9825:9843   */\n      0x80\n      dup2\n      add\n        /* \"#utility.yul\":9818:9852   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":9868:9887   */\n      0xa0\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":9861:9896   */\n      swap8\n      swap1\n      swap8\n      mstore\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":21591:21778  abi.encode(... */\n      dup3\n      mload\n      dup1\n      dup3\n      sub\n      swap1\n      swap8\n      add\n      dup8\n      mstore\n        /* \"#utility.yul\":9592:9611   */\n      0xc0\n      add\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":21591:21778  abi.encode(... */\n      dup3\n      mstore\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":21568:21788  keccak256(... */\n      dup6\n      mload\n      swap6\n      dup4\n      add\n      swap6\n      swap1\n      swap6\n      keccak256\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":21817:21835  delegations[vault] */\n      swap4\n      dup4\n      mstore\n      dup3\n      dup3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":21817:21856  delegations[vault][vaultVersion[vault]] */\n      swap5\n      dup4\n      mstore\n      swap4\n      swap1\n      mstore\n      swap2\n      dup3\n      keccak256\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":21817:21879  delegations[vault][vaultVersion[vault]].contains(delegateHash) */\n      tag_204\n      swap1\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":21568:21788  keccak256(... */\n      dup3\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":21817:21865  delegations[vault][vaultVersion[vault]].contains */\n      tag_205\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":21817:21879  delegations[vault][vaultVersion[vault]].contains(delegateHash) */\n      jump\t// in\n    tag_204:\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":21817:21957  delegations[vault][vaultVersion[vault]].contains(delegateHash)... */\n      tag_206\n      jumpi\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":21921:21957  checkDelegateForAll(delegate, vault) */\n      tag_207\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":21941:21949  delegate */\n      dup6\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":21951:21956  vault */\n      dup6\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":21921:21940  checkDelegateForAll */\n      tag_74\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":21921:21957  checkDelegateForAll(delegate, vault) */\n      jump\t// in\n    tag_207:\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":21817:21957  delegations[vault][vaultVersion[vault]].contains(delegateHash)... */\n      jump(tag_208)\n    tag_206:\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":21898:21902  true */\n      0x01\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":21817:21957  delegations[vault][vaultVersion[vault]].contains(delegateHash)... */\n    tag_208:\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":21798:21957  return... */\n      swap6\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":21383:21964  function checkDelegateForContract(... */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":20890:21322  function checkDelegateForAll(... */\n    tag_74:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":21143:21162  vaultVersion[vault] */\n      dup2\n      dup2\n      and\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":21004:21008  bool */\n      0x00\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":21143:21162  vaultVersion[vault] */\n      dup2\n      dup2\n      mstore\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":21143:21155  vaultVersion */\n      0x01\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":21143:21162  vaultVersion[vault] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sload\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":21180:21195  delegateVersion */\n      0x02\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":21180:21202  delegateVersion[vault] */\n      dup4\n      mstore\n      dup2\n      dup5\n      keccak256\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":21180:21212  delegateVersion[vault][delegate] */\n      swap6\n      dup9\n      and\n      dup1\n      dup6\n      mstore\n      swap6\n      dup4\n      mstore\n      dup2\n      dup5\n      keccak256\n      sload\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":21066:21226  abi.encode(... */\n      dup3\n      mload\n      dup1\n      dup6\n      add\n        /* \"#utility.yul\":10138:10189   */\n      swap8\n      swap1\n      swap8\n      mstore\n        /* \"#utility.yul\":10205:10223   */\n      dup7\n      dup4\n      add\n        /* \"#utility.yul\":10198:10258   */\n      dup7\n      swap1\n      mstore\n        /* \"#utility.yul\":10274:10292   */\n      0x60\n      dup8\n      add\n        /* \"#utility.yul\":10267:10301   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":10317:10335   */\n      0x80\n      dup1\n      dup9\n      add\n        /* \"#utility.yul\":10310:10344   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":21066:21226  abi.encode(... */\n      dup3\n      mload\n      dup1\n      dup9\n      sub\n      swap1\n      swap2\n      add\n      dup2\n      mstore\n        /* \"#utility.yul\":10110:10129   */\n      0xa0\n      swap1\n      swap7\n      add\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":21066:21226  abi.encode(... */\n      dup3\n      mstore\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":21043:21236  keccak256(... */\n      dup6\n      mload\n      swap6\n      dup4\n      add\n      swap6\n      swap1\n      swap6\n      keccak256\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":21253:21271  delegations[vault] */\n      swap4\n      dup4\n      mstore\n      dup3\n      dup3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":21253:21292  delegations[vault][vaultVersion[vault]] */\n      swap5\n      dup4\n      mstore\n      swap4\n      swap1\n      mstore\n      swap2\n      dup3\n      keccak256\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":21253:21315  delegations[vault][vaultVersion[vault]].contains(delegateHash) */\n      tag_98\n      swap1\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":21043:21236  keccak256(... */\n      dup3\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":21253:21301  delegations[vault][vaultVersion[vault]].contains */\n      tag_205\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":21253:21315  delegations[vault][vaultVersion[vault]].contains(delegateHash) */\n      jump\t// in\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":22025:22669  function checkDelegateForToken(... */\n    tag_79:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":22384:22403  vaultVersion[vault] */\n      dup1\n      dup5\n      and\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":22193:22197  bool */\n      0x00\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":22384:22403  vaultVersion[vault] */\n      swap1\n      dup2\n      mstore\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":22384:22396  vaultVersion */\n      0x01\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":22384:22403  vaultVersion[vault] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sload\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":22421:22436  delegateVersion */\n      0x02\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":22421:22443  delegateVersion[vault] */\n      dup4\n      mstore\n      dup2\n      dup5\n      keccak256\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":22421:22453  delegateVersion[vault][delegate] */\n      swap5\n      dup10\n      and\n      dup5\n      mstore\n      swap4\n      dup3\n      mstore\n      dup1\n      dup4\n      keccak256\n      sload\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":22255:22467  abi.encode(... */\n      swap1\n      mload\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":22193:22197  bool */\n      swap3\n      swap4\n      dup5\n      swap4\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":22255:22467  abi.encode(... */\n      tag_214\n      swap4\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":22283:22291  delegate */\n      dup11\n      swap4\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":22309:22314  vault */\n      dup11\n      swap4\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":22332:22341  contract_ */\n      dup11\n      swap4\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":22359:22366  tokenId */\n      dup11\n      swap4\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":22384:22403  vaultVersion[vault] */\n      swap2\n      swap3\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":22421:22453  delegateVersion[vault][delegate] */\n      swap2\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":22255:22467  abi.encode(... */\n      add\n      tag_215\n      jump\t// in\n    tag_214:\n      0x40\n      dup1\n      mload\n      not(0x1f)\n      dup2\n      dup5\n      sub\n      add\n      dup2\n      mstore\n      swap2\n      dup2\n      mstore\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":22232:22477  keccak256(... */\n      dup2\n      mload\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":22255:22467  abi.encode(... */\n      0x20\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":22232:22477  keccak256(... */\n      swap3\n      dup4\n      add\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":22506:22524  delegations[vault] */\n      dup9\n      and\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":22506:22517  delegations */\n      0x00\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":22506:22524  delegations[vault] */\n      swap1\n      dup2\n      mstore\n      dup1\n      dup5\n      mstore\n      dup3\n      dup2\n      keccak256\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":22525:22537  vaultVersion */\n      0x01\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":22525:22544  vaultVersion[vault] */\n      dup6\n      mstore\n      dup4\n      dup3\n      keccak256\n      sload\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":22506:22545  delegations[vault][vaultVersion[vault]] */\n      dup3\n      mstore\n      swap1\n      swap4\n      mstore\n      swap2\n      keccak256\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":22232:22477  keccak256(... */\n      swap1\n      swap2\n      pop\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":22506:22568  delegations[vault][vaultVersion[vault]].contains(delegateHash) */\n      tag_216\n      swap1\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":22232:22477  keccak256(... */\n      dup3\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":22506:22554  delegations[vault][vaultVersion[vault]].contains */\n      tag_205\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":22506:22568  delegations[vault][vaultVersion[vault]].contains(delegateHash) */\n      jump\t// in\n    tag_216:\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":22506:22662  delegations[vault][vaultVersion[vault]].contains(delegateHash)... */\n      tag_217\n      jumpi\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":22610:22662  checkDelegateForContract(delegate, vault, contract_) */\n      tag_218\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":22635:22643  delegate */\n      dup7\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":22645:22650  vault */\n      dup7\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":22652:22661  contract_ */\n      dup7\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":22610:22634  checkDelegateForContract */\n      tag_69\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":22610:22662  checkDelegateForContract(delegate, vault, contract_) */\n      jump\t// in\n    tag_218:\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":22506:22662  delegations[vault][vaultVersion[vault]].contains(delegateHash)... */\n      jump(tag_219)\n    tag_217:\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":22587:22591  true */\n      0x01\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":22506:22662  delegations[vault][vaultVersion[vault]].contains(delegateHash)... */\n    tag_219:\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":22487:22662  return... */\n      swap7\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":22025:22669  function checkDelegateForToken(... */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":12622:12972  function getDelegatesForContract(... */\n    tag_83:\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":12743:12769  address[] memory delegates */\n      0x60\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":12800:12965  _getDelegatesForLevel(... */\n      tag_221\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":12839:12844  vault */\n      dup4\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":12862:12905  IDelegationRegistry.DelegationType.CONTRACT */\n      0x02\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":12923:12932  contract_ */\n      dup5\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":12950:12951  0 */\n      0x00\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":12800:12821  _getDelegatesForLevel */\n      tag_99\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":12800:12965  _getDelegatesForLevel(... */\n      jump\t// in\n    tag_221:\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":12781:12965  return... */\n      swap4\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":12622:12972  function getDelegatesForContract(... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":16846:18808  function getContractLevelDelegations(... */\n    tag_87:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":17117:17135  delegations[vault] */\n      dup2\n      and\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":17064:17114  EnumerableSet.Bytes32Set storage delegationHashes_ */\n      0x00\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":17117:17135  delegations[vault] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":17149:17161  vaultVersion */\n      0x01\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":17149:17168  vaultVersion[vault] */\n      dup4\n      mstore\n      dup2\n      dup5\n      keccak256\n      sload\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":17117:17178  delegations[vault][... */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":16972:17039  IDelegationRegistry.ContractDelegation[] memory contractDelegations */\n      0x60\n      swap2\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":17214:17240  delegationHashes_.length() */\n      tag_223\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":17117:17178  delegations[vault][... */\n      dup3\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":17214:17238  delegationHashes_.length */\n      tag_119\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":17214:17240  delegationHashes_.length() */\n      jump\t// in\n    tag_223:\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":17188:17240  uint256 potentialLength = delegationHashes_.length() */\n      swap1\n      pop\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":17250:17273  uint256 delegationCount */\n      0x00\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":17188:17240  uint256 potentialLength = delegationHashes_.length() */\n      dup2\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":17309:17392  new IDelegationRegistry.ContractDelegation[](... */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_225\n      jumpi\n      tag_225\n      tag_122\n      jump\t// in\n    tag_225:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_226\n      jumpi\n      dup2\n      0x20\n      add\n    tag_227:\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      swap1\n      swap2\n      mstore\n      0x00\n      dup1\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      mstore\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      swap1\n      sub\n      swap1\n      dup2\n      tag_227\n      jumpi\n      swap1\n      pop\n    tag_226:\n      pop\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":17287:17392  contractDelegations = new IDelegationRegistry.ContractDelegation[](... */\n      swap4\n      pop\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":17407:17416  uint256 i */\n      0x00\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":17402:18491  for (uint256 i = 0; i < potentialLength; ) {... */\n    tag_230:\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":17426:17441  potentialLength */\n      dup3\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":17422:17423  i */\n      dup2\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":17422:17441  i < potentialLength */\n      lt\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":17402:18491  for (uint256 i = 0; i < potentialLength; ) {... */\n      iszero\n      tag_128\n      jumpi\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":17459:17481  bytes32 delegationHash */\n      0x00\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":17484:17507  delegationHashes_.at(i) */\n      tag_233\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":17484:17501  delegationHashes_ */\n      dup6\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":17505:17506  i */\n      dup4\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":17484:17504  delegationHashes_.at */\n      tag_131\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":17484:17507  delegationHashes_.at(i) */\n      jump\t// in\n    tag_233:\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":17521:17559  DelegationInfo storage delegationInfo_ */\n      0x00\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":17562:17622  delegationInfo[... */\n      dup2\n      dup2\n      mstore\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":17562:17576  delegationInfo */\n      0x04\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":17562:17622  delegationInfo[... */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":17459:17507  bytes32 delegationHash = delegationHashes_.at(i) */\n      swap1\n      swap2\n      pop\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":17698:17741  IDelegationRegistry.DelegationType.CONTRACT */\n      0x02\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":17657:17678  delegationInfo_.type_ */\n      dup2\n      sload\n      0xff\n      and\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":17657:17741  delegationInfo_.type_ ==... */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_237\n      jumpi\n      tag_237\n      tag_134\n      jump\t// in\n    tag_237:\n      sub\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":17636:18422  if (... */\n      tag_240\n      jumpi\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":17989:18013  delegationInfo_.delegate */\n      0x01\n      dup2\n      add\n      sload\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":18039:18064  delegationInfo_.contract_ */\n      0x02\n      dup3\n      add\n      sload\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":17902:18086  _computeContractDelegationHash(... */\n      tag_239\n      swap2\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":17958:17963  vault */\n      dup11\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":17989:18013  delegationInfo_.delegate */\n      swap2\n      dup3\n      and\n      swap2\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":18039:18064  delegationInfo_.contract_ */\n      and\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":17902:17932  _computeContractDelegationHash */\n      tag_112\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":17902:18086  _computeContractDelegationHash(... */\n      jump\t// in\n    tag_239:\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":17864:17878  delegationHash */\n      dup3\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":17864:18086  delegationHash ==... */\n      sub\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":17839:18408  if (... */\n      tag_240\n      jumpi\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":18168:18389  IDelegationRegistry... */\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      swap1\n      swap2\n      mstore\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":18273:18298  delegationInfo_.contract_ */\n      0x02\n      dup3\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":18168:18389  IDelegationRegistry... */\n      dup3\n      mstore\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":18273:18298  delegationInfo_.contract_ */\n      0x01\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":18338:18362  delegationInfo_.delegate */\n      dup4\n      add\n      sload\n      and\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":18168:18389  IDelegationRegistry... */\n      0x20\n      dup3\n      add\n      mstore\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":18127:18146  contractDelegations */\n      dup8\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":18147:18164  delegationCount++ */\n      dup6\n      tag_241\n      dup2\n      tag_107\n      jump\t// in\n    tag_241:\n      swap7\n      pop\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":18127:18165  contractDelegations[delegationCount++] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_243\n      jumpi\n      tag_243\n      tag_166\n      jump\t// in\n    tag_243:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":18127:18389  contractDelegations[delegationCount++] = IDelegationRegistry... */\n      dup2\n      swap1\n      mstore\n      pop\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":17839:18408  if (... */\n    tag_240:\n      pop\n      pop\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":18463:18466  ++i */\n      0x01\n      add\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":17402:18491  for (uint256 i = 0; i < potentialLength; ) {... */\n      jump(tag_230)\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":8973:9087  function revokeDelegate(address delegate) external override {... */\n    tag_92:\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":9043:9080  _revokeDelegate(delegate, msg.sender) */\n      tag_103\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":9059:9067  delegate */\n      dup2\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":9069:9079  msg.sender */\n      caller\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":9043:9058  _revokeDelegate */\n      tag_104\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":9043:9080  _revokeDelegate(delegate, msg.sender) */\n      jump\t// in\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":13414:16785  function _getDelegatesForLevel(... */\n    tag_99:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":13699:13717  delegations[vault] */\n      dup5\n      and\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":13646:13696  EnumerableSet.Bytes32Set storage delegationHashes_ */\n      0x00\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":13699:13717  delegations[vault] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":13731:13743  vaultVersion */\n      0x01\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":13731:13750  vaultVersion[vault] */\n      dup4\n      mstore\n      dup2\n      dup5\n      keccak256\n      sload\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":13699:13760  delegations[vault][... */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":13608:13634  address[] memory delegates */\n      0x60\n      swap2\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":13805:13831  delegationHashes_.length() */\n      tag_249\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":13699:13760  delegations[vault][... */\n      dup3\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":13805:13829  delegationHashes_.length */\n      tag_119\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":13805:13831  delegationHashes_.length() */\n      jump\t// in\n    tag_249:\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":13770:13831  uint256 potentialDelegatesLength = delegationHashes_.length() */\n      swap1\n      pop\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":13841:13863  uint256 delegatesCount */\n      0x00\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":13770:13831  uint256 potentialDelegatesLength = delegationHashes_.length() */\n      dup2\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":13889:13928  new address[](potentialDelegatesLength) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_251\n      jumpi\n      tag_251\n      tag_122\n      jump\t// in\n    tag_251:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_252\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_252:\n      pop\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":13877:13928  delegates = new address[](potentialDelegatesLength) */\n      swap4\n      pop\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":13943:13952  uint256 i */\n      0x00\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":13938:16530  for (uint256 i = 0; i < potentialDelegatesLength; ) {... */\n    tag_253:\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":13962:13986  potentialDelegatesLength */\n      dup3\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":13958:13959  i */\n      dup2\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":13958:13986  i < potentialDelegatesLength */\n      lt\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":13938:16530  for (uint256 i = 0; i < potentialDelegatesLength; ) {... */\n      iszero\n      tag_254\n      jumpi\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":14004:14026  bytes32 delegationHash */\n      0x00\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":14029:14052  delegationHashes_.at(i) */\n      tag_256\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":14029:14046  delegationHashes_ */\n      dup6\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":14050:14051  i */\n      dup4\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":14029:14049  delegationHashes_.at */\n      tag_131\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":14029:14052  delegationHashes_.at(i) */\n      jump\t// in\n    tag_256:\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":14066:14104  DelegationInfo storage delegationInfo_ */\n      0x00\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":14107:14167  delegationInfo[... */\n      dup2\n      dup2\n      mstore\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":14107:14121  delegationInfo */\n      0x04\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":14107:14167  delegationInfo[... */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":14004:14052  bytes32 delegationHash = delegationHashes_.at(i) */\n      swap1\n      swap2\n      pop\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":14210:14224  delegationType */\n      dup10\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":14185:14224  delegationInfo_.type_ == delegationType */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_258\n      jumpi\n      tag_258\n      tag_134\n      jump\t// in\n    tag_258:\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":14185:14206  delegationInfo_.type_ */\n      dup2\n      sload\n      0xff\n      and\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":14185:14224  delegationInfo_.type_ == delegationType */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_260\n      jumpi\n      tag_260\n      tag_134\n      jump\t// in\n    tag_260:\n      sub\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":14181:16461  if (delegationInfo_.type_ == delegationType) {... */\n      tag_293\n      jumpi\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":14266:14304  IDelegationRegistry.DelegationType.ALL */\n      0x01\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":14248:14262  delegationType */\n      dup11\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":14248:14304  delegationType == IDelegationRegistry.DelegationType.ALL */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_265\n      jumpi\n      tag_265\n      tag_134\n      jump\t// in\n    tag_265:\n      sub\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":14244:16447  if (delegationType == IDelegationRegistry.DelegationType.ALL) {... */\n      tag_266\n      jumpi\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":14558:14582  delegationInfo_.delegate */\n      0x01\n      dup2\n      add\n      sload\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":14468:14608  _computeAllDelegationHash(... */\n      tag_267\n      swap1\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":14523:14528  vault */\n      dup13\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":14558:14582  delegationInfo_.delegate */\n      and\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":14468:14493  _computeAllDelegationHash */\n      tag_143\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":14468:14608  _computeAllDelegationHash(... */\n      jump\t// in\n    tag_267:\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":14426:14440  delegationHash */\n      dup3\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":14426:14608  delegationHash ==... */\n      sub\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":14397:14734  if (... */\n      tag_268\n      jumpi\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":14687:14711  delegationInfo_.delegate */\n      0x01\n      dup2\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":14657:14666  delegates */\n      dup8\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":14667:14683  delegatesCount++ */\n      dup6\n      tag_269\n      dup2\n      tag_107\n      jump\t// in\n    tag_269:\n      swap7\n      pop\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":14657:14684  delegates[delegatesCount++] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_271\n      jumpi\n      tag_271\n      tag_166\n      jump\t// in\n    tag_271:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":14657:14711  delegates[delegatesCount++] = delegationInfo_.delegate */\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      pop\n      pop\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":14397:14734  if (... */\n    tag_268:\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":14244:16447  if (delegationType == IDelegationRegistry.DelegationType.ALL) {... */\n      jump(tag_293)\n    tag_266:\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":14821:14864  IDelegationRegistry.DelegationType.CONTRACT */\n      0x02\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":14783:14797  delegationType */\n      dup11\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":14783:14864  delegationType ==... */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_276\n      jumpi\n      tag_276\n      tag_134\n      jump\t// in\n    tag_276:\n      sub\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":14758:16447  if (... */\n      tag_277\n      jumpi\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":14909:14934  delegationInfo_.contract_ */\n      0x02\n      dup2\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":14909:14947  delegationInfo_.contract_ == contract_ */\n      dup1\n      dup12\n      and\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":14909:14934  delegationInfo_.contract_ */\n      swap2\n      and\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":14909:14947  delegationInfo_.contract_ == contract_ */\n      sub\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":14905:15520  if (delegationInfo_.contract_ == contract_) {... */\n      tag_268\n      jumpi\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":15230:15254  delegationInfo_.delegate */\n      0x01\n      dup2\n      add\n      sload\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":15127:15327  _computeContractDelegationHash(... */\n      tag_267\n      swap1\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":15191:15196  vault */\n      dup13\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":15230:15254  delegationInfo_.delegate */\n      and\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":15288:15297  contract_ */\n      dup12\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":15127:15157  _computeContractDelegationHash */\n      tag_112\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":15127:15327  _computeContractDelegationHash(... */\n      jump\t// in\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":14758:16447  if (... */\n    tag_277:\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":15587:15627  IDelegationRegistry.DelegationType.TOKEN */\n      0x03\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":15569:15583  delegationType */\n      dup11\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":15569:15627  delegationType == IDelegationRegistry.DelegationType.TOKEN */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_288\n      jumpi\n      tag_288\n      tag_134\n      jump\t// in\n    tag_288:\n      sub\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":15544:16447  if (... */\n      tag_293\n      jumpi\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":15697:15722  delegationInfo_.contract_ */\n      0x02\n      dup2\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":15697:15735  delegationInfo_.contract_ == contract_ */\n      dup11\n      dup2\n      and\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":15697:15722  delegationInfo_.contract_ */\n      swap2\n      and\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":15697:15735  delegationInfo_.contract_ == contract_ */\n      eq\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":15697:15797  delegationInfo_.contract_ == contract_ &&... */\n      dup1\n      iszero\n      tag_290\n      jumpi\n      pop\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":15790:15797  tokenId */\n      dup8\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":15763:15778  delegationInfo_ */\n      dup2\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":15763:15786  delegationInfo_.tokenId */\n      0x03\n      add\n      sload\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":15763:15797  delegationInfo_.tokenId == tokenId */\n      eq\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":15697:15797  delegationInfo_.contract_ == contract_ &&... */\n    tag_290:\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":15668:16429  if (... */\n      iszero\n      tag_293\n      jumpi\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":16098:16122  delegationInfo_.delegate */\n      0x01\n      dup2\n      add\n      sload\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":15998:16236  _computeTokenDelegationHash(... */\n      tag_292\n      swap1\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":16059:16064  vault */\n      dup13\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":16098:16122  delegationInfo_.delegate */\n      and\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":16156:16165  contract_ */\n      dup12\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":16199:16206  tokenId */\n      dup12\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":15998:16025  _computeTokenDelegationHash */\n      tag_160\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":15998:16236  _computeTokenDelegationHash(... */\n      jump\t// in\n    tag_292:\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":15952:15966  delegationHash */\n      dup3\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":15952:16236  delegationHash ==... */\n      sub\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":15919:16407  if (... */\n      tag_293\n      jumpi\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":16323:16380  delegationInfo_... */\n      0x01\n      dup2\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":16293:16302  delegates */\n      dup8\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":16303:16319  delegatesCount++ */\n      dup6\n      tag_294\n      dup2\n      tag_107\n      jump\t// in\n    tag_294:\n      swap7\n      pop\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":16293:16320  delegates[delegatesCount++] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_296\n      jumpi\n      tag_296\n      tag_166\n      jump\t// in\n    tag_296:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":16293:16380  delegates[delegatesCount++] = delegationInfo_... */\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      pop\n      pop\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":15919:16407  if (... */\n    tag_293:\n      pop\n      pop\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":16502:16505  ++i */\n      0x01\n      add\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":13938:16530  for (uint256 i = 0; i < potentialDelegatesLength; ) {... */\n      jump(tag_253)\n    tag_254:\n      pop\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":16570:16584  delegatesCount */\n      dup1\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":16543:16567  potentialDelegatesLength */\n      dup3\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":16543:16584  potentialDelegatesLength > delegatesCount */\n      gt\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":16539:16779  if (potentialDelegatesLength > delegatesCount) {... */\n      iszero\n      tag_297\n      jumpi\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":16727:16743  mload(delegates) */\n      dup4\n      mload\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":16643:16688  sub(potentialDelegatesLength, delegatesCount) */\n      dup2\n      dup4\n      sub\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":16723:16754  sub(mload(delegates), decrease) */\n      swap1\n      sub\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":16705:16755  mstore(delegates, sub(mload(delegates), decrease)) */\n      dup5\n      mstore\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":16539:16779  if (potentialDelegatesLength > delegatesCount) {... */\n    tag_297:\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":13636:16785  {... */\n      pop\n      pop\n      pop\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":13414:16785  function _getDelegatesForLevel(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":9347:9591  function _revokeDelegate(address delegate, address vault) internal {... */\n    tag_104:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":9426:9448  delegateVersion[vault] */\n      dup1\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":9426:9441  delegateVersion */\n      0x02\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":9426:9448  delegateVersion[vault] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":9426:9458  delegateVersion[vault][delegate] */\n      swap4\n      dup7\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      swap1\n      dup2\n      keccak256\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":9424:9458  ++delegateVersion[vault][delegate] */\n      dup1\n      sload\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":9426:9458  delegateVersion[vault][delegate] */\n      swap1\n      swap2\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":9426:9448  delegateVersion[vault] */\n      swap1\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":9424:9458  ++delegateVersion[vault][delegate] */\n      tag_299\n      swap1\n      tag_107\n      jump\t// in\n    tag_299:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":9531:9584  IDelegationRegistry.RevokeDelegate(vault, msg.sender) */\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":11165:11197   */\n      dup4\n      and\n        /* \"#utility.yul\":11147:11198   */\n      dup2\n      mstore\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":9573:9583  msg.sender */\n      caller\n        /* \"#utility.yul\":11229:11231   */\n      0x20\n        /* \"#utility.yul\":11214:11232   */\n      dup3\n      add\n        /* \"#utility.yul\":11207:11267   */\n      mstore\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":9531:9584  IDelegationRegistry.RevokeDelegate(vault, msg.sender) */\n      0x3e34a3ee53064fb79c0ee57448f03774a627a9270b0c41286efb7d8e32dcde93\n      swap2\n        /* \"#utility.yul\":11120:11138   */\n      add\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":9531:9584  IDelegationRegistry.RevokeDelegate(vault, msg.sender) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":9347:9591  function _revokeDelegate(address delegate, address vault) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":7462:8004  function _computeContractDelegationHash(... */\n    tag_112:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":7650:7669  vaultVersion[vault] */\n      swap3\n      dup4\n      and\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":7607:7614  bytes32 */\n      0x00\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":7650:7669  vaultVersion[vault] */\n      dup2\n      dup2\n      mstore\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":7650:7662  vaultVersion */\n      0x01\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":7650:7669  vaultVersion[vault] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sload\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":7706:7721  delegateVersion */\n      0x02\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":7706:7728  delegateVersion[vault] */\n      dup4\n      mstore\n      dup2\n      dup5\n      keccak256\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":7706:7738  delegateVersion[vault][delegate] */\n      swap7\n      dup9\n      and\n      dup1\n      dup6\n      mstore\n      swap7\n      dup4\n      mstore\n      swap3\n      dup2\n      swap1\n      keccak256\n      sload\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":7794:7983  abi.encode(... */\n      dup2\n      mload\n      dup1\n      dup5\n      add\n        /* \"#utility.yul\":9620:9671   */\n      swap8\n      swap1\n      swap8\n      mstore\n        /* \"#utility.yul\":9687:9705   */\n      dup7\n      dup3\n      add\n        /* \"#utility.yul\":9680:9740   */\n      swap5\n      swap1\n      swap5\n      mstore\n        /* \"#utility.yul\":9776:9808   */\n      swap4\n      swap1\n      swap6\n      and\n        /* \"#utility.yul\":9756:9774   */\n      0x60\n      dup6\n      add\n        /* \"#utility.yul\":9749:9809   */\n      mstore\n        /* \"#utility.yul\":9825:9843   */\n      0x80\n      dup5\n      add\n        /* \"#utility.yul\":9818:9852   */\n      mstore\n        /* \"#utility.yul\":9868:9887   */\n      0xa0\n      dup1\n      dup5\n      add\n        /* \"#utility.yul\":9861:9896   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":7794:7983  abi.encode(... */\n      dup2\n      mload\n      dup1\n      dup5\n      sub\n      swap1\n      swap2\n      add\n      dup2\n      mstore\n        /* \"#utility.yul\":9592:9611   */\n      0xc0\n      swap1\n      swap3\n      add\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":7794:7983  abi.encode(... */\n      swap1\n      mstore\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":7767:7997  keccak256(... */\n      dup1\n      mload\n      swap2\n      add\n      keccak256\n      swap1\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":7462:8004  function _computeContractDelegationHash(... */\n      jump\t// out\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":6024:6881  function _setDelegationValues(... */\n    tag_114:\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":6284:6289  value */\n      dup5\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":6280:6875  if (value) {... */\n      iszero\n      tag_305\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":6305:6323  delegations[vault] */\n      dup4\n      and\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":6305:6316  delegations */\n      0x00\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":6305:6323  delegations[vault] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":6324:6336  vaultVersion */\n      0x01\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":6324:6343  vaultVersion[vault] */\n      dup4\n      mstore\n      dup2\n      dup5\n      keccak256\n      sload\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":6305:6344  delegations[vault][vaultVersion[vault]] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":6305:6362  delegations[vault][vaultVersion[vault]].add(delegateHash) */\n      tag_306\n      swap1\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":6349:6361  delegateHash */\n      dup8\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":6305:6348  delegations[vault][vaultVersion[vault]].add */\n      tag_307\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":6305:6362  delegations[vault][vaultVersion[vault]].add(delegateHash) */\n      jump\t// in\n    tag_306:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":6376:6402  delegationHashes[delegate] */\n      dup8\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":6376:6392  delegationHashes */\n      0x03\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":6376:6402  delegationHashes[delegate] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":6376:6420  delegationHashes[delegate].add(delegateHash) */\n      tag_308\n      swap1\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":6407:6419  delegateHash */\n      dup8\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":6376:6406  delegationHashes[delegate].add */\n      tag_307\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":6376:6420  delegationHashes[delegate].add(delegateHash) */\n      jump\t// in\n    tag_308:\n      pop\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":6465:6663  DelegationInfo({... */\n      mload(0x40)\n      dup1\n      0xa0\n      add\n      0x40\n      mstore\n      dup1\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":6571:6576  type_ */\n      dup6\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":6465:6663  DelegationInfo({... */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_310\n      jumpi\n      tag_310\n      tag_134\n      jump\t// in\n    tag_310:\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n      dup1\n      dup7\n      and\n      0x20\n      dup1\n      dup5\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      dup11\n      dup3\n      and\n      0x40\n      dup1\n      dup6\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      swap2\n      dup7\n      and\n      0x60\n      dup5\n      add\n      mstore\n      0x80\n      swap1\n      swap3\n      add\n      dup5\n      swap1\n      mstore\n      0x00\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":6434:6462  delegationInfo[delegateHash] */\n      dup10\n      dup2\n      mstore\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":6434:6448  delegationInfo */\n      0x04\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":6434:6462  delegationInfo[delegateHash] */\n      swap1\n      swap3\n      mstore\n      swap1\n      keccak256\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":6434:6663  delegationInfo[delegateHash] = DelegationInfo({... */\n      dup2\n      mload\n      dup2\n      sload\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":6434:6462  delegationInfo[delegateHash] */\n      dup3\n      swap1\n      not(0xff)\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":6434:6663  delegationInfo[delegateHash] = DelegationInfo({... */\n      and\n      0x01\n      dup4\n      0x03\n      dup2\n      gt\n      iszero\n      tag_312\n      jumpi\n      tag_312\n      tag_134\n      jump\t// in\n    tag_312:\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap2\n      dup3\n      and\n      0x0100\n      mul\n      not(sub(shl(0xa8, 0x01), 0x0100))\n      swap1\n      swap2\n      and\n      or\n      dup3\n      sstore\n      0x40\n      dup4\n      add\n      mload\n      0x01\n      dup4\n      add\n      dup1\n      sload\n      swap2\n      dup4\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap3\n      dup4\n      and\n      or\n      swap1\n      sstore\n      0x60\n      dup5\n      add\n      mload\n      0x02\n      dup5\n      add\n      dup1\n      sload\n      swap2\n      swap1\n      swap4\n      and\n      swap2\n      and\n      or\n      swap1\n      sstore\n      0x80\n      swap1\n      swap2\n      add\n      mload\n      0x03\n      swap1\n      swap2\n      add\n      sstore\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":6280:6875  if (value) {... */\n      jump(tag_313)\n    tag_305:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":6694:6712  delegations[vault] */\n      dup4\n      and\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":6694:6705  delegations */\n      0x00\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":6694:6712  delegations[vault] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":6713:6725  vaultVersion */\n      0x01\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":6713:6732  vaultVersion[vault] */\n      dup4\n      mstore\n      dup2\n      dup5\n      keccak256\n      sload\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":6694:6733  delegations[vault][vaultVersion[vault]] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":6694:6754  delegations[vault][vaultVersion[vault]].remove(delegateHash) */\n      tag_314\n      swap1\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":6741:6753  delegateHash */\n      dup8\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":6694:6740  delegations[vault][vaultVersion[vault]].remove */\n      tag_315\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":6694:6754  delegations[vault][vaultVersion[vault]].remove(delegateHash) */\n      jump\t// in\n    tag_314:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":6768:6794  delegationHashes[delegate] */\n      dup8\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":6768:6784  delegationHashes */\n      0x03\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":6768:6794  delegationHashes[delegate] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":6768:6815  delegationHashes[delegate].remove(delegateHash) */\n      tag_316\n      swap1\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":6802:6814  delegateHash */\n      dup8\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":6768:6801  delegationHashes[delegate].remove */\n      tag_315\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":6768:6815  delegationHashes[delegate].remove(delegateHash) */\n      jump\t// in\n    tag_316:\n      pop\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":6836:6864  delegationInfo[delegateHash] */\n      0x00\n      dup7\n      dup2\n      mstore\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":6836:6850  delegationInfo */\n      0x04\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":6836:6864  delegationInfo[delegateHash] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":6829:6864  delete delegationInfo[delegateHash] */\n      dup1\n      sload\n      not(sub(shl(0xa8, 0x01), 0x01))\n      and\n      dup2\n      sstore\n      0x01\n      dup2\n      add\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap1\n      dup2\n      and\n      swap1\n      swap2\n      sstore\n      0x02\n      dup3\n      add\n      dup1\n      sload\n      swap1\n      swap2\n      and\n      swap1\n      sstore\n      0x03\n      add\n      sstore\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":6280:6875  if (value) {... */\n    tag_313:\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":6024:6881  function _setDelegationValues(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Delegate/@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":7908:8023  function length(Bytes32Set storage set) internal view returns (uint256) {... */\n    tag_119:\n        /* \"Delegate/@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":7971:7978  uint256 */\n      0x00\n        /* \"Delegate/@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":7997:8016  _length(set._inner) */\n      tag_95\n        /* \"Delegate/@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8005:8008  set */\n      dup3\n        /* \"Delegate/@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":5814:5832  set._values.length */\n      sload\n      swap1\n        /* \"Delegate/@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":5732:5839  function _length(Set storage set) private view returns (uint256) {... */\n      jump\n        /* \"Delegate/@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8365:8494  function at(Bytes32Set storage set, uint256 index) internal view returns (bytes32) {... */\n    tag_131:\n        /* \"Delegate/@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8439:8446  bytes32 */\n      0x00\n        /* \"Delegate/@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8465:8487  _at(set._inner, index) */\n      tag_221\n        /* \"Delegate/@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8469:8472  set */\n      dup4\n        /* \"Delegate/@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8481:8486  index */\n      dup4\n        /* \"Delegate/@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8465:8468  _at */\n      tag_322\n        /* \"Delegate/@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8465:8487  _at(set._inner, index) */\n      jump\t// in\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":6980:7361  function _computeAllDelegationHash(... */\n    tag_143:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":7136:7155  vaultVersion[vault] */\n      swap2\n      dup3\n      and\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":7093:7100  bytes32 */\n      0x00\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":7136:7155  vaultVersion[vault] */\n      dup2\n      dup2\n      mstore\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":7136:7148  vaultVersion */\n      0x01\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":7136:7155  vaultVersion[vault] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sload\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":7192:7207  delegateVersion */\n      0x02\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":7192:7214  delegateVersion[vault] */\n      dup4\n      mstore\n      dup2\n      dup5\n      keccak256\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":7192:7224  delegateVersion[vault][delegate] */\n      swap6\n      swap1\n      swap7\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n      sload\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":7280:7340  abi.encode(delegate, vault, vaultVersion_, delegateVersion_) */\n      dup3\n      mload\n      dup1\n      dup4\n      add\n        /* \"#utility.yul\":10138:10189   */\n      swap6\n      swap1\n      swap6\n      mstore\n        /* \"#utility.yul\":10205:10223   */\n      dup5\n      dup4\n      add\n        /* \"#utility.yul\":10198:10258   */\n      swap4\n      swap1\n      swap4\n      mstore\n        /* \"#utility.yul\":10274:10292   */\n      0x60\n      dup5\n      add\n        /* \"#utility.yul\":10267:10301   */\n      swap5\n      swap1\n      swap5\n      mstore\n        /* \"#utility.yul\":10317:10335   */\n      0x80\n      dup1\n      dup5\n      add\n        /* \"#utility.yul\":10310:10344   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":7280:7340  abi.encode(delegate, vault, vaultVersion_, delegateVersion_) */\n      dup1\n      mload\n      dup1\n      dup5\n      sub\n      swap1\n      swap3\n      add\n      dup3\n      mstore\n        /* \"#utility.yul\":10110:10129   */\n      0xa0\n      swap1\n      swap3\n      add\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":7280:7340  abi.encode(delegate, vault, vaultVersion_, delegateVersion_) */\n      swap1\n      swap2\n      mstore\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":7253:7354  keccak256(... */\n      dup1\n      mload\n      swap2\n      add\n      keccak256\n      swap1\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":6980:7361  function _computeAllDelegationHash(... */\n      jump\t// out\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":8102:8695  function _computeTokenDelegationHash(... */\n    tag_160:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":8312:8331  vaultVersion[vault] */\n      dup1\n      dup6\n      and\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":8269:8276  bytes32 */\n      0x00\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":8312:8331  vaultVersion[vault] */\n      swap1\n      dup2\n      mstore\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":8312:8324  vaultVersion */\n      0x01\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":8312:8331  vaultVersion[vault] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sload\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":8368:8383  delegateVersion */\n      0x02\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":8368:8390  delegateVersion[vault] */\n      dup4\n      mstore\n      dup2\n      dup5\n      keccak256\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":8368:8400  delegateVersion[vault][delegate] */\n      swap5\n      dup9\n      and\n      dup5\n      mstore\n      swap4\n      dup3\n      mstore\n      dup1\n      dup4\n      keccak256\n      sload\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":8456:8674  abi.encode(... */\n      swap1\n      mload\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":8269:8276  bytes32 */\n      swap3\n      swap4\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":8312:8331  vaultVersion[vault] */\n      swap3\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":8368:8400  delegateVersion[vault][delegate] */\n      swap1\n      swap2\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":8456:8674  abi.encode(... */\n      tag_326\n      swap2\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":8391:8399  delegate */\n      dup9\n      swap2\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":8325:8330  vault */\n      dup11\n      swap2\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":8545:8554  contract_ */\n      dup10\n      swap2\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":8576:8583  tokenId */\n      dup10\n      swap2\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":8312:8331  vaultVersion[vault] */\n      dup9\n      swap2\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":8368:8400  delegateVersion[vault][delegate] */\n      dup9\n      swap2\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":8456:8674  abi.encode(... */\n      add\n      tag_215\n      jump\t// in\n    tag_326:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":8429:8688  keccak256(... */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":8410:8688  return... */\n      swap3\n      pop\n      pop\n      pop\n        /* \"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":8102:8695  function _computeTokenDelegationHash(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Delegate/@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":7689:7827  function contains(Bytes32Set storage set, bytes32 value) internal view returns (bool) {... */\n    tag_205:\n        /* \"Delegate/@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":7769:7773  bool */\n      0x00\n        /* \"Delegate/@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":5620:5639  set._indexes[value] */\n      dup2\n      dup2\n      mstore\n        /* \"Delegate/@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":5620:5632  set._indexes */\n      0x01\n      dup4\n      add\n        /* \"Delegate/@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":5620:5639  set._indexes[value] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"Delegate/@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":5620:5644  set._indexes[value] != 0 */\n      iszero\n      iszero\n        /* \"Delegate/@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":7792:7820  _contains(set._inner, value) */\n      tag_221\n        /* \"Delegate/@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":5524:5651  function _contains(Set storage set, bytes32 value) private view returns (bool) {... */\n      jump\n        /* \"Delegate/@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":7188:7311  function add(Bytes32Set storage set, bytes32 value) internal returns (bool) {... */\n    tag_307:\n        /* \"Delegate/@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":7258:7262  bool */\n      0x00\n        /* \"Delegate/@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":7281:7304  _add(set._inner, value) */\n      tag_221\n        /* \"Delegate/@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":7286:7289  set */\n      dup4\n        /* \"Delegate/@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":7298:7303  value */\n      dup4\n        /* \"Delegate/@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":7281:7285  _add */\n      tag_332\n        /* \"Delegate/@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":7281:7304  _add(set._inner, value) */\n      jump\t// in\n        /* \"Delegate/@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":7479:7608  function remove(Bytes32Set storage set, bytes32 value) internal returns (bool) {... */\n    tag_315:\n        /* \"Delegate/@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":7552:7556  bool */\n      0x00\n        /* \"Delegate/@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":7575:7601  _remove(set._inner, value) */\n      tag_221\n        /* \"Delegate/@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":7583:7586  set */\n      dup4\n        /* \"Delegate/@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":7595:7600  value */\n      dup4\n        /* \"Delegate/@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":7575:7582  _remove */\n      tag_335\n        /* \"Delegate/@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":7575:7601  _remove(set._inner, value) */\n      jump\t// in\n        /* \"Delegate/@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":6181:6299  function _at(Set storage set, uint256 index) private view returns (bytes32) {... */\n    tag_322:\n        /* \"Delegate/@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":6248:6255  bytes32 */\n      0x00\n        /* \"Delegate/@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":6274:6277  set */\n      dup3\n        /* \"Delegate/@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":6274:6285  set._values */\n      0x00\n      add\n        /* \"Delegate/@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":6286:6291  index */\n      dup3\n        /* \"Delegate/@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":6274:6292  set._values[index] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_339\n      jumpi\n      tag_339\n      tag_166\n      jump\t// in\n    tag_339:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      sload\n        /* \"Delegate/@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":6267:6292  return set._values[index] */\n      swap1\n      pop\n        /* \"Delegate/@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":6181:6299  function _at(Set storage set, uint256 index) private view returns (bytes32) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Delegate/@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3483:3887  function _add(Set storage set, bytes32 value) private returns (bool) {... */\n    tag_332:\n        /* \"Delegate/@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3546:3550  bool */\n      0x00\n        /* \"Delegate/@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":5620:5639  set._indexes[value] */\n      dup2\n      dup2\n      mstore\n        /* \"Delegate/@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":5620:5632  set._indexes */\n      0x01\n      dup4\n      add\n        /* \"Delegate/@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":5620:5639  set._indexes[value] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"Delegate/@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3562:3881  if (!_contains(set, value)) {... */\n      tag_344\n      jumpi\n      pop\n        /* \"Delegate/@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3604:3627  set._values.push(value) */\n      dup2\n      sload\n      0x01\n      dup2\n      dup2\n      add\n      dup5\n      sstore\n        /* \"Delegate/@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3604:3615  set._values */\n      0x00\n        /* \"Delegate/@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3604:3627  set._values.push(value) */\n      dup5\n      dup2\n      mstore\n      0x20\n      dup1\n      dup3\n      keccak256\n      swap1\n      swap4\n      add\n      dup5\n      swap1\n      sstore\n        /* \"Delegate/@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3784:3802  set._values.length */\n      dup5\n      sload\n        /* \"Delegate/@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3762:3781  set._indexes[value] */\n      dup5\n      dup3\n      mstore\n        /* \"Delegate/@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3762:3774  set._indexes */\n      dup3\n      dup7\n      add\n        /* \"Delegate/@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3762:3781  set._indexes[value] */\n      swap1\n      swap4\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"Delegate/@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3762:3802  set._indexes[value] = set._values.length */\n      swap2\n      swap1\n      swap2\n      sstore\n        /* \"Delegate/@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3816:3827  return true */\n      jump(tag_95)\n        /* \"Delegate/@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3562:3881  if (!_contains(set, value)) {... */\n    tag_344:\n      pop\n        /* \"Delegate/@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3865:3870  false */\n      0x00\n        /* \"Delegate/@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3858:3870  return false */\n      jump(tag_95)\n        /* \"Delegate/@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4055:5443  function _remove(Set storage set, bytes32 value) private returns (bool) {... */\n    tag_335:\n        /* \"Delegate/@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4121:4125  bool */\n      0x00\n        /* \"Delegate/@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4258:4277  set._indexes[value] */\n      dup2\n      dup2\n      mstore\n        /* \"Delegate/@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4258:4270  set._indexes */\n      0x01\n      dup4\n      add\n        /* \"Delegate/@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4258:4277  set._indexes[value] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"Delegate/@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4292:4307  valueIndex != 0 */\n      dup1\n      iszero\n        /* \"Delegate/@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4288:5437  if (valueIndex != 0) {... */\n      tag_348\n      jumpi\n        /* \"Delegate/@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4661:4682  uint256 toDeleteIndex */\n      0x00\n        /* \"Delegate/@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4685:4699  valueIndex - 1 */\n      tag_349\n        /* \"Delegate/@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4698:4699  1 */\n      0x01\n        /* \"Delegate/@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4685:4695  valueIndex */\n      dup4\n        /* \"Delegate/@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4685:4699  valueIndex - 1 */\n      tag_350\n      jump\t// in\n    tag_349:\n        /* \"Delegate/@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4733:4751  set._values.length */\n      dup6\n      sload\n        /* \"Delegate/@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4661:4699  uint256 toDeleteIndex = valueIndex - 1 */\n      swap1\n      swap2\n      pop\n        /* \"Delegate/@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4713:4730  uint256 lastIndex */\n      0x00\n      swap1\n        /* \"Delegate/@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4733:4755  set._values.length - 1 */\n      tag_351\n      swap1\n        /* \"Delegate/@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4754:4755  1 */\n      0x01\n      swap1\n        /* \"Delegate/@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4733:4755  set._values.length - 1 */\n      tag_350\n      jump\t// in\n    tag_351:\n        /* \"Delegate/@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4713:4755  uint256 lastIndex = set._values.length - 1 */\n      swap1\n      pop\n        /* \"Delegate/@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4787:4800  toDeleteIndex */\n      dup2\n        /* \"Delegate/@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4774:4783  lastIndex */\n      dup2\n        /* \"Delegate/@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4774:4800  lastIndex != toDeleteIndex */\n      eq\n        /* \"Delegate/@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4770:5168  if (lastIndex != toDeleteIndex) {... */\n      tag_352\n      jumpi\n        /* \"Delegate/@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4820:4837  bytes32 lastValue */\n      0x00\n        /* \"Delegate/@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4840:4843  set */\n      dup7\n        /* \"Delegate/@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4840:4851  set._values */\n      0x00\n      add\n        /* \"Delegate/@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4852:4861  lastIndex */\n      dup3\n        /* \"Delegate/@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4840:4862  set._values[lastIndex] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_354\n      jumpi\n      tag_354\n      tag_166\n      jump\t// in\n    tag_354:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      sload\n        /* \"Delegate/@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4820:4862  bytes32 lastValue = set._values[lastIndex] */\n      swap1\n      pop\n        /* \"Delegate/@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4991:5000  lastValue */\n      dup1\n        /* \"Delegate/@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4962:4965  set */\n      dup8\n        /* \"Delegate/@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4962:4973  set._values */\n      0x00\n      add\n        /* \"Delegate/@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4974:4987  toDeleteIndex */\n      dup5\n        /* \"Delegate/@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4962:4988  set._values[toDeleteIndex] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_357\n      jumpi\n      tag_357\n      tag_166\n      jump\t// in\n    tag_357:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n      swap1\n      swap2\n      add\n        /* \"Delegate/@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4962:5000  set._values[toDeleteIndex] = lastValue */\n      swap3\n      swap1\n      swap3\n      sstore\n        /* \"Delegate/@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":5074:5097  set._indexes[lastValue] */\n      swap2\n      dup3\n      mstore\n        /* \"Delegate/@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":5074:5086  set._indexes */\n      0x01\n      dup9\n      add\n        /* \"Delegate/@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":5074:5097  set._indexes[lastValue] */\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"Delegate/@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":5074:5110  set._indexes[lastValue] = valueIndex */\n      dup4\n      swap1\n      sstore\n        /* \"Delegate/@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4770:5168  if (lastIndex != toDeleteIndex) {... */\n    tag_352:\n        /* \"Delegate/@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":5246:5263  set._values.pop() */\n      dup6\n      sload\n        /* \"Delegate/@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":5246:5249  set */\n      dup7\n      swap1\n        /* \"Delegate/@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":5246:5263  set._values.pop() */\n      dup1\n      tag_360\n      jumpi\n      tag_360\n      tag_361\n      jump\t// in\n    tag_360:\n      0x01\n      swap1\n      sub\n      dup2\n      dup2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      sstore\n      swap1\n      sstore\n        /* \"Delegate/@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":5338:5341  set */\n      dup6\n        /* \"Delegate/@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":5338:5350  set._indexes */\n      0x01\n      add\n        /* \"Delegate/@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":5338:5357  set._indexes[value] */\n      0x00\n        /* \"Delegate/@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":5351:5356  value */\n      dup7\n        /* \"Delegate/@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":5338:5357  set._indexes[value] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Delegate/@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":5331:5357  delete set._indexes[value] */\n      0x00\n      swap1\n      sstore\n        /* \"Delegate/@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":5379:5383  true */\n      0x01\n        /* \"Delegate/@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":5372:5383  return true */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump(tag_95)\n        /* \"Delegate/@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4288:5437  if (valueIndex != 0) {... */\n    tag_348:\n        /* \"Delegate/@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":5421:5426  false */\n      0x00\n        /* \"Delegate/@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":5414:5426  return false */\n      swap2\n      pop\n      pop\n      jump(tag_95)\n        /* \"#utility.yul\":14:300   */\n    tag_24:\n        /* \"#utility.yul\":72:78   */\n      0x00\n        /* \"#utility.yul\":125:127   */\n      0x20\n        /* \"#utility.yul\":113:122   */\n      dup3\n        /* \"#utility.yul\":104:111   */\n      dup5\n        /* \"#utility.yul\":100:123   */\n      sub\n        /* \"#utility.yul\":96:128   */\n      slt\n        /* \"#utility.yul\":93:145   */\n      iszero\n      tag_371\n      jumpi\n        /* \"#utility.yul\":141:142   */\n      0x00\n        /* \"#utility.yul\":138:139   */\n      0x00\n        /* \"#utility.yul\":131:143   */\n      revert\n        /* \"#utility.yul\":93:145   */\n    tag_371:\n        /* \"#utility.yul\":167:190   */\n      dup2\n      calldataload\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":219:251   */\n      dup2\n      and\n        /* \"#utility.yul\":209:252   */\n      dup2\n      eq\n        /* \"#utility.yul\":199:270   */\n      tag_221\n      jumpi\n        /* \"#utility.yul\":266:267   */\n      0x00\n        /* \"#utility.yul\":263:264   */\n      0x00\n        /* \"#utility.yul\":256:268   */\n      revert\n        /* \"#utility.yul\":497:670   */\n    tag_366:\n        /* \"#utility.yul\":565:585   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":614:645   */\n      dup2\n      and\n        /* \"#utility.yul\":604:646   */\n      dup2\n      eq\n        /* \"#utility.yul\":594:664   */\n      tag_375\n      jumpi\n        /* \"#utility.yul\":660:661   */\n      0x00\n        /* \"#utility.yul\":657:658   */\n      0x00\n        /* \"#utility.yul\":650:662   */\n      revert\n        /* \"#utility.yul\":594:664   */\n    tag_375:\n        /* \"#utility.yul\":497:670   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":675:1049   */\n    tag_30:\n        /* \"#utility.yul\":752:758   */\n      0x00\n        /* \"#utility.yul\":760:766   */\n      0x00\n        /* \"#utility.yul\":768:774   */\n      0x00\n        /* \"#utility.yul\":821:823   */\n      0x60\n        /* \"#utility.yul\":809:818   */\n      dup5\n        /* \"#utility.yul\":800:807   */\n      dup7\n        /* \"#utility.yul\":796:819   */\n      sub\n        /* \"#utility.yul\":792:824   */\n      slt\n        /* \"#utility.yul\":789:841   */\n      iszero\n      tag_377\n      jumpi\n        /* \"#utility.yul\":837:838   */\n      0x00\n        /* \"#utility.yul\":834:835   */\n      0x00\n        /* \"#utility.yul\":827:839   */\n      revert\n        /* \"#utility.yul\":789:841   */\n    tag_377:\n        /* \"#utility.yul\":860:889   */\n      tag_378\n        /* \"#utility.yul\":879:888   */\n      dup5\n        /* \"#utility.yul\":860:889   */\n      tag_366\n      jump\t// in\n    tag_378:\n        /* \"#utility.yul\":850:889   */\n      swap3\n      pop\n        /* \"#utility.yul\":908:946   */\n      tag_379\n        /* \"#utility.yul\":942:944   */\n      0x20\n        /* \"#utility.yul\":931:940   */\n      dup6\n        /* \"#utility.yul\":927:945   */\n      add\n        /* \"#utility.yul\":908:946   */\n      tag_366\n      jump\t// in\n    tag_379:\n        /* \"#utility.yul\":675:1049   */\n      swap3\n      swap6\n        /* \"#utility.yul\":898:946   */\n      swap3\n      swap5\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1015:1017   */\n      0x40\n        /* \"#utility.yul\":1000:1018   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":987:1019   */\n      calldataload\n      swap1\n        /* \"#utility.yul\":675:1049   */\n      jump\t// out\n        /* \"#utility.yul\":1054:1691   */\n    tag_33:\n        /* \"#utility.yul\":1244:1246   */\n      0x20\n        /* \"#utility.yul\":1256:1277   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":1326:1339   */\n      dup3\n      mload\n        /* \"#utility.yul\":1229:1247   */\n      dup3\n      dup3\n      add\n        /* \"#utility.yul\":1348:1370   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":1196:1200   */\n      0x00\n      swap2\n        /* \"#utility.yul\":1427:1442   */\n      dup5\n      add\n      swap1\n        /* \"#utility.yul\":1401:1403   */\n      0x40\n        /* \"#utility.yul\":1386:1404   */\n      dup5\n      add\n      swap1\n        /* \"#utility.yul\":1196:1200   */\n      dup4\n        /* \"#utility.yul\":1470:1665   */\n    tag_381:\n        /* \"#utility.yul\":1484:1490   */\n      dup2\n        /* \"#utility.yul\":1481:1482   */\n      dup2\n        /* \"#utility.yul\":1478:1491   */\n      lt\n        /* \"#utility.yul\":1470:1665   */\n      iszero\n      tag_383\n      jumpi\n        /* \"#utility.yul\":1549:1562   */\n      dup4\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1545:1584   */\n      and\n        /* \"#utility.yul\":1533:1585   */\n      dup4\n      mstore\n        /* \"#utility.yul\":1614:1616   */\n      0x20\n        /* \"#utility.yul\":1640:1655   */\n      swap4\n      dup5\n      add\n      swap4\n        /* \"#utility.yul\":1605:1617   */\n      swap1\n      swap3\n      add\n      swap2\n        /* \"#utility.yul\":1581:1582   */\n      0x01\n        /* \"#utility.yul\":1499:1508   */\n      add\n        /* \"#utility.yul\":1470:1665   */\n      jump(tag_381)\n    tag_383:\n      pop\n        /* \"#utility.yul\":1682:1685   */\n      swap1\n      swap6\n        /* \"#utility.yul\":1054:1691   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1696:1882   */\n    tag_36:\n        /* \"#utility.yul\":1755:1761   */\n      0x00\n        /* \"#utility.yul\":1808:1810   */\n      0x20\n        /* \"#utility.yul\":1796:1805   */\n      dup3\n        /* \"#utility.yul\":1787:1794   */\n      dup5\n        /* \"#utility.yul\":1783:1806   */\n      sub\n        /* \"#utility.yul\":1779:1811   */\n      slt\n        /* \"#utility.yul\":1776:1828   */\n      iszero\n      tag_385\n      jumpi\n        /* \"#utility.yul\":1824:1825   */\n      0x00\n        /* \"#utility.yul\":1821:1822   */\n      0x00\n        /* \"#utility.yul\":1814:1826   */\n      revert\n        /* \"#utility.yul\":1776:1828   */\n    tag_385:\n        /* \"#utility.yul\":1847:1876   */\n      tag_221\n        /* \"#utility.yul\":1866:1875   */\n      dup3\n        /* \"#utility.yul\":1847:1876   */\n      tag_366\n      jump\t// in\n        /* \"#utility.yul\":1887:2047   */\n    tag_367:\n        /* \"#utility.yul\":1952:1972   */\n      dup1\n      calldataload\n        /* \"#utility.yul\":2008:2021   */\n      dup1\n      iszero\n        /* \"#utility.yul\":2001:2022   */\n      iszero\n        /* \"#utility.yul\":1991:2023   */\n      dup2\n      eq\n        /* \"#utility.yul\":1981:2041   */\n      tag_375\n      jumpi\n        /* \"#utility.yul\":2037:2038   */\n      0x00\n        /* \"#utility.yul\":2034:2035   */\n      0x00\n        /* \"#utility.yul\":2027:2039   */\n      revert\n        /* \"#utility.yul\":2052:2380   */\n    tag_46:\n        /* \"#utility.yul\":2126:2132   */\n      0x00\n        /* \"#utility.yul\":2134:2140   */\n      0x00\n        /* \"#utility.yul\":2142:2148   */\n      0x00\n        /* \"#utility.yul\":2195:2197   */\n      0x60\n        /* \"#utility.yul\":2183:2192   */\n      dup5\n        /* \"#utility.yul\":2174:2181   */\n      dup7\n        /* \"#utility.yul\":2170:2193   */\n      sub\n        /* \"#utility.yul\":2166:2198   */\n      slt\n        /* \"#utility.yul\":2163:2215   */\n      iszero\n      tag_390\n      jumpi\n        /* \"#utility.yul\":2211:2212   */\n      0x00\n        /* \"#utility.yul\":2208:2209   */\n      0x00\n        /* \"#utility.yul\":2201:2213   */\n      revert\n        /* \"#utility.yul\":2163:2215   */\n    tag_390:\n        /* \"#utility.yul\":2234:2263   */\n      tag_391\n        /* \"#utility.yul\":2253:2262   */\n      dup5\n        /* \"#utility.yul\":2234:2263   */\n      tag_366\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":2224:2263   */\n      swap3\n      pop\n        /* \"#utility.yul\":2282:2320   */\n      tag_392\n        /* \"#utility.yul\":2316:2318   */\n      0x20\n        /* \"#utility.yul\":2305:2314   */\n      dup6\n        /* \"#utility.yul\":2301:2319   */\n      add\n        /* \"#utility.yul\":2282:2320   */\n      tag_366\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":2272:2320   */\n      swap2\n      pop\n        /* \"#utility.yul\":2339:2374   */\n      tag_393\n        /* \"#utility.yul\":2370:2372   */\n      0x40\n        /* \"#utility.yul\":2359:2368   */\n      dup6\n        /* \"#utility.yul\":2355:2373   */\n      add\n        /* \"#utility.yul\":2339:2374   */\n      tag_367\n      jump\t// in\n    tag_393:\n        /* \"#utility.yul\":2329:2374   */\n      swap1\n      pop\n        /* \"#utility.yul\":2052:2380   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":2385:2512   */\n    tag_134:\n        /* \"#utility.yul\":2446:2456   */\n      0x4e487b71\n        /* \"#utility.yul\":2441:2444   */\n      0xe0\n        /* \"#utility.yul\":2437:2457   */\n      shl\n        /* \"#utility.yul\":2434:2435   */\n      0x00\n        /* \"#utility.yul\":2427:2458   */\n      mstore\n        /* \"#utility.yul\":2477:2481   */\n      0x21\n        /* \"#utility.yul\":2474:2475   */\n      0x04\n        /* \"#utility.yul\":2467:2482   */\n      mstore\n        /* \"#utility.yul\":2501:2505   */\n      0x24\n        /* \"#utility.yul\":2498:2499   */\n      0x00\n        /* \"#utility.yul\":2491:2506   */\n      revert\n        /* \"#utility.yul\":2517:3722   */\n    tag_52:\n        /* \"#utility.yul\":2771:2773   */\n      0x20\n        /* \"#utility.yul\":2783:2804   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":2853:2866   */\n      dup3\n      mload\n        /* \"#utility.yul\":2756:2774   */\n      dup3\n      dup3\n      add\n        /* \"#utility.yul\":2875:2897   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":2723:2727   */\n      0x00\n      swap2\n        /* \"#utility.yul\":2954:2969   */\n      dup5\n      add\n      swap1\n        /* \"#utility.yul\":2928:2930   */\n      0x40\n        /* \"#utility.yul\":2913:2931   */\n      dup5\n      add\n      swap1\n        /* \"#utility.yul\":2723:2727   */\n      dup4\n        /* \"#utility.yul\":2997:3696   */\n    tag_396:\n        /* \"#utility.yul\":3011:3017   */\n      dup2\n        /* \"#utility.yul\":3008:3009   */\n      dup2\n        /* \"#utility.yul\":3005:3018   */\n      lt\n        /* \"#utility.yul\":2997:3696   */\n      iszero\n      tag_383\n      jumpi\n        /* \"#utility.yul\":3076:3082   */\n      dup4\n        /* \"#utility.yul\":3070:3083   */\n      mload\n        /* \"#utility.yul\":3112:3114   */\n      dup1\n        /* \"#utility.yul\":3106:3115   */\n      mload\n        /* \"#utility.yul\":3145:3146   */\n      0x04\n        /* \"#utility.yul\":3141:3143   */\n      dup2\n        /* \"#utility.yul\":3138:3147   */\n      lt\n        /* \"#utility.yul\":3128:3288   */\n      tag_399\n      jumpi\n        /* \"#utility.yul\":3198:3208   */\n      0x4e487b71\n        /* \"#utility.yul\":3193:3196   */\n      0xe0\n        /* \"#utility.yul\":3189:3209   */\n      shl\n        /* \"#utility.yul\":3186:3187   */\n      0x00\n        /* \"#utility.yul\":3179:3210   */\n      mstore\n        /* \"#utility.yul\":3237:3241   */\n      0x21\n        /* \"#utility.yul\":3234:3235   */\n      0x04\n        /* \"#utility.yul\":3227:3242   */\n      mstore\n        /* \"#utility.yul\":3269:3273   */\n      0x24\n        /* \"#utility.yul\":3266:3267   */\n      0x00\n        /* \"#utility.yul\":3259:3274   */\n      revert\n        /* \"#utility.yul\":3128:3288   */\n    tag_399:\n        /* \"#utility.yul\":3301:3316   */\n      dup5\n      mstore\n        /* \"#utility.yul\":3368:3370   */\n      0x20\n        /* \"#utility.yul\":3360:3371   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":3354:3372   */\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3350:3394   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":3336:3348   */\n      dup3\n      dup8\n      add\n        /* \"#utility.yul\":3329:3395   */\n      mstore\n        /* \"#utility.yul\":3447:3449   */\n      0x40\n        /* \"#utility.yul\":3439:3450   */\n      dup1\n      dup5\n      add\n        /* \"#utility.yul\":3433:3451   */\n      mload\n        /* \"#utility.yul\":3429:3473   */\n      dup3\n      and\n        /* \"#utility.yul\":3415:3427   */\n      swap1\n      dup8\n      add\n        /* \"#utility.yul\":3408:3474   */\n      mstore\n        /* \"#utility.yul\":3528:3532   */\n      0x60\n        /* \"#utility.yul\":3520:3533   */\n      dup1\n      dup5\n      add\n        /* \"#utility.yul\":3514:3534   */\n      mload\n        /* \"#utility.yul\":3510:3556   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":3494:3508   */\n      swap1\n      dup7\n      add\n        /* \"#utility.yul\":3487:3557   */\n      mstore\n        /* \"#utility.yul\":3607:3611   */\n      0x80\n        /* \"#utility.yul\":3599:3612   */\n      swap2\n      dup3\n      add\n        /* \"#utility.yul\":3593:3613   */\n      mload\n        /* \"#utility.yul\":3577:3591   */\n      swap2\n      dup6\n      add\n        /* \"#utility.yul\":3570:3614   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":3671:3686   */\n      swap4\n      swap1\n      swap4\n      add\n      swap3\n        /* \"#utility.yul\":3382:3385   */\n      0xa0\n        /* \"#utility.yul\":3634:3648   */\n      swap1\n      swap3\n      add\n      swap2\n        /* \"#utility.yul\":3391:3392   */\n      0x01\n        /* \"#utility.yul\":3026:3035   */\n      add\n        /* \"#utility.yul\":2997:3696   */\n      jump(tag_396)\n        /* \"#utility.yul\":3727:4170   */\n    tag_55:\n        /* \"#utility.yul\":3810:3816   */\n      0x00\n        /* \"#utility.yul\":3818:3824   */\n      0x00\n        /* \"#utility.yul\":3826:3832   */\n      0x00\n        /* \"#utility.yul\":3834:3840   */\n      0x00\n        /* \"#utility.yul\":3887:3890   */\n      0x80\n        /* \"#utility.yul\":3875:3884   */\n      dup6\n        /* \"#utility.yul\":3866:3873   */\n      dup8\n        /* \"#utility.yul\":3862:3885   */\n      sub\n        /* \"#utility.yul\":3858:3891   */\n      slt\n        /* \"#utility.yul\":3855:3908   */\n      iszero\n      tag_401\n      jumpi\n        /* \"#utility.yul\":3904:3905   */\n      0x00\n        /* \"#utility.yul\":3901:3902   */\n      0x00\n        /* \"#utility.yul\":3894:3906   */\n      revert\n        /* \"#utility.yul\":3855:3908   */\n    tag_401:\n        /* \"#utility.yul\":3927:3956   */\n      tag_402\n        /* \"#utility.yul\":3946:3955   */\n      dup6\n        /* \"#utility.yul\":3927:3956   */\n      tag_366\n      jump\t// in\n    tag_402:\n        /* \"#utility.yul\":3917:3956   */\n      swap4\n      pop\n        /* \"#utility.yul\":3975:4013   */\n      tag_403\n        /* \"#utility.yul\":4009:4011   */\n      0x20\n        /* \"#utility.yul\":3998:4007   */\n      dup7\n        /* \"#utility.yul\":3994:4012   */\n      add\n        /* \"#utility.yul\":3975:4013   */\n      tag_366\n      jump\t// in\n    tag_403:\n        /* \"#utility.yul\":3965:4013   */\n      swap3\n      pop\n        /* \"#utility.yul\":4082:4084   */\n      0x40\n        /* \"#utility.yul\":4067:4085   */\n      dup6\n      add\n        /* \"#utility.yul\":4054:4086   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":4129:4164   */\n      tag_404\n        /* \"#utility.yul\":4160:4162   */\n      0x60\n        /* \"#utility.yul\":4145:4163   */\n      dup7\n      add\n        /* \"#utility.yul\":4129:4164   */\n      tag_367\n      jump\t// in\n    tag_404:\n        /* \"#utility.yul\":4119:4164   */\n      swap1\n      pop\n        /* \"#utility.yul\":3727:4170   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4175:4429   */\n    tag_59:\n        /* \"#utility.yul\":4240:4246   */\n      0x00\n        /* \"#utility.yul\":4248:4254   */\n      0x00\n        /* \"#utility.yul\":4301:4303   */\n      0x40\n        /* \"#utility.yul\":4289:4298   */\n      dup4\n        /* \"#utility.yul\":4280:4287   */\n      dup6\n        /* \"#utility.yul\":4276:4299   */\n      sub\n        /* \"#utility.yul\":4272:4304   */\n      slt\n        /* \"#utility.yul\":4269:4321   */\n      iszero\n      tag_406\n      jumpi\n        /* \"#utility.yul\":4317:4318   */\n      0x00\n        /* \"#utility.yul\":4314:4315   */\n      0x00\n        /* \"#utility.yul\":4307:4319   */\n      revert\n        /* \"#utility.yul\":4269:4321   */\n    tag_406:\n        /* \"#utility.yul\":4340:4369   */\n      tag_407\n        /* \"#utility.yul\":4359:4368   */\n      dup4\n        /* \"#utility.yul\":4340:4369   */\n      tag_366\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":4330:4369   */\n      swap2\n      pop\n        /* \"#utility.yul\":4388:4423   */\n      tag_408\n        /* \"#utility.yul\":4419:4421   */\n      0x20\n        /* \"#utility.yul\":4408:4417   */\n      dup5\n        /* \"#utility.yul\":4404:4422   */\n      add\n        /* \"#utility.yul\":4388:4423   */\n      tag_367\n      jump\t// in\n    tag_408:\n        /* \"#utility.yul\":4378:4423   */\n      swap1\n      pop\n        /* \"#utility.yul\":4175:4429   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4434:5303   */\n    tag_65:\n        /* \"#utility.yul\":4690:4692   */\n      0x20\n        /* \"#utility.yul\":4702:4723   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":4772:4785   */\n      dup3\n      mload\n        /* \"#utility.yul\":4675:4693   */\n      dup3\n      dup3\n      add\n        /* \"#utility.yul\":4794:4816   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":4642:4646   */\n      0x00\n      swap2\n        /* \"#utility.yul\":4873:4888   */\n      dup5\n      add\n      swap1\n        /* \"#utility.yul\":4847:4849   */\n      0x40\n        /* \"#utility.yul\":4832:4850   */\n      dup5\n      add\n      swap1\n        /* \"#utility.yul\":4642:4646   */\n      dup4\n        /* \"#utility.yul\":4916:5277   */\n    tag_410:\n        /* \"#utility.yul\":4930:4936   */\n      dup2\n        /* \"#utility.yul\":4927:4928   */\n      dup2\n        /* \"#utility.yul\":4924:4937   */\n      lt\n        /* \"#utility.yul\":4916:5277   */\n      iszero\n      tag_383\n      jumpi\n        /* \"#utility.yul\":4989:5002   */\n      dup4\n      mload\n        /* \"#utility.yul\":5031:5040   */\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":5027:5062   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":5015:5063   */\n      dup6\n      mstore\n        /* \"#utility.yul\":5111:5113   */\n      0x20\n        /* \"#utility.yul\":5103:5114   */\n      dup1\n      dup4\n      add\n        /* \"#utility.yul\":5097:5115   */\n      mload\n        /* \"#utility.yul\":5083:5095   */\n      dup2\n      dup8\n      add\n        /* \"#utility.yul\":5076:5116   */\n      mstore\n        /* \"#utility.yul\":5168:5170   */\n      0x40\n        /* \"#utility.yul\":5160:5171   */\n      swap3\n      dup4\n      add\n        /* \"#utility.yul\":5154:5172   */\n      mload\n        /* \"#utility.yul\":5150:5194   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":5136:5148   */\n      swap2\n      dup6\n      add\n        /* \"#utility.yul\":5129:5195   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":5252:5267   */\n      swap1\n      swap4\n      add\n      swap3\n        /* \"#utility.yul\":5224:5228   */\n      0x60\n        /* \"#utility.yul\":5215:5229   */\n      swap1\n      swap3\n      add\n      swap2\n        /* \"#utility.yul\":5059:5060   */\n      0x01\n        /* \"#utility.yul\":4945:4954   */\n      add\n        /* \"#utility.yul\":4916:5277   */\n      jump(tag_410)\n        /* \"#utility.yul\":5308:5642   */\n    tag_68:\n        /* \"#utility.yul\":5385:5391   */\n      0x00\n        /* \"#utility.yul\":5393:5399   */\n      0x00\n        /* \"#utility.yul\":5401:5407   */\n      0x00\n        /* \"#utility.yul\":5454:5456   */\n      0x60\n        /* \"#utility.yul\":5442:5451   */\n      dup5\n        /* \"#utility.yul\":5433:5440   */\n      dup7\n        /* \"#utility.yul\":5429:5452   */\n      sub\n        /* \"#utility.yul\":5425:5457   */\n      slt\n        /* \"#utility.yul\":5422:5474   */\n      iszero\n      tag_414\n      jumpi\n        /* \"#utility.yul\":5470:5471   */\n      0x00\n        /* \"#utility.yul\":5467:5468   */\n      0x00\n        /* \"#utility.yul\":5460:5472   */\n      revert\n        /* \"#utility.yul\":5422:5474   */\n    tag_414:\n        /* \"#utility.yul\":5493:5522   */\n      tag_415\n        /* \"#utility.yul\":5512:5521   */\n      dup5\n        /* \"#utility.yul\":5493:5522   */\n      tag_366\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":5483:5522   */\n      swap3\n      pop\n        /* \"#utility.yul\":5541:5579   */\n      tag_416\n        /* \"#utility.yul\":5575:5577   */\n      0x20\n        /* \"#utility.yul\":5564:5573   */\n      dup6\n        /* \"#utility.yul\":5560:5578   */\n      add\n        /* \"#utility.yul\":5541:5579   */\n      tag_366\n      jump\t// in\n    tag_416:\n        /* \"#utility.yul\":5531:5579   */\n      swap2\n      pop\n        /* \"#utility.yul\":5598:5636   */\n      tag_393\n        /* \"#utility.yul\":5632:5634   */\n      0x40\n        /* \"#utility.yul\":5621:5630   */\n      dup6\n        /* \"#utility.yul\":5617:5635   */\n      add\n        /* \"#utility.yul\":5598:5636   */\n      tag_366\n      jump\t// in\n        /* \"#utility.yul\":5647:5907   */\n    tag_73:\n        /* \"#utility.yul\":5715:5721   */\n      0x00\n        /* \"#utility.yul\":5723:5729   */\n      0x00\n        /* \"#utility.yul\":5776:5778   */\n      0x40\n        /* \"#utility.yul\":5764:5773   */\n      dup4\n        /* \"#utility.yul\":5755:5762   */\n      dup6\n        /* \"#utility.yul\":5751:5774   */\n      sub\n        /* \"#utility.yul\":5747:5779   */\n      slt\n        /* \"#utility.yul\":5744:5796   */\n      iszero\n      tag_419\n      jumpi\n        /* \"#utility.yul\":5792:5793   */\n      0x00\n        /* \"#utility.yul\":5789:5790   */\n      0x00\n        /* \"#utility.yul\":5782:5794   */\n      revert\n        /* \"#utility.yul\":5744:5796   */\n    tag_419:\n        /* \"#utility.yul\":5815:5844   */\n      tag_420\n        /* \"#utility.yul\":5834:5843   */\n      dup4\n        /* \"#utility.yul\":5815:5844   */\n      tag_366\n      jump\t// in\n    tag_420:\n        /* \"#utility.yul\":5805:5844   */\n      swap2\n      pop\n        /* \"#utility.yul\":5863:5901   */\n      tag_408\n        /* \"#utility.yul\":5897:5899   */\n      0x20\n        /* \"#utility.yul\":5886:5895   */\n      dup5\n        /* \"#utility.yul\":5882:5900   */\n      add\n        /* \"#utility.yul\":5863:5901   */\n      tag_366\n      jump\t// in\n        /* \"#utility.yul\":5912:6361   */\n    tag_78:\n        /* \"#utility.yul\":5998:6004   */\n      0x00\n        /* \"#utility.yul\":6006:6012   */\n      0x00\n        /* \"#utility.yul\":6014:6020   */\n      0x00\n        /* \"#utility.yul\":6022:6028   */\n      0x00\n        /* \"#utility.yul\":6075:6078   */\n      0x80\n        /* \"#utility.yul\":6063:6072   */\n      dup6\n        /* \"#utility.yul\":6054:6061   */\n      dup8\n        /* \"#utility.yul\":6050:6073   */\n      sub\n        /* \"#utility.yul\":6046:6079   */\n      slt\n        /* \"#utility.yul\":6043:6096   */\n      iszero\n      tag_423\n      jumpi\n        /* \"#utility.yul\":6092:6093   */\n      0x00\n        /* \"#utility.yul\":6089:6090   */\n      0x00\n        /* \"#utility.yul\":6082:6094   */\n      revert\n        /* \"#utility.yul\":6043:6096   */\n    tag_423:\n        /* \"#utility.yul\":6115:6144   */\n      tag_424\n        /* \"#utility.yul\":6134:6143   */\n      dup6\n        /* \"#utility.yul\":6115:6144   */\n      tag_366\n      jump\t// in\n    tag_424:\n        /* \"#utility.yul\":6105:6144   */\n      swap4\n      pop\n        /* \"#utility.yul\":6163:6201   */\n      tag_425\n        /* \"#utility.yul\":6197:6199   */\n      0x20\n        /* \"#utility.yul\":6186:6195   */\n      dup7\n        /* \"#utility.yul\":6182:6200   */\n      add\n        /* \"#utility.yul\":6163:6201   */\n      tag_366\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":6153:6201   */\n      swap3\n      pop\n        /* \"#utility.yul\":6220:6258   */\n      tag_426\n        /* \"#utility.yul\":6254:6256   */\n      0x40\n        /* \"#utility.yul\":6243:6252   */\n      dup7\n        /* \"#utility.yul\":6239:6257   */\n      add\n        /* \"#utility.yul\":6220:6258   */\n      tag_366\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":5912:6361   */\n      swap4\n      swap7\n      swap3\n      swap6\n      pop\n        /* \"#utility.yul\":6210:6258   */\n      swap3\n      swap4\n        /* \"#utility.yul\":6327:6329   */\n      0x60\n        /* \"#utility.yul\":6312:6330   */\n      add\n        /* \"#utility.yul\":6299:6331   */\n      calldataload\n      swap3\n      pop\n      pop\n        /* \"#utility.yul\":5912:6361   */\n      jump\t// out\n        /* \"#utility.yul\":6366:7186   */\n    tag_89:\n        /* \"#utility.yul\":6628:6630   */\n      0x20\n        /* \"#utility.yul\":6640:6661   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":6710:6723   */\n      dup3\n      mload\n        /* \"#utility.yul\":6613:6631   */\n      dup3\n      dup3\n      add\n        /* \"#utility.yul\":6732:6754   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":6580:6584   */\n      0x00\n      swap2\n        /* \"#utility.yul\":6811:6826   */\n      dup5\n      add\n      swap1\n        /* \"#utility.yul\":6785:6787   */\n      0x40\n        /* \"#utility.yul\":6770:6788   */\n      dup5\n      add\n      swap1\n        /* \"#utility.yul\":6580:6584   */\n      dup4\n        /* \"#utility.yul\":6854:7160   */\n    tag_428:\n        /* \"#utility.yul\":6868:6874   */\n      dup2\n        /* \"#utility.yul\":6865:6866   */\n      dup2\n        /* \"#utility.yul\":6862:6875   */\n      lt\n        /* \"#utility.yul\":6854:7160   */\n      iszero\n      tag_383\n      jumpi\n        /* \"#utility.yul\":6927:6940   */\n      dup4\n      mload\n        /* \"#utility.yul\":6969:6978   */\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":6965:7000   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":6953:7001   */\n      dup6\n      mstore\n        /* \"#utility.yul\":7053:7055   */\n      0x20\n        /* \"#utility.yul\":7045:7056   */\n      swap2\n      dup3\n      add\n        /* \"#utility.yul\":7039:7057   */\n      mload\n        /* \"#utility.yul\":7035:7079   */\n      and\n        /* \"#utility.yul\":7021:7033   */\n      dup2\n      dup6\n      add\n        /* \"#utility.yul\":7014:7080   */\n      mstore\n        /* \"#utility.yul\":7135:7150   */\n      swap1\n      swap4\n      add\n      swap3\n        /* \"#utility.yul\":7109:7111   */\n      0x40\n        /* \"#utility.yul\":7100:7112   */\n      swap1\n      swap3\n      add\n      swap2\n        /* \"#utility.yul\":6997:6998   */\n      0x01\n        /* \"#utility.yul\":6883:6892   */\n      add\n        /* \"#utility.yul\":6854:7160   */\n      jump(tag_428)\n        /* \"#utility.yul\":7191:7318   */\n    tag_368:\n        /* \"#utility.yul\":7252:7262   */\n      0x4e487b71\n        /* \"#utility.yul\":7247:7250   */\n      0xe0\n        /* \"#utility.yul\":7243:7263   */\n      shl\n        /* \"#utility.yul\":7240:7241   */\n      0x00\n        /* \"#utility.yul\":7233:7264   */\n      mstore\n        /* \"#utility.yul\":7283:7287   */\n      0x11\n        /* \"#utility.yul\":7280:7281   */\n      0x04\n        /* \"#utility.yul\":7273:7288   */\n      mstore\n        /* \"#utility.yul\":7307:7311   */\n      0x24\n        /* \"#utility.yul\":7304:7305   */\n      0x00\n        /* \"#utility.yul\":7297:7312   */\n      revert\n        /* \"#utility.yul\":7323:7458   */\n    tag_107:\n        /* \"#utility.yul\":7362:7365   */\n      0x00\n        /* \"#utility.yul\":7383:7400   */\n      0x01\n      dup3\n      add\n        /* \"#utility.yul\":7380:7423   */\n      tag_434\n      jumpi\n        /* \"#utility.yul\":7403:7421   */\n      tag_434\n      tag_368\n      jump\t// in\n    tag_434:\n      pop\n        /* \"#utility.yul\":7450:7451   */\n      0x01\n        /* \"#utility.yul\":7439:7452   */\n      add\n      swap1\n        /* \"#utility.yul\":7323:7458   */\n      jump\t// out\n        /* \"#utility.yul\":8155:8282   */\n    tag_122:\n        /* \"#utility.yul\":8216:8226   */\n      0x4e487b71\n        /* \"#utility.yul\":8211:8214   */\n      0xe0\n        /* \"#utility.yul\":8207:8227   */\n      shl\n        /* \"#utility.yul\":8204:8205   */\n      0x00\n        /* \"#utility.yul\":8197:8228   */\n      mstore\n        /* \"#utility.yul\":8247:8251   */\n      0x41\n        /* \"#utility.yul\":8244:8245   */\n      0x04\n        /* \"#utility.yul\":8237:8252   */\n      mstore\n        /* \"#utility.yul\":8271:8275   */\n      0x24\n        /* \"#utility.yul\":8268:8269   */\n      0x00\n        /* \"#utility.yul\":8261:8276   */\n      revert\n        /* \"#utility.yul\":8287:8414   */\n    tag_166:\n        /* \"#utility.yul\":8348:8358   */\n      0x4e487b71\n        /* \"#utility.yul\":8343:8346   */\n      0xe0\n        /* \"#utility.yul\":8339:8359   */\n      shl\n        /* \"#utility.yul\":8336:8337   */\n      0x00\n        /* \"#utility.yul\":8329:8360   */\n      mstore\n        /* \"#utility.yul\":8379:8383   */\n      0x32\n        /* \"#utility.yul\":8376:8377   */\n      0x04\n        /* \"#utility.yul\":8369:8384   */\n      mstore\n        /* \"#utility.yul\":8403:8407   */\n      0x24\n        /* \"#utility.yul\":8400:8401   */\n      0x00\n        /* \"#utility.yul\":8393:8408   */\n      revert\n        /* \"#utility.yul\":10355:10968   */\n    tag_215:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":10660:10692   */\n      swap7\n      dup8\n      and\n        /* \"#utility.yul\":10642:10693   */\n      dup2\n      mstore\n        /* \"#utility.yul\":10729:10761   */\n      swap5\n      dup7\n      and\n        /* \"#utility.yul\":10724:10726   */\n      0x20\n        /* \"#utility.yul\":10709:10727   */\n      dup7\n      add\n        /* \"#utility.yul\":10702:10762   */\n      mstore\n        /* \"#utility.yul\":10798:10830   */\n      swap3\n      swap1\n      swap5\n      and\n        /* \"#utility.yul\":10793:10795   */\n      0x40\n        /* \"#utility.yul\":10778:10796   */\n      dup5\n      add\n        /* \"#utility.yul\":10771:10831   */\n      mstore\n        /* \"#utility.yul\":10862:10864   */\n      0x60\n        /* \"#utility.yul\":10847:10865   */\n      dup4\n      add\n        /* \"#utility.yul\":10840:10874   */\n      mstore\n        /* \"#utility.yul\":10905:10908   */\n      0x80\n        /* \"#utility.yul\":10890:10909   */\n      dup3\n      add\n        /* \"#utility.yul\":10883:10918   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":10680:10683   */\n      0xa0\n        /* \"#utility.yul\":10934:10953   */\n      dup2\n      add\n        /* \"#utility.yul\":10927:10962   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":10629:10632   */\n      0xc0\n        /* \"#utility.yul\":10614:10633   */\n      add\n      swap1\n        /* \"#utility.yul\":10355:10968   */\n      jump\t// out\n        /* \"#utility.yul\":11278:11406   */\n    tag_350:\n        /* \"#utility.yul\":11345:11354   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":11366:11377   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":11363:11400   */\n      iszero\n      tag_95\n      jumpi\n        /* \"#utility.yul\":11380:11398   */\n      tag_95\n      tag_368\n      jump\t// in\n        /* \"#utility.yul\":11411:11538   */\n    tag_361:\n        /* \"#utility.yul\":11472:11482   */\n      0x4e487b71\n        /* \"#utility.yul\":11467:11470   */\n      0xe0\n        /* \"#utility.yul\":11463:11483   */\n      shl\n        /* \"#utility.yul\":11460:11461   */\n      0x00\n        /* \"#utility.yul\":11453:11484   */\n      mstore\n        /* \"#utility.yul\":11503:11507   */\n      0x31\n        /* \"#utility.yul\":11500:11501   */\n      0x04\n        /* \"#utility.yul\":11493:11508   */\n      mstore\n        /* \"#utility.yul\":11527:11531   */\n      0x24\n        /* \"#utility.yul\":11524:11525   */\n      0x00\n        /* \"#utility.yul\":11517:11532   */\n      revert\n\n    auxdata: 0xa26469706673582212209e4b5ace470d3b3f81ccaa3d9a9597956cb043225ee95ebf65d5c3122dfd431c64736f6c634300081b0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x17C9 DUP1 PUSH2 0x1C PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xFB JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x685EE3E8 GT PUSH2 0x93 JUMPI DUP1 PUSH4 0xABA69CF8 GT PUSH2 0x63 JUMPI DUP1 PUSH4 0xABA69CF8 EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0xED4B878E EQ PUSH2 0x229 JUMPI DUP1 PUSH4 0xF956CF94 EQ PUSH2 0x23C JUMPI DUP1 PUSH4 0xFA352C00 EQ PUSH2 0x25C JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x685EE3E8 EQ PUSH2 0x1BD JUMPI DUP1 PUSH4 0x6F007D87 EQ PUSH2 0x1D0 JUMPI DUP1 PUSH4 0x90C9A2D0 EQ PUSH2 0x1F0 JUMPI DUP1 PUSH4 0x9C395BC2 EQ PUSH2 0x203 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x36137872 GT PUSH2 0xCE JUMPI DUP1 PUSH4 0x36137872 EQ PUSH2 0x16F JUMPI DUP1 PUSH4 0x49C95D29 EQ PUSH2 0x177 JUMPI DUP1 PUSH4 0x4FC69282 EQ PUSH2 0x18A JUMPI DUP1 PUSH4 0x537A5C3D EQ PUSH2 0x1AA JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xFF JUMPI DUP1 PUSH4 0x1221156B EQ PUSH2 0x127 JUMPI DUP1 PUSH4 0x1B61F675 EQ PUSH2 0x147 JUMPI DUP1 PUSH4 0x219044B0 EQ PUSH2 0x15A JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x112 PUSH2 0x10D CALLDATASIZE PUSH1 0x4 PUSH2 0x133C JUMP JUMPDEST PUSH2 0x26F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13A PUSH2 0x135 CALLDATASIZE PUSH1 0x4 PUSH2 0x137E JUMP JUMPDEST PUSH2 0x2A5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11E SWAP2 SWAP1 PUSH2 0x13B8 JUMP JUMPDEST PUSH2 0x13A PUSH2 0x155 CALLDATASIZE PUSH1 0x4 PUSH2 0x1403 JUMP JUMPDEST PUSH2 0x2BC JUMP JUMPDEST PUSH2 0x16D PUSH2 0x168 CALLDATASIZE PUSH1 0x4 PUSH2 0x1403 JUMP JUMPDEST PUSH2 0x2CB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x16D PUSH2 0x2D8 JUMP JUMPDEST PUSH2 0x16D PUSH2 0x185 CALLDATASIZE PUSH1 0x4 PUSH2 0x142B JUMP JUMPDEST PUSH2 0x32D JUMP JUMPDEST PUSH2 0x19D PUSH2 0x198 CALLDATASIZE PUSH1 0x4 PUSH2 0x1403 JUMP JUMPDEST PUSH2 0x3A2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11E SWAP2 SWAP1 PUSH2 0x147F JUMP JUMPDEST PUSH2 0x16D PUSH2 0x1B8 CALLDATASIZE PUSH1 0x4 PUSH2 0x1510 JUMP JUMPDEST PUSH2 0x5D5 JUMP JUMPDEST PUSH2 0x16D PUSH2 0x1CB CALLDATASIZE PUSH1 0x4 PUSH2 0x155A JUMP JUMPDEST PUSH2 0x653 JUMP JUMPDEST PUSH2 0x1E3 PUSH2 0x1DE CALLDATASIZE PUSH1 0x4 PUSH2 0x1403 JUMP JUMPDEST PUSH2 0x6BE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11E SWAP2 SWAP1 PUSH2 0x158B JUMP JUMPDEST PUSH2 0x112 PUSH2 0x1FE CALLDATASIZE PUSH1 0x4 PUSH2 0x15E9 JUMP JUMPDEST PUSH2 0x830 JUMP JUMPDEST PUSH2 0x112 PUSH2 0x211 CALLDATASIZE PUSH1 0x4 PUSH2 0x1620 JUMP JUMPDEST PUSH2 0x8DA JUMP JUMPDEST PUSH2 0x112 PUSH2 0x224 CALLDATASIZE PUSH1 0x4 PUSH2 0x1648 JUMP JUMPDEST PUSH2 0x95F JUMP JUMPDEST PUSH2 0x13A PUSH2 0x237 CALLDATASIZE PUSH1 0x4 PUSH2 0x1620 JUMP JUMPDEST PUSH2 0xA12 JUMP JUMPDEST PUSH2 0x24F PUSH2 0x24A CALLDATASIZE PUSH1 0x4 PUSH2 0x1403 JUMP JUMPDEST PUSH2 0xA28 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11E SWAP2 SWAP1 PUSH2 0x1690 JUMP JUMPDEST PUSH2 0x16D PUSH2 0x26A CALLDATASIZE PUSH1 0x4 PUSH2 0x1403 JUMP JUMPDEST PUSH2 0xB82 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x596D3D5 PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x29F JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x2B4 DUP5 PUSH1 0x3 DUP6 DUP6 PUSH2 0xB8C JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x29F DUP3 PUSH1 0x1 PUSH0 PUSH0 PUSH2 0xB8C JUMP JUMPDEST PUSH2 0x2D5 CALLER DUP3 PUSH2 0xE01 JUMP JUMPDEST POP JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x2F4 SWAP1 PUSH2 0x16F3 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH1 0x40 MLOAD CALLER DUP2 MSTORE PUSH32 0x32D74BEFD0B842E19694E3E3AF46263E18BCCE41352C8B600FF0002B49EDF662 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 PUSH2 0x339 CALLER DUP6 DUP6 PUSH2 0xE7E JUMP JUMPDEST SWAP1 POP PUSH2 0x34B DUP5 DUP3 DUP5 PUSH1 0x2 CALLER DUP9 PUSH0 PUSH2 0xEEF JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE DUP6 AND DUP2 DUP4 ADD MSTORE DUP4 ISZERO ISZERO PUSH1 0x60 DUP3 ADD MSTORE SWAP1 MLOAD PUSH32 0x8D6B2F5255B8D815CC368855B2251146E003BF4E2FCCCAEC66145FFF5C174B4F SWAP2 DUP2 SWAP1 SUB PUSH1 0x80 ADD SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x60 SWAP2 PUSH2 0x3C5 DUP3 PUSH2 0x10CB JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3E1 JUMPI PUSH2 0x3E1 PUSH2 0x170B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x438 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD DUP3 MSTORE PUSH0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD DUP3 SWAP1 MSTORE SWAP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x80 DUP3 ADD MSTORE DUP3 MSTORE PUSH0 NOT SWAP1 SWAP3 ADD SWAP2 ADD DUP2 PUSH2 0x3FF JUMPI SWAP1 POP JUMPDEST POP SWAP4 POP PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x5BA JUMPI PUSH0 PUSH2 0x450 DUP6 DUP4 PUSH2 0x10D4 JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP2 MLOAD PUSH1 0xA0 DUP2 ADD SWAP1 SWAP3 MSTORE DUP1 SLOAD SWAP4 SWAP5 POP SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x487 JUMPI PUSH2 0x487 PUSH2 0x146B JUMP JUMPDEST PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x498 JUMPI PUSH2 0x498 PUSH2 0x146B JUMP JUMPDEST DUP2 MSTORE DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV DUP2 AND PUSH1 0x20 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 DUP1 DUP6 ADD SLOAD DUP4 AND PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x2 DUP6 ADD SLOAD SWAP1 SWAP3 AND PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x3 SWAP1 SWAP4 ADD SLOAD PUSH1 0x80 SWAP1 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 DUP3 ADD MLOAD DUP3 MLOAD SWAP3 SWAP4 POP SWAP2 SWAP1 PUSH0 SWAP1 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x4FD JUMPI PUSH2 0x4FD PUSH2 0x146B JUMP JUMPDEST SUB PUSH2 0x51B JUMPI PUSH2 0x50C DUP4 DUP13 PUSH2 0x10DF JUMP JUMPDEST DUP6 SUB PUSH2 0x516 JUMPI POP PUSH1 0x1 JUMPDEST PUSH2 0x57A JUMP JUMPDEST PUSH1 0x2 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x52F JUMPI PUSH2 0x52F PUSH2 0x146B JUMP JUMPDEST SUB PUSH2 0x543 JUMPI PUSH2 0x50C DUP4 DUP13 DUP7 PUSH1 0x60 ADD MLOAD PUSH2 0xE7E JUMP JUMPDEST PUSH1 0x3 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x557 JUMPI PUSH2 0x557 PUSH2 0x146B JUMP JUMPDEST SUB PUSH2 0x57A JUMPI PUSH2 0x570 DUP4 DUP13 DUP7 PUSH1 0x60 ADD MLOAD DUP8 PUSH1 0x80 ADD MLOAD PUSH2 0x114C JUMP JUMPDEST DUP6 SUB PUSH2 0x57A JUMPI POP PUSH1 0x1 JUMPDEST DUP1 ISZERO PUSH2 0x5AA JUMPI DUP4 DUP11 DUP9 PUSH2 0x58C DUP2 PUSH2 0x16F3 JUMP JUMPDEST SWAP10 POP DUP2 MLOAD DUP2 LT PUSH2 0x59E JUMPI PUSH2 0x59E PUSH2 0x171F JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP JUMPDEST DUP6 PUSH1 0x1 ADD SWAP6 POP POP POP POP POP POP PUSH2 0x43D JUMP JUMPDEST POP DUP1 DUP3 GT ISZERO PUSH2 0x5CD JUMPI DUP4 MLOAD DUP2 DUP4 SUB SWAP1 SUB DUP5 MSTORE JUMPDEST POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x5E2 CALLER DUP7 DUP7 DUP7 PUSH2 0x114C JUMP JUMPDEST SWAP1 POP PUSH2 0x5F4 DUP6 DUP3 DUP5 PUSH1 0x3 CALLER DUP10 DUP10 PUSH2 0xEEF JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE DUP7 AND DUP2 DUP4 ADD MSTORE PUSH1 0x60 DUP2 ADD DUP6 SWAP1 MSTORE DUP4 ISZERO ISZERO PUSH1 0x80 DUP3 ADD MSTORE SWAP1 MLOAD PUSH32 0xE89C6BA1E8957285AED22618F52AA1DCB9D5BB64E1533D8B55136C72FCF5AA5D SWAP2 DUP2 SWAP1 SUB PUSH1 0xA0 ADD SWAP1 LOG1 POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x65E CALLER DUP5 PUSH2 0x10DF JUMP JUMPDEST SWAP1 POP PUSH2 0x670 DUP4 DUP3 DUP5 PUSH1 0x1 CALLER PUSH0 PUSH0 PUSH2 0xEEF JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE DUP4 ISZERO ISZERO DUP2 DUP4 ADD MSTORE SWAP1 MLOAD PUSH32 0x58781EAB4A0743AB1C285A238BE846A235F06CDB5B968030573A635E5F8C92FA SWAP2 DUP2 SWAP1 SUB PUSH1 0x60 ADD SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 DUP4 MSTORE DUP2 DUP5 KECCAK256 SLOAD DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 PUSH1 0x60 SWAP2 PUSH2 0x6F1 DUP3 PUSH2 0x10CB JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x70D JUMPI PUSH2 0x70D PUSH2 0x170B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x756 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD DUP3 SWAP1 MSTORE SWAP3 DUP3 ADD MSTORE DUP3 MSTORE PUSH0 NOT SWAP1 SWAP3 ADD SWAP2 ADD DUP2 PUSH2 0x72B JUMPI SWAP1 POP JUMPDEST POP SWAP4 POP PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x5BA JUMPI PUSH0 PUSH2 0x76E DUP6 DUP4 PUSH2 0x10D4 JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 SWAP2 POP PUSH1 0x3 DUP2 SLOAD PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x796 JUMPI PUSH2 0x796 PUSH2 0x146B JUMP JUMPDEST SUB PUSH2 0x826 JUMPI PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x3 DUP4 ADD SLOAD PUSH2 0x7C4 SWAP3 DUP12 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP3 SWAP2 AND SWAP1 PUSH2 0x114C JUMP JUMPDEST DUP3 SUB PUSH2 0x826 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x1 DUP5 ADD SLOAD AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP8 DUP6 PUSH2 0x808 DUP2 PUSH2 0x16F3 JUMP JUMPDEST SWAP7 POP DUP2 MLOAD DUP2 LT PUSH2 0x81A JUMPI PUSH2 0x81A PUSH2 0x171F JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP JUMPDEST POP POP PUSH1 0x1 ADD PUSH2 0x75B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x2 DUP4 MSTORE DUP2 DUP5 KECCAK256 DUP10 DUP8 AND DUP1 DUP7 MSTORE SWAP1 DUP5 MSTORE DUP3 DUP6 KECCAK256 SLOAD DUP4 MLOAD DUP1 DUP7 ADD SWAP3 SWAP1 SWAP3 MSTORE DUP2 DUP5 ADD DUP8 SWAP1 MSTORE SWAP7 DUP9 AND PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0xA0 DUP1 DUP3 ADD SWAP8 SWAP1 SWAP8 MSTORE DUP3 MLOAD DUP1 DUP3 SUB SWAP1 SWAP8 ADD DUP8 MSTORE PUSH1 0xC0 ADD DUP3 MSTORE DUP6 MLOAD SWAP6 DUP4 ADD SWAP6 SWAP1 SWAP6 KECCAK256 SWAP4 DUP4 MSTORE DUP3 DUP3 MSTORE DUP1 DUP4 KECCAK256 SWAP5 DUP4 MSTORE SWAP4 SWAP1 MSTORE SWAP2 DUP3 KECCAK256 PUSH2 0x8BB SWAP1 DUP3 PUSH2 0x11BA JUMP JUMPDEST PUSH2 0x8CE JUMPI PUSH2 0x8C9 DUP6 DUP6 PUSH2 0x8DA JUMP JUMPDEST PUSH2 0x8D1 JUMP JUMPDEST PUSH1 0x1 JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x2 DUP4 MSTORE DUP2 DUP5 KECCAK256 SWAP6 DUP9 AND DUP1 DUP6 MSTORE SWAP6 DUP4 MSTORE DUP2 DUP5 KECCAK256 SLOAD DUP3 MLOAD DUP1 DUP6 ADD SWAP8 SWAP1 SWAP8 MSTORE DUP7 DUP4 ADD DUP7 SWAP1 MSTORE PUSH1 0x60 DUP8 ADD DUP3 SWAP1 MSTORE PUSH1 0x80 DUP1 DUP9 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP3 MLOAD DUP1 DUP9 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xA0 SWAP1 SWAP7 ADD DUP3 MSTORE DUP6 MLOAD SWAP6 DUP4 ADD SWAP6 SWAP1 SWAP6 KECCAK256 SWAP4 DUP4 MSTORE DUP3 DUP3 MSTORE DUP1 DUP4 KECCAK256 SWAP5 DUP4 MSTORE SWAP4 SWAP1 MSTORE SWAP2 DUP3 KECCAK256 PUSH2 0x2B4 SWAP1 DUP3 PUSH2 0x11BA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x2 DUP4 MSTORE DUP2 DUP5 KECCAK256 SWAP5 DUP10 AND DUP5 MSTORE SWAP4 DUP3 MSTORE DUP1 DUP4 KECCAK256 SLOAD SWAP1 MLOAD SWAP3 SWAP4 DUP5 SWAP4 PUSH2 0x9A9 SWAP4 DUP11 SWAP4 DUP11 SWAP4 DUP11 SWAP4 DUP11 SWAP4 SWAP2 SWAP3 SWAP2 ADD PUSH2 0x1733 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE DUP2 MLOAD PUSH1 0x20 SWAP3 DUP4 ADD KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH0 SWAP1 DUP2 MSTORE DUP1 DUP5 MSTORE DUP3 DUP2 KECCAK256 PUSH1 0x1 DUP6 MSTORE DUP4 DUP3 KECCAK256 SLOAD DUP3 MSTORE SWAP1 SWAP4 MSTORE SWAP2 KECCAK256 SWAP1 SWAP2 POP PUSH2 0x9F1 SWAP1 DUP3 PUSH2 0x11BA JUMP JUMPDEST PUSH2 0xA05 JUMPI PUSH2 0xA00 DUP7 DUP7 DUP7 PUSH2 0x830 JUMP JUMPDEST PUSH2 0xA08 JUMP JUMPDEST PUSH1 0x1 JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xA21 DUP4 PUSH1 0x2 DUP5 PUSH0 PUSH2 0xB8C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 DUP4 MSTORE DUP2 DUP5 KECCAK256 SLOAD DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 PUSH1 0x60 SWAP2 PUSH2 0xA5B DUP3 PUSH2 0x10CB JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xA77 JUMPI PUSH2 0xA77 PUSH2 0x170B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xABB JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0xA95 JUMPI SWAP1 POP JUMPDEST POP SWAP4 POP PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x5BA JUMPI PUSH0 PUSH2 0xAD3 DUP6 DUP4 PUSH2 0x10D4 JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 SWAP2 POP PUSH1 0x2 DUP2 SLOAD PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xAFB JUMPI PUSH2 0xAFB PUSH2 0x146B JUMP JUMPDEST SUB PUSH2 0xB78 JUMPI PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x2 DUP3 ADD SLOAD PUSH2 0xB22 SWAP2 DUP11 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 AND PUSH2 0xE7E JUMP JUMPDEST DUP3 SUB PUSH2 0xB78 JUMPI PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x1 DUP4 ADD SLOAD AND PUSH1 0x20 DUP3 ADD MSTORE DUP8 DUP6 PUSH2 0xB5A DUP2 PUSH2 0x16F3 JUMP JUMPDEST SWAP7 POP DUP2 MLOAD DUP2 LT PUSH2 0xB6C JUMPI PUSH2 0xB6C PUSH2 0x171F JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP JUMPDEST POP POP PUSH1 0x1 ADD PUSH2 0xAC0 JUMP JUMPDEST PUSH2 0x2D5 DUP2 CALLER PUSH2 0xE01 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 DUP4 MSTORE DUP2 DUP5 KECCAK256 SLOAD DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 PUSH1 0x60 SWAP2 PUSH2 0xBBF DUP3 PUSH2 0x10CB JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xBDB JUMPI PUSH2 0xBDB PUSH2 0x170B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xC04 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP4 POP PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xDE3 JUMPI PUSH0 PUSH2 0xC1C DUP6 DUP4 PUSH2 0x10D4 JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 SWAP2 POP DUP10 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xC3E JUMPI PUSH2 0xC3E PUSH2 0x146B JUMP JUMPDEST DUP2 SLOAD PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xC54 JUMPI PUSH2 0xC54 PUSH2 0x146B JUMP JUMPDEST SUB PUSH2 0xDD9 JUMPI PUSH1 0x1 DUP11 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xC6D JUMPI PUSH2 0xC6D PUSH2 0x146B JUMP JUMPDEST SUB PUSH2 0xCE2 JUMPI PUSH1 0x1 DUP2 ADD SLOAD PUSH2 0xC8B SWAP1 DUP13 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x10DF JUMP JUMPDEST DUP3 SUB PUSH2 0xCDD JUMPI PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 DUP6 PUSH2 0xCAA DUP2 PUSH2 0x16F3 JUMP JUMPDEST SWAP7 POP DUP2 MLOAD DUP2 LT PUSH2 0xCBC JUMPI PUSH2 0xCBC PUSH2 0x171F JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP JUMPDEST PUSH2 0xDD9 JUMP JUMPDEST PUSH1 0x2 DUP11 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xCF6 JUMPI PUSH2 0xCF6 PUSH2 0x146B JUMP JUMPDEST SUB PUSH2 0xD2C JUMPI PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP12 AND SWAP2 AND SUB PUSH2 0xCDD JUMPI PUSH1 0x1 DUP2 ADD SLOAD PUSH2 0xC8B SWAP1 DUP13 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP12 PUSH2 0xE7E JUMP JUMPDEST PUSH1 0x3 DUP11 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xD40 JUMPI PUSH2 0xD40 PUSH2 0x146B JUMP JUMPDEST SUB PUSH2 0xDD9 JUMPI PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 DUP2 AND SWAP2 AND EQ DUP1 ISZERO PUSH2 0xD67 JUMPI POP DUP8 DUP2 PUSH1 0x3 ADD SLOAD EQ JUMPDEST ISZERO PUSH2 0xDD9 JUMPI PUSH1 0x1 DUP2 ADD SLOAD PUSH2 0xD87 SWAP1 DUP13 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP12 DUP12 PUSH2 0x114C JUMP JUMPDEST DUP3 SUB PUSH2 0xDD9 JUMPI PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 DUP6 PUSH2 0xDA6 DUP2 PUSH2 0x16F3 JUMP JUMPDEST SWAP7 POP DUP2 MLOAD DUP2 LT PUSH2 0xDB8 JUMPI PUSH2 0xDB8 PUSH2 0x171F JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP JUMPDEST POP POP PUSH1 0x1 ADD PUSH2 0xC09 JUMP JUMPDEST POP DUP1 DUP3 GT ISZERO PUSH2 0xDF6 JUMPI DUP4 MLOAD DUP2 DUP4 SUB SWAP1 SUB DUP5 MSTORE JUMPDEST POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0xE35 SWAP1 PUSH2 0x16F3 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP2 MSTORE CALLER PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x3E34A3EE53064FB79C0EE57448F03774A627A9270B0C41286EFB7D8E32DCDE93 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x2 DUP4 MSTORE DUP2 DUP5 KECCAK256 SWAP7 DUP9 AND DUP1 DUP6 MSTORE SWAP7 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 SLOAD DUP2 MLOAD DUP1 DUP5 ADD SWAP8 SWAP1 SWAP8 MSTORE DUP7 DUP3 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP4 SWAP1 SWAP6 AND PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0xA0 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP2 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xC0 SWAP1 SWAP3 ADD SWAP1 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 SWAP1 JUMP JUMPDEST DUP5 ISZERO PUSH2 0x102E JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 DUP4 MSTORE DUP2 DUP5 KECCAK256 SLOAD DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH2 0xF26 SWAP1 DUP8 PUSH2 0x11D1 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0xF48 SWAP1 DUP8 PUSH2 0x11D1 JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 DUP6 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xF66 JUMPI PUSH2 0xF66 PUSH2 0x146B JUMP JUMPDEST DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x20 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP11 DUP3 AND PUSH1 0x40 DUP1 DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP2 DUP7 AND PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 SWAP1 SWAP3 ADD DUP5 SWAP1 MSTORE PUSH0 DUP10 DUP2 MSTORE PUSH1 0x4 SWAP1 SWAP3 MSTORE SWAP1 KECCAK256 DUP2 MLOAD DUP2 SLOAD DUP3 SWAP1 PUSH1 0xFF NOT AND PUSH1 0x1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xFC1 JUMPI PUSH2 0xFC1 PUSH2 0x146B JUMP JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH2 0x100 MUL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT SWAP1 SWAP2 AND OR DUP3 SSTORE PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x1 DUP4 ADD DUP1 SLOAD SWAP2 DUP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP3 DUP4 AND OR SWAP1 SSTORE PUSH1 0x60 DUP5 ADD MLOAD PUSH1 0x2 DUP5 ADD DUP1 SLOAD SWAP2 SWAP1 SWAP4 AND SWAP2 AND OR SWAP1 SSTORE PUSH1 0x80 SWAP1 SWAP2 ADD MLOAD PUSH1 0x3 SWAP1 SWAP2 ADD SSTORE PUSH2 0x10C2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 DUP4 MSTORE DUP2 DUP5 KECCAK256 SLOAD DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH2 0x105F SWAP1 DUP8 PUSH2 0x11DC JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x1081 SWAP1 DUP8 PUSH2 0x11DC JUMP JUMPDEST POP PUSH0 DUP7 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT AND DUP2 SSTORE PUSH1 0x1 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND SWAP1 SWAP2 SSTORE PUSH1 0x2 DUP3 ADD DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SSTORE PUSH1 0x3 ADD SSTORE JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x29F DUP3 SLOAD SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0xA21 DUP4 DUP4 PUSH2 0x11E7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x2 DUP4 MSTORE DUP2 DUP5 KECCAK256 SWAP6 SWAP1 SWAP7 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 SLOAD DUP3 MLOAD DUP1 DUP4 ADD SWAP6 SWAP1 SWAP6 MSTORE DUP5 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x60 DUP5 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x80 DUP1 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE DUP1 MLOAD DUP1 DUP5 SUB SWAP1 SWAP3 ADD DUP3 MSTORE PUSH1 0xA0 SWAP1 SWAP3 ADD SWAP1 SWAP2 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x2 DUP4 MSTORE DUP2 DUP5 KECCAK256 SWAP5 DUP9 AND DUP5 MSTORE SWAP4 DUP3 MSTORE DUP1 DUP4 KECCAK256 SLOAD SWAP1 MLOAD SWAP3 SWAP4 SWAP3 SWAP1 SWAP2 PUSH2 0x1198 SWAP2 DUP9 SWAP2 DUP11 SWAP2 DUP10 SWAP2 DUP10 SWAP2 DUP9 SWAP2 DUP9 SWAP2 ADD PUSH2 0x1733 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD ISZERO ISZERO PUSH2 0xA21 JUMP JUMPDEST PUSH0 PUSH2 0xA21 DUP4 DUP4 PUSH2 0x120D JUMP JUMPDEST PUSH0 PUSH2 0xA21 DUP4 DUP4 PUSH2 0x1259 JUMP JUMPDEST PUSH0 DUP3 PUSH0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x11FC JUMPI PUSH2 0x11FC PUSH2 0x171F JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x1252 JUMPI POP DUP2 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP5 SSTORE PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 SWAP1 SWAP4 ADD DUP5 SWAP1 SSTORE DUP5 SLOAD DUP5 DUP3 MSTORE DUP3 DUP7 ADD SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0x29F JUMP JUMPDEST POP PUSH0 PUSH2 0x29F JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0x1333 JUMPI PUSH0 PUSH2 0x127B PUSH1 0x1 DUP4 PUSH2 0x176C JUMP JUMPDEST DUP6 SLOAD SWAP1 SWAP2 POP PUSH0 SWAP1 PUSH2 0x128E SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x176C JUMP JUMPDEST SWAP1 POP DUP2 DUP2 EQ PUSH2 0x12ED JUMPI PUSH0 DUP7 PUSH0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x12AC JUMPI PUSH2 0x12AC PUSH2 0x171F JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 DUP8 PUSH0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x12CC JUMPI PUSH2 0x12CC PUSH2 0x171F JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SWAP3 SWAP1 SWAP3 SSTORE SWAP2 DUP3 MSTORE PUSH1 0x1 DUP9 ADD SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP4 SWAP1 SSTORE JUMPDEST DUP6 SLOAD DUP7 SWAP1 DUP1 PUSH2 0x12FE JUMPI PUSH2 0x12FE PUSH2 0x177F JUMP JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SSTORE SWAP1 SSTORE DUP6 PUSH1 0x1 ADD PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SSTORE PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0x29F JUMP JUMPDEST PUSH0 SWAP2 POP POP PUSH2 0x29F JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x134C JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xA21 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1379 JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1390 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x1399 DUP5 PUSH2 0x1363 JUMP JUMPDEST SWAP3 POP PUSH2 0x13A7 PUSH1 0x20 DUP6 ADD PUSH2 0x1363 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH0 SWAP2 DUP5 ADD SWAP1 PUSH1 0x40 DUP5 ADD SWAP1 DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x13F8 JUMPI DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x13D1 JUMP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1413 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xA21 DUP3 PUSH2 0x1363 JUMP JUMPDEST DUP1 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1379 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x143D JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x1446 DUP5 PUSH2 0x1363 JUMP JUMPDEST SWAP3 POP PUSH2 0x1454 PUSH1 0x20 DUP6 ADD PUSH2 0x1363 JUMP JUMPDEST SWAP2 POP PUSH2 0x1462 PUSH1 0x40 DUP6 ADD PUSH2 0x141C JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH0 SWAP2 DUP5 ADD SWAP1 PUSH1 0x40 DUP5 ADD SWAP1 DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x13F8 JUMPI DUP4 MLOAD DUP1 MLOAD PUSH1 0x4 DUP2 LT PUSH2 0x14C0 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP2 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 DUP8 ADD MSTORE PUSH1 0x40 DUP1 DUP5 ADD MLOAD DUP3 AND SWAP1 DUP8 ADD MSTORE PUSH1 0x60 DUP1 DUP5 ADD MLOAD SWAP1 SWAP2 AND SWAP1 DUP7 ADD MSTORE PUSH1 0x80 SWAP2 DUP3 ADD MLOAD SWAP2 DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP1 SWAP4 ADD SWAP3 PUSH1 0xA0 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x1498 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1523 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x152C DUP6 PUSH2 0x1363 JUMP JUMPDEST SWAP4 POP PUSH2 0x153A PUSH1 0x20 DUP7 ADD PUSH2 0x1363 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH2 0x154F PUSH1 0x60 DUP7 ADD PUSH2 0x141C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x156B JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x1574 DUP4 PUSH2 0x1363 JUMP JUMPDEST SWAP2 POP PUSH2 0x1582 PUSH1 0x20 DUP5 ADD PUSH2 0x141C JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH0 SWAP2 DUP5 ADD SWAP1 PUSH1 0x40 DUP5 ADD SWAP1 DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x13F8 JUMPI DUP4 MLOAD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP6 MSTORE PUSH1 0x20 DUP1 DUP4 ADD MLOAD DUP2 DUP8 ADD MSTORE PUSH1 0x40 SWAP3 DUP4 ADD MLOAD SWAP1 SWAP2 AND SWAP2 DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 SWAP4 ADD SWAP3 PUSH1 0x60 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x15A4 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x15FB JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x1604 DUP5 PUSH2 0x1363 JUMP JUMPDEST SWAP3 POP PUSH2 0x1612 PUSH1 0x20 DUP6 ADD PUSH2 0x1363 JUMP JUMPDEST SWAP2 POP PUSH2 0x1462 PUSH1 0x40 DUP6 ADD PUSH2 0x1363 JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1631 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x163A DUP4 PUSH2 0x1363 JUMP JUMPDEST SWAP2 POP PUSH2 0x1582 PUSH1 0x20 DUP5 ADD PUSH2 0x1363 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x165B JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x1664 DUP6 PUSH2 0x1363 JUMP JUMPDEST SWAP4 POP PUSH2 0x1672 PUSH1 0x20 DUP7 ADD PUSH2 0x1363 JUMP JUMPDEST SWAP3 POP PUSH2 0x1680 PUSH1 0x40 DUP7 ADD PUSH2 0x1363 JUMP JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP3 SWAP4 PUSH1 0x60 ADD CALLDATALOAD SWAP3 POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH0 SWAP2 DUP5 ADD SWAP1 PUSH1 0x40 DUP5 ADD SWAP1 DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x13F8 JUMPI DUP4 MLOAD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP6 MSTORE PUSH1 0x20 SWAP2 DUP3 ADD MLOAD AND DUP2 DUP6 ADD MSTORE SWAP1 SWAP4 ADD SWAP3 PUSH1 0x40 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x16A9 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x1 DUP3 ADD PUSH2 0x1704 JUMPI PUSH2 0x1704 PUSH2 0x16DF JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP7 DUP8 AND DUP2 MSTORE SWAP5 DUP7 AND PUSH1 0x20 DUP7 ADD MSTORE SWAP3 SWAP1 SWAP5 AND PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0xA0 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xC0 ADD SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x29F JUMPI PUSH2 0x29F PUSH2 0x16DF JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP15 0x4B GAS 0xCE SELFBALANCE 0xD EXTCODESIZE EXTCODEHASH DUP2 0xCC 0xAA RETURNDATASIZE SWAP11 SWAP6 SWAP8 SWAP6 PUSH13 0xB043225EE95EBF65D5C3122DFD NUMBER SHR PUSH5 0x736F6C6343 STOP ADDMOD SHL STOP CALLER ",
							"sourceMap": "2357:20314:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_add_1564": {
									"entryPoint": 4621,
									"id": 1564,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_at_1698": {
									"entryPoint": 4583,
									"id": 1698,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_computeAllDelegationHash_322": {
									"entryPoint": 4319,
									"id": 322,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_computeContractDelegationHash_360": {
									"entryPoint": 3710,
									"id": 360,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_computeTokenDelegationHash_401": {
									"entryPoint": 4428,
									"id": 401,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@_contains_1667": {
									"entryPoint": null,
									"id": 1667,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_getDelegatesForLevel_882": {
									"entryPoint": 2956,
									"id": 882,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@_length_1681": {
									"entryPoint": null,
									"id": 1681,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_remove_1648": {
									"entryPoint": 4697,
									"id": 1648,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_revokeDelegate_472": {
									"entryPoint": 3585,
									"id": 472,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_setDelegationValues_287": {
									"entryPoint": 3823,
									"id": 287,
									"parameterSlots": 7,
									"returnSlots": 0
								},
								"@add_1734": {
									"entryPoint": 4561,
									"id": 1734,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@at_1803": {
									"entryPoint": 4308,
									"id": 1803,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@checkDelegateForAll_1143": {
									"entryPoint": 2266,
									"id": 1143,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@checkDelegateForContract_1193": {
									"entryPoint": 2096,
									"id": 1193,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@checkDelegateForToken_1247": {
									"entryPoint": 2399,
									"id": 1247,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@contains_1770": {
									"entryPoint": 4538,
									"id": 1770,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@delegateForAll_118": {
									"entryPoint": 1619,
									"id": 118,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@delegateForContract_162": {
									"entryPoint": 813,
									"id": 162,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@delegateForToken_210": {
									"entryPoint": 1493,
									"id": 210,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@getContractLevelDelegations_990": {
									"entryPoint": 2600,
									"id": 990,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getDelegatesForAll_658": {
									"entryPoint": 700,
									"id": 658,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getDelegatesForContract_680": {
									"entryPoint": 2578,
									"id": 680,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getDelegatesForToken_704": {
									"entryPoint": 677,
									"id": 704,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@getDelegationsByDelegate_636": {
									"entryPoint": 930,
									"id": 636,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getTokenLevelDelegations_1102": {
									"entryPoint": 1726,
									"id": 1102,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@length_1785": {
									"entryPoint": 4299,
									"id": 1785,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@remove_1752": {
									"entryPoint": 4572,
									"id": 1752,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@revokeAllDelegates_420": {
									"entryPoint": 728,
									"id": 420,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@revokeDelegate_434": {
									"entryPoint": 2946,
									"id": 434,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@revokeSelf_448": {
									"entryPoint": 715,
									"id": 448,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@supportsInterface_1498": {
									"entryPoint": null,
									"id": 1498,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_75": {
									"entryPoint": 623,
									"id": 75,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 4963,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_bool": {
									"entryPoint": 5148,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 5123,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 5664,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_address": {
									"entryPoint": 5609,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_addresst_uint256": {
									"entryPoint": 5704,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_addresst_bool": {
									"entryPoint": 5163,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 4990,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bool": {
									"entryPoint": 5392,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 5466,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 4924,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_address_t_bool__to_t_address_t_address_t_address_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_address_t_uint256_t_bool__to_t_address_t_address_t_address_t_uint256_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_address_t_uint256_t_uint256__to_t_address_t_address_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 5939,
									"id": null,
									"parameterSlots": 7,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_bool__to_t_address_t_address_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256__to_t_address_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 5048,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_struct$_ContractDelegation_$1276_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_ContractDelegation_$1276_memory_ptr_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 5776,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_struct$_DelegationInfo_$1270_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_DelegationInfo_$1270_memory_ptr_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 5247,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_struct$_TokenDelegation_$1284_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_TokenDelegation_$1284_memory_ptr_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 5515,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 5996,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 5875,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 5855,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x21": {
									"entryPoint": 5227,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x31": {
									"entryPoint": 6015,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 5919,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 5899,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:11540:5",
										"nodeType": "YulBlock",
										"src": "0:11540:5",
										"statements": [
											{
												"nativeSrc": "6:3:5",
												"nodeType": "YulBlock",
												"src": "6:3:5",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "83:217:5",
													"nodeType": "YulBlock",
													"src": "83:217:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "129:16:5",
																"nodeType": "YulBlock",
																"src": "129:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "138:1:5",
																					"nodeType": "YulLiteral",
																					"src": "138:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "141:1:5",
																					"nodeType": "YulLiteral",
																					"src": "141:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "131:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "131:6:5"
																			},
																			"nativeSrc": "131:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "131:12:5"
																		},
																		"nativeSrc": "131:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "131:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "104:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "104:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "113:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "113:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "100:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "100:3:5"
																		},
																		"nativeSrc": "100:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "100:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "125:2:5",
																		"nodeType": "YulLiteral",
																		"src": "125:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "96:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "96:3:5"
																},
																"nativeSrc": "96:32:5",
																"nodeType": "YulFunctionCall",
																"src": "96:32:5"
															},
															"nativeSrc": "93:52:5",
															"nodeType": "YulIf",
															"src": "93:52:5"
														},
														{
															"nativeSrc": "154:36:5",
															"nodeType": "YulVariableDeclaration",
															"src": "154:36:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "180:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "180:9:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "167:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "167:12:5"
																},
																"nativeSrc": "167:23:5",
																"nodeType": "YulFunctionCall",
																"src": "167:23:5"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "158:5:5",
																	"nodeType": "YulTypedName",
																	"src": "158:5:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "254:16:5",
																"nodeType": "YulBlock",
																"src": "254:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "263:1:5",
																					"nodeType": "YulLiteral",
																					"src": "263:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "266:1:5",
																					"nodeType": "YulLiteral",
																					"src": "266:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "256:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "256:6:5"
																			},
																			"nativeSrc": "256:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "256:12:5"
																		},
																		"nativeSrc": "256:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "256:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "212:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "212:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "223:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "223:5:5"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "234:3:5",
																								"nodeType": "YulLiteral",
																								"src": "234:3:5",
																								"type": "",
																								"value": "224"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "239:10:5",
																								"nodeType": "YulLiteral",
																								"src": "239:10:5",
																								"type": "",
																								"value": "0xffffffff"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "230:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "230:3:5"
																						},
																						"nativeSrc": "230:20:5",
																						"nodeType": "YulFunctionCall",
																						"src": "230:20:5"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "219:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "219:3:5"
																				},
																				"nativeSrc": "219:32:5",
																				"nodeType": "YulFunctionCall",
																				"src": "219:32:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "209:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "209:2:5"
																		},
																		"nativeSrc": "209:43:5",
																		"nodeType": "YulFunctionCall",
																		"src": "209:43:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "202:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "202:6:5"
																},
																"nativeSrc": "202:51:5",
																"nodeType": "YulFunctionCall",
																"src": "202:51:5"
															},
															"nativeSrc": "199:71:5",
															"nodeType": "YulIf",
															"src": "199:71:5"
														},
														{
															"nativeSrc": "279:15:5",
															"nodeType": "YulAssignment",
															"src": "279:15:5",
															"value": {
																"name": "value",
																"nativeSrc": "289:5:5",
																"nodeType": "YulIdentifier",
																"src": "289:5:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "279:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "279:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "14:286:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "49:9:5",
														"nodeType": "YulTypedName",
														"src": "49:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "60:7:5",
														"nodeType": "YulTypedName",
														"src": "60:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "72:6:5",
														"nodeType": "YulTypedName",
														"src": "72:6:5",
														"type": ""
													}
												],
												"src": "14:286:5"
											},
											{
												"body": {
													"nativeSrc": "400:92:5",
													"nodeType": "YulBlock",
													"src": "400:92:5",
													"statements": [
														{
															"nativeSrc": "410:26:5",
															"nodeType": "YulAssignment",
															"src": "410:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "422:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "422:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "433:2:5",
																		"nodeType": "YulLiteral",
																		"src": "433:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "418:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "418:3:5"
																},
																"nativeSrc": "418:18:5",
																"nodeType": "YulFunctionCall",
																"src": "418:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "410:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "410:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "452:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "452:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "477:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "477:6:5"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "470:6:5",
																					"nodeType": "YulIdentifier",
																					"src": "470:6:5"
																				},
																				"nativeSrc": "470:14:5",
																				"nodeType": "YulFunctionCall",
																				"src": "470:14:5"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "463:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "463:6:5"
																		},
																		"nativeSrc": "463:22:5",
																		"nodeType": "YulFunctionCall",
																		"src": "463:22:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "445:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "445:6:5"
																},
																"nativeSrc": "445:41:5",
																"nodeType": "YulFunctionCall",
																"src": "445:41:5"
															},
															"nativeSrc": "445:41:5",
															"nodeType": "YulExpressionStatement",
															"src": "445:41:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "305:187:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "369:9:5",
														"nodeType": "YulTypedName",
														"src": "369:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "380:6:5",
														"nodeType": "YulTypedName",
														"src": "380:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "391:4:5",
														"nodeType": "YulTypedName",
														"src": "391:4:5",
														"type": ""
													}
												],
												"src": "305:187:5"
											},
											{
												"body": {
													"nativeSrc": "546:124:5",
													"nodeType": "YulBlock",
													"src": "546:124:5",
													"statements": [
														{
															"nativeSrc": "556:29:5",
															"nodeType": "YulAssignment",
															"src": "556:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "578:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "578:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "565:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "565:12:5"
																},
																"nativeSrc": "565:20:5",
																"nodeType": "YulFunctionCall",
																"src": "565:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "556:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "556:5:5"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "648:16:5",
																"nodeType": "YulBlock",
																"src": "648:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "657:1:5",
																					"nodeType": "YulLiteral",
																					"src": "657:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "660:1:5",
																					"nodeType": "YulLiteral",
																					"src": "660:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "650:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "650:6:5"
																			},
																			"nativeSrc": "650:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "650:12:5"
																		},
																		"nativeSrc": "650:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "650:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "607:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "607:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "618:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "618:5:5"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "633:3:5",
																										"nodeType": "YulLiteral",
																										"src": "633:3:5",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "638:1:5",
																										"nodeType": "YulLiteral",
																										"src": "638:1:5",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "629:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "629:3:5"
																								},
																								"nativeSrc": "629:11:5",
																								"nodeType": "YulFunctionCall",
																								"src": "629:11:5"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "642:1:5",
																								"nodeType": "YulLiteral",
																								"src": "642:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "625:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "625:3:5"
																						},
																						"nativeSrc": "625:19:5",
																						"nodeType": "YulFunctionCall",
																						"src": "625:19:5"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "614:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "614:3:5"
																				},
																				"nativeSrc": "614:31:5",
																				"nodeType": "YulFunctionCall",
																				"src": "614:31:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "604:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "604:2:5"
																		},
																		"nativeSrc": "604:42:5",
																		"nodeType": "YulFunctionCall",
																		"src": "604:42:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "597:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "597:6:5"
																},
																"nativeSrc": "597:50:5",
																"nodeType": "YulFunctionCall",
																"src": "597:50:5"
															},
															"nativeSrc": "594:70:5",
															"nodeType": "YulIf",
															"src": "594:70:5"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "497:173:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "525:6:5",
														"nodeType": "YulTypedName",
														"src": "525:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "536:5:5",
														"nodeType": "YulTypedName",
														"src": "536:5:5",
														"type": ""
													}
												],
												"src": "497:173:5"
											},
											{
												"body": {
													"nativeSrc": "779:270:5",
													"nodeType": "YulBlock",
													"src": "779:270:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "825:16:5",
																"nodeType": "YulBlock",
																"src": "825:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "834:1:5",
																					"nodeType": "YulLiteral",
																					"src": "834:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "837:1:5",
																					"nodeType": "YulLiteral",
																					"src": "837:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "827:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "827:6:5"
																			},
																			"nativeSrc": "827:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "827:12:5"
																		},
																		"nativeSrc": "827:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "827:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "800:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "800:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "809:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "809:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "796:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "796:3:5"
																		},
																		"nativeSrc": "796:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "796:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "821:2:5",
																		"nodeType": "YulLiteral",
																		"src": "821:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "792:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "792:3:5"
																},
																"nativeSrc": "792:32:5",
																"nodeType": "YulFunctionCall",
																"src": "792:32:5"
															},
															"nativeSrc": "789:52:5",
															"nodeType": "YulIf",
															"src": "789:52:5"
														},
														{
															"nativeSrc": "850:39:5",
															"nodeType": "YulAssignment",
															"src": "850:39:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "879:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "879:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "860:18:5",
																	"nodeType": "YulIdentifier",
																	"src": "860:18:5"
																},
																"nativeSrc": "860:29:5",
																"nodeType": "YulFunctionCall",
																"src": "860:29:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "850:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "850:6:5"
																}
															]
														},
														{
															"nativeSrc": "898:48:5",
															"nodeType": "YulAssignment",
															"src": "898:48:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "931:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "931:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "942:2:5",
																				"nodeType": "YulLiteral",
																				"src": "942:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "927:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "927:3:5"
																		},
																		"nativeSrc": "927:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "927:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "908:18:5",
																	"nodeType": "YulIdentifier",
																	"src": "908:18:5"
																},
																"nativeSrc": "908:38:5",
																"nodeType": "YulFunctionCall",
																"src": "908:38:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "898:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "898:6:5"
																}
															]
														},
														{
															"nativeSrc": "955:14:5",
															"nodeType": "YulVariableDeclaration",
															"src": "955:14:5",
															"value": {
																"kind": "number",
																"nativeSrc": "968:1:5",
																"nodeType": "YulLiteral",
																"src": "968:1:5",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "959:5:5",
																	"nodeType": "YulTypedName",
																	"src": "959:5:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "978:41:5",
															"nodeType": "YulAssignment",
															"src": "978:41:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1004:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1004:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1015:2:5",
																				"nodeType": "YulLiteral",
																				"src": "1015:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1000:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1000:3:5"
																		},
																		"nativeSrc": "1000:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1000:18:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "987:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "987:12:5"
																},
																"nativeSrc": "987:32:5",
																"nodeType": "YulFunctionCall",
																"src": "987:32:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "978:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "978:5:5"
																}
															]
														},
														{
															"nativeSrc": "1028:15:5",
															"nodeType": "YulAssignment",
															"src": "1028:15:5",
															"value": {
																"name": "value",
																"nativeSrc": "1038:5:5",
																"nodeType": "YulIdentifier",
																"src": "1038:5:5"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "1028:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1028:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "675:374:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "729:9:5",
														"nodeType": "YulTypedName",
														"src": "729:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "740:7:5",
														"nodeType": "YulTypedName",
														"src": "740:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "752:6:5",
														"nodeType": "YulTypedName",
														"src": "752:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "760:6:5",
														"nodeType": "YulTypedName",
														"src": "760:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "768:6:5",
														"nodeType": "YulTypedName",
														"src": "768:6:5",
														"type": ""
													}
												],
												"src": "675:374:5"
											},
											{
												"body": {
													"nativeSrc": "1205:486:5",
													"nodeType": "YulBlock",
													"src": "1205:486:5",
													"statements": [
														{
															"nativeSrc": "1215:32:5",
															"nodeType": "YulVariableDeclaration",
															"src": "1215:32:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1233:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "1233:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1244:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1244:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1229:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1229:3:5"
																},
																"nativeSrc": "1229:18:5",
																"nodeType": "YulFunctionCall",
																"src": "1229:18:5"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nativeSrc": "1219:6:5",
																	"nodeType": "YulTypedName",
																	"src": "1219:6:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1263:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "1263:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1274:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1274:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1256:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:5"
																},
																"nativeSrc": "1256:21:5",
																"nodeType": "YulFunctionCall",
																"src": "1256:21:5"
															},
															"nativeSrc": "1256:21:5",
															"nodeType": "YulExpressionStatement",
															"src": "1256:21:5"
														},
														{
															"nativeSrc": "1286:17:5",
															"nodeType": "YulVariableDeclaration",
															"src": "1286:17:5",
															"value": {
																"name": "tail_1",
																"nativeSrc": "1297:6:5",
																"nodeType": "YulIdentifier",
																"src": "1297:6:5"
															},
															"variables": [
																{
																	"name": "pos",
																	"nativeSrc": "1290:3:5",
																	"nodeType": "YulTypedName",
																	"src": "1290:3:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1312:27:5",
															"nodeType": "YulVariableDeclaration",
															"src": "1312:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1332:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "1332:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1326:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "1326:5:5"
																},
																"nativeSrc": "1326:13:5",
																"nodeType": "YulFunctionCall",
																"src": "1326:13:5"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "1316:6:5",
																	"nodeType": "YulTypedName",
																	"src": "1316:6:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "tail_1",
																		"nativeSrc": "1355:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "1355:6:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1363:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "1363:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1348:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1348:6:5"
																},
																"nativeSrc": "1348:22:5",
																"nodeType": "YulFunctionCall",
																"src": "1348:22:5"
															},
															"nativeSrc": "1348:22:5",
															"nodeType": "YulExpressionStatement",
															"src": "1348:22:5"
														},
														{
															"nativeSrc": "1379:25:5",
															"nodeType": "YulAssignment",
															"src": "1379:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1390:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "1390:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1401:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1401:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1386:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1386:3:5"
																},
																"nativeSrc": "1386:18:5",
																"nodeType": "YulFunctionCall",
																"src": "1386:18:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "1379:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1379:3:5"
																}
															]
														},
														{
															"nativeSrc": "1413:29:5",
															"nodeType": "YulVariableDeclaration",
															"src": "1413:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1431:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "1431:6:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1439:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1439:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1427:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1427:3:5"
																},
																"nativeSrc": "1427:15:5",
																"nodeType": "YulFunctionCall",
																"src": "1427:15:5"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nativeSrc": "1417:6:5",
																	"nodeType": "YulTypedName",
																	"src": "1417:6:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1451:10:5",
															"nodeType": "YulVariableDeclaration",
															"src": "1451:10:5",
															"value": {
																"kind": "number",
																"nativeSrc": "1460:1:5",
																"nodeType": "YulLiteral",
																"src": "1460:1:5",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "1455:1:5",
																	"nodeType": "YulTypedName",
																	"src": "1455:1:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1519:146:5",
																"nodeType": "YulBlock",
																"src": "1519:146:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nativeSrc": "1540:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "1540:3:5"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "srcPtr",
																									"nativeSrc": "1555:6:5",
																									"nodeType": "YulIdentifier",
																									"src": "1555:6:5"
																								}
																							],
																							"functionName": {
																								"name": "mload",
																								"nativeSrc": "1549:5:5",
																								"nodeType": "YulIdentifier",
																								"src": "1549:5:5"
																							},
																							"nativeSrc": "1549:13:5",
																							"nodeType": "YulFunctionCall",
																							"src": "1549:13:5"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "1572:3:5",
																											"nodeType": "YulLiteral",
																											"src": "1572:3:5",
																											"type": "",
																											"value": "160"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "1577:1:5",
																											"nodeType": "YulLiteral",
																											"src": "1577:1:5",
																											"type": "",
																											"value": "1"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "1568:3:5",
																										"nodeType": "YulIdentifier",
																										"src": "1568:3:5"
																									},
																									"nativeSrc": "1568:11:5",
																									"nodeType": "YulFunctionCall",
																									"src": "1568:11:5"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "1581:1:5",
																									"nodeType": "YulLiteral",
																									"src": "1581:1:5",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "sub",
																								"nativeSrc": "1564:3:5",
																								"nodeType": "YulIdentifier",
																								"src": "1564:3:5"
																							},
																							"nativeSrc": "1564:19:5",
																							"nodeType": "YulFunctionCall",
																							"src": "1564:19:5"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "1545:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "1545:3:5"
																					},
																					"nativeSrc": "1545:39:5",
																					"nodeType": "YulFunctionCall",
																					"src": "1545:39:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1533:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1533:6:5"
																			},
																			"nativeSrc": "1533:52:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1533:52:5"
																		},
																		"nativeSrc": "1533:52:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1533:52:5"
																	},
																	{
																		"nativeSrc": "1598:19:5",
																		"nodeType": "YulAssignment",
																		"src": "1598:19:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nativeSrc": "1609:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "1609:3:5"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1614:2:5",
																					"nodeType": "YulLiteral",
																					"src": "1614:2:5",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "1605:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "1605:3:5"
																			},
																			"nativeSrc": "1605:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1605:12:5"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nativeSrc": "1598:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "1598:3:5"
																			}
																		]
																	},
																	{
																		"nativeSrc": "1630:25:5",
																		"nodeType": "YulAssignment",
																		"src": "1630:25:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "1644:6:5",
																					"nodeType": "YulIdentifier",
																					"src": "1644:6:5"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1652:2:5",
																					"nodeType": "YulLiteral",
																					"src": "1652:2:5",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "1640:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "1640:3:5"
																			},
																			"nativeSrc": "1640:15:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1640:15:5"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nativeSrc": "1630:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1630:6:5"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "1481:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "1481:1:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1484:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "1484:6:5"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "1478:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "1478:2:5"
																},
																"nativeSrc": "1478:13:5",
																"nodeType": "YulFunctionCall",
																"src": "1478:13:5"
															},
															"nativeSrc": "1470:195:5",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "1492:18:5",
																"nodeType": "YulBlock",
																"src": "1492:18:5",
																"statements": [
																	{
																		"nativeSrc": "1494:14:5",
																		"nodeType": "YulAssignment",
																		"src": "1494:14:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "1503:1:5",
																					"nodeType": "YulIdentifier",
																					"src": "1503:1:5"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1506:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1506:1:5",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "1499:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "1499:3:5"
																			},
																			"nativeSrc": "1499:9:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1499:9:5"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "1494:1:5",
																				"nodeType": "YulIdentifier",
																				"src": "1494:1:5"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "1474:3:5",
																"nodeType": "YulBlock",
																"src": "1474:3:5",
																"statements": []
															},
															"src": "1470:195:5"
														},
														{
															"nativeSrc": "1674:11:5",
															"nodeType": "YulAssignment",
															"src": "1674:11:5",
															"value": {
																"name": "pos",
																"nativeSrc": "1682:3:5",
																"nodeType": "YulIdentifier",
																"src": "1682:3:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1674:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "1674:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed",
												"nativeSrc": "1054:637:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1174:9:5",
														"nodeType": "YulTypedName",
														"src": "1174:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1185:6:5",
														"nodeType": "YulTypedName",
														"src": "1185:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1196:4:5",
														"nodeType": "YulTypedName",
														"src": "1196:4:5",
														"type": ""
													}
												],
												"src": "1054:637:5"
											},
											{
												"body": {
													"nativeSrc": "1766:116:5",
													"nodeType": "YulBlock",
													"src": "1766:116:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "1812:16:5",
																"nodeType": "YulBlock",
																"src": "1812:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1821:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1821:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1824:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1824:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1814:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1814:6:5"
																			},
																			"nativeSrc": "1814:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1814:12:5"
																		},
																		"nativeSrc": "1814:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1814:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1787:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "1787:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1796:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1796:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1783:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1783:3:5"
																		},
																		"nativeSrc": "1783:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1783:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1808:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1808:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1779:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1779:3:5"
																},
																"nativeSrc": "1779:32:5",
																"nodeType": "YulFunctionCall",
																"src": "1779:32:5"
															},
															"nativeSrc": "1776:52:5",
															"nodeType": "YulIf",
															"src": "1776:52:5"
														},
														{
															"nativeSrc": "1837:39:5",
															"nodeType": "YulAssignment",
															"src": "1837:39:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1866:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "1866:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1847:18:5",
																	"nodeType": "YulIdentifier",
																	"src": "1847:18:5"
																},
																"nativeSrc": "1847:29:5",
																"nodeType": "YulFunctionCall",
																"src": "1847:29:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1837:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1837:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "1696:186:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1732:9:5",
														"nodeType": "YulTypedName",
														"src": "1732:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1743:7:5",
														"nodeType": "YulTypedName",
														"src": "1743:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1755:6:5",
														"nodeType": "YulTypedName",
														"src": "1755:6:5",
														"type": ""
													}
												],
												"src": "1696:186:5"
											},
											{
												"body": {
													"nativeSrc": "1933:114:5",
													"nodeType": "YulBlock",
													"src": "1933:114:5",
													"statements": [
														{
															"nativeSrc": "1943:29:5",
															"nodeType": "YulAssignment",
															"src": "1943:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1965:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "1965:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1952:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "1952:12:5"
																},
																"nativeSrc": "1952:20:5",
																"nodeType": "YulFunctionCall",
																"src": "1952:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1943:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "1943:5:5"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2025:16:5",
																"nodeType": "YulBlock",
																"src": "2025:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2034:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2034:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2037:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2037:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2027:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "2027:6:5"
																			},
																			"nativeSrc": "2027:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2027:12:5"
																		},
																		"nativeSrc": "2027:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "2027:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1994:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "1994:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nativeSrc": "2015:5:5",
																								"nodeType": "YulIdentifier",
																								"src": "2015:5:5"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nativeSrc": "2008:6:5",
																							"nodeType": "YulIdentifier",
																							"src": "2008:6:5"
																						},
																						"nativeSrc": "2008:13:5",
																						"nodeType": "YulFunctionCall",
																						"src": "2008:13:5"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "2001:6:5",
																					"nodeType": "YulIdentifier",
																					"src": "2001:6:5"
																				},
																				"nativeSrc": "2001:21:5",
																				"nodeType": "YulFunctionCall",
																				"src": "2001:21:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1991:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "1991:2:5"
																		},
																		"nativeSrc": "1991:32:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1991:32:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1984:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1984:6:5"
																},
																"nativeSrc": "1984:40:5",
																"nodeType": "YulFunctionCall",
																"src": "1984:40:5"
															},
															"nativeSrc": "1981:60:5",
															"nodeType": "YulIf",
															"src": "1981:60:5"
														}
													]
												},
												"name": "abi_decode_bool",
												"nativeSrc": "1887:160:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1912:6:5",
														"nodeType": "YulTypedName",
														"src": "1912:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1923:5:5",
														"nodeType": "YulTypedName",
														"src": "1923:5:5",
														"type": ""
													}
												],
												"src": "1887:160:5"
											},
											{
												"body": {
													"nativeSrc": "2153:227:5",
													"nodeType": "YulBlock",
													"src": "2153:227:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "2199:16:5",
																"nodeType": "YulBlock",
																"src": "2199:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2208:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2208:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2211:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2211:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2201:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "2201:6:5"
																			},
																			"nativeSrc": "2201:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2201:12:5"
																		},
																		"nativeSrc": "2201:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "2201:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2174:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "2174:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2183:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "2183:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2170:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2170:3:5"
																		},
																		"nativeSrc": "2170:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2170:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2195:2:5",
																		"nodeType": "YulLiteral",
																		"src": "2195:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2166:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2166:3:5"
																},
																"nativeSrc": "2166:32:5",
																"nodeType": "YulFunctionCall",
																"src": "2166:32:5"
															},
															"nativeSrc": "2163:52:5",
															"nodeType": "YulIf",
															"src": "2163:52:5"
														},
														{
															"nativeSrc": "2224:39:5",
															"nodeType": "YulAssignment",
															"src": "2224:39:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2253:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "2253:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2234:18:5",
																	"nodeType": "YulIdentifier",
																	"src": "2234:18:5"
																},
																"nativeSrc": "2234:29:5",
																"nodeType": "YulFunctionCall",
																"src": "2234:29:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2224:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2224:6:5"
																}
															]
														},
														{
															"nativeSrc": "2272:48:5",
															"nodeType": "YulAssignment",
															"src": "2272:48:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2305:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "2305:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2316:2:5",
																				"nodeType": "YulLiteral",
																				"src": "2316:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2301:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2301:3:5"
																		},
																		"nativeSrc": "2301:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2301:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2282:18:5",
																	"nodeType": "YulIdentifier",
																	"src": "2282:18:5"
																},
																"nativeSrc": "2282:38:5",
																"nodeType": "YulFunctionCall",
																"src": "2282:38:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2272:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2272:6:5"
																}
															]
														},
														{
															"nativeSrc": "2329:45:5",
															"nodeType": "YulAssignment",
															"src": "2329:45:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2359:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "2359:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2370:2:5",
																				"nodeType": "YulLiteral",
																				"src": "2370:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2355:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2355:3:5"
																		},
																		"nativeSrc": "2355:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2355:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bool",
																	"nativeSrc": "2339:15:5",
																	"nodeType": "YulIdentifier",
																	"src": "2339:15:5"
																},
																"nativeSrc": "2339:35:5",
																"nodeType": "YulFunctionCall",
																"src": "2339:35:5"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "2329:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2329:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_bool",
												"nativeSrc": "2052:328:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2103:9:5",
														"nodeType": "YulTypedName",
														"src": "2103:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2114:7:5",
														"nodeType": "YulTypedName",
														"src": "2114:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2126:6:5",
														"nodeType": "YulTypedName",
														"src": "2126:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2134:6:5",
														"nodeType": "YulTypedName",
														"src": "2134:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "2142:6:5",
														"nodeType": "YulTypedName",
														"src": "2142:6:5",
														"type": ""
													}
												],
												"src": "2052:328:5"
											},
											{
												"body": {
													"nativeSrc": "2417:95:5",
													"nodeType": "YulBlock",
													"src": "2417:95:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2434:1:5",
																		"nodeType": "YulLiteral",
																		"src": "2434:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2441:3:5",
																				"nodeType": "YulLiteral",
																				"src": "2441:3:5",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2446:10:5",
																				"nodeType": "YulLiteral",
																				"src": "2446:10:5",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "2437:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2437:3:5"
																		},
																		"nativeSrc": "2437:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2437:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2427:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2427:6:5"
																},
																"nativeSrc": "2427:31:5",
																"nodeType": "YulFunctionCall",
																"src": "2427:31:5"
															},
															"nativeSrc": "2427:31:5",
															"nodeType": "YulExpressionStatement",
															"src": "2427:31:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2474:1:5",
																		"nodeType": "YulLiteral",
																		"src": "2474:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2477:4:5",
																		"nodeType": "YulLiteral",
																		"src": "2477:4:5",
																		"type": "",
																		"value": "0x21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2467:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2467:6:5"
																},
																"nativeSrc": "2467:15:5",
																"nodeType": "YulFunctionCall",
																"src": "2467:15:5"
															},
															"nativeSrc": "2467:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "2467:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2498:1:5",
																		"nodeType": "YulLiteral",
																		"src": "2498:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2501:4:5",
																		"nodeType": "YulLiteral",
																		"src": "2501:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2491:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2491:6:5"
																},
																"nativeSrc": "2491:15:5",
																"nodeType": "YulFunctionCall",
																"src": "2491:15:5"
															},
															"nativeSrc": "2491:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "2491:15:5"
														}
													]
												},
												"name": "panic_error_0x21",
												"nativeSrc": "2385:127:5",
												"nodeType": "YulFunctionDefinition",
												"src": "2385:127:5"
											},
											{
												"body": {
													"nativeSrc": "2732:990:5",
													"nodeType": "YulBlock",
													"src": "2732:990:5",
													"statements": [
														{
															"nativeSrc": "2742:32:5",
															"nodeType": "YulVariableDeclaration",
															"src": "2742:32:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2760:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "2760:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2771:2:5",
																		"nodeType": "YulLiteral",
																		"src": "2771:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2756:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2756:3:5"
																},
																"nativeSrc": "2756:18:5",
																"nodeType": "YulFunctionCall",
																"src": "2756:18:5"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nativeSrc": "2746:6:5",
																	"nodeType": "YulTypedName",
																	"src": "2746:6:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2790:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "2790:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2801:2:5",
																		"nodeType": "YulLiteral",
																		"src": "2801:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2783:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2783:6:5"
																},
																"nativeSrc": "2783:21:5",
																"nodeType": "YulFunctionCall",
																"src": "2783:21:5"
															},
															"nativeSrc": "2783:21:5",
															"nodeType": "YulExpressionStatement",
															"src": "2783:21:5"
														},
														{
															"nativeSrc": "2813:17:5",
															"nodeType": "YulVariableDeclaration",
															"src": "2813:17:5",
															"value": {
																"name": "tail_1",
																"nativeSrc": "2824:6:5",
																"nodeType": "YulIdentifier",
																"src": "2824:6:5"
															},
															"variables": [
																{
																	"name": "pos",
																	"nativeSrc": "2817:3:5",
																	"nodeType": "YulTypedName",
																	"src": "2817:3:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2839:27:5",
															"nodeType": "YulVariableDeclaration",
															"src": "2839:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2859:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "2859:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2853:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "2853:5:5"
																},
																"nativeSrc": "2853:13:5",
																"nodeType": "YulFunctionCall",
																"src": "2853:13:5"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2843:6:5",
																	"nodeType": "YulTypedName",
																	"src": "2843:6:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "tail_1",
																		"nativeSrc": "2882:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "2882:6:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2890:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "2890:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2875:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2875:6:5"
																},
																"nativeSrc": "2875:22:5",
																"nodeType": "YulFunctionCall",
																"src": "2875:22:5"
															},
															"nativeSrc": "2875:22:5",
															"nodeType": "YulExpressionStatement",
															"src": "2875:22:5"
														},
														{
															"nativeSrc": "2906:25:5",
															"nodeType": "YulAssignment",
															"src": "2906:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2917:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "2917:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2928:2:5",
																		"nodeType": "YulLiteral",
																		"src": "2928:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2913:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2913:3:5"
																},
																"nativeSrc": "2913:18:5",
																"nodeType": "YulFunctionCall",
																"src": "2913:18:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "2906:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2906:3:5"
																}
															]
														},
														{
															"nativeSrc": "2940:29:5",
															"nodeType": "YulVariableDeclaration",
															"src": "2940:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2958:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "2958:6:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2966:2:5",
																		"nodeType": "YulLiteral",
																		"src": "2966:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2954:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2954:3:5"
																},
																"nativeSrc": "2954:15:5",
																"nodeType": "YulFunctionCall",
																"src": "2954:15:5"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nativeSrc": "2944:6:5",
																	"nodeType": "YulTypedName",
																	"src": "2944:6:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2978:10:5",
															"nodeType": "YulVariableDeclaration",
															"src": "2978:10:5",
															"value": {
																"kind": "number",
																"nativeSrc": "2987:1:5",
																"nodeType": "YulLiteral",
																"src": "2987:1:5",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "2982:1:5",
																	"nodeType": "YulTypedName",
																	"src": "2982:1:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3046:650:5",
																"nodeType": "YulBlock",
																"src": "3046:650:5",
																"statements": [
																	{
																		"nativeSrc": "3060:23:5",
																		"nodeType": "YulVariableDeclaration",
																		"src": "3060:23:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "3076:6:5",
																					"nodeType": "YulIdentifier",
																					"src": "3076:6:5"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "3070:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "3070:5:5"
																			},
																			"nativeSrc": "3070:13:5",
																			"nodeType": "YulFunctionCall",
																			"src": "3070:13:5"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nativeSrc": "3064:2:5",
																				"nodeType": "YulTypedName",
																				"src": "3064:2:5",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "3096:19:5",
																		"nodeType": "YulVariableDeclaration",
																		"src": "3096:19:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nativeSrc": "3112:2:5",
																					"nodeType": "YulIdentifier",
																					"src": "3112:2:5"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "3106:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "3106:5:5"
																			},
																			"nativeSrc": "3106:9:5",
																			"nodeType": "YulFunctionCall",
																			"src": "3106:9:5"
																		},
																		"variables": [
																			{
																				"name": "_2",
																				"nativeSrc": "3100:2:5",
																				"nodeType": "YulTypedName",
																				"src": "3100:2:5",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "3161:127:5",
																			"nodeType": "YulBlock",
																			"src": "3161:127:5",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "3186:1:5",
																								"nodeType": "YulLiteral",
																								"src": "3186:1:5",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "3193:3:5",
																										"nodeType": "YulLiteral",
																										"src": "3193:3:5",
																										"type": "",
																										"value": "224"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "3198:10:5",
																										"nodeType": "YulLiteral",
																										"src": "3198:10:5",
																										"type": "",
																										"value": "0x4e487b71"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "3189:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "3189:3:5"
																								},
																								"nativeSrc": "3189:20:5",
																								"nodeType": "YulFunctionCall",
																								"src": "3189:20:5"
																							}
																						],
																						"functionName": {
																							"name": "mstore",
																							"nativeSrc": "3179:6:5",
																							"nodeType": "YulIdentifier",
																							"src": "3179:6:5"
																						},
																						"nativeSrc": "3179:31:5",
																						"nodeType": "YulFunctionCall",
																						"src": "3179:31:5"
																					},
																					"nativeSrc": "3179:31:5",
																					"nodeType": "YulExpressionStatement",
																					"src": "3179:31:5"
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "3234:1:5",
																								"nodeType": "YulLiteral",
																								"src": "3234:1:5",
																								"type": "",
																								"value": "4"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3237:4:5",
																								"nodeType": "YulLiteral",
																								"src": "3237:4:5",
																								"type": "",
																								"value": "0x21"
																							}
																						],
																						"functionName": {
																							"name": "mstore",
																							"nativeSrc": "3227:6:5",
																							"nodeType": "YulIdentifier",
																							"src": "3227:6:5"
																						},
																						"nativeSrc": "3227:15:5",
																						"nodeType": "YulFunctionCall",
																						"src": "3227:15:5"
																					},
																					"nativeSrc": "3227:15:5",
																					"nodeType": "YulExpressionStatement",
																					"src": "3227:15:5"
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "3266:1:5",
																								"nodeType": "YulLiteral",
																								"src": "3266:1:5",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3269:4:5",
																								"nodeType": "YulLiteral",
																								"src": "3269:4:5",
																								"type": "",
																								"value": "0x24"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nativeSrc": "3259:6:5",
																							"nodeType": "YulIdentifier",
																							"src": "3259:6:5"
																						},
																						"nativeSrc": "3259:15:5",
																						"nodeType": "YulFunctionCall",
																						"src": "3259:15:5"
																					},
																					"nativeSrc": "3259:15:5",
																					"nodeType": "YulExpressionStatement",
																					"src": "3259:15:5"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "_2",
																							"nativeSrc": "3141:2:5",
																							"nodeType": "YulIdentifier",
																							"src": "3141:2:5"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "3145:1:5",
																							"nodeType": "YulLiteral",
																							"src": "3145:1:5",
																							"type": "",
																							"value": "4"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "3138:2:5",
																						"nodeType": "YulIdentifier",
																						"src": "3138:2:5"
																					},
																					"nativeSrc": "3138:9:5",
																					"nodeType": "YulFunctionCall",
																					"src": "3138:9:5"
																				}
																			],
																			"functionName": {
																				"name": "iszero",
																				"nativeSrc": "3131:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "3131:6:5"
																			},
																			"nativeSrc": "3131:17:5",
																			"nodeType": "YulFunctionCall",
																			"src": "3131:17:5"
																		},
																		"nativeSrc": "3128:160:5",
																		"nodeType": "YulIf",
																		"src": "3128:160:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nativeSrc": "3308:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "3308:3:5"
																				},
																				{
																					"name": "_2",
																					"nativeSrc": "3313:2:5",
																					"nodeType": "YulIdentifier",
																					"src": "3313:2:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3301:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "3301:6:5"
																			},
																			"nativeSrc": "3301:15:5",
																			"nodeType": "YulFunctionCall",
																			"src": "3301:15:5"
																		},
																		"nativeSrc": "3301:15:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "3301:15:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "pos",
																							"nativeSrc": "3340:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "3340:3:5"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "3345:2:5",
																							"nodeType": "YulLiteral",
																							"src": "3345:2:5",
																							"type": "",
																							"value": "32"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "3336:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "3336:3:5"
																					},
																					"nativeSrc": "3336:12:5",
																					"nodeType": "YulFunctionCall",
																					"src": "3336:12:5"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "_1",
																											"nativeSrc": "3364:2:5",
																											"nodeType": "YulIdentifier",
																											"src": "3364:2:5"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "3368:2:5",
																											"nodeType": "YulLiteral",
																											"src": "3368:2:5",
																											"type": "",
																											"value": "32"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nativeSrc": "3360:3:5",
																										"nodeType": "YulIdentifier",
																										"src": "3360:3:5"
																									},
																									"nativeSrc": "3360:11:5",
																									"nodeType": "YulFunctionCall",
																									"src": "3360:11:5"
																								}
																							],
																							"functionName": {
																								"name": "mload",
																								"nativeSrc": "3354:5:5",
																								"nodeType": "YulIdentifier",
																								"src": "3354:5:5"
																							},
																							"nativeSrc": "3354:18:5",
																							"nodeType": "YulFunctionCall",
																							"src": "3354:18:5"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "3382:3:5",
																											"nodeType": "YulLiteral",
																											"src": "3382:3:5",
																											"type": "",
																											"value": "160"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "3387:1:5",
																											"nodeType": "YulLiteral",
																											"src": "3387:1:5",
																											"type": "",
																											"value": "1"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "3378:3:5",
																										"nodeType": "YulIdentifier",
																										"src": "3378:3:5"
																									},
																									"nativeSrc": "3378:11:5",
																									"nodeType": "YulFunctionCall",
																									"src": "3378:11:5"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "3391:1:5",
																									"nodeType": "YulLiteral",
																									"src": "3391:1:5",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "sub",
																								"nativeSrc": "3374:3:5",
																								"nodeType": "YulIdentifier",
																								"src": "3374:3:5"
																							},
																							"nativeSrc": "3374:19:5",
																							"nodeType": "YulFunctionCall",
																							"src": "3374:19:5"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "3350:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "3350:3:5"
																					},
																					"nativeSrc": "3350:44:5",
																					"nodeType": "YulFunctionCall",
																					"src": "3350:44:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3329:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "3329:6:5"
																			},
																			"nativeSrc": "3329:66:5",
																			"nodeType": "YulFunctionCall",
																			"src": "3329:66:5"
																		},
																		"nativeSrc": "3329:66:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "3329:66:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "pos",
																							"nativeSrc": "3419:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "3419:3:5"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "3424:2:5",
																							"nodeType": "YulLiteral",
																							"src": "3424:2:5",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "3415:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "3415:3:5"
																					},
																					"nativeSrc": "3415:12:5",
																					"nodeType": "YulFunctionCall",
																					"src": "3415:12:5"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "_1",
																											"nativeSrc": "3443:2:5",
																											"nodeType": "YulIdentifier",
																											"src": "3443:2:5"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "3447:2:5",
																											"nodeType": "YulLiteral",
																											"src": "3447:2:5",
																											"type": "",
																											"value": "64"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nativeSrc": "3439:3:5",
																										"nodeType": "YulIdentifier",
																										"src": "3439:3:5"
																									},
																									"nativeSrc": "3439:11:5",
																									"nodeType": "YulFunctionCall",
																									"src": "3439:11:5"
																								}
																							],
																							"functionName": {
																								"name": "mload",
																								"nativeSrc": "3433:5:5",
																								"nodeType": "YulIdentifier",
																								"src": "3433:5:5"
																							},
																							"nativeSrc": "3433:18:5",
																							"nodeType": "YulFunctionCall",
																							"src": "3433:18:5"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "3461:3:5",
																											"nodeType": "YulLiteral",
																											"src": "3461:3:5",
																											"type": "",
																											"value": "160"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "3466:1:5",
																											"nodeType": "YulLiteral",
																											"src": "3466:1:5",
																											"type": "",
																											"value": "1"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "3457:3:5",
																										"nodeType": "YulIdentifier",
																										"src": "3457:3:5"
																									},
																									"nativeSrc": "3457:11:5",
																									"nodeType": "YulFunctionCall",
																									"src": "3457:11:5"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "3470:1:5",
																									"nodeType": "YulLiteral",
																									"src": "3470:1:5",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "sub",
																								"nativeSrc": "3453:3:5",
																								"nodeType": "YulIdentifier",
																								"src": "3453:3:5"
																							},
																							"nativeSrc": "3453:19:5",
																							"nodeType": "YulFunctionCall",
																							"src": "3453:19:5"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "3429:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "3429:3:5"
																					},
																					"nativeSrc": "3429:44:5",
																					"nodeType": "YulFunctionCall",
																					"src": "3429:44:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3408:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "3408:6:5"
																			},
																			"nativeSrc": "3408:66:5",
																			"nodeType": "YulFunctionCall",
																			"src": "3408:66:5"
																		},
																		"nativeSrc": "3408:66:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "3408:66:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "pos",
																							"nativeSrc": "3498:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "3498:3:5"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "3503:4:5",
																							"nodeType": "YulLiteral",
																							"src": "3503:4:5",
																							"type": "",
																							"value": "0x60"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "3494:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "3494:3:5"
																					},
																					"nativeSrc": "3494:14:5",
																					"nodeType": "YulFunctionCall",
																					"src": "3494:14:5"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "_1",
																											"nativeSrc": "3524:2:5",
																											"nodeType": "YulIdentifier",
																											"src": "3524:2:5"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "3528:4:5",
																											"nodeType": "YulLiteral",
																											"src": "3528:4:5",
																											"type": "",
																											"value": "0x60"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nativeSrc": "3520:3:5",
																										"nodeType": "YulIdentifier",
																										"src": "3520:3:5"
																									},
																									"nativeSrc": "3520:13:5",
																									"nodeType": "YulFunctionCall",
																									"src": "3520:13:5"
																								}
																							],
																							"functionName": {
																								"name": "mload",
																								"nativeSrc": "3514:5:5",
																								"nodeType": "YulIdentifier",
																								"src": "3514:5:5"
																							},
																							"nativeSrc": "3514:20:5",
																							"nodeType": "YulFunctionCall",
																							"src": "3514:20:5"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "3544:3:5",
																											"nodeType": "YulLiteral",
																											"src": "3544:3:5",
																											"type": "",
																											"value": "160"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "3549:1:5",
																											"nodeType": "YulLiteral",
																											"src": "3549:1:5",
																											"type": "",
																											"value": "1"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "3540:3:5",
																										"nodeType": "YulIdentifier",
																										"src": "3540:3:5"
																									},
																									"nativeSrc": "3540:11:5",
																									"nodeType": "YulFunctionCall",
																									"src": "3540:11:5"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "3553:1:5",
																									"nodeType": "YulLiteral",
																									"src": "3553:1:5",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "sub",
																								"nativeSrc": "3536:3:5",
																								"nodeType": "YulIdentifier",
																								"src": "3536:3:5"
																							},
																							"nativeSrc": "3536:19:5",
																							"nodeType": "YulFunctionCall",
																							"src": "3536:19:5"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "3510:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "3510:3:5"
																					},
																					"nativeSrc": "3510:46:5",
																					"nodeType": "YulFunctionCall",
																					"src": "3510:46:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3487:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "3487:6:5"
																			},
																			"nativeSrc": "3487:70:5",
																			"nodeType": "YulFunctionCall",
																			"src": "3487:70:5"
																		},
																		"nativeSrc": "3487:70:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "3487:70:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "pos",
																							"nativeSrc": "3581:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "3581:3:5"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "3586:4:5",
																							"nodeType": "YulLiteral",
																							"src": "3586:4:5",
																							"type": "",
																							"value": "0x80"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "3577:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "3577:3:5"
																					},
																					"nativeSrc": "3577:14:5",
																					"nodeType": "YulFunctionCall",
																					"src": "3577:14:5"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "_1",
																									"nativeSrc": "3603:2:5",
																									"nodeType": "YulIdentifier",
																									"src": "3603:2:5"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "3607:4:5",
																									"nodeType": "YulLiteral",
																									"src": "3607:4:5",
																									"type": "",
																									"value": "0x80"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "3599:3:5",
																								"nodeType": "YulIdentifier",
																								"src": "3599:3:5"
																							},
																							"nativeSrc": "3599:13:5",
																							"nodeType": "YulFunctionCall",
																							"src": "3599:13:5"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "3593:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "3593:5:5"
																					},
																					"nativeSrc": "3593:20:5",
																					"nodeType": "YulFunctionCall",
																					"src": "3593:20:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3570:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "3570:6:5"
																			},
																			"nativeSrc": "3570:44:5",
																			"nodeType": "YulFunctionCall",
																			"src": "3570:44:5"
																		},
																		"nativeSrc": "3570:44:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "3570:44:5"
																	},
																	{
																		"nativeSrc": "3627:21:5",
																		"nodeType": "YulAssignment",
																		"src": "3627:21:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nativeSrc": "3638:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "3638:3:5"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3643:4:5",
																					"nodeType": "YulLiteral",
																					"src": "3643:4:5",
																					"type": "",
																					"value": "0xa0"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "3634:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "3634:3:5"
																			},
																			"nativeSrc": "3634:14:5",
																			"nodeType": "YulFunctionCall",
																			"src": "3634:14:5"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nativeSrc": "3627:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "3627:3:5"
																			}
																		]
																	},
																	{
																		"nativeSrc": "3661:25:5",
																		"nodeType": "YulAssignment",
																		"src": "3661:25:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "3675:6:5",
																					"nodeType": "YulIdentifier",
																					"src": "3675:6:5"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3683:2:5",
																					"nodeType": "YulLiteral",
																					"src": "3683:2:5",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "3671:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "3671:3:5"
																			},
																			"nativeSrc": "3671:15:5",
																			"nodeType": "YulFunctionCall",
																			"src": "3671:15:5"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nativeSrc": "3661:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "3661:6:5"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "3008:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "3008:1:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3011:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "3011:6:5"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "3005:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "3005:2:5"
																},
																"nativeSrc": "3005:13:5",
																"nodeType": "YulFunctionCall",
																"src": "3005:13:5"
															},
															"nativeSrc": "2997:699:5",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "3019:18:5",
																"nodeType": "YulBlock",
																"src": "3019:18:5",
																"statements": [
																	{
																		"nativeSrc": "3021:14:5",
																		"nodeType": "YulAssignment",
																		"src": "3021:14:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "3030:1:5",
																					"nodeType": "YulIdentifier",
																					"src": "3030:1:5"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3033:1:5",
																					"nodeType": "YulLiteral",
																					"src": "3033:1:5",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "3026:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "3026:3:5"
																			},
																			"nativeSrc": "3026:9:5",
																			"nodeType": "YulFunctionCall",
																			"src": "3026:9:5"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "3021:1:5",
																				"nodeType": "YulIdentifier",
																				"src": "3021:1:5"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "3001:3:5",
																"nodeType": "YulBlock",
																"src": "3001:3:5",
																"statements": []
															},
															"src": "2997:699:5"
														},
														{
															"nativeSrc": "3705:11:5",
															"nodeType": "YulAssignment",
															"src": "3705:11:5",
															"value": {
																"name": "pos",
																"nativeSrc": "3713:3:5",
																"nodeType": "YulIdentifier",
																"src": "3713:3:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3705:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "3705:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_struct$_DelegationInfo_$1270_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_DelegationInfo_$1270_memory_ptr_$dyn_memory_ptr__fromStack_reversed",
												"nativeSrc": "2517:1205:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2701:9:5",
														"nodeType": "YulTypedName",
														"src": "2701:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2712:6:5",
														"nodeType": "YulTypedName",
														"src": "2712:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2723:4:5",
														"nodeType": "YulTypedName",
														"src": "2723:4:5",
														"type": ""
													}
												],
												"src": "2517:1205:5"
											},
											{
												"body": {
													"nativeSrc": "3845:325:5",
													"nodeType": "YulBlock",
													"src": "3845:325:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "3892:16:5",
																"nodeType": "YulBlock",
																"src": "3892:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3901:1:5",
																					"nodeType": "YulLiteral",
																					"src": "3901:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3904:1:5",
																					"nodeType": "YulLiteral",
																					"src": "3904:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3894:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "3894:6:5"
																			},
																			"nativeSrc": "3894:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "3894:12:5"
																		},
																		"nativeSrc": "3894:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "3894:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3866:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "3866:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3875:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3875:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3862:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3862:3:5"
																		},
																		"nativeSrc": "3862:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3862:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3887:3:5",
																		"nodeType": "YulLiteral",
																		"src": "3887:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3858:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3858:3:5"
																},
																"nativeSrc": "3858:33:5",
																"nodeType": "YulFunctionCall",
																"src": "3858:33:5"
															},
															"nativeSrc": "3855:53:5",
															"nodeType": "YulIf",
															"src": "3855:53:5"
														},
														{
															"nativeSrc": "3917:39:5",
															"nodeType": "YulAssignment",
															"src": "3917:39:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3946:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "3946:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "3927:18:5",
																	"nodeType": "YulIdentifier",
																	"src": "3927:18:5"
																},
																"nativeSrc": "3927:29:5",
																"nodeType": "YulFunctionCall",
																"src": "3927:29:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3917:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3917:6:5"
																}
															]
														},
														{
															"nativeSrc": "3965:48:5",
															"nodeType": "YulAssignment",
															"src": "3965:48:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3998:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3998:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4009:2:5",
																				"nodeType": "YulLiteral",
																				"src": "4009:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3994:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3994:3:5"
																		},
																		"nativeSrc": "3994:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3994:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "3975:18:5",
																	"nodeType": "YulIdentifier",
																	"src": "3975:18:5"
																},
																"nativeSrc": "3975:38:5",
																"nodeType": "YulFunctionCall",
																"src": "3975:38:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "3965:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3965:6:5"
																}
															]
														},
														{
															"nativeSrc": "4022:14:5",
															"nodeType": "YulVariableDeclaration",
															"src": "4022:14:5",
															"value": {
																"kind": "number",
																"nativeSrc": "4035:1:5",
																"nodeType": "YulLiteral",
																"src": "4035:1:5",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "4026:5:5",
																	"nodeType": "YulTypedName",
																	"src": "4026:5:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4045:41:5",
															"nodeType": "YulAssignment",
															"src": "4045:41:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4071:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "4071:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4082:2:5",
																				"nodeType": "YulLiteral",
																				"src": "4082:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4067:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4067:3:5"
																		},
																		"nativeSrc": "4067:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4067:18:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4054:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "4054:12:5"
																},
																"nativeSrc": "4054:32:5",
																"nodeType": "YulFunctionCall",
																"src": "4054:32:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4045:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "4045:5:5"
																}
															]
														},
														{
															"nativeSrc": "4095:15:5",
															"nodeType": "YulAssignment",
															"src": "4095:15:5",
															"value": {
																"name": "value",
																"nativeSrc": "4105:5:5",
																"nodeType": "YulIdentifier",
																"src": "4105:5:5"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "4095:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4095:6:5"
																}
															]
														},
														{
															"nativeSrc": "4119:45:5",
															"nodeType": "YulAssignment",
															"src": "4119:45:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4149:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "4149:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4160:2:5",
																				"nodeType": "YulLiteral",
																				"src": "4160:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4145:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4145:3:5"
																		},
																		"nativeSrc": "4145:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4145:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bool",
																	"nativeSrc": "4129:15:5",
																	"nodeType": "YulIdentifier",
																	"src": "4129:15:5"
																},
																"nativeSrc": "4129:35:5",
																"nodeType": "YulFunctionCall",
																"src": "4129:35:5"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nativeSrc": "4119:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4119:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bool",
												"nativeSrc": "3727:443:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3787:9:5",
														"nodeType": "YulTypedName",
														"src": "3787:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3798:7:5",
														"nodeType": "YulTypedName",
														"src": "3798:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3810:6:5",
														"nodeType": "YulTypedName",
														"src": "3810:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3818:6:5",
														"nodeType": "YulTypedName",
														"src": "3818:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3826:6:5",
														"nodeType": "YulTypedName",
														"src": "3826:6:5",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "3834:6:5",
														"nodeType": "YulTypedName",
														"src": "3834:6:5",
														"type": ""
													}
												],
												"src": "3727:443:5"
											},
											{
												"body": {
													"nativeSrc": "4259:170:5",
													"nodeType": "YulBlock",
													"src": "4259:170:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "4305:16:5",
																"nodeType": "YulBlock",
																"src": "4305:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4314:1:5",
																					"nodeType": "YulLiteral",
																					"src": "4314:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4317:1:5",
																					"nodeType": "YulLiteral",
																					"src": "4317:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4307:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "4307:6:5"
																			},
																			"nativeSrc": "4307:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "4307:12:5"
																		},
																		"nativeSrc": "4307:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "4307:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4280:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "4280:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4289:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "4289:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4276:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4276:3:5"
																		},
																		"nativeSrc": "4276:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4276:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4301:2:5",
																		"nodeType": "YulLiteral",
																		"src": "4301:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4272:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4272:3:5"
																},
																"nativeSrc": "4272:32:5",
																"nodeType": "YulFunctionCall",
																"src": "4272:32:5"
															},
															"nativeSrc": "4269:52:5",
															"nodeType": "YulIf",
															"src": "4269:52:5"
														},
														{
															"nativeSrc": "4330:39:5",
															"nodeType": "YulAssignment",
															"src": "4330:39:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4359:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "4359:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "4340:18:5",
																	"nodeType": "YulIdentifier",
																	"src": "4340:18:5"
																},
																"nativeSrc": "4340:29:5",
																"nodeType": "YulFunctionCall",
																"src": "4340:29:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "4330:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4330:6:5"
																}
															]
														},
														{
															"nativeSrc": "4378:45:5",
															"nodeType": "YulAssignment",
															"src": "4378:45:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4408:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "4408:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4419:2:5",
																				"nodeType": "YulLiteral",
																				"src": "4419:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4404:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4404:3:5"
																		},
																		"nativeSrc": "4404:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4404:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bool",
																	"nativeSrc": "4388:15:5",
																	"nodeType": "YulIdentifier",
																	"src": "4388:15:5"
																},
																"nativeSrc": "4388:35:5",
																"nodeType": "YulFunctionCall",
																"src": "4388:35:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "4378:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4378:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nativeSrc": "4175:254:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4217:9:5",
														"nodeType": "YulTypedName",
														"src": "4217:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4228:7:5",
														"nodeType": "YulTypedName",
														"src": "4228:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4240:6:5",
														"nodeType": "YulTypedName",
														"src": "4240:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4248:6:5",
														"nodeType": "YulTypedName",
														"src": "4248:6:5",
														"type": ""
													}
												],
												"src": "4175:254:5"
											},
											{
												"body": {
													"nativeSrc": "4651:652:5",
													"nodeType": "YulBlock",
													"src": "4651:652:5",
													"statements": [
														{
															"nativeSrc": "4661:32:5",
															"nodeType": "YulVariableDeclaration",
															"src": "4661:32:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4679:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "4679:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4690:2:5",
																		"nodeType": "YulLiteral",
																		"src": "4690:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4675:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4675:3:5"
																},
																"nativeSrc": "4675:18:5",
																"nodeType": "YulFunctionCall",
																"src": "4675:18:5"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nativeSrc": "4665:6:5",
																	"nodeType": "YulTypedName",
																	"src": "4665:6:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4709:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "4709:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4720:2:5",
																		"nodeType": "YulLiteral",
																		"src": "4720:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4702:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4702:6:5"
																},
																"nativeSrc": "4702:21:5",
																"nodeType": "YulFunctionCall",
																"src": "4702:21:5"
															},
															"nativeSrc": "4702:21:5",
															"nodeType": "YulExpressionStatement",
															"src": "4702:21:5"
														},
														{
															"nativeSrc": "4732:17:5",
															"nodeType": "YulVariableDeclaration",
															"src": "4732:17:5",
															"value": {
																"name": "tail_1",
																"nativeSrc": "4743:6:5",
																"nodeType": "YulIdentifier",
																"src": "4743:6:5"
															},
															"variables": [
																{
																	"name": "pos",
																	"nativeSrc": "4736:3:5",
																	"nodeType": "YulTypedName",
																	"src": "4736:3:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4758:27:5",
															"nodeType": "YulVariableDeclaration",
															"src": "4758:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4778:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "4778:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4772:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "4772:5:5"
																},
																"nativeSrc": "4772:13:5",
																"nodeType": "YulFunctionCall",
																"src": "4772:13:5"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "4762:6:5",
																	"nodeType": "YulTypedName",
																	"src": "4762:6:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "tail_1",
																		"nativeSrc": "4801:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "4801:6:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4809:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "4809:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4794:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4794:6:5"
																},
																"nativeSrc": "4794:22:5",
																"nodeType": "YulFunctionCall",
																"src": "4794:22:5"
															},
															"nativeSrc": "4794:22:5",
															"nodeType": "YulExpressionStatement",
															"src": "4794:22:5"
														},
														{
															"nativeSrc": "4825:25:5",
															"nodeType": "YulAssignment",
															"src": "4825:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4836:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "4836:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4847:2:5",
																		"nodeType": "YulLiteral",
																		"src": "4847:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4832:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4832:3:5"
																},
																"nativeSrc": "4832:18:5",
																"nodeType": "YulFunctionCall",
																"src": "4832:18:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "4825:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4825:3:5"
																}
															]
														},
														{
															"nativeSrc": "4859:29:5",
															"nodeType": "YulVariableDeclaration",
															"src": "4859:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4877:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "4877:6:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4885:2:5",
																		"nodeType": "YulLiteral",
																		"src": "4885:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4873:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4873:3:5"
																},
																"nativeSrc": "4873:15:5",
																"nodeType": "YulFunctionCall",
																"src": "4873:15:5"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nativeSrc": "4863:6:5",
																	"nodeType": "YulTypedName",
																	"src": "4863:6:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4897:10:5",
															"nodeType": "YulVariableDeclaration",
															"src": "4897:10:5",
															"value": {
																"kind": "number",
																"nativeSrc": "4906:1:5",
																"nodeType": "YulLiteral",
																"src": "4906:1:5",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "4901:1:5",
																	"nodeType": "YulTypedName",
																	"src": "4901:1:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4965:312:5",
																"nodeType": "YulBlock",
																"src": "4965:312:5",
																"statements": [
																	{
																		"nativeSrc": "4979:23:5",
																		"nodeType": "YulVariableDeclaration",
																		"src": "4979:23:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "4995:6:5",
																					"nodeType": "YulIdentifier",
																					"src": "4995:6:5"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "4989:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "4989:5:5"
																			},
																			"nativeSrc": "4989:13:5",
																			"nodeType": "YulFunctionCall",
																			"src": "4989:13:5"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nativeSrc": "4983:2:5",
																				"nodeType": "YulTypedName",
																				"src": "4983:2:5",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nativeSrc": "5022:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "5022:3:5"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "_1",
																									"nativeSrc": "5037:2:5",
																									"nodeType": "YulIdentifier",
																									"src": "5037:2:5"
																								}
																							],
																							"functionName": {
																								"name": "mload",
																								"nativeSrc": "5031:5:5",
																								"nodeType": "YulIdentifier",
																								"src": "5031:5:5"
																							},
																							"nativeSrc": "5031:9:5",
																							"nodeType": "YulFunctionCall",
																							"src": "5031:9:5"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "5050:3:5",
																											"nodeType": "YulLiteral",
																											"src": "5050:3:5",
																											"type": "",
																											"value": "160"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "5055:1:5",
																											"nodeType": "YulLiteral",
																											"src": "5055:1:5",
																											"type": "",
																											"value": "1"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "5046:3:5",
																										"nodeType": "YulIdentifier",
																										"src": "5046:3:5"
																									},
																									"nativeSrc": "5046:11:5",
																									"nodeType": "YulFunctionCall",
																									"src": "5046:11:5"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "5059:1:5",
																									"nodeType": "YulLiteral",
																									"src": "5059:1:5",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "sub",
																								"nativeSrc": "5042:3:5",
																								"nodeType": "YulIdentifier",
																								"src": "5042:3:5"
																							},
																							"nativeSrc": "5042:19:5",
																							"nodeType": "YulFunctionCall",
																							"src": "5042:19:5"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "5027:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "5027:3:5"
																					},
																					"nativeSrc": "5027:35:5",
																					"nodeType": "YulFunctionCall",
																					"src": "5027:35:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "5015:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "5015:6:5"
																			},
																			"nativeSrc": "5015:48:5",
																			"nodeType": "YulFunctionCall",
																			"src": "5015:48:5"
																		},
																		"nativeSrc": "5015:48:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "5015:48:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "pos",
																							"nativeSrc": "5087:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "5087:3:5"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "5092:2:5",
																							"nodeType": "YulLiteral",
																							"src": "5092:2:5",
																							"type": "",
																							"value": "32"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "5083:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "5083:3:5"
																					},
																					"nativeSrc": "5083:12:5",
																					"nodeType": "YulFunctionCall",
																					"src": "5083:12:5"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "_1",
																									"nativeSrc": "5107:2:5",
																									"nodeType": "YulIdentifier",
																									"src": "5107:2:5"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "5111:2:5",
																									"nodeType": "YulLiteral",
																									"src": "5111:2:5",
																									"type": "",
																									"value": "32"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "5103:3:5",
																								"nodeType": "YulIdentifier",
																								"src": "5103:3:5"
																							},
																							"nativeSrc": "5103:11:5",
																							"nodeType": "YulFunctionCall",
																							"src": "5103:11:5"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "5097:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "5097:5:5"
																					},
																					"nativeSrc": "5097:18:5",
																					"nodeType": "YulFunctionCall",
																					"src": "5097:18:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "5076:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "5076:6:5"
																			},
																			"nativeSrc": "5076:40:5",
																			"nodeType": "YulFunctionCall",
																			"src": "5076:40:5"
																		},
																		"nativeSrc": "5076:40:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "5076:40:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "pos",
																							"nativeSrc": "5140:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "5140:3:5"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "5145:2:5",
																							"nodeType": "YulLiteral",
																							"src": "5145:2:5",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "5136:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "5136:3:5"
																					},
																					"nativeSrc": "5136:12:5",
																					"nodeType": "YulFunctionCall",
																					"src": "5136:12:5"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "_1",
																											"nativeSrc": "5164:2:5",
																											"nodeType": "YulIdentifier",
																											"src": "5164:2:5"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "5168:2:5",
																											"nodeType": "YulLiteral",
																											"src": "5168:2:5",
																											"type": "",
																											"value": "64"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nativeSrc": "5160:3:5",
																										"nodeType": "YulIdentifier",
																										"src": "5160:3:5"
																									},
																									"nativeSrc": "5160:11:5",
																									"nodeType": "YulFunctionCall",
																									"src": "5160:11:5"
																								}
																							],
																							"functionName": {
																								"name": "mload",
																								"nativeSrc": "5154:5:5",
																								"nodeType": "YulIdentifier",
																								"src": "5154:5:5"
																							},
																							"nativeSrc": "5154:18:5",
																							"nodeType": "YulFunctionCall",
																							"src": "5154:18:5"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "5182:3:5",
																											"nodeType": "YulLiteral",
																											"src": "5182:3:5",
																											"type": "",
																											"value": "160"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "5187:1:5",
																											"nodeType": "YulLiteral",
																											"src": "5187:1:5",
																											"type": "",
																											"value": "1"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "5178:3:5",
																										"nodeType": "YulIdentifier",
																										"src": "5178:3:5"
																									},
																									"nativeSrc": "5178:11:5",
																									"nodeType": "YulFunctionCall",
																									"src": "5178:11:5"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "5191:1:5",
																									"nodeType": "YulLiteral",
																									"src": "5191:1:5",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "sub",
																								"nativeSrc": "5174:3:5",
																								"nodeType": "YulIdentifier",
																								"src": "5174:3:5"
																							},
																							"nativeSrc": "5174:19:5",
																							"nodeType": "YulFunctionCall",
																							"src": "5174:19:5"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "5150:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "5150:3:5"
																					},
																					"nativeSrc": "5150:44:5",
																					"nodeType": "YulFunctionCall",
																					"src": "5150:44:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "5129:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "5129:6:5"
																			},
																			"nativeSrc": "5129:66:5",
																			"nodeType": "YulFunctionCall",
																			"src": "5129:66:5"
																		},
																		"nativeSrc": "5129:66:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "5129:66:5"
																	},
																	{
																		"nativeSrc": "5208:21:5",
																		"nodeType": "YulAssignment",
																		"src": "5208:21:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nativeSrc": "5219:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "5219:3:5"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5224:4:5",
																					"nodeType": "YulLiteral",
																					"src": "5224:4:5",
																					"type": "",
																					"value": "0x60"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "5215:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "5215:3:5"
																			},
																			"nativeSrc": "5215:14:5",
																			"nodeType": "YulFunctionCall",
																			"src": "5215:14:5"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nativeSrc": "5208:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "5208:3:5"
																			}
																		]
																	},
																	{
																		"nativeSrc": "5242:25:5",
																		"nodeType": "YulAssignment",
																		"src": "5242:25:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "5256:6:5",
																					"nodeType": "YulIdentifier",
																					"src": "5256:6:5"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5264:2:5",
																					"nodeType": "YulLiteral",
																					"src": "5264:2:5",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "5252:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "5252:3:5"
																			},
																			"nativeSrc": "5252:15:5",
																			"nodeType": "YulFunctionCall",
																			"src": "5252:15:5"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nativeSrc": "5242:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "5242:6:5"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "4927:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "4927:1:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4930:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "4930:6:5"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "4924:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "4924:2:5"
																},
																"nativeSrc": "4924:13:5",
																"nodeType": "YulFunctionCall",
																"src": "4924:13:5"
															},
															"nativeSrc": "4916:361:5",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "4938:18:5",
																"nodeType": "YulBlock",
																"src": "4938:18:5",
																"statements": [
																	{
																		"nativeSrc": "4940:14:5",
																		"nodeType": "YulAssignment",
																		"src": "4940:14:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "4949:1:5",
																					"nodeType": "YulIdentifier",
																					"src": "4949:1:5"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4952:1:5",
																					"nodeType": "YulLiteral",
																					"src": "4952:1:5",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "4945:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "4945:3:5"
																			},
																			"nativeSrc": "4945:9:5",
																			"nodeType": "YulFunctionCall",
																			"src": "4945:9:5"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "4940:1:5",
																				"nodeType": "YulIdentifier",
																				"src": "4940:1:5"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "4920:3:5",
																"nodeType": "YulBlock",
																"src": "4920:3:5",
																"statements": []
															},
															"src": "4916:361:5"
														},
														{
															"nativeSrc": "5286:11:5",
															"nodeType": "YulAssignment",
															"src": "5286:11:5",
															"value": {
																"name": "pos",
																"nativeSrc": "5294:3:5",
																"nodeType": "YulIdentifier",
																"src": "5294:3:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5286:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "5286:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_struct$_TokenDelegation_$1284_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_TokenDelegation_$1284_memory_ptr_$dyn_memory_ptr__fromStack_reversed",
												"nativeSrc": "4434:869:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4620:9:5",
														"nodeType": "YulTypedName",
														"src": "4620:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4631:6:5",
														"nodeType": "YulTypedName",
														"src": "4631:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4642:4:5",
														"nodeType": "YulTypedName",
														"src": "4642:4:5",
														"type": ""
													}
												],
												"src": "4434:869:5"
											},
											{
												"body": {
													"nativeSrc": "5412:230:5",
													"nodeType": "YulBlock",
													"src": "5412:230:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "5458:16:5",
																"nodeType": "YulBlock",
																"src": "5458:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5467:1:5",
																					"nodeType": "YulLiteral",
																					"src": "5467:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5470:1:5",
																					"nodeType": "YulLiteral",
																					"src": "5470:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5460:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "5460:6:5"
																			},
																			"nativeSrc": "5460:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "5460:12:5"
																		},
																		"nativeSrc": "5460:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "5460:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5433:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "5433:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5442:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "5442:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5429:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5429:3:5"
																		},
																		"nativeSrc": "5429:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5429:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5454:2:5",
																		"nodeType": "YulLiteral",
																		"src": "5454:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5425:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5425:3:5"
																},
																"nativeSrc": "5425:32:5",
																"nodeType": "YulFunctionCall",
																"src": "5425:32:5"
															},
															"nativeSrc": "5422:52:5",
															"nodeType": "YulIf",
															"src": "5422:52:5"
														},
														{
															"nativeSrc": "5483:39:5",
															"nodeType": "YulAssignment",
															"src": "5483:39:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5512:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "5512:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "5493:18:5",
																	"nodeType": "YulIdentifier",
																	"src": "5493:18:5"
																},
																"nativeSrc": "5493:29:5",
																"nodeType": "YulFunctionCall",
																"src": "5493:29:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "5483:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5483:6:5"
																}
															]
														},
														{
															"nativeSrc": "5531:48:5",
															"nodeType": "YulAssignment",
															"src": "5531:48:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5564:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "5564:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5575:2:5",
																				"nodeType": "YulLiteral",
																				"src": "5575:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5560:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5560:3:5"
																		},
																		"nativeSrc": "5560:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5560:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "5541:18:5",
																	"nodeType": "YulIdentifier",
																	"src": "5541:18:5"
																},
																"nativeSrc": "5541:38:5",
																"nodeType": "YulFunctionCall",
																"src": "5541:38:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "5531:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5531:6:5"
																}
															]
														},
														{
															"nativeSrc": "5588:48:5",
															"nodeType": "YulAssignment",
															"src": "5588:48:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5621:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "5621:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5632:2:5",
																				"nodeType": "YulLiteral",
																				"src": "5632:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5617:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5617:3:5"
																		},
																		"nativeSrc": "5617:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5617:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "5598:18:5",
																	"nodeType": "YulIdentifier",
																	"src": "5598:18:5"
																},
																"nativeSrc": "5598:38:5",
																"nodeType": "YulFunctionCall",
																"src": "5598:38:5"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "5588:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5588:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_address",
												"nativeSrc": "5308:334:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5362:9:5",
														"nodeType": "YulTypedName",
														"src": "5362:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5373:7:5",
														"nodeType": "YulTypedName",
														"src": "5373:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5385:6:5",
														"nodeType": "YulTypedName",
														"src": "5385:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5393:6:5",
														"nodeType": "YulTypedName",
														"src": "5393:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "5401:6:5",
														"nodeType": "YulTypedName",
														"src": "5401:6:5",
														"type": ""
													}
												],
												"src": "5308:334:5"
											},
											{
												"body": {
													"nativeSrc": "5734:173:5",
													"nodeType": "YulBlock",
													"src": "5734:173:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "5780:16:5",
																"nodeType": "YulBlock",
																"src": "5780:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5789:1:5",
																					"nodeType": "YulLiteral",
																					"src": "5789:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5792:1:5",
																					"nodeType": "YulLiteral",
																					"src": "5792:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5782:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "5782:6:5"
																			},
																			"nativeSrc": "5782:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "5782:12:5"
																		},
																		"nativeSrc": "5782:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "5782:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5755:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "5755:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5764:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "5764:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5751:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5751:3:5"
																		},
																		"nativeSrc": "5751:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5751:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5776:2:5",
																		"nodeType": "YulLiteral",
																		"src": "5776:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5747:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5747:3:5"
																},
																"nativeSrc": "5747:32:5",
																"nodeType": "YulFunctionCall",
																"src": "5747:32:5"
															},
															"nativeSrc": "5744:52:5",
															"nodeType": "YulIf",
															"src": "5744:52:5"
														},
														{
															"nativeSrc": "5805:39:5",
															"nodeType": "YulAssignment",
															"src": "5805:39:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5834:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "5834:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "5815:18:5",
																	"nodeType": "YulIdentifier",
																	"src": "5815:18:5"
																},
																"nativeSrc": "5815:29:5",
																"nodeType": "YulFunctionCall",
																"src": "5815:29:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "5805:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5805:6:5"
																}
															]
														},
														{
															"nativeSrc": "5853:48:5",
															"nodeType": "YulAssignment",
															"src": "5853:48:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5886:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "5886:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5897:2:5",
																				"nodeType": "YulLiteral",
																				"src": "5897:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5882:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5882:3:5"
																		},
																		"nativeSrc": "5882:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5882:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "5863:18:5",
																	"nodeType": "YulIdentifier",
																	"src": "5863:18:5"
																},
																"nativeSrc": "5863:38:5",
																"nodeType": "YulFunctionCall",
																"src": "5863:38:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "5853:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5853:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "5647:260:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5692:9:5",
														"nodeType": "YulTypedName",
														"src": "5692:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5703:7:5",
														"nodeType": "YulTypedName",
														"src": "5703:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5715:6:5",
														"nodeType": "YulTypedName",
														"src": "5715:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5723:6:5",
														"nodeType": "YulTypedName",
														"src": "5723:6:5",
														"type": ""
													}
												],
												"src": "5647:260:5"
											},
											{
												"body": {
													"nativeSrc": "6033:328:5",
													"nodeType": "YulBlock",
													"src": "6033:328:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "6080:16:5",
																"nodeType": "YulBlock",
																"src": "6080:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6089:1:5",
																					"nodeType": "YulLiteral",
																					"src": "6089:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6092:1:5",
																					"nodeType": "YulLiteral",
																					"src": "6092:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6082:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "6082:6:5"
																			},
																			"nativeSrc": "6082:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "6082:12:5"
																		},
																		"nativeSrc": "6082:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "6082:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6054:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "6054:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6063:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "6063:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6050:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "6050:3:5"
																		},
																		"nativeSrc": "6050:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6050:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6075:3:5",
																		"nodeType": "YulLiteral",
																		"src": "6075:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6046:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "6046:3:5"
																},
																"nativeSrc": "6046:33:5",
																"nodeType": "YulFunctionCall",
																"src": "6046:33:5"
															},
															"nativeSrc": "6043:53:5",
															"nodeType": "YulIf",
															"src": "6043:53:5"
														},
														{
															"nativeSrc": "6105:39:5",
															"nodeType": "YulAssignment",
															"src": "6105:39:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6134:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "6134:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "6115:18:5",
																	"nodeType": "YulIdentifier",
																	"src": "6115:18:5"
																},
																"nativeSrc": "6115:29:5",
																"nodeType": "YulFunctionCall",
																"src": "6115:29:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "6105:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "6105:6:5"
																}
															]
														},
														{
															"nativeSrc": "6153:48:5",
															"nodeType": "YulAssignment",
															"src": "6153:48:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6186:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "6186:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6197:2:5",
																				"nodeType": "YulLiteral",
																				"src": "6197:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6182:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "6182:3:5"
																		},
																		"nativeSrc": "6182:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6182:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "6163:18:5",
																	"nodeType": "YulIdentifier",
																	"src": "6163:18:5"
																},
																"nativeSrc": "6163:38:5",
																"nodeType": "YulFunctionCall",
																"src": "6163:38:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "6153:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "6153:6:5"
																}
															]
														},
														{
															"nativeSrc": "6210:48:5",
															"nodeType": "YulAssignment",
															"src": "6210:48:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6243:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "6243:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6254:2:5",
																				"nodeType": "YulLiteral",
																				"src": "6254:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6239:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "6239:3:5"
																		},
																		"nativeSrc": "6239:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6239:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "6220:18:5",
																	"nodeType": "YulIdentifier",
																	"src": "6220:18:5"
																},
																"nativeSrc": "6220:38:5",
																"nodeType": "YulFunctionCall",
																"src": "6220:38:5"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "6210:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "6210:6:5"
																}
															]
														},
														{
															"nativeSrc": "6267:14:5",
															"nodeType": "YulVariableDeclaration",
															"src": "6267:14:5",
															"value": {
																"kind": "number",
																"nativeSrc": "6280:1:5",
																"nodeType": "YulLiteral",
																"src": "6280:1:5",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "6271:5:5",
																	"nodeType": "YulTypedName",
																	"src": "6271:5:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6290:41:5",
															"nodeType": "YulAssignment",
															"src": "6290:41:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6316:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "6316:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6327:2:5",
																				"nodeType": "YulLiteral",
																				"src": "6327:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6312:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "6312:3:5"
																		},
																		"nativeSrc": "6312:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6312:18:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "6299:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "6299:12:5"
																},
																"nativeSrc": "6299:32:5",
																"nodeType": "YulFunctionCall",
																"src": "6299:32:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "6290:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "6290:5:5"
																}
															]
														},
														{
															"nativeSrc": "6340:15:5",
															"nodeType": "YulAssignment",
															"src": "6340:15:5",
															"value": {
																"name": "value",
																"nativeSrc": "6350:5:5",
																"nodeType": "YulIdentifier",
																"src": "6350:5:5"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nativeSrc": "6340:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "6340:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_addresst_uint256",
												"nativeSrc": "5912:449:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5975:9:5",
														"nodeType": "YulTypedName",
														"src": "5975:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5986:7:5",
														"nodeType": "YulTypedName",
														"src": "5986:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5998:6:5",
														"nodeType": "YulTypedName",
														"src": "5998:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6006:6:5",
														"nodeType": "YulTypedName",
														"src": "6006:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6014:6:5",
														"nodeType": "YulTypedName",
														"src": "6014:6:5",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "6022:6:5",
														"nodeType": "YulTypedName",
														"src": "6022:6:5",
														"type": ""
													}
												],
												"src": "5912:449:5"
											},
											{
												"body": {
													"nativeSrc": "6589:597:5",
													"nodeType": "YulBlock",
													"src": "6589:597:5",
													"statements": [
														{
															"nativeSrc": "6599:32:5",
															"nodeType": "YulVariableDeclaration",
															"src": "6599:32:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6617:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "6617:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6628:2:5",
																		"nodeType": "YulLiteral",
																		"src": "6628:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6613:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "6613:3:5"
																},
																"nativeSrc": "6613:18:5",
																"nodeType": "YulFunctionCall",
																"src": "6613:18:5"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nativeSrc": "6603:6:5",
																	"nodeType": "YulTypedName",
																	"src": "6603:6:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6647:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "6647:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6658:2:5",
																		"nodeType": "YulLiteral",
																		"src": "6658:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6640:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "6640:6:5"
																},
																"nativeSrc": "6640:21:5",
																"nodeType": "YulFunctionCall",
																"src": "6640:21:5"
															},
															"nativeSrc": "6640:21:5",
															"nodeType": "YulExpressionStatement",
															"src": "6640:21:5"
														},
														{
															"nativeSrc": "6670:17:5",
															"nodeType": "YulVariableDeclaration",
															"src": "6670:17:5",
															"value": {
																"name": "tail_1",
																"nativeSrc": "6681:6:5",
																"nodeType": "YulIdentifier",
																"src": "6681:6:5"
															},
															"variables": [
																{
																	"name": "pos",
																	"nativeSrc": "6674:3:5",
																	"nodeType": "YulTypedName",
																	"src": "6674:3:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6696:27:5",
															"nodeType": "YulVariableDeclaration",
															"src": "6696:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6716:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "6716:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "6710:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "6710:5:5"
																},
																"nativeSrc": "6710:13:5",
																"nodeType": "YulFunctionCall",
																"src": "6710:13:5"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "6700:6:5",
																	"nodeType": "YulTypedName",
																	"src": "6700:6:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "tail_1",
																		"nativeSrc": "6739:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "6739:6:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6747:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "6747:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6732:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "6732:6:5"
																},
																"nativeSrc": "6732:22:5",
																"nodeType": "YulFunctionCall",
																"src": "6732:22:5"
															},
															"nativeSrc": "6732:22:5",
															"nodeType": "YulExpressionStatement",
															"src": "6732:22:5"
														},
														{
															"nativeSrc": "6763:25:5",
															"nodeType": "YulAssignment",
															"src": "6763:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6774:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "6774:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6785:2:5",
																		"nodeType": "YulLiteral",
																		"src": "6785:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6770:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "6770:3:5"
																},
																"nativeSrc": "6770:18:5",
																"nodeType": "YulFunctionCall",
																"src": "6770:18:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "6763:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "6763:3:5"
																}
															]
														},
														{
															"nativeSrc": "6797:29:5",
															"nodeType": "YulVariableDeclaration",
															"src": "6797:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6815:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "6815:6:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6823:2:5",
																		"nodeType": "YulLiteral",
																		"src": "6823:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6811:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "6811:3:5"
																},
																"nativeSrc": "6811:15:5",
																"nodeType": "YulFunctionCall",
																"src": "6811:15:5"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nativeSrc": "6801:6:5",
																	"nodeType": "YulTypedName",
																	"src": "6801:6:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6835:10:5",
															"nodeType": "YulVariableDeclaration",
															"src": "6835:10:5",
															"value": {
																"kind": "number",
																"nativeSrc": "6844:1:5",
																"nodeType": "YulLiteral",
																"src": "6844:1:5",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "6839:1:5",
																	"nodeType": "YulTypedName",
																	"src": "6839:1:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6903:257:5",
																"nodeType": "YulBlock",
																"src": "6903:257:5",
																"statements": [
																	{
																		"nativeSrc": "6917:23:5",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6917:23:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "6933:6:5",
																					"nodeType": "YulIdentifier",
																					"src": "6933:6:5"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "6927:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "6927:5:5"
																			},
																			"nativeSrc": "6927:13:5",
																			"nodeType": "YulFunctionCall",
																			"src": "6927:13:5"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nativeSrc": "6921:2:5",
																				"nodeType": "YulTypedName",
																				"src": "6921:2:5",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nativeSrc": "6960:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "6960:3:5"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "_1",
																									"nativeSrc": "6975:2:5",
																									"nodeType": "YulIdentifier",
																									"src": "6975:2:5"
																								}
																							],
																							"functionName": {
																								"name": "mload",
																								"nativeSrc": "6969:5:5",
																								"nodeType": "YulIdentifier",
																								"src": "6969:5:5"
																							},
																							"nativeSrc": "6969:9:5",
																							"nodeType": "YulFunctionCall",
																							"src": "6969:9:5"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "6988:3:5",
																											"nodeType": "YulLiteral",
																											"src": "6988:3:5",
																											"type": "",
																											"value": "160"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "6993:1:5",
																											"nodeType": "YulLiteral",
																											"src": "6993:1:5",
																											"type": "",
																											"value": "1"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "6984:3:5",
																										"nodeType": "YulIdentifier",
																										"src": "6984:3:5"
																									},
																									"nativeSrc": "6984:11:5",
																									"nodeType": "YulFunctionCall",
																									"src": "6984:11:5"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "6997:1:5",
																									"nodeType": "YulLiteral",
																									"src": "6997:1:5",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "sub",
																								"nativeSrc": "6980:3:5",
																								"nodeType": "YulIdentifier",
																								"src": "6980:3:5"
																							},
																							"nativeSrc": "6980:19:5",
																							"nodeType": "YulFunctionCall",
																							"src": "6980:19:5"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "6965:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "6965:3:5"
																					},
																					"nativeSrc": "6965:35:5",
																					"nodeType": "YulFunctionCall",
																					"src": "6965:35:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "6953:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "6953:6:5"
																			},
																			"nativeSrc": "6953:48:5",
																			"nodeType": "YulFunctionCall",
																			"src": "6953:48:5"
																		},
																		"nativeSrc": "6953:48:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "6953:48:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "pos",
																							"nativeSrc": "7025:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "7025:3:5"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "7030:2:5",
																							"nodeType": "YulLiteral",
																							"src": "7030:2:5",
																							"type": "",
																							"value": "32"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "7021:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "7021:3:5"
																					},
																					"nativeSrc": "7021:12:5",
																					"nodeType": "YulFunctionCall",
																					"src": "7021:12:5"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "_1",
																											"nativeSrc": "7049:2:5",
																											"nodeType": "YulIdentifier",
																											"src": "7049:2:5"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "7053:2:5",
																											"nodeType": "YulLiteral",
																											"src": "7053:2:5",
																											"type": "",
																											"value": "32"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nativeSrc": "7045:3:5",
																										"nodeType": "YulIdentifier",
																										"src": "7045:3:5"
																									},
																									"nativeSrc": "7045:11:5",
																									"nodeType": "YulFunctionCall",
																									"src": "7045:11:5"
																								}
																							],
																							"functionName": {
																								"name": "mload",
																								"nativeSrc": "7039:5:5",
																								"nodeType": "YulIdentifier",
																								"src": "7039:5:5"
																							},
																							"nativeSrc": "7039:18:5",
																							"nodeType": "YulFunctionCall",
																							"src": "7039:18:5"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "7067:3:5",
																											"nodeType": "YulLiteral",
																											"src": "7067:3:5",
																											"type": "",
																											"value": "160"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "7072:1:5",
																											"nodeType": "YulLiteral",
																											"src": "7072:1:5",
																											"type": "",
																											"value": "1"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "7063:3:5",
																										"nodeType": "YulIdentifier",
																										"src": "7063:3:5"
																									},
																									"nativeSrc": "7063:11:5",
																									"nodeType": "YulFunctionCall",
																									"src": "7063:11:5"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "7076:1:5",
																									"nodeType": "YulLiteral",
																									"src": "7076:1:5",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "sub",
																								"nativeSrc": "7059:3:5",
																								"nodeType": "YulIdentifier",
																								"src": "7059:3:5"
																							},
																							"nativeSrc": "7059:19:5",
																							"nodeType": "YulFunctionCall",
																							"src": "7059:19:5"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "7035:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "7035:3:5"
																					},
																					"nativeSrc": "7035:44:5",
																					"nodeType": "YulFunctionCall",
																					"src": "7035:44:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "7014:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "7014:6:5"
																			},
																			"nativeSrc": "7014:66:5",
																			"nodeType": "YulFunctionCall",
																			"src": "7014:66:5"
																		},
																		"nativeSrc": "7014:66:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "7014:66:5"
																	},
																	{
																		"nativeSrc": "7093:19:5",
																		"nodeType": "YulAssignment",
																		"src": "7093:19:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nativeSrc": "7104:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "7104:3:5"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7109:2:5",
																					"nodeType": "YulLiteral",
																					"src": "7109:2:5",
																					"type": "",
																					"value": "64"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "7100:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "7100:3:5"
																			},
																			"nativeSrc": "7100:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "7100:12:5"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nativeSrc": "7093:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "7093:3:5"
																			}
																		]
																	},
																	{
																		"nativeSrc": "7125:25:5",
																		"nodeType": "YulAssignment",
																		"src": "7125:25:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "7139:6:5",
																					"nodeType": "YulIdentifier",
																					"src": "7139:6:5"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7147:2:5",
																					"nodeType": "YulLiteral",
																					"src": "7147:2:5",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "7135:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "7135:3:5"
																			},
																			"nativeSrc": "7135:15:5",
																			"nodeType": "YulFunctionCall",
																			"src": "7135:15:5"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nativeSrc": "7125:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "7125:6:5"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "6865:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "6865:1:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6868:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "6868:6:5"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "6862:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "6862:2:5"
																},
																"nativeSrc": "6862:13:5",
																"nodeType": "YulFunctionCall",
																"src": "6862:13:5"
															},
															"nativeSrc": "6854:306:5",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "6876:18:5",
																"nodeType": "YulBlock",
																"src": "6876:18:5",
																"statements": [
																	{
																		"nativeSrc": "6878:14:5",
																		"nodeType": "YulAssignment",
																		"src": "6878:14:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "6887:1:5",
																					"nodeType": "YulIdentifier",
																					"src": "6887:1:5"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6890:1:5",
																					"nodeType": "YulLiteral",
																					"src": "6890:1:5",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6883:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "6883:3:5"
																			},
																			"nativeSrc": "6883:9:5",
																			"nodeType": "YulFunctionCall",
																			"src": "6883:9:5"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "6878:1:5",
																				"nodeType": "YulIdentifier",
																				"src": "6878:1:5"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "6858:3:5",
																"nodeType": "YulBlock",
																"src": "6858:3:5",
																"statements": []
															},
															"src": "6854:306:5"
														},
														{
															"nativeSrc": "7169:11:5",
															"nodeType": "YulAssignment",
															"src": "7169:11:5",
															"value": {
																"name": "pos",
																"nativeSrc": "7177:3:5",
																"nodeType": "YulIdentifier",
																"src": "7177:3:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7169:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "7169:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_struct$_ContractDelegation_$1276_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_ContractDelegation_$1276_memory_ptr_$dyn_memory_ptr__fromStack_reversed",
												"nativeSrc": "6366:820:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6558:9:5",
														"nodeType": "YulTypedName",
														"src": "6558:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6569:6:5",
														"nodeType": "YulTypedName",
														"src": "6569:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6580:4:5",
														"nodeType": "YulTypedName",
														"src": "6580:4:5",
														"type": ""
													}
												],
												"src": "6366:820:5"
											},
											{
												"body": {
													"nativeSrc": "7223:95:5",
													"nodeType": "YulBlock",
													"src": "7223:95:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7240:1:5",
																		"nodeType": "YulLiteral",
																		"src": "7240:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "7247:3:5",
																				"nodeType": "YulLiteral",
																				"src": "7247:3:5",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7252:10:5",
																				"nodeType": "YulLiteral",
																				"src": "7252:10:5",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "7243:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "7243:3:5"
																		},
																		"nativeSrc": "7243:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7243:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7233:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "7233:6:5"
																},
																"nativeSrc": "7233:31:5",
																"nodeType": "YulFunctionCall",
																"src": "7233:31:5"
															},
															"nativeSrc": "7233:31:5",
															"nodeType": "YulExpressionStatement",
															"src": "7233:31:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7280:1:5",
																		"nodeType": "YulLiteral",
																		"src": "7280:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7283:4:5",
																		"nodeType": "YulLiteral",
																		"src": "7283:4:5",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7273:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "7273:6:5"
																},
																"nativeSrc": "7273:15:5",
																"nodeType": "YulFunctionCall",
																"src": "7273:15:5"
															},
															"nativeSrc": "7273:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "7273:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7304:1:5",
																		"nodeType": "YulLiteral",
																		"src": "7304:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7307:4:5",
																		"nodeType": "YulLiteral",
																		"src": "7307:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7297:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "7297:6:5"
																},
																"nativeSrc": "7297:15:5",
																"nodeType": "YulFunctionCall",
																"src": "7297:15:5"
															},
															"nativeSrc": "7297:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "7297:15:5"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "7191:127:5",
												"nodeType": "YulFunctionDefinition",
												"src": "7191:127:5"
											},
											{
												"body": {
													"nativeSrc": "7370:88:5",
													"nodeType": "YulBlock",
													"src": "7370:88:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "7401:22:5",
																"nodeType": "YulBlock",
																"src": "7401:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "7403:16:5",
																				"nodeType": "YulIdentifier",
																				"src": "7403:16:5"
																			},
																			"nativeSrc": "7403:18:5",
																			"nodeType": "YulFunctionCall",
																			"src": "7403:18:5"
																		},
																		"nativeSrc": "7403:18:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "7403:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7386:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "7386:5:5"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "7397:1:5",
																				"nodeType": "YulLiteral",
																				"src": "7397:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "7393:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "7393:3:5"
																		},
																		"nativeSrc": "7393:6:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7393:6:5"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "7383:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "7383:2:5"
																},
																"nativeSrc": "7383:17:5",
																"nodeType": "YulFunctionCall",
																"src": "7383:17:5"
															},
															"nativeSrc": "7380:43:5",
															"nodeType": "YulIf",
															"src": "7380:43:5"
														},
														{
															"nativeSrc": "7432:20:5",
															"nodeType": "YulAssignment",
															"src": "7432:20:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7443:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "7443:5:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7450:1:5",
																		"nodeType": "YulLiteral",
																		"src": "7450:1:5",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7439:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "7439:3:5"
																},
																"nativeSrc": "7439:13:5",
																"nodeType": "YulFunctionCall",
																"src": "7439:13:5"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "7432:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "7432:3:5"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nativeSrc": "7323:135:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7352:5:5",
														"nodeType": "YulTypedName",
														"src": "7352:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "7362:3:5",
														"nodeType": "YulTypedName",
														"src": "7362:3:5",
														"type": ""
													}
												],
												"src": "7323:135:5"
											},
											{
												"body": {
													"nativeSrc": "7564:102:5",
													"nodeType": "YulBlock",
													"src": "7564:102:5",
													"statements": [
														{
															"nativeSrc": "7574:26:5",
															"nodeType": "YulAssignment",
															"src": "7574:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7586:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "7586:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7597:2:5",
																		"nodeType": "YulLiteral",
																		"src": "7597:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7582:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "7582:3:5"
																},
																"nativeSrc": "7582:18:5",
																"nodeType": "YulFunctionCall",
																"src": "7582:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7574:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "7574:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7616:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "7616:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "7631:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "7631:6:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "7647:3:5",
																								"nodeType": "YulLiteral",
																								"src": "7647:3:5",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "7652:1:5",
																								"nodeType": "YulLiteral",
																								"src": "7652:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "7643:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "7643:3:5"
																						},
																						"nativeSrc": "7643:11:5",
																						"nodeType": "YulFunctionCall",
																						"src": "7643:11:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7656:1:5",
																						"nodeType": "YulLiteral",
																						"src": "7656:1:5",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "7639:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "7639:3:5"
																				},
																				"nativeSrc": "7639:19:5",
																				"nodeType": "YulFunctionCall",
																				"src": "7639:19:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "7627:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "7627:3:5"
																		},
																		"nativeSrc": "7627:32:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7627:32:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7609:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "7609:6:5"
																},
																"nativeSrc": "7609:51:5",
																"nodeType": "YulFunctionCall",
																"src": "7609:51:5"
															},
															"nativeSrc": "7609:51:5",
															"nodeType": "YulExpressionStatement",
															"src": "7609:51:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "7463:203:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7533:9:5",
														"nodeType": "YulTypedName",
														"src": "7533:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7544:6:5",
														"nodeType": "YulTypedName",
														"src": "7544:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7555:4:5",
														"nodeType": "YulTypedName",
														"src": "7555:4:5",
														"type": ""
													}
												],
												"src": "7463:203:5"
											},
											{
												"body": {
													"nativeSrc": "7850:300:5",
													"nodeType": "YulBlock",
													"src": "7850:300:5",
													"statements": [
														{
															"nativeSrc": "7860:27:5",
															"nodeType": "YulAssignment",
															"src": "7860:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7872:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "7872:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7883:3:5",
																		"nodeType": "YulLiteral",
																		"src": "7883:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7868:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "7868:3:5"
																},
																"nativeSrc": "7868:19:5",
																"nodeType": "YulFunctionCall",
																"src": "7868:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7860:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "7860:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7903:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "7903:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "7918:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "7918:6:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "7934:3:5",
																								"nodeType": "YulLiteral",
																								"src": "7934:3:5",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "7939:1:5",
																								"nodeType": "YulLiteral",
																								"src": "7939:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "7930:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "7930:3:5"
																						},
																						"nativeSrc": "7930:11:5",
																						"nodeType": "YulFunctionCall",
																						"src": "7930:11:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7943:1:5",
																						"nodeType": "YulLiteral",
																						"src": "7943:1:5",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "7926:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "7926:3:5"
																				},
																				"nativeSrc": "7926:19:5",
																				"nodeType": "YulFunctionCall",
																				"src": "7926:19:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "7914:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "7914:3:5"
																		},
																		"nativeSrc": "7914:32:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7914:32:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7896:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "7896:6:5"
																},
																"nativeSrc": "7896:51:5",
																"nodeType": "YulFunctionCall",
																"src": "7896:51:5"
															},
															"nativeSrc": "7896:51:5",
															"nodeType": "YulExpressionStatement",
															"src": "7896:51:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7967:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "7967:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7978:2:5",
																				"nodeType": "YulLiteral",
																				"src": "7978:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7963:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "7963:3:5"
																		},
																		"nativeSrc": "7963:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7963:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "7987:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "7987:6:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "8003:3:5",
																								"nodeType": "YulLiteral",
																								"src": "8003:3:5",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "8008:1:5",
																								"nodeType": "YulLiteral",
																								"src": "8008:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "7999:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "7999:3:5"
																						},
																						"nativeSrc": "7999:11:5",
																						"nodeType": "YulFunctionCall",
																						"src": "7999:11:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8012:1:5",
																						"nodeType": "YulLiteral",
																						"src": "8012:1:5",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "7995:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "7995:3:5"
																				},
																				"nativeSrc": "7995:19:5",
																				"nodeType": "YulFunctionCall",
																				"src": "7995:19:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "7983:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "7983:3:5"
																		},
																		"nativeSrc": "7983:32:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7983:32:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7956:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "7956:6:5"
																},
																"nativeSrc": "7956:60:5",
																"nodeType": "YulFunctionCall",
																"src": "7956:60:5"
															},
															"nativeSrc": "7956:60:5",
															"nodeType": "YulExpressionStatement",
															"src": "7956:60:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8036:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "8036:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8047:2:5",
																				"nodeType": "YulLiteral",
																				"src": "8047:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8032:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "8032:3:5"
																		},
																		"nativeSrc": "8032:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8032:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nativeSrc": "8056:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "8056:6:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "8072:3:5",
																								"nodeType": "YulLiteral",
																								"src": "8072:3:5",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "8077:1:5",
																								"nodeType": "YulLiteral",
																								"src": "8077:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "8068:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "8068:3:5"
																						},
																						"nativeSrc": "8068:11:5",
																						"nodeType": "YulFunctionCall",
																						"src": "8068:11:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8081:1:5",
																						"nodeType": "YulLiteral",
																						"src": "8081:1:5",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "8064:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "8064:3:5"
																				},
																				"nativeSrc": "8064:19:5",
																				"nodeType": "YulFunctionCall",
																				"src": "8064:19:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "8052:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "8052:3:5"
																		},
																		"nativeSrc": "8052:32:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8052:32:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8025:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "8025:6:5"
																},
																"nativeSrc": "8025:60:5",
																"nodeType": "YulFunctionCall",
																"src": "8025:60:5"
															},
															"nativeSrc": "8025:60:5",
															"nodeType": "YulExpressionStatement",
															"src": "8025:60:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8105:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "8105:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8116:2:5",
																				"nodeType": "YulLiteral",
																				"src": "8116:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8101:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "8101:3:5"
																		},
																		"nativeSrc": "8101:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8101:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value3",
																						"nativeSrc": "8135:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "8135:6:5"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "8128:6:5",
																					"nodeType": "YulIdentifier",
																					"src": "8128:6:5"
																				},
																				"nativeSrc": "8128:14:5",
																				"nodeType": "YulFunctionCall",
																				"src": "8128:14:5"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "8121:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "8121:6:5"
																		},
																		"nativeSrc": "8121:22:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8121:22:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8094:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "8094:6:5"
																},
																"nativeSrc": "8094:50:5",
																"nodeType": "YulFunctionCall",
																"src": "8094:50:5"
															},
															"nativeSrc": "8094:50:5",
															"nodeType": "YulExpressionStatement",
															"src": "8094:50:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_address_t_bool__to_t_address_t_address_t_address_t_bool__fromStack_reversed",
												"nativeSrc": "7671:479:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7795:9:5",
														"nodeType": "YulTypedName",
														"src": "7795:9:5",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "7806:6:5",
														"nodeType": "YulTypedName",
														"src": "7806:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "7814:6:5",
														"nodeType": "YulTypedName",
														"src": "7814:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7822:6:5",
														"nodeType": "YulTypedName",
														"src": "7822:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7830:6:5",
														"nodeType": "YulTypedName",
														"src": "7830:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7841:4:5",
														"nodeType": "YulTypedName",
														"src": "7841:4:5",
														"type": ""
													}
												],
												"src": "7671:479:5"
											},
											{
												"body": {
													"nativeSrc": "8187:95:5",
													"nodeType": "YulBlock",
													"src": "8187:95:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8204:1:5",
																		"nodeType": "YulLiteral",
																		"src": "8204:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "8211:3:5",
																				"nodeType": "YulLiteral",
																				"src": "8211:3:5",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8216:10:5",
																				"nodeType": "YulLiteral",
																				"src": "8216:10:5",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "8207:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "8207:3:5"
																		},
																		"nativeSrc": "8207:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8207:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8197:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "8197:6:5"
																},
																"nativeSrc": "8197:31:5",
																"nodeType": "YulFunctionCall",
																"src": "8197:31:5"
															},
															"nativeSrc": "8197:31:5",
															"nodeType": "YulExpressionStatement",
															"src": "8197:31:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8244:1:5",
																		"nodeType": "YulLiteral",
																		"src": "8244:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8247:4:5",
																		"nodeType": "YulLiteral",
																		"src": "8247:4:5",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8237:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "8237:6:5"
																},
																"nativeSrc": "8237:15:5",
																"nodeType": "YulFunctionCall",
																"src": "8237:15:5"
															},
															"nativeSrc": "8237:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "8237:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8268:1:5",
																		"nodeType": "YulLiteral",
																		"src": "8268:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8271:4:5",
																		"nodeType": "YulLiteral",
																		"src": "8271:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8261:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "8261:6:5"
																},
																"nativeSrc": "8261:15:5",
																"nodeType": "YulFunctionCall",
																"src": "8261:15:5"
															},
															"nativeSrc": "8261:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "8261:15:5"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "8155:127:5",
												"nodeType": "YulFunctionDefinition",
												"src": "8155:127:5"
											},
											{
												"body": {
													"nativeSrc": "8319:95:5",
													"nodeType": "YulBlock",
													"src": "8319:95:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8336:1:5",
																		"nodeType": "YulLiteral",
																		"src": "8336:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "8343:3:5",
																				"nodeType": "YulLiteral",
																				"src": "8343:3:5",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8348:10:5",
																				"nodeType": "YulLiteral",
																				"src": "8348:10:5",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "8339:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "8339:3:5"
																		},
																		"nativeSrc": "8339:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8339:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8329:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "8329:6:5"
																},
																"nativeSrc": "8329:31:5",
																"nodeType": "YulFunctionCall",
																"src": "8329:31:5"
															},
															"nativeSrc": "8329:31:5",
															"nodeType": "YulExpressionStatement",
															"src": "8329:31:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8376:1:5",
																		"nodeType": "YulLiteral",
																		"src": "8376:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8379:4:5",
																		"nodeType": "YulLiteral",
																		"src": "8379:4:5",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8369:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "8369:6:5"
																},
																"nativeSrc": "8369:15:5",
																"nodeType": "YulFunctionCall",
																"src": "8369:15:5"
															},
															"nativeSrc": "8369:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "8369:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8400:1:5",
																		"nodeType": "YulLiteral",
																		"src": "8400:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8403:4:5",
																		"nodeType": "YulLiteral",
																		"src": "8403:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8393:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "8393:6:5"
																},
																"nativeSrc": "8393:15:5",
																"nodeType": "YulFunctionCall",
																"src": "8393:15:5"
															},
															"nativeSrc": "8393:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "8393:15:5"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "8287:127:5",
												"nodeType": "YulFunctionDefinition",
												"src": "8287:127:5"
											},
											{
												"body": {
													"nativeSrc": "8626:344:5",
													"nodeType": "YulBlock",
													"src": "8626:344:5",
													"statements": [
														{
															"nativeSrc": "8636:27:5",
															"nodeType": "YulAssignment",
															"src": "8636:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8648:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "8648:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8659:3:5",
																		"nodeType": "YulLiteral",
																		"src": "8659:3:5",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8644:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "8644:3:5"
																},
																"nativeSrc": "8644:19:5",
																"nodeType": "YulFunctionCall",
																"src": "8644:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8636:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "8636:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8679:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "8679:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "8694:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "8694:6:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "8710:3:5",
																								"nodeType": "YulLiteral",
																								"src": "8710:3:5",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "8715:1:5",
																								"nodeType": "YulLiteral",
																								"src": "8715:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "8706:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "8706:3:5"
																						},
																						"nativeSrc": "8706:11:5",
																						"nodeType": "YulFunctionCall",
																						"src": "8706:11:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8719:1:5",
																						"nodeType": "YulLiteral",
																						"src": "8719:1:5",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "8702:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "8702:3:5"
																				},
																				"nativeSrc": "8702:19:5",
																				"nodeType": "YulFunctionCall",
																				"src": "8702:19:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "8690:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "8690:3:5"
																		},
																		"nativeSrc": "8690:32:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8690:32:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8672:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "8672:6:5"
																},
																"nativeSrc": "8672:51:5",
																"nodeType": "YulFunctionCall",
																"src": "8672:51:5"
															},
															"nativeSrc": "8672:51:5",
															"nodeType": "YulExpressionStatement",
															"src": "8672:51:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8743:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "8743:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8754:2:5",
																				"nodeType": "YulLiteral",
																				"src": "8754:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8739:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "8739:3:5"
																		},
																		"nativeSrc": "8739:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8739:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "8763:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "8763:6:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "8779:3:5",
																								"nodeType": "YulLiteral",
																								"src": "8779:3:5",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "8784:1:5",
																								"nodeType": "YulLiteral",
																								"src": "8784:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "8775:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "8775:3:5"
																						},
																						"nativeSrc": "8775:11:5",
																						"nodeType": "YulFunctionCall",
																						"src": "8775:11:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8788:1:5",
																						"nodeType": "YulLiteral",
																						"src": "8788:1:5",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "8771:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "8771:3:5"
																				},
																				"nativeSrc": "8771:19:5",
																				"nodeType": "YulFunctionCall",
																				"src": "8771:19:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "8759:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "8759:3:5"
																		},
																		"nativeSrc": "8759:32:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8759:32:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8732:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "8732:6:5"
																},
																"nativeSrc": "8732:60:5",
																"nodeType": "YulFunctionCall",
																"src": "8732:60:5"
															},
															"nativeSrc": "8732:60:5",
															"nodeType": "YulExpressionStatement",
															"src": "8732:60:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8812:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "8812:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8823:2:5",
																				"nodeType": "YulLiteral",
																				"src": "8823:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8808:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "8808:3:5"
																		},
																		"nativeSrc": "8808:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8808:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nativeSrc": "8832:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "8832:6:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "8848:3:5",
																								"nodeType": "YulLiteral",
																								"src": "8848:3:5",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "8853:1:5",
																								"nodeType": "YulLiteral",
																								"src": "8853:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "8844:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "8844:3:5"
																						},
																						"nativeSrc": "8844:11:5",
																						"nodeType": "YulFunctionCall",
																						"src": "8844:11:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8857:1:5",
																						"nodeType": "YulLiteral",
																						"src": "8857:1:5",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "8840:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "8840:3:5"
																				},
																				"nativeSrc": "8840:19:5",
																				"nodeType": "YulFunctionCall",
																				"src": "8840:19:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "8828:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "8828:3:5"
																		},
																		"nativeSrc": "8828:32:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8828:32:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8801:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "8801:6:5"
																},
																"nativeSrc": "8801:60:5",
																"nodeType": "YulFunctionCall",
																"src": "8801:60:5"
															},
															"nativeSrc": "8801:60:5",
															"nodeType": "YulExpressionStatement",
															"src": "8801:60:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8881:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "8881:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8892:2:5",
																				"nodeType": "YulLiteral",
																				"src": "8892:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8877:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "8877:3:5"
																		},
																		"nativeSrc": "8877:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8877:18:5"
																	},
																	{
																		"name": "value3",
																		"nativeSrc": "8897:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "8897:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8870:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "8870:6:5"
																},
																"nativeSrc": "8870:34:5",
																"nodeType": "YulFunctionCall",
																"src": "8870:34:5"
															},
															"nativeSrc": "8870:34:5",
															"nodeType": "YulExpressionStatement",
															"src": "8870:34:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8924:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "8924:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8935:3:5",
																				"nodeType": "YulLiteral",
																				"src": "8935:3:5",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8920:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "8920:3:5"
																		},
																		"nativeSrc": "8920:19:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8920:19:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value4",
																						"nativeSrc": "8955:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "8955:6:5"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "8948:6:5",
																					"nodeType": "YulIdentifier",
																					"src": "8948:6:5"
																				},
																				"nativeSrc": "8948:14:5",
																				"nodeType": "YulFunctionCall",
																				"src": "8948:14:5"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "8941:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "8941:6:5"
																		},
																		"nativeSrc": "8941:22:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8941:22:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8913:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "8913:6:5"
																},
																"nativeSrc": "8913:51:5",
																"nodeType": "YulFunctionCall",
																"src": "8913:51:5"
															},
															"nativeSrc": "8913:51:5",
															"nodeType": "YulExpressionStatement",
															"src": "8913:51:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_address_t_uint256_t_bool__to_t_address_t_address_t_address_t_uint256_t_bool__fromStack_reversed",
												"nativeSrc": "8419:551:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8563:9:5",
														"nodeType": "YulTypedName",
														"src": "8563:9:5",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "8574:6:5",
														"nodeType": "YulTypedName",
														"src": "8574:6:5",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "8582:6:5",
														"nodeType": "YulTypedName",
														"src": "8582:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "8590:6:5",
														"nodeType": "YulTypedName",
														"src": "8590:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8598:6:5",
														"nodeType": "YulTypedName",
														"src": "8598:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8606:6:5",
														"nodeType": "YulTypedName",
														"src": "8606:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8617:4:5",
														"nodeType": "YulTypedName",
														"src": "8617:4:5",
														"type": ""
													}
												],
												"src": "8419:551:5"
											},
											{
												"body": {
													"nativeSrc": "9126:230:5",
													"nodeType": "YulBlock",
													"src": "9126:230:5",
													"statements": [
														{
															"nativeSrc": "9136:26:5",
															"nodeType": "YulAssignment",
															"src": "9136:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9148:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "9148:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9159:2:5",
																		"nodeType": "YulLiteral",
																		"src": "9159:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9144:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "9144:3:5"
																},
																"nativeSrc": "9144:18:5",
																"nodeType": "YulFunctionCall",
																"src": "9144:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9136:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "9136:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9178:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "9178:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "9193:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "9193:6:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "9209:3:5",
																								"nodeType": "YulLiteral",
																								"src": "9209:3:5",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "9214:1:5",
																								"nodeType": "YulLiteral",
																								"src": "9214:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "9205:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "9205:3:5"
																						},
																						"nativeSrc": "9205:11:5",
																						"nodeType": "YulFunctionCall",
																						"src": "9205:11:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9218:1:5",
																						"nodeType": "YulLiteral",
																						"src": "9218:1:5",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "9201:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "9201:3:5"
																				},
																				"nativeSrc": "9201:19:5",
																				"nodeType": "YulFunctionCall",
																				"src": "9201:19:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "9189:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "9189:3:5"
																		},
																		"nativeSrc": "9189:32:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9189:32:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9171:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "9171:6:5"
																},
																"nativeSrc": "9171:51:5",
																"nodeType": "YulFunctionCall",
																"src": "9171:51:5"
															},
															"nativeSrc": "9171:51:5",
															"nodeType": "YulExpressionStatement",
															"src": "9171:51:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9242:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "9242:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9253:2:5",
																				"nodeType": "YulLiteral",
																				"src": "9253:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9238:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "9238:3:5"
																		},
																		"nativeSrc": "9238:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9238:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "9262:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "9262:6:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "9278:3:5",
																								"nodeType": "YulLiteral",
																								"src": "9278:3:5",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "9283:1:5",
																								"nodeType": "YulLiteral",
																								"src": "9283:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "9274:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "9274:3:5"
																						},
																						"nativeSrc": "9274:11:5",
																						"nodeType": "YulFunctionCall",
																						"src": "9274:11:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9287:1:5",
																						"nodeType": "YulLiteral",
																						"src": "9287:1:5",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "9270:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "9270:3:5"
																				},
																				"nativeSrc": "9270:19:5",
																				"nodeType": "YulFunctionCall",
																				"src": "9270:19:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "9258:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "9258:3:5"
																		},
																		"nativeSrc": "9258:32:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9258:32:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9231:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "9231:6:5"
																},
																"nativeSrc": "9231:60:5",
																"nodeType": "YulFunctionCall",
																"src": "9231:60:5"
															},
															"nativeSrc": "9231:60:5",
															"nodeType": "YulExpressionStatement",
															"src": "9231:60:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9311:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "9311:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9322:2:5",
																				"nodeType": "YulLiteral",
																				"src": "9322:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9307:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "9307:3:5"
																		},
																		"nativeSrc": "9307:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9307:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value2",
																						"nativeSrc": "9341:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "9341:6:5"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "9334:6:5",
																					"nodeType": "YulIdentifier",
																					"src": "9334:6:5"
																				},
																				"nativeSrc": "9334:14:5",
																				"nodeType": "YulFunctionCall",
																				"src": "9334:14:5"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "9327:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "9327:6:5"
																		},
																		"nativeSrc": "9327:22:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9327:22:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9300:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "9300:6:5"
																},
																"nativeSrc": "9300:50:5",
																"nodeType": "YulFunctionCall",
																"src": "9300:50:5"
															},
															"nativeSrc": "9300:50:5",
															"nodeType": "YulExpressionStatement",
															"src": "9300:50:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_bool__to_t_address_t_address_t_bool__fromStack_reversed",
												"nativeSrc": "8975:381:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9079:9:5",
														"nodeType": "YulTypedName",
														"src": "9079:9:5",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "9090:6:5",
														"nodeType": "YulTypedName",
														"src": "9090:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9098:6:5",
														"nodeType": "YulTypedName",
														"src": "9098:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9106:6:5",
														"nodeType": "YulTypedName",
														"src": "9106:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9117:4:5",
														"nodeType": "YulTypedName",
														"src": "9117:4:5",
														"type": ""
													}
												],
												"src": "8975:381:5"
											},
											{
												"body": {
													"nativeSrc": "9574:328:5",
													"nodeType": "YulBlock",
													"src": "9574:328:5",
													"statements": [
														{
															"nativeSrc": "9584:27:5",
															"nodeType": "YulAssignment",
															"src": "9584:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9596:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "9596:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9607:3:5",
																		"nodeType": "YulLiteral",
																		"src": "9607:3:5",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9592:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "9592:3:5"
																},
																"nativeSrc": "9592:19:5",
																"nodeType": "YulFunctionCall",
																"src": "9592:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9584:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "9584:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9627:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "9627:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "9642:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "9642:6:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "9658:3:5",
																								"nodeType": "YulLiteral",
																								"src": "9658:3:5",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "9663:1:5",
																								"nodeType": "YulLiteral",
																								"src": "9663:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "9654:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "9654:3:5"
																						},
																						"nativeSrc": "9654:11:5",
																						"nodeType": "YulFunctionCall",
																						"src": "9654:11:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9667:1:5",
																						"nodeType": "YulLiteral",
																						"src": "9667:1:5",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "9650:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "9650:3:5"
																				},
																				"nativeSrc": "9650:19:5",
																				"nodeType": "YulFunctionCall",
																				"src": "9650:19:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "9638:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "9638:3:5"
																		},
																		"nativeSrc": "9638:32:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9638:32:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9620:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "9620:6:5"
																},
																"nativeSrc": "9620:51:5",
																"nodeType": "YulFunctionCall",
																"src": "9620:51:5"
															},
															"nativeSrc": "9620:51:5",
															"nodeType": "YulExpressionStatement",
															"src": "9620:51:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9691:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "9691:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9702:2:5",
																				"nodeType": "YulLiteral",
																				"src": "9702:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9687:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "9687:3:5"
																		},
																		"nativeSrc": "9687:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9687:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "9711:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "9711:6:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "9727:3:5",
																								"nodeType": "YulLiteral",
																								"src": "9727:3:5",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "9732:1:5",
																								"nodeType": "YulLiteral",
																								"src": "9732:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "9723:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "9723:3:5"
																						},
																						"nativeSrc": "9723:11:5",
																						"nodeType": "YulFunctionCall",
																						"src": "9723:11:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9736:1:5",
																						"nodeType": "YulLiteral",
																						"src": "9736:1:5",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "9719:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "9719:3:5"
																				},
																				"nativeSrc": "9719:19:5",
																				"nodeType": "YulFunctionCall",
																				"src": "9719:19:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "9707:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "9707:3:5"
																		},
																		"nativeSrc": "9707:32:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9707:32:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9680:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "9680:6:5"
																},
																"nativeSrc": "9680:60:5",
																"nodeType": "YulFunctionCall",
																"src": "9680:60:5"
															},
															"nativeSrc": "9680:60:5",
															"nodeType": "YulExpressionStatement",
															"src": "9680:60:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9760:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "9760:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9771:2:5",
																				"nodeType": "YulLiteral",
																				"src": "9771:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9756:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "9756:3:5"
																		},
																		"nativeSrc": "9756:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9756:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nativeSrc": "9780:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "9780:6:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "9796:3:5",
																								"nodeType": "YulLiteral",
																								"src": "9796:3:5",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "9801:1:5",
																								"nodeType": "YulLiteral",
																								"src": "9801:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "9792:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "9792:3:5"
																						},
																						"nativeSrc": "9792:11:5",
																						"nodeType": "YulFunctionCall",
																						"src": "9792:11:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9805:1:5",
																						"nodeType": "YulLiteral",
																						"src": "9805:1:5",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "9788:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "9788:3:5"
																				},
																				"nativeSrc": "9788:19:5",
																				"nodeType": "YulFunctionCall",
																				"src": "9788:19:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "9776:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "9776:3:5"
																		},
																		"nativeSrc": "9776:32:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9776:32:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9749:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "9749:6:5"
																},
																"nativeSrc": "9749:60:5",
																"nodeType": "YulFunctionCall",
																"src": "9749:60:5"
															},
															"nativeSrc": "9749:60:5",
															"nodeType": "YulExpressionStatement",
															"src": "9749:60:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9829:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "9829:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9840:2:5",
																				"nodeType": "YulLiteral",
																				"src": "9840:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9825:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "9825:3:5"
																		},
																		"nativeSrc": "9825:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9825:18:5"
																	},
																	{
																		"name": "value3",
																		"nativeSrc": "9845:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "9845:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9818:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "9818:6:5"
																},
																"nativeSrc": "9818:34:5",
																"nodeType": "YulFunctionCall",
																"src": "9818:34:5"
															},
															"nativeSrc": "9818:34:5",
															"nodeType": "YulExpressionStatement",
															"src": "9818:34:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9872:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "9872:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9883:3:5",
																				"nodeType": "YulLiteral",
																				"src": "9883:3:5",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9868:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "9868:3:5"
																		},
																		"nativeSrc": "9868:19:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9868:19:5"
																	},
																	{
																		"name": "value4",
																		"nativeSrc": "9889:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "9889:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9861:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "9861:6:5"
																},
																"nativeSrc": "9861:35:5",
																"nodeType": "YulFunctionCall",
																"src": "9861:35:5"
															},
															"nativeSrc": "9861:35:5",
															"nodeType": "YulExpressionStatement",
															"src": "9861:35:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_address_t_uint256_t_uint256__to_t_address_t_address_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "9361:541:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9511:9:5",
														"nodeType": "YulTypedName",
														"src": "9511:9:5",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "9522:6:5",
														"nodeType": "YulTypedName",
														"src": "9522:6:5",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "9530:6:5",
														"nodeType": "YulTypedName",
														"src": "9530:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "9538:6:5",
														"nodeType": "YulTypedName",
														"src": "9538:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9546:6:5",
														"nodeType": "YulTypedName",
														"src": "9546:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9554:6:5",
														"nodeType": "YulTypedName",
														"src": "9554:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9565:4:5",
														"nodeType": "YulTypedName",
														"src": "9565:4:5",
														"type": ""
													}
												],
												"src": "9361:541:5"
											},
											{
												"body": {
													"nativeSrc": "10092:258:5",
													"nodeType": "YulBlock",
													"src": "10092:258:5",
													"statements": [
														{
															"nativeSrc": "10102:27:5",
															"nodeType": "YulAssignment",
															"src": "10102:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10114:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "10114:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10125:3:5",
																		"nodeType": "YulLiteral",
																		"src": "10125:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10110:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "10110:3:5"
																},
																"nativeSrc": "10110:19:5",
																"nodeType": "YulFunctionCall",
																"src": "10110:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10102:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "10102:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10145:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "10145:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "10160:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "10160:6:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "10176:3:5",
																								"nodeType": "YulLiteral",
																								"src": "10176:3:5",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "10181:1:5",
																								"nodeType": "YulLiteral",
																								"src": "10181:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "10172:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "10172:3:5"
																						},
																						"nativeSrc": "10172:11:5",
																						"nodeType": "YulFunctionCall",
																						"src": "10172:11:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10185:1:5",
																						"nodeType": "YulLiteral",
																						"src": "10185:1:5",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "10168:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "10168:3:5"
																				},
																				"nativeSrc": "10168:19:5",
																				"nodeType": "YulFunctionCall",
																				"src": "10168:19:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "10156:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "10156:3:5"
																		},
																		"nativeSrc": "10156:32:5",
																		"nodeType": "YulFunctionCall",
																		"src": "10156:32:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10138:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "10138:6:5"
																},
																"nativeSrc": "10138:51:5",
																"nodeType": "YulFunctionCall",
																"src": "10138:51:5"
															},
															"nativeSrc": "10138:51:5",
															"nodeType": "YulExpressionStatement",
															"src": "10138:51:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10209:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "10209:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10220:2:5",
																				"nodeType": "YulLiteral",
																				"src": "10220:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10205:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "10205:3:5"
																		},
																		"nativeSrc": "10205:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "10205:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "10229:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "10229:6:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "10245:3:5",
																								"nodeType": "YulLiteral",
																								"src": "10245:3:5",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "10250:1:5",
																								"nodeType": "YulLiteral",
																								"src": "10250:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "10241:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "10241:3:5"
																						},
																						"nativeSrc": "10241:11:5",
																						"nodeType": "YulFunctionCall",
																						"src": "10241:11:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10254:1:5",
																						"nodeType": "YulLiteral",
																						"src": "10254:1:5",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "10237:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "10237:3:5"
																				},
																				"nativeSrc": "10237:19:5",
																				"nodeType": "YulFunctionCall",
																				"src": "10237:19:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "10225:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "10225:3:5"
																		},
																		"nativeSrc": "10225:32:5",
																		"nodeType": "YulFunctionCall",
																		"src": "10225:32:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10198:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "10198:6:5"
																},
																"nativeSrc": "10198:60:5",
																"nodeType": "YulFunctionCall",
																"src": "10198:60:5"
															},
															"nativeSrc": "10198:60:5",
															"nodeType": "YulExpressionStatement",
															"src": "10198:60:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10278:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "10278:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10289:2:5",
																				"nodeType": "YulLiteral",
																				"src": "10289:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10274:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "10274:3:5"
																		},
																		"nativeSrc": "10274:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "10274:18:5"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "10294:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "10294:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10267:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "10267:6:5"
																},
																"nativeSrc": "10267:34:5",
																"nodeType": "YulFunctionCall",
																"src": "10267:34:5"
															},
															"nativeSrc": "10267:34:5",
															"nodeType": "YulExpressionStatement",
															"src": "10267:34:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10321:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "10321:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10332:2:5",
																				"nodeType": "YulLiteral",
																				"src": "10332:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10317:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "10317:3:5"
																		},
																		"nativeSrc": "10317:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "10317:18:5"
																	},
																	{
																		"name": "value3",
																		"nativeSrc": "10337:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "10337:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10310:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "10310:6:5"
																},
																"nativeSrc": "10310:34:5",
																"nodeType": "YulFunctionCall",
																"src": "10310:34:5"
															},
															"nativeSrc": "10310:34:5",
															"nodeType": "YulExpressionStatement",
															"src": "10310:34:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_uint256__to_t_address_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "9907:443:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10037:9:5",
														"nodeType": "YulTypedName",
														"src": "10037:9:5",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "10048:6:5",
														"nodeType": "YulTypedName",
														"src": "10048:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "10056:6:5",
														"nodeType": "YulTypedName",
														"src": "10056:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10064:6:5",
														"nodeType": "YulTypedName",
														"src": "10064:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10072:6:5",
														"nodeType": "YulTypedName",
														"src": "10072:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10083:4:5",
														"nodeType": "YulTypedName",
														"src": "10083:4:5",
														"type": ""
													}
												],
												"src": "9907:443:5"
											},
											{
												"body": {
													"nativeSrc": "10596:372:5",
													"nodeType": "YulBlock",
													"src": "10596:372:5",
													"statements": [
														{
															"nativeSrc": "10606:27:5",
															"nodeType": "YulAssignment",
															"src": "10606:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10618:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "10618:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10629:3:5",
																		"nodeType": "YulLiteral",
																		"src": "10629:3:5",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10614:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "10614:3:5"
																},
																"nativeSrc": "10614:19:5",
																"nodeType": "YulFunctionCall",
																"src": "10614:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10606:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "10606:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10649:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "10649:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "10664:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "10664:6:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "10680:3:5",
																								"nodeType": "YulLiteral",
																								"src": "10680:3:5",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "10685:1:5",
																								"nodeType": "YulLiteral",
																								"src": "10685:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "10676:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "10676:3:5"
																						},
																						"nativeSrc": "10676:11:5",
																						"nodeType": "YulFunctionCall",
																						"src": "10676:11:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10689:1:5",
																						"nodeType": "YulLiteral",
																						"src": "10689:1:5",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "10672:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "10672:3:5"
																				},
																				"nativeSrc": "10672:19:5",
																				"nodeType": "YulFunctionCall",
																				"src": "10672:19:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "10660:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "10660:3:5"
																		},
																		"nativeSrc": "10660:32:5",
																		"nodeType": "YulFunctionCall",
																		"src": "10660:32:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10642:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "10642:6:5"
																},
																"nativeSrc": "10642:51:5",
																"nodeType": "YulFunctionCall",
																"src": "10642:51:5"
															},
															"nativeSrc": "10642:51:5",
															"nodeType": "YulExpressionStatement",
															"src": "10642:51:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10713:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "10713:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10724:2:5",
																				"nodeType": "YulLiteral",
																				"src": "10724:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10709:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "10709:3:5"
																		},
																		"nativeSrc": "10709:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "10709:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "10733:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "10733:6:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "10749:3:5",
																								"nodeType": "YulLiteral",
																								"src": "10749:3:5",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "10754:1:5",
																								"nodeType": "YulLiteral",
																								"src": "10754:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "10745:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "10745:3:5"
																						},
																						"nativeSrc": "10745:11:5",
																						"nodeType": "YulFunctionCall",
																						"src": "10745:11:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10758:1:5",
																						"nodeType": "YulLiteral",
																						"src": "10758:1:5",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "10741:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "10741:3:5"
																				},
																				"nativeSrc": "10741:19:5",
																				"nodeType": "YulFunctionCall",
																				"src": "10741:19:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "10729:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "10729:3:5"
																		},
																		"nativeSrc": "10729:32:5",
																		"nodeType": "YulFunctionCall",
																		"src": "10729:32:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10702:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "10702:6:5"
																},
																"nativeSrc": "10702:60:5",
																"nodeType": "YulFunctionCall",
																"src": "10702:60:5"
															},
															"nativeSrc": "10702:60:5",
															"nodeType": "YulExpressionStatement",
															"src": "10702:60:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10782:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "10782:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10793:2:5",
																				"nodeType": "YulLiteral",
																				"src": "10793:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10778:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "10778:3:5"
																		},
																		"nativeSrc": "10778:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "10778:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nativeSrc": "10802:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "10802:6:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "10818:3:5",
																								"nodeType": "YulLiteral",
																								"src": "10818:3:5",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "10823:1:5",
																								"nodeType": "YulLiteral",
																								"src": "10823:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "10814:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "10814:3:5"
																						},
																						"nativeSrc": "10814:11:5",
																						"nodeType": "YulFunctionCall",
																						"src": "10814:11:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10827:1:5",
																						"nodeType": "YulLiteral",
																						"src": "10827:1:5",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "10810:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "10810:3:5"
																				},
																				"nativeSrc": "10810:19:5",
																				"nodeType": "YulFunctionCall",
																				"src": "10810:19:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "10798:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "10798:3:5"
																		},
																		"nativeSrc": "10798:32:5",
																		"nodeType": "YulFunctionCall",
																		"src": "10798:32:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10771:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "10771:6:5"
																},
																"nativeSrc": "10771:60:5",
																"nodeType": "YulFunctionCall",
																"src": "10771:60:5"
															},
															"nativeSrc": "10771:60:5",
															"nodeType": "YulExpressionStatement",
															"src": "10771:60:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10851:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "10851:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10862:2:5",
																				"nodeType": "YulLiteral",
																				"src": "10862:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10847:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "10847:3:5"
																		},
																		"nativeSrc": "10847:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "10847:18:5"
																	},
																	{
																		"name": "value3",
																		"nativeSrc": "10867:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "10867:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10840:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "10840:6:5"
																},
																"nativeSrc": "10840:34:5",
																"nodeType": "YulFunctionCall",
																"src": "10840:34:5"
															},
															"nativeSrc": "10840:34:5",
															"nodeType": "YulExpressionStatement",
															"src": "10840:34:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10894:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "10894:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10905:3:5",
																				"nodeType": "YulLiteral",
																				"src": "10905:3:5",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10890:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "10890:3:5"
																		},
																		"nativeSrc": "10890:19:5",
																		"nodeType": "YulFunctionCall",
																		"src": "10890:19:5"
																	},
																	{
																		"name": "value4",
																		"nativeSrc": "10911:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "10911:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10883:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "10883:6:5"
																},
																"nativeSrc": "10883:35:5",
																"nodeType": "YulFunctionCall",
																"src": "10883:35:5"
															},
															"nativeSrc": "10883:35:5",
															"nodeType": "YulExpressionStatement",
															"src": "10883:35:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10938:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "10938:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10949:3:5",
																				"nodeType": "YulLiteral",
																				"src": "10949:3:5",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10934:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "10934:3:5"
																		},
																		"nativeSrc": "10934:19:5",
																		"nodeType": "YulFunctionCall",
																		"src": "10934:19:5"
																	},
																	{
																		"name": "value5",
																		"nativeSrc": "10955:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "10955:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10927:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "10927:6:5"
																},
																"nativeSrc": "10927:35:5",
																"nodeType": "YulFunctionCall",
																"src": "10927:35:5"
															},
															"nativeSrc": "10927:35:5",
															"nodeType": "YulExpressionStatement",
															"src": "10927:35:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "10355:613:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10525:9:5",
														"nodeType": "YulTypedName",
														"src": "10525:9:5",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "10536:6:5",
														"nodeType": "YulTypedName",
														"src": "10536:6:5",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "10544:6:5",
														"nodeType": "YulTypedName",
														"src": "10544:6:5",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "10552:6:5",
														"nodeType": "YulTypedName",
														"src": "10552:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "10560:6:5",
														"nodeType": "YulTypedName",
														"src": "10560:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10568:6:5",
														"nodeType": "YulTypedName",
														"src": "10568:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10576:6:5",
														"nodeType": "YulTypedName",
														"src": "10576:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10587:4:5",
														"nodeType": "YulTypedName",
														"src": "10587:4:5",
														"type": ""
													}
												],
												"src": "10355:613:5"
											},
											{
												"body": {
													"nativeSrc": "11102:171:5",
													"nodeType": "YulBlock",
													"src": "11102:171:5",
													"statements": [
														{
															"nativeSrc": "11112:26:5",
															"nodeType": "YulAssignment",
															"src": "11112:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11124:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "11124:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11135:2:5",
																		"nodeType": "YulLiteral",
																		"src": "11135:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11120:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "11120:3:5"
																},
																"nativeSrc": "11120:18:5",
																"nodeType": "YulFunctionCall",
																"src": "11120:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11112:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "11112:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11154:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "11154:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "11169:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "11169:6:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "11185:3:5",
																								"nodeType": "YulLiteral",
																								"src": "11185:3:5",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "11190:1:5",
																								"nodeType": "YulLiteral",
																								"src": "11190:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "11181:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "11181:3:5"
																						},
																						"nativeSrc": "11181:11:5",
																						"nodeType": "YulFunctionCall",
																						"src": "11181:11:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11194:1:5",
																						"nodeType": "YulLiteral",
																						"src": "11194:1:5",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "11177:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "11177:3:5"
																				},
																				"nativeSrc": "11177:19:5",
																				"nodeType": "YulFunctionCall",
																				"src": "11177:19:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "11165:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "11165:3:5"
																		},
																		"nativeSrc": "11165:32:5",
																		"nodeType": "YulFunctionCall",
																		"src": "11165:32:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11147:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "11147:6:5"
																},
																"nativeSrc": "11147:51:5",
																"nodeType": "YulFunctionCall",
																"src": "11147:51:5"
															},
															"nativeSrc": "11147:51:5",
															"nodeType": "YulExpressionStatement",
															"src": "11147:51:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11218:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "11218:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11229:2:5",
																				"nodeType": "YulLiteral",
																				"src": "11229:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11214:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "11214:3:5"
																		},
																		"nativeSrc": "11214:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "11214:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "11238:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "11238:6:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "11254:3:5",
																								"nodeType": "YulLiteral",
																								"src": "11254:3:5",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "11259:1:5",
																								"nodeType": "YulLiteral",
																								"src": "11259:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "11250:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "11250:3:5"
																						},
																						"nativeSrc": "11250:11:5",
																						"nodeType": "YulFunctionCall",
																						"src": "11250:11:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11263:1:5",
																						"nodeType": "YulLiteral",
																						"src": "11263:1:5",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "11246:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "11246:3:5"
																				},
																				"nativeSrc": "11246:19:5",
																				"nodeType": "YulFunctionCall",
																				"src": "11246:19:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "11234:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "11234:3:5"
																		},
																		"nativeSrc": "11234:32:5",
																		"nodeType": "YulFunctionCall",
																		"src": "11234:32:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11207:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "11207:6:5"
																},
																"nativeSrc": "11207:60:5",
																"nodeType": "YulFunctionCall",
																"src": "11207:60:5"
															},
															"nativeSrc": "11207:60:5",
															"nodeType": "YulExpressionStatement",
															"src": "11207:60:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nativeSrc": "10973:300:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11063:9:5",
														"nodeType": "YulTypedName",
														"src": "11063:9:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11074:6:5",
														"nodeType": "YulTypedName",
														"src": "11074:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11082:6:5",
														"nodeType": "YulTypedName",
														"src": "11082:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11093:4:5",
														"nodeType": "YulTypedName",
														"src": "11093:4:5",
														"type": ""
													}
												],
												"src": "10973:300:5"
											},
											{
												"body": {
													"nativeSrc": "11327:79:5",
													"nodeType": "YulBlock",
													"src": "11327:79:5",
													"statements": [
														{
															"nativeSrc": "11337:17:5",
															"nodeType": "YulAssignment",
															"src": "11337:17:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11349:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "11349:1:5"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "11352:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "11352:1:5"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "11345:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "11345:3:5"
																},
																"nativeSrc": "11345:9:5",
																"nodeType": "YulFunctionCall",
																"src": "11345:9:5"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "11337:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "11337:4:5"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11378:22:5",
																"nodeType": "YulBlock",
																"src": "11378:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "11380:16:5",
																				"nodeType": "YulIdentifier",
																				"src": "11380:16:5"
																			},
																			"nativeSrc": "11380:18:5",
																			"nodeType": "YulFunctionCall",
																			"src": "11380:18:5"
																		},
																		"nativeSrc": "11380:18:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "11380:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "11369:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "11369:4:5"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "11375:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "11375:1:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "11366:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "11366:2:5"
																},
																"nativeSrc": "11366:11:5",
																"nodeType": "YulFunctionCall",
																"src": "11366:11:5"
															},
															"nativeSrc": "11363:37:5",
															"nodeType": "YulIf",
															"src": "11363:37:5"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "11278:128:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "11309:1:5",
														"nodeType": "YulTypedName",
														"src": "11309:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "11312:1:5",
														"nodeType": "YulTypedName",
														"src": "11312:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "11318:4:5",
														"nodeType": "YulTypedName",
														"src": "11318:4:5",
														"type": ""
													}
												],
												"src": "11278:128:5"
											},
											{
												"body": {
													"nativeSrc": "11443:95:5",
													"nodeType": "YulBlock",
													"src": "11443:95:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11460:1:5",
																		"nodeType": "YulLiteral",
																		"src": "11460:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "11467:3:5",
																				"nodeType": "YulLiteral",
																				"src": "11467:3:5",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11472:10:5",
																				"nodeType": "YulLiteral",
																				"src": "11472:10:5",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "11463:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "11463:3:5"
																		},
																		"nativeSrc": "11463:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "11463:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11453:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "11453:6:5"
																},
																"nativeSrc": "11453:31:5",
																"nodeType": "YulFunctionCall",
																"src": "11453:31:5"
															},
															"nativeSrc": "11453:31:5",
															"nodeType": "YulExpressionStatement",
															"src": "11453:31:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11500:1:5",
																		"nodeType": "YulLiteral",
																		"src": "11500:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11503:4:5",
																		"nodeType": "YulLiteral",
																		"src": "11503:4:5",
																		"type": "",
																		"value": "0x31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11493:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "11493:6:5"
																},
																"nativeSrc": "11493:15:5",
																"nodeType": "YulFunctionCall",
																"src": "11493:15:5"
															},
															"nativeSrc": "11493:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "11493:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11524:1:5",
																		"nodeType": "YulLiteral",
																		"src": "11524:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11527:4:5",
																		"nodeType": "YulLiteral",
																		"src": "11527:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "11517:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "11517:6:5"
																},
																"nativeSrc": "11517:15:5",
																"nodeType": "YulFunctionCall",
																"src": "11517:15:5"
															},
															"nativeSrc": "11517:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "11517:15:5"
														}
													]
												},
												"name": "panic_error_0x31",
												"nativeSrc": "11411:127:5",
												"nodeType": "YulFunctionDefinition",
												"src": "11411:127:5"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let value := 0\n        value := calldataload(add(headStart, 64))\n        value2 := value\n    }\n    function abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let tail_1 := add(headStart, 32)\n        mstore(headStart, 32)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 64)\n        let srcPtr := add(value0, 32)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, and(mload(srcPtr), sub(shl(160, 1), 1)))\n            pos := add(pos, 32)\n            srcPtr := add(srcPtr, 32)\n        }\n        tail := pos\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_bool(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_addresst_bool(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := abi_decode_bool(add(headStart, 64))\n    }\n    function panic_error_0x21()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_array$_t_struct$_DelegationInfo_$1270_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_DelegationInfo_$1270_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let tail_1 := add(headStart, 32)\n        mstore(headStart, 32)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 64)\n        let srcPtr := add(value0, 32)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            let _1 := mload(srcPtr)\n            let _2 := mload(_1)\n            if iszero(lt(_2, 4))\n            {\n                mstore(0, shl(224, 0x4e487b71))\n                mstore(4, 0x21)\n                revert(0, 0x24)\n            }\n            mstore(pos, _2)\n            mstore(add(pos, 32), and(mload(add(_1, 32)), sub(shl(160, 1), 1)))\n            mstore(add(pos, 64), and(mload(add(_1, 64)), sub(shl(160, 1), 1)))\n            mstore(add(pos, 0x60), and(mload(add(_1, 0x60)), sub(shl(160, 1), 1)))\n            mstore(add(pos, 0x80), mload(add(_1, 0x80)))\n            pos := add(pos, 0xa0)\n            srcPtr := add(srcPtr, 32)\n        }\n        tail := pos\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bool(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let value := 0\n        value := calldataload(add(headStart, 64))\n        value2 := value\n        value3 := abi_decode_bool(add(headStart, 96))\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_bool(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_array$_t_struct$_TokenDelegation_$1284_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_TokenDelegation_$1284_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let tail_1 := add(headStart, 32)\n        mstore(headStart, 32)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 64)\n        let srcPtr := add(value0, 32)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            let _1 := mload(srcPtr)\n            mstore(pos, and(mload(_1), sub(shl(160, 1), 1)))\n            mstore(add(pos, 32), mload(add(_1, 32)))\n            mstore(add(pos, 64), and(mload(add(_1, 64)), sub(shl(160, 1), 1)))\n            pos := add(pos, 0x60)\n            srcPtr := add(srcPtr, 32)\n        }\n        tail := pos\n    }\n    function abi_decode_tuple_t_addresst_addresst_address(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := abi_decode_address(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := abi_decode_address(add(headStart, 64))\n        let value := 0\n        value := calldataload(add(headStart, 96))\n        value3 := value\n    }\n    function abi_encode_tuple_t_array$_t_struct$_ContractDelegation_$1276_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_ContractDelegation_$1276_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let tail_1 := add(headStart, 32)\n        mstore(headStart, 32)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 64)\n        let srcPtr := add(value0, 32)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            let _1 := mload(srcPtr)\n            mstore(pos, and(mload(_1), sub(shl(160, 1), 1)))\n            mstore(add(pos, 32), and(mload(add(_1, 32)), sub(shl(160, 1), 1)))\n            pos := add(pos, 64)\n            srcPtr := add(srcPtr, 32)\n        }\n        tail := pos\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_address_t_address_t_bool__to_t_address_t_address_t_address_t_bool__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 64), and(value2, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 96), iszero(iszero(value3)))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_address_t_address_t_address_t_uint256_t_bool__to_t_address_t_address_t_address_t_uint256_t_bool__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 64), and(value2, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), iszero(iszero(value4)))\n    }\n    function abi_encode_tuple_t_address_t_address_t_bool__to_t_address_t_address_t_bool__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 64), iszero(iszero(value2)))\n    }\n    function abi_encode_tuple_t_address_t_address_t_address_t_uint256_t_uint256__to_t_address_t_address_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 64), and(value2, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256__to_t_address_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_encode_tuple_t_address_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 192)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 64), and(value2, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n        mstore(add(headStart, 160), value5)\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function panic_error_0x31()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n}",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xFB JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x685EE3E8 GT PUSH2 0x93 JUMPI DUP1 PUSH4 0xABA69CF8 GT PUSH2 0x63 JUMPI DUP1 PUSH4 0xABA69CF8 EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0xED4B878E EQ PUSH2 0x229 JUMPI DUP1 PUSH4 0xF956CF94 EQ PUSH2 0x23C JUMPI DUP1 PUSH4 0xFA352C00 EQ PUSH2 0x25C JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x685EE3E8 EQ PUSH2 0x1BD JUMPI DUP1 PUSH4 0x6F007D87 EQ PUSH2 0x1D0 JUMPI DUP1 PUSH4 0x90C9A2D0 EQ PUSH2 0x1F0 JUMPI DUP1 PUSH4 0x9C395BC2 EQ PUSH2 0x203 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x36137872 GT PUSH2 0xCE JUMPI DUP1 PUSH4 0x36137872 EQ PUSH2 0x16F JUMPI DUP1 PUSH4 0x49C95D29 EQ PUSH2 0x177 JUMPI DUP1 PUSH4 0x4FC69282 EQ PUSH2 0x18A JUMPI DUP1 PUSH4 0x537A5C3D EQ PUSH2 0x1AA JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xFF JUMPI DUP1 PUSH4 0x1221156B EQ PUSH2 0x127 JUMPI DUP1 PUSH4 0x1B61F675 EQ PUSH2 0x147 JUMPI DUP1 PUSH4 0x219044B0 EQ PUSH2 0x15A JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x112 PUSH2 0x10D CALLDATASIZE PUSH1 0x4 PUSH2 0x133C JUMP JUMPDEST PUSH2 0x26F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13A PUSH2 0x135 CALLDATASIZE PUSH1 0x4 PUSH2 0x137E JUMP JUMPDEST PUSH2 0x2A5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11E SWAP2 SWAP1 PUSH2 0x13B8 JUMP JUMPDEST PUSH2 0x13A PUSH2 0x155 CALLDATASIZE PUSH1 0x4 PUSH2 0x1403 JUMP JUMPDEST PUSH2 0x2BC JUMP JUMPDEST PUSH2 0x16D PUSH2 0x168 CALLDATASIZE PUSH1 0x4 PUSH2 0x1403 JUMP JUMPDEST PUSH2 0x2CB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x16D PUSH2 0x2D8 JUMP JUMPDEST PUSH2 0x16D PUSH2 0x185 CALLDATASIZE PUSH1 0x4 PUSH2 0x142B JUMP JUMPDEST PUSH2 0x32D JUMP JUMPDEST PUSH2 0x19D PUSH2 0x198 CALLDATASIZE PUSH1 0x4 PUSH2 0x1403 JUMP JUMPDEST PUSH2 0x3A2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11E SWAP2 SWAP1 PUSH2 0x147F JUMP JUMPDEST PUSH2 0x16D PUSH2 0x1B8 CALLDATASIZE PUSH1 0x4 PUSH2 0x1510 JUMP JUMPDEST PUSH2 0x5D5 JUMP JUMPDEST PUSH2 0x16D PUSH2 0x1CB CALLDATASIZE PUSH1 0x4 PUSH2 0x155A JUMP JUMPDEST PUSH2 0x653 JUMP JUMPDEST PUSH2 0x1E3 PUSH2 0x1DE CALLDATASIZE PUSH1 0x4 PUSH2 0x1403 JUMP JUMPDEST PUSH2 0x6BE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11E SWAP2 SWAP1 PUSH2 0x158B JUMP JUMPDEST PUSH2 0x112 PUSH2 0x1FE CALLDATASIZE PUSH1 0x4 PUSH2 0x15E9 JUMP JUMPDEST PUSH2 0x830 JUMP JUMPDEST PUSH2 0x112 PUSH2 0x211 CALLDATASIZE PUSH1 0x4 PUSH2 0x1620 JUMP JUMPDEST PUSH2 0x8DA JUMP JUMPDEST PUSH2 0x112 PUSH2 0x224 CALLDATASIZE PUSH1 0x4 PUSH2 0x1648 JUMP JUMPDEST PUSH2 0x95F JUMP JUMPDEST PUSH2 0x13A PUSH2 0x237 CALLDATASIZE PUSH1 0x4 PUSH2 0x1620 JUMP JUMPDEST PUSH2 0xA12 JUMP JUMPDEST PUSH2 0x24F PUSH2 0x24A CALLDATASIZE PUSH1 0x4 PUSH2 0x1403 JUMP JUMPDEST PUSH2 0xA28 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11E SWAP2 SWAP1 PUSH2 0x1690 JUMP JUMPDEST PUSH2 0x16D PUSH2 0x26A CALLDATASIZE PUSH1 0x4 PUSH2 0x1403 JUMP JUMPDEST PUSH2 0xB82 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x596D3D5 PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x29F JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x2B4 DUP5 PUSH1 0x3 DUP6 DUP6 PUSH2 0xB8C JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x29F DUP3 PUSH1 0x1 PUSH0 PUSH0 PUSH2 0xB8C JUMP JUMPDEST PUSH2 0x2D5 CALLER DUP3 PUSH2 0xE01 JUMP JUMPDEST POP JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x2F4 SWAP1 PUSH2 0x16F3 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH1 0x40 MLOAD CALLER DUP2 MSTORE PUSH32 0x32D74BEFD0B842E19694E3E3AF46263E18BCCE41352C8B600FF0002B49EDF662 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 PUSH2 0x339 CALLER DUP6 DUP6 PUSH2 0xE7E JUMP JUMPDEST SWAP1 POP PUSH2 0x34B DUP5 DUP3 DUP5 PUSH1 0x2 CALLER DUP9 PUSH0 PUSH2 0xEEF JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE DUP6 AND DUP2 DUP4 ADD MSTORE DUP4 ISZERO ISZERO PUSH1 0x60 DUP3 ADD MSTORE SWAP1 MLOAD PUSH32 0x8D6B2F5255B8D815CC368855B2251146E003BF4E2FCCCAEC66145FFF5C174B4F SWAP2 DUP2 SWAP1 SUB PUSH1 0x80 ADD SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x60 SWAP2 PUSH2 0x3C5 DUP3 PUSH2 0x10CB JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3E1 JUMPI PUSH2 0x3E1 PUSH2 0x170B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x438 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD DUP3 MSTORE PUSH0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD DUP3 SWAP1 MSTORE SWAP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x80 DUP3 ADD MSTORE DUP3 MSTORE PUSH0 NOT SWAP1 SWAP3 ADD SWAP2 ADD DUP2 PUSH2 0x3FF JUMPI SWAP1 POP JUMPDEST POP SWAP4 POP PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x5BA JUMPI PUSH0 PUSH2 0x450 DUP6 DUP4 PUSH2 0x10D4 JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP2 MLOAD PUSH1 0xA0 DUP2 ADD SWAP1 SWAP3 MSTORE DUP1 SLOAD SWAP4 SWAP5 POP SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x487 JUMPI PUSH2 0x487 PUSH2 0x146B JUMP JUMPDEST PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x498 JUMPI PUSH2 0x498 PUSH2 0x146B JUMP JUMPDEST DUP2 MSTORE DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV DUP2 AND PUSH1 0x20 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 DUP1 DUP6 ADD SLOAD DUP4 AND PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x2 DUP6 ADD SLOAD SWAP1 SWAP3 AND PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x3 SWAP1 SWAP4 ADD SLOAD PUSH1 0x80 SWAP1 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 DUP3 ADD MLOAD DUP3 MLOAD SWAP3 SWAP4 POP SWAP2 SWAP1 PUSH0 SWAP1 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x4FD JUMPI PUSH2 0x4FD PUSH2 0x146B JUMP JUMPDEST SUB PUSH2 0x51B JUMPI PUSH2 0x50C DUP4 DUP13 PUSH2 0x10DF JUMP JUMPDEST DUP6 SUB PUSH2 0x516 JUMPI POP PUSH1 0x1 JUMPDEST PUSH2 0x57A JUMP JUMPDEST PUSH1 0x2 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x52F JUMPI PUSH2 0x52F PUSH2 0x146B JUMP JUMPDEST SUB PUSH2 0x543 JUMPI PUSH2 0x50C DUP4 DUP13 DUP7 PUSH1 0x60 ADD MLOAD PUSH2 0xE7E JUMP JUMPDEST PUSH1 0x3 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x557 JUMPI PUSH2 0x557 PUSH2 0x146B JUMP JUMPDEST SUB PUSH2 0x57A JUMPI PUSH2 0x570 DUP4 DUP13 DUP7 PUSH1 0x60 ADD MLOAD DUP8 PUSH1 0x80 ADD MLOAD PUSH2 0x114C JUMP JUMPDEST DUP6 SUB PUSH2 0x57A JUMPI POP PUSH1 0x1 JUMPDEST DUP1 ISZERO PUSH2 0x5AA JUMPI DUP4 DUP11 DUP9 PUSH2 0x58C DUP2 PUSH2 0x16F3 JUMP JUMPDEST SWAP10 POP DUP2 MLOAD DUP2 LT PUSH2 0x59E JUMPI PUSH2 0x59E PUSH2 0x171F JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP JUMPDEST DUP6 PUSH1 0x1 ADD SWAP6 POP POP POP POP POP POP PUSH2 0x43D JUMP JUMPDEST POP DUP1 DUP3 GT ISZERO PUSH2 0x5CD JUMPI DUP4 MLOAD DUP2 DUP4 SUB SWAP1 SUB DUP5 MSTORE JUMPDEST POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x5E2 CALLER DUP7 DUP7 DUP7 PUSH2 0x114C JUMP JUMPDEST SWAP1 POP PUSH2 0x5F4 DUP6 DUP3 DUP5 PUSH1 0x3 CALLER DUP10 DUP10 PUSH2 0xEEF JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE DUP7 AND DUP2 DUP4 ADD MSTORE PUSH1 0x60 DUP2 ADD DUP6 SWAP1 MSTORE DUP4 ISZERO ISZERO PUSH1 0x80 DUP3 ADD MSTORE SWAP1 MLOAD PUSH32 0xE89C6BA1E8957285AED22618F52AA1DCB9D5BB64E1533D8B55136C72FCF5AA5D SWAP2 DUP2 SWAP1 SUB PUSH1 0xA0 ADD SWAP1 LOG1 POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x65E CALLER DUP5 PUSH2 0x10DF JUMP JUMPDEST SWAP1 POP PUSH2 0x670 DUP4 DUP3 DUP5 PUSH1 0x1 CALLER PUSH0 PUSH0 PUSH2 0xEEF JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE DUP4 ISZERO ISZERO DUP2 DUP4 ADD MSTORE SWAP1 MLOAD PUSH32 0x58781EAB4A0743AB1C285A238BE846A235F06CDB5B968030573A635E5F8C92FA SWAP2 DUP2 SWAP1 SUB PUSH1 0x60 ADD SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 DUP4 MSTORE DUP2 DUP5 KECCAK256 SLOAD DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 PUSH1 0x60 SWAP2 PUSH2 0x6F1 DUP3 PUSH2 0x10CB JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x70D JUMPI PUSH2 0x70D PUSH2 0x170B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x756 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD DUP3 SWAP1 MSTORE SWAP3 DUP3 ADD MSTORE DUP3 MSTORE PUSH0 NOT SWAP1 SWAP3 ADD SWAP2 ADD DUP2 PUSH2 0x72B JUMPI SWAP1 POP JUMPDEST POP SWAP4 POP PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x5BA JUMPI PUSH0 PUSH2 0x76E DUP6 DUP4 PUSH2 0x10D4 JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 SWAP2 POP PUSH1 0x3 DUP2 SLOAD PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x796 JUMPI PUSH2 0x796 PUSH2 0x146B JUMP JUMPDEST SUB PUSH2 0x826 JUMPI PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x3 DUP4 ADD SLOAD PUSH2 0x7C4 SWAP3 DUP12 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP3 SWAP2 AND SWAP1 PUSH2 0x114C JUMP JUMPDEST DUP3 SUB PUSH2 0x826 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x1 DUP5 ADD SLOAD AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP8 DUP6 PUSH2 0x808 DUP2 PUSH2 0x16F3 JUMP JUMPDEST SWAP7 POP DUP2 MLOAD DUP2 LT PUSH2 0x81A JUMPI PUSH2 0x81A PUSH2 0x171F JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP JUMPDEST POP POP PUSH1 0x1 ADD PUSH2 0x75B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x2 DUP4 MSTORE DUP2 DUP5 KECCAK256 DUP10 DUP8 AND DUP1 DUP7 MSTORE SWAP1 DUP5 MSTORE DUP3 DUP6 KECCAK256 SLOAD DUP4 MLOAD DUP1 DUP7 ADD SWAP3 SWAP1 SWAP3 MSTORE DUP2 DUP5 ADD DUP8 SWAP1 MSTORE SWAP7 DUP9 AND PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0xA0 DUP1 DUP3 ADD SWAP8 SWAP1 SWAP8 MSTORE DUP3 MLOAD DUP1 DUP3 SUB SWAP1 SWAP8 ADD DUP8 MSTORE PUSH1 0xC0 ADD DUP3 MSTORE DUP6 MLOAD SWAP6 DUP4 ADD SWAP6 SWAP1 SWAP6 KECCAK256 SWAP4 DUP4 MSTORE DUP3 DUP3 MSTORE DUP1 DUP4 KECCAK256 SWAP5 DUP4 MSTORE SWAP4 SWAP1 MSTORE SWAP2 DUP3 KECCAK256 PUSH2 0x8BB SWAP1 DUP3 PUSH2 0x11BA JUMP JUMPDEST PUSH2 0x8CE JUMPI PUSH2 0x8C9 DUP6 DUP6 PUSH2 0x8DA JUMP JUMPDEST PUSH2 0x8D1 JUMP JUMPDEST PUSH1 0x1 JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x2 DUP4 MSTORE DUP2 DUP5 KECCAK256 SWAP6 DUP9 AND DUP1 DUP6 MSTORE SWAP6 DUP4 MSTORE DUP2 DUP5 KECCAK256 SLOAD DUP3 MLOAD DUP1 DUP6 ADD SWAP8 SWAP1 SWAP8 MSTORE DUP7 DUP4 ADD DUP7 SWAP1 MSTORE PUSH1 0x60 DUP8 ADD DUP3 SWAP1 MSTORE PUSH1 0x80 DUP1 DUP9 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP3 MLOAD DUP1 DUP9 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xA0 SWAP1 SWAP7 ADD DUP3 MSTORE DUP6 MLOAD SWAP6 DUP4 ADD SWAP6 SWAP1 SWAP6 KECCAK256 SWAP4 DUP4 MSTORE DUP3 DUP3 MSTORE DUP1 DUP4 KECCAK256 SWAP5 DUP4 MSTORE SWAP4 SWAP1 MSTORE SWAP2 DUP3 KECCAK256 PUSH2 0x2B4 SWAP1 DUP3 PUSH2 0x11BA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x2 DUP4 MSTORE DUP2 DUP5 KECCAK256 SWAP5 DUP10 AND DUP5 MSTORE SWAP4 DUP3 MSTORE DUP1 DUP4 KECCAK256 SLOAD SWAP1 MLOAD SWAP3 SWAP4 DUP5 SWAP4 PUSH2 0x9A9 SWAP4 DUP11 SWAP4 DUP11 SWAP4 DUP11 SWAP4 DUP11 SWAP4 SWAP2 SWAP3 SWAP2 ADD PUSH2 0x1733 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE DUP2 MLOAD PUSH1 0x20 SWAP3 DUP4 ADD KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH0 SWAP1 DUP2 MSTORE DUP1 DUP5 MSTORE DUP3 DUP2 KECCAK256 PUSH1 0x1 DUP6 MSTORE DUP4 DUP3 KECCAK256 SLOAD DUP3 MSTORE SWAP1 SWAP4 MSTORE SWAP2 KECCAK256 SWAP1 SWAP2 POP PUSH2 0x9F1 SWAP1 DUP3 PUSH2 0x11BA JUMP JUMPDEST PUSH2 0xA05 JUMPI PUSH2 0xA00 DUP7 DUP7 DUP7 PUSH2 0x830 JUMP JUMPDEST PUSH2 0xA08 JUMP JUMPDEST PUSH1 0x1 JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xA21 DUP4 PUSH1 0x2 DUP5 PUSH0 PUSH2 0xB8C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 DUP4 MSTORE DUP2 DUP5 KECCAK256 SLOAD DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 PUSH1 0x60 SWAP2 PUSH2 0xA5B DUP3 PUSH2 0x10CB JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xA77 JUMPI PUSH2 0xA77 PUSH2 0x170B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xABB JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0xA95 JUMPI SWAP1 POP JUMPDEST POP SWAP4 POP PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x5BA JUMPI PUSH0 PUSH2 0xAD3 DUP6 DUP4 PUSH2 0x10D4 JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 SWAP2 POP PUSH1 0x2 DUP2 SLOAD PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xAFB JUMPI PUSH2 0xAFB PUSH2 0x146B JUMP JUMPDEST SUB PUSH2 0xB78 JUMPI PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x2 DUP3 ADD SLOAD PUSH2 0xB22 SWAP2 DUP11 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 AND PUSH2 0xE7E JUMP JUMPDEST DUP3 SUB PUSH2 0xB78 JUMPI PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x1 DUP4 ADD SLOAD AND PUSH1 0x20 DUP3 ADD MSTORE DUP8 DUP6 PUSH2 0xB5A DUP2 PUSH2 0x16F3 JUMP JUMPDEST SWAP7 POP DUP2 MLOAD DUP2 LT PUSH2 0xB6C JUMPI PUSH2 0xB6C PUSH2 0x171F JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP JUMPDEST POP POP PUSH1 0x1 ADD PUSH2 0xAC0 JUMP JUMPDEST PUSH2 0x2D5 DUP2 CALLER PUSH2 0xE01 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 DUP4 MSTORE DUP2 DUP5 KECCAK256 SLOAD DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 PUSH1 0x60 SWAP2 PUSH2 0xBBF DUP3 PUSH2 0x10CB JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xBDB JUMPI PUSH2 0xBDB PUSH2 0x170B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xC04 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP4 POP PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xDE3 JUMPI PUSH0 PUSH2 0xC1C DUP6 DUP4 PUSH2 0x10D4 JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 SWAP2 POP DUP10 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xC3E JUMPI PUSH2 0xC3E PUSH2 0x146B JUMP JUMPDEST DUP2 SLOAD PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xC54 JUMPI PUSH2 0xC54 PUSH2 0x146B JUMP JUMPDEST SUB PUSH2 0xDD9 JUMPI PUSH1 0x1 DUP11 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xC6D JUMPI PUSH2 0xC6D PUSH2 0x146B JUMP JUMPDEST SUB PUSH2 0xCE2 JUMPI PUSH1 0x1 DUP2 ADD SLOAD PUSH2 0xC8B SWAP1 DUP13 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x10DF JUMP JUMPDEST DUP3 SUB PUSH2 0xCDD JUMPI PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 DUP6 PUSH2 0xCAA DUP2 PUSH2 0x16F3 JUMP JUMPDEST SWAP7 POP DUP2 MLOAD DUP2 LT PUSH2 0xCBC JUMPI PUSH2 0xCBC PUSH2 0x171F JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP JUMPDEST PUSH2 0xDD9 JUMP JUMPDEST PUSH1 0x2 DUP11 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xCF6 JUMPI PUSH2 0xCF6 PUSH2 0x146B JUMP JUMPDEST SUB PUSH2 0xD2C JUMPI PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP12 AND SWAP2 AND SUB PUSH2 0xCDD JUMPI PUSH1 0x1 DUP2 ADD SLOAD PUSH2 0xC8B SWAP1 DUP13 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP12 PUSH2 0xE7E JUMP JUMPDEST PUSH1 0x3 DUP11 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xD40 JUMPI PUSH2 0xD40 PUSH2 0x146B JUMP JUMPDEST SUB PUSH2 0xDD9 JUMPI PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 DUP2 AND SWAP2 AND EQ DUP1 ISZERO PUSH2 0xD67 JUMPI POP DUP8 DUP2 PUSH1 0x3 ADD SLOAD EQ JUMPDEST ISZERO PUSH2 0xDD9 JUMPI PUSH1 0x1 DUP2 ADD SLOAD PUSH2 0xD87 SWAP1 DUP13 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP12 DUP12 PUSH2 0x114C JUMP JUMPDEST DUP3 SUB PUSH2 0xDD9 JUMPI PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 DUP6 PUSH2 0xDA6 DUP2 PUSH2 0x16F3 JUMP JUMPDEST SWAP7 POP DUP2 MLOAD DUP2 LT PUSH2 0xDB8 JUMPI PUSH2 0xDB8 PUSH2 0x171F JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP JUMPDEST POP POP PUSH1 0x1 ADD PUSH2 0xC09 JUMP JUMPDEST POP DUP1 DUP3 GT ISZERO PUSH2 0xDF6 JUMPI DUP4 MLOAD DUP2 DUP4 SUB SWAP1 SUB DUP5 MSTORE JUMPDEST POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0xE35 SWAP1 PUSH2 0x16F3 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP2 MSTORE CALLER PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x3E34A3EE53064FB79C0EE57448F03774A627A9270B0C41286EFB7D8E32DCDE93 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x2 DUP4 MSTORE DUP2 DUP5 KECCAK256 SWAP7 DUP9 AND DUP1 DUP6 MSTORE SWAP7 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 SLOAD DUP2 MLOAD DUP1 DUP5 ADD SWAP8 SWAP1 SWAP8 MSTORE DUP7 DUP3 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP4 SWAP1 SWAP6 AND PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0xA0 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP2 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xC0 SWAP1 SWAP3 ADD SWAP1 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 SWAP1 JUMP JUMPDEST DUP5 ISZERO PUSH2 0x102E JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 DUP4 MSTORE DUP2 DUP5 KECCAK256 SLOAD DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH2 0xF26 SWAP1 DUP8 PUSH2 0x11D1 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0xF48 SWAP1 DUP8 PUSH2 0x11D1 JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 DUP6 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xF66 JUMPI PUSH2 0xF66 PUSH2 0x146B JUMP JUMPDEST DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x20 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP11 DUP3 AND PUSH1 0x40 DUP1 DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP2 DUP7 AND PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 SWAP1 SWAP3 ADD DUP5 SWAP1 MSTORE PUSH0 DUP10 DUP2 MSTORE PUSH1 0x4 SWAP1 SWAP3 MSTORE SWAP1 KECCAK256 DUP2 MLOAD DUP2 SLOAD DUP3 SWAP1 PUSH1 0xFF NOT AND PUSH1 0x1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xFC1 JUMPI PUSH2 0xFC1 PUSH2 0x146B JUMP JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH2 0x100 MUL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT SWAP1 SWAP2 AND OR DUP3 SSTORE PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x1 DUP4 ADD DUP1 SLOAD SWAP2 DUP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP3 DUP4 AND OR SWAP1 SSTORE PUSH1 0x60 DUP5 ADD MLOAD PUSH1 0x2 DUP5 ADD DUP1 SLOAD SWAP2 SWAP1 SWAP4 AND SWAP2 AND OR SWAP1 SSTORE PUSH1 0x80 SWAP1 SWAP2 ADD MLOAD PUSH1 0x3 SWAP1 SWAP2 ADD SSTORE PUSH2 0x10C2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 DUP4 MSTORE DUP2 DUP5 KECCAK256 SLOAD DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH2 0x105F SWAP1 DUP8 PUSH2 0x11DC JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x1081 SWAP1 DUP8 PUSH2 0x11DC JUMP JUMPDEST POP PUSH0 DUP7 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT AND DUP2 SSTORE PUSH1 0x1 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND SWAP1 SWAP2 SSTORE PUSH1 0x2 DUP3 ADD DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SSTORE PUSH1 0x3 ADD SSTORE JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x29F DUP3 SLOAD SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0xA21 DUP4 DUP4 PUSH2 0x11E7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x2 DUP4 MSTORE DUP2 DUP5 KECCAK256 SWAP6 SWAP1 SWAP7 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 SLOAD DUP3 MLOAD DUP1 DUP4 ADD SWAP6 SWAP1 SWAP6 MSTORE DUP5 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x60 DUP5 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x80 DUP1 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE DUP1 MLOAD DUP1 DUP5 SUB SWAP1 SWAP3 ADD DUP3 MSTORE PUSH1 0xA0 SWAP1 SWAP3 ADD SWAP1 SWAP2 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x2 DUP4 MSTORE DUP2 DUP5 KECCAK256 SWAP5 DUP9 AND DUP5 MSTORE SWAP4 DUP3 MSTORE DUP1 DUP4 KECCAK256 SLOAD SWAP1 MLOAD SWAP3 SWAP4 SWAP3 SWAP1 SWAP2 PUSH2 0x1198 SWAP2 DUP9 SWAP2 DUP11 SWAP2 DUP10 SWAP2 DUP10 SWAP2 DUP9 SWAP2 DUP9 SWAP2 ADD PUSH2 0x1733 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD ISZERO ISZERO PUSH2 0xA21 JUMP JUMPDEST PUSH0 PUSH2 0xA21 DUP4 DUP4 PUSH2 0x120D JUMP JUMPDEST PUSH0 PUSH2 0xA21 DUP4 DUP4 PUSH2 0x1259 JUMP JUMPDEST PUSH0 DUP3 PUSH0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x11FC JUMPI PUSH2 0x11FC PUSH2 0x171F JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x1252 JUMPI POP DUP2 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP5 SSTORE PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 SWAP1 SWAP4 ADD DUP5 SWAP1 SSTORE DUP5 SLOAD DUP5 DUP3 MSTORE DUP3 DUP7 ADD SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0x29F JUMP JUMPDEST POP PUSH0 PUSH2 0x29F JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0x1333 JUMPI PUSH0 PUSH2 0x127B PUSH1 0x1 DUP4 PUSH2 0x176C JUMP JUMPDEST DUP6 SLOAD SWAP1 SWAP2 POP PUSH0 SWAP1 PUSH2 0x128E SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x176C JUMP JUMPDEST SWAP1 POP DUP2 DUP2 EQ PUSH2 0x12ED JUMPI PUSH0 DUP7 PUSH0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x12AC JUMPI PUSH2 0x12AC PUSH2 0x171F JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 DUP8 PUSH0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x12CC JUMPI PUSH2 0x12CC PUSH2 0x171F JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SWAP3 SWAP1 SWAP3 SSTORE SWAP2 DUP3 MSTORE PUSH1 0x1 DUP9 ADD SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP4 SWAP1 SSTORE JUMPDEST DUP6 SLOAD DUP7 SWAP1 DUP1 PUSH2 0x12FE JUMPI PUSH2 0x12FE PUSH2 0x177F JUMP JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SSTORE SWAP1 SSTORE DUP6 PUSH1 0x1 ADD PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SSTORE PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0x29F JUMP JUMPDEST PUSH0 SWAP2 POP POP PUSH2 0x29F JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x134C JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xA21 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1379 JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1390 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x1399 DUP5 PUSH2 0x1363 JUMP JUMPDEST SWAP3 POP PUSH2 0x13A7 PUSH1 0x20 DUP6 ADD PUSH2 0x1363 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH0 SWAP2 DUP5 ADD SWAP1 PUSH1 0x40 DUP5 ADD SWAP1 DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x13F8 JUMPI DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x13D1 JUMP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1413 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xA21 DUP3 PUSH2 0x1363 JUMP JUMPDEST DUP1 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1379 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x143D JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x1446 DUP5 PUSH2 0x1363 JUMP JUMPDEST SWAP3 POP PUSH2 0x1454 PUSH1 0x20 DUP6 ADD PUSH2 0x1363 JUMP JUMPDEST SWAP2 POP PUSH2 0x1462 PUSH1 0x40 DUP6 ADD PUSH2 0x141C JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH0 SWAP2 DUP5 ADD SWAP1 PUSH1 0x40 DUP5 ADD SWAP1 DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x13F8 JUMPI DUP4 MLOAD DUP1 MLOAD PUSH1 0x4 DUP2 LT PUSH2 0x14C0 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP2 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 DUP8 ADD MSTORE PUSH1 0x40 DUP1 DUP5 ADD MLOAD DUP3 AND SWAP1 DUP8 ADD MSTORE PUSH1 0x60 DUP1 DUP5 ADD MLOAD SWAP1 SWAP2 AND SWAP1 DUP7 ADD MSTORE PUSH1 0x80 SWAP2 DUP3 ADD MLOAD SWAP2 DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP1 SWAP4 ADD SWAP3 PUSH1 0xA0 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x1498 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1523 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x152C DUP6 PUSH2 0x1363 JUMP JUMPDEST SWAP4 POP PUSH2 0x153A PUSH1 0x20 DUP7 ADD PUSH2 0x1363 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH2 0x154F PUSH1 0x60 DUP7 ADD PUSH2 0x141C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x156B JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x1574 DUP4 PUSH2 0x1363 JUMP JUMPDEST SWAP2 POP PUSH2 0x1582 PUSH1 0x20 DUP5 ADD PUSH2 0x141C JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH0 SWAP2 DUP5 ADD SWAP1 PUSH1 0x40 DUP5 ADD SWAP1 DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x13F8 JUMPI DUP4 MLOAD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP6 MSTORE PUSH1 0x20 DUP1 DUP4 ADD MLOAD DUP2 DUP8 ADD MSTORE PUSH1 0x40 SWAP3 DUP4 ADD MLOAD SWAP1 SWAP2 AND SWAP2 DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 SWAP4 ADD SWAP3 PUSH1 0x60 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x15A4 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x15FB JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x1604 DUP5 PUSH2 0x1363 JUMP JUMPDEST SWAP3 POP PUSH2 0x1612 PUSH1 0x20 DUP6 ADD PUSH2 0x1363 JUMP JUMPDEST SWAP2 POP PUSH2 0x1462 PUSH1 0x40 DUP6 ADD PUSH2 0x1363 JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1631 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x163A DUP4 PUSH2 0x1363 JUMP JUMPDEST SWAP2 POP PUSH2 0x1582 PUSH1 0x20 DUP5 ADD PUSH2 0x1363 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x165B JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x1664 DUP6 PUSH2 0x1363 JUMP JUMPDEST SWAP4 POP PUSH2 0x1672 PUSH1 0x20 DUP7 ADD PUSH2 0x1363 JUMP JUMPDEST SWAP3 POP PUSH2 0x1680 PUSH1 0x40 DUP7 ADD PUSH2 0x1363 JUMP JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP3 SWAP4 PUSH1 0x60 ADD CALLDATALOAD SWAP3 POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH0 SWAP2 DUP5 ADD SWAP1 PUSH1 0x40 DUP5 ADD SWAP1 DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x13F8 JUMPI DUP4 MLOAD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP6 MSTORE PUSH1 0x20 SWAP2 DUP3 ADD MLOAD AND DUP2 DUP6 ADD MSTORE SWAP1 SWAP4 ADD SWAP3 PUSH1 0x40 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x16A9 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x1 DUP3 ADD PUSH2 0x1704 JUMPI PUSH2 0x1704 PUSH2 0x16DF JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP7 DUP8 AND DUP2 MSTORE SWAP5 DUP7 AND PUSH1 0x20 DUP7 ADD MSTORE SWAP3 SWAP1 SWAP5 AND PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0xA0 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xC0 ADD SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x29F JUMPI PUSH2 0x29F PUSH2 0x16DF JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP15 0x4B GAS 0xCE SELFBALANCE 0xD EXTCODESIZE EXTCODEHASH DUP2 0xCC 0xAA RETURNDATASIZE SWAP11 SWAP6 SWAP8 SWAP6 PUSH13 0xB043225EE95EBF65D5C3122DFD NUMBER SHR PUSH5 0x736F6C6343 STOP ADDMOD SHL STOP CALLER ",
							"sourceMap": "2357:20314:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3561:253;;;;;;:::i;:::-;;:::i;:::-;;;470:14:5;;463:22;445:41;;433:2;418:18;3561:253:0;;;;;;;;13033:375;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;12256:305::-;;;;;;:::i;:::-;;:::i;9148:104::-;;;;;;:::i;:::-;;:::i;:::-;;8756:156;;;:::i;4488:657::-;;;;;;:::i;:::-;;:::i;9706:2489::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;5206:718::-;;;;;;:::i;:::-;;:::i;3930:497::-;;;;;;:::i;:::-;;:::i;18869:1960::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;21383:581::-;;;;;;:::i;:::-;;:::i;20890:432::-;;;;;;:::i;:::-;;:::i;22025:644::-;;;;;;:::i;:::-;;:::i;12622:350::-;;;;;;:::i;:::-;;:::i;16846:1962::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;8973:114::-;;;;;;:::i;:::-;;:::i;3561:253::-;3668:4;-1:-1:-1;;;;;;3703:52:0;;-1:-1:-1;;;3703:52:0;;:104;;-1:-1:-1;;;;;;;;;;2206:40:2;;;3771:36:0;3684:123;3561:253;-1:-1:-1;;3561:253:0:o;13033:375::-;13176:26;13233:168;13272:5;13295:40;13353:9;13380:7;13233:21;:168::i;:::-;13214:187;13033:375;-1:-1:-1;;;;13033:375:0:o;12256:305::-;12336:26;12393:161;12432:5;12455:38;12519:1;12539;12393:21;:161::i;9148:104::-;9211:34;9227:10;9239:5;9211:15;:34::i;:::-;9148:104;:::o;8756:156::-;8829:10;8816:24;;;;:12;:24;;;;;8814:26;;8816:24;;;8814:26;;;:::i;:::-;;;;-1:-1:-1;8855:50:0;;8894:10;7609:51:5;;8855:50:0;;7597:2:5;7582:18;8855:50:0;;;;;;;8756:156::o;4488:657::-;4624:22;4649:109;4693:10;4717:8;4739:9;4649:30;:109::i;:::-;4624:134;;4768:218;4802:8;4824:14;4852:5;4871:43;4928:10;4952:9;4975:1;4768:20;:218::i;:::-;5001:137;;;5054:10;7896:51:5;;-1:-1:-1;;;;;7983:32:5;;;7978:2;7963:18;;7956:60;8052:32;;8032:18;;;8025:60;8128:14;;8121:22;8116:2;8101:18;;8094:50;5001:137:0;;;;;;;7883:3:5;5001:137:0;;;4614:531;4488:657;;;:::o;9706:2489::-;-1:-1:-1;;;;;9928:26:0;;9855:70;9928:26;;;:16;:26;;;;;9795:48;;10006:47;9928:26;10006:45;:47::i;:::-;9964:89;-1:-1:-1;10063:23:0;9964:89;10107:95;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10107:95:0;;-1:-1:-1;;10107:95:0;;;;;;;;;;;-1:-1:-1;10100:102:0;-1:-1:-1;10217:9:0;10212:1664;10236:31;10232:1;:35;10212:1664;;;10285:20;10308:31;:25;10337:1;10308:28;:31::i;:::-;10353:73;10429:28;;;:14;:28;;;;;;10353:104;;;;;;;;;;10285:54;;-1:-1:-1;10353:73:0;;:104;;10429:28;10353:104;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;10353:104:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10487:21;;;;10565;;10353:104;;-1:-1:-1;10487:21:0;10565;10353:104;;10636:5;:47;;;;;;;;:::i;:::-;;10632:1077;;10744:42;10770:5;10777:8;10744:25;:42::i;:::-;10728:12;:58;10703:155;;-1:-1:-1;10835:4:0;10703:155;10632:1077;;;10891:43;10882:5;:52;;;;;;;;:::i;:::-;;10878:831;;11015:168;11071:5;11102:8;11136:15;:25;;;11015:30;:168::i;10878:831::-;11288:40;11279:5;:49;;;;;;;;:::i;:::-;;11275:434;;11409:214;11462:5;11493:8;11527:15;:25;;;11578:15;:23;;;11409:27;:214::i;:::-;11373:12;:250;11348:347;;-1:-1:-1;11672:4:0;11348:347;11726:5;11722:85;;;11777:15;11751:4;11756:17;;;;:::i;:::-;;;11751:23;;;;;;;;:::i;:::-;;;;;;:41;;;;11722:85;11848:3;;;;;10271:1605;;;;;10212:1664;;;;11923:15;11889:31;:49;11885:304;;;12142:11;;11997:111;;;12138:26;;12125:40;;11885:304;9845:2350;;;9706:2489;;;:::o;5206:718::-;5364:22;5389:127;5430:10;5454:8;5476:9;5499:7;5389:27;:127::i;:::-;5364:152;;5526:221;5560:8;5582:14;5610:5;5629:40;5683:10;5707:9;5730:7;5526:20;:221::i;:::-;5762:155;;;5812:10;8672:51:5;;-1:-1:-1;;;;;8759:32:5;;;8754:2;8739:18;;8732:60;8828:32;;8808:18;;;8801:60;8892:2;8877:18;;8870:34;;;8948:14;;8941:22;8935:3;8920:19;;8913:51;5762:155:0;;;;;;;8659:3:5;5762:155:0;;;5354:570;5206:718;;;;:::o;3930:497::-;4012:22;4037:81;4076:10;4100:8;4037:25;:81::i;:::-;4012:106;;4128:214;4162:8;4184:14;4212:5;4231:38;4283:10;4315:1;4331;4128:20;:214::i;:::-;4357:63;;;4392:10;9171:51:5;;-1:-1:-1;;;;;9258:32:5;;9253:2;9238:18;;9231:60;9334:14;;9327:22;9307:18;;;9300:50;4357:63:0;;;;;;;9159:2:5;4357:63:0;;;4002:425;3930:497;;:::o;18869:1960::-;-1:-1:-1;;;;;19109:18:0;;19056:50;19109:18;;;;;;;;;;;19141:12;:19;;;;;;19109:61;;;;;;;18979;;19206:26;19109:61;19206:24;:26::i;:::-;19180:52;-1:-1:-1;19242:23:0;19180:52;19298:80;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;19298:80:0;;-1:-1:-1;;19298:80:0;;;;;;;;;;;-1:-1:-1;19279:99:0;-1:-1:-1;19393:9:0;19388:1188;19412:15;19408:1;:19;19388:1188;;;19445:22;19470:23;:17;19491:1;19470:20;:23::i;:::-;19507:38;19548:60;;;:14;:60;;;;;19445:48;;-1:-1:-1;19684:40:0;19643:21;;;;:81;;;;;;;;:::i;:::-;;19622:885;;19969:24;;;;20019:25;;;;20070:23;;;;19885:230;;19938:5;;-1:-1:-1;;;;;19969:24:0;;;;20019:25;;;19885:27;:230::i;:::-;19847:14;:268;19822:671;;20194:280;;;;;;;;20296:25;;;;-1:-1:-1;;;;;20296:25:0;;;20194:280;;20360:23;;;;20194:280;;;;20296:25;20423:24;;;;20194:280;;;;;;;20156:16;20173:17;;;;:::i;:::-;;;20156:35;;;;;;;;:::i;:::-;;;;;;:318;;;;19822:671;-1:-1:-1;;20548:3:0;;19388:1188;;21383:581;-1:-1:-1;;;;;21695:19:0;;;21529:4;21695:19;;;:12;:19;;;;;;;;;21732:15;:22;;;;;:32;;;;;;;;;;;;;21591:187;;;;;9620:51:5;;;;9687:18;;;9680:60;;;9776:32;;;9756:18;;;9749:60;9825:18;;;9818:34;;;9868:19;;;;9861:35;;;;21591:187:0;;;;;;;;;;9592:19:5;;21591:187:0;;21568:220;;;;;;;;;21817:18;;;;;;;;;:39;;;;;;;;;:62;;21568:220;21817:48;:62::i;:::-;:140;;21921:36;21941:8;21951:5;21921:19;:36::i;:::-;21817:140;;;21898:4;21817:140;21798:159;21383:581;-1:-1:-1;;;;;21383:581:0:o;20890:432::-;-1:-1:-1;;;;;21143:19:0;;;21004:4;21143:19;;;:12;:19;;;;;;;;;21180:15;:22;;;;;:32;;;;;;;;;;;;;21066:160;;;;;10138:51:5;;;;10205:18;;;10198:60;;;10274:18;;;10267:34;;;10317:18;;;;10310:34;;;;21066:160:0;;;;;;;;;;10110:19:5;;;;21066:160:0;;21043:193;;;;;;;;;21253:18;;;;;;;;;:39;;;;;;;;;:62;;21043:193;21253:48;:62::i;22025:644::-;-1:-1:-1;;;;;22384:19:0;;;22193:4;22384:19;;;:12;:19;;;;;;;;;22421:15;:22;;;;;:32;;;;;;;;;;;;22255:212;;22193:4;;;;22255:212;;22283:8;;22309:5;;22332:9;;22359:7;;22384:19;;22421:32;22255:212;;:::i;:::-;;;;-1:-1:-1;;22255:212:0;;;;;;;;;22232:245;;22255:212;22232:245;;;;-1:-1:-1;;;;;22506:18:0;;:11;:18;;;;;;;;;22525:12;:19;;;;;;22506:39;;;;;;;22232:245;;-1:-1:-1;22506:62:0;;22232:245;22506:48;:62::i;:::-;:156;;22610:52;22635:8;22645:5;22652:9;22610:24;:52::i;:::-;22506:156;;;22587:4;22506:156;22487:175;22025:644;-1:-1:-1;;;;;;22025:644:0:o;12622:350::-;12743:26;12800:165;12839:5;12862:43;12923:9;12950:1;12800:21;:165::i;:::-;12781:184;12622:350;-1:-1:-1;;;12622:350:0:o;16846:1962::-;-1:-1:-1;;;;;17117:18:0;;17064:50;17117:18;;;;;;;;;;;17149:12;:19;;;;;;17117:61;;;;;;;16972:67;;17214:26;17117:61;17214:24;:26::i;:::-;17188:52;-1:-1:-1;17250:23:0;17188:52;17309:83;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;17309:83:0;;;;;;;;;;;;;;;-1:-1:-1;17287:105:0;-1:-1:-1;17407:9:0;17402:1089;17426:15;17422:1;:19;17402:1089;;;17459:22;17484:23;:17;17505:1;17484:20;:23::i;:::-;17521:38;17562:60;;;:14;:60;;;;;17459:48;;-1:-1:-1;17698:43:0;17657:21;;;;:84;;;;;;;;:::i;:::-;;17636:786;;17989:24;;;;18039:25;;;;17902:184;;17958:5;;-1:-1:-1;;;;;17989:24:0;;;;18039:25;17902:30;:184::i;:::-;17864:14;:222;17839:569;;18168:221;;;;;;;;;18273:25;;;;-1:-1:-1;;;;;18273:25:0;;;18168:221;;18273:25;18338:24;;;;18168:221;;;;18127:19;18147:17;;;;:::i;:::-;;;18127:38;;;;;;;;:::i;:::-;;;;;;:262;;;;17839:569;-1:-1:-1;;18463:3:0;;17402:1089;;8973:114;9043:37;9059:8;9069:10;9043:15;:37::i;13414:3371::-;-1:-1:-1;;;;;13699:18:0;;13646:50;13699:18;;;;;;;;;;;13731:12;:19;;;;;;13699:61;;;;;;;13608:26;;13805;13699:61;13805:24;:26::i;:::-;13770:61;-1:-1:-1;13841:22:0;13770:61;13889:39;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;13889:39:0;-1:-1:-1;13877:51:0;-1:-1:-1;13943:9:0;13938:2592;13962:24;13958:1;:28;13938:2592;;;14004:22;14029:23;:17;14050:1;14029:20;:23::i;:::-;14066:38;14107:60;;;:14;:60;;;;;14004:48;;-1:-1:-1;14210:14:0;14185:39;;;;;;;;:::i;:::-;:21;;;;:39;;;;;;;;:::i;:::-;;14181:2280;;14266:38;14248:14;:56;;;;;;;;:::i;:::-;;14244:2203;;14558:24;;;;14468:140;;14523:5;;-1:-1:-1;;;;;14558:24:0;14468:25;:140::i;:::-;14426:14;:182;14397:337;;14687:24;;;;-1:-1:-1;;;;;14687:24:0;14657:9;14667:16;;;;:::i;:::-;;;14657:27;;;;;;;;:::i;:::-;;;;;;:54;-1:-1:-1;;;;;14657:54:0;;;-1:-1:-1;;;;;14657:54:0;;;;;14397:337;14244:2203;;;14821:43;14783:14;:81;;;;;;;;:::i;:::-;;14758:1689;;14909:25;;;;-1:-1:-1;;;;;14909:38:0;;;:25;;:38;14905:615;;15230:24;;;;15127:200;;15191:5;;-1:-1:-1;;;;;15230:24:0;15288:9;15127:30;:200::i;14758:1689::-;15587:40;15569:14;:58;;;;;;;;:::i;:::-;;15544:903;;15697:25;;;;-1:-1:-1;;;;;15697:38:0;;;:25;;:38;:100;;;;;15790:7;15763:15;:23;;;:34;15697:100;15668:761;;;16098:24;;;;15998:238;;16059:5;;-1:-1:-1;;;;;16098:24:0;16156:9;16199:7;15998:27;:238::i;:::-;15952:14;:284;15919:488;;16323:57;;;;-1:-1:-1;;;;;16323:57:0;16293:9;16303:16;;;;:::i;:::-;;;16293:27;;;;;;;;:::i;:::-;;;;;;:87;-1:-1:-1;;;;;16293:87:0;;;-1:-1:-1;;;;;16293:87:0;;;;;15919:488;-1:-1:-1;;16502:3:0;;13938:2592;;;;16570:14;16543:24;:41;16539:240;;;16727:16;;16643:45;;;16723:31;;16705:50;;16539:240;13636:3149;;;13414:3371;;;;;;:::o;9347:244::-;-1:-1:-1;;;;;9426:22:0;;;;;;;:15;:22;;;;;;;;:32;;;;;;;;;;;9424:34;;9426:32;;:22;9424:34;;;:::i;:::-;;;;-1:-1:-1;9531:53:0;;;-1:-1:-1;;;;;11165:32:5;;11147:51;;9573:10:0;11229:2:5;11214:18;;11207:60;9531:53:0;;11120:18:5;9531:53:0;;;;;;;9347:244;;:::o;7462:542::-;-1:-1:-1;;;;;7650:19:0;;;7607:7;7650:19;;;:12;:19;;;;;;;;;7706:15;:22;;;;;:32;;;;;;;;;;;;;;7794:189;;;;;9620:51:5;;;;9687:18;;;9680:60;;;;9776:32;;;;9756:18;;;9749:60;9825:18;;;9818:34;9868:19;;;;9861:35;;;;7794:189:0;;;;;;;;;;9592:19:5;;;;7794:189:0;;7767:230;;;;;;7462:542::o;6024:857::-;6284:5;6280:595;;;-1:-1:-1;;;;;6305:18:0;;:11;:18;;;;;;;;;;;6324:12;:19;;;;;;6305:39;;;;;;;:57;;6349:12;6305:43;:57::i;:::-;-1:-1:-1;;;;;;6376:26:0;;;;;;:16;:26;;;;;:44;;6407:12;6376:30;:44::i;:::-;;6465:198;;;;;;;;6571:5;6465:198;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;6465:198:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6434:28:0;;;:14;:28;;;;;:229;;;;:28;;-1:-1:-1;;6434:229:0;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;6434:229:0;;;;;;-1:-1:-1;;;;;6434:229:0;;;;;-1:-1:-1;;;;;;6434:229:0;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;6434:229:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6280:595;;;-1:-1:-1;;;;;6694:18:0;;:11;:18;;;;;;;;;;;6713:12;:19;;;;;;6694:39;;;;;;;:60;;6741:12;6694:46;:60::i;:::-;-1:-1:-1;;;;;;6768:26:0;;;;;;:16;:26;;;;;:47;;6802:12;6768:33;:47::i;:::-;-1:-1:-1;6836:28:0;;;;:14;:28;;;;;6829:35;;-1:-1:-1;;;;;;6829:35:0;;;;;;;;-1:-1:-1;;;;;;6829:35:0;;;;;;;;;;;;;;;;;;;6280:595;6024:857;;;;;;;:::o;7908:115:4:-;7971:7;7997:19;8005:3;5814:18;;5732:107;8365:129;8439:7;8465:22;8469:3;8481:5;8465:3;:22::i;6980:381:0:-;-1:-1:-1;;;;;7136:19:0;;;7093:7;7136:19;;;:12;:19;;;;;;;;;7192:15;:22;;;;;:32;;;;;;;;;;;;;;;7280:60;;;;;10138:51:5;;;;10205:18;;;10198:60;;;;10274:18;;;10267:34;;;;10317:18;;;;10310:34;;;;7280:60:0;;;;;;;;;;10110:19:5;;;;7280:60:0;;;7253:101;;;;;;6980:381::o;8102:593::-;-1:-1:-1;;;;;8312:19:0;;;8269:7;8312:19;;;:12;:19;;;;;;;;;8368:15;:22;;;;;:32;;;;;;;;;;;;8456:218;;8269:7;;8312:19;8368:32;;8456:218;;8391:8;;8325:5;;8545:9;;8576:7;;8312:19;;8368:32;;8456:218;;:::i;:::-;;;;;;;;;;;;;8429:259;;;;;;8410:278;;;;8102:593;;;;;;:::o;7689:138:4:-;7769:4;5620:19;;;:12;;;:19;;;;;;:24;;7792:28;5524:127;7188:123;7258:4;7281:23;7286:3;7298:5;7281:4;:23::i;7479:129::-;7552:4;7575:26;7583:3;7595:5;7575:7;:26::i;6181:118::-;6248:7;6274:3;:11;;6286:5;6274:18;;;;;;;;:::i;:::-;;;;;;;;;6267:25;;6181:118;;;;:::o;3483:404::-;3546:4;5620:19;;;:12;;;:19;;;;;;3562:319;;-1:-1:-1;3604:23:4;;;;;;;;:11;:23;;;;;;;;;;;;;3784:18;;3762:19;;;:12;;;:19;;;;;;:40;;;;3816:11;;3562:319;-1:-1:-1;3865:5:4;3858:12;;4055:1388;4121:4;4258:19;;;:12;;;:19;;;;;;4292:15;;4288:1149;;4661:21;4685:14;4698:1;4685:10;:14;:::i;:::-;4733:18;;4661:38;;-1:-1:-1;4713:17:4;;4733:22;;4754:1;;4733:22;:::i;:::-;4713:42;;4787:13;4774:9;:26;4770:398;;4820:17;4840:3;:11;;4852:9;4840:22;;;;;;;;:::i;:::-;;;;;;;;;4820:42;;4991:9;4962:3;:11;;4974:13;4962:26;;;;;;;;:::i;:::-;;;;;;;;;;;;:38;;;;5074:23;;;:12;;;:23;;;;;:36;;;4770:398;5246:17;;:3;;:17;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;5338:3;:12;;:19;5351:5;5338:19;;;;;;;;;;;5331:26;;;5379:4;5372:11;;;;;;;4288:1149;5421:5;5414:12;;;;;14:286:5;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;167:23;;-1:-1:-1;;;;;;219:32:5;;209:43;;199:71;;266:1;263;256:12;497:173;565:20;;-1:-1:-1;;;;;614:31:5;;604:42;;594:70;;660:1;657;650:12;594:70;497:173;;;:::o;675:374::-;752:6;760;768;821:2;809:9;800:7;796:23;792:32;789:52;;;837:1;834;827:12;789:52;860:29;879:9;860:29;:::i;:::-;850:39;;908:38;942:2;931:9;927:18;908:38;:::i;:::-;675:374;;898:48;;-1:-1:-1;;;1015:2:5;1000:18;;;;987:32;;675:374::o;1054:637::-;1244:2;1256:21;;;1326:13;;1229:18;;;1348:22;;;1196:4;;1427:15;;;1401:2;1386:18;;;1196:4;1470:195;1484:6;1481:1;1478:13;1470:195;;;1549:13;;-1:-1:-1;;;;;1545:39:5;1533:52;;1614:2;1640:15;;;;1605:12;;;;1581:1;1499:9;1470:195;;;-1:-1:-1;1682:3:5;;1054:637;-1:-1:-1;;;;;1054:637:5:o;1696:186::-;1755:6;1808:2;1796:9;1787:7;1783:23;1779:32;1776:52;;;1824:1;1821;1814:12;1776:52;1847:29;1866:9;1847:29;:::i;1887:160::-;1952:20;;2008:13;;2001:21;1991:32;;1981:60;;2037:1;2034;2027:12;2052:328;2126:6;2134;2142;2195:2;2183:9;2174:7;2170:23;2166:32;2163:52;;;2211:1;2208;2201:12;2163:52;2234:29;2253:9;2234:29;:::i;:::-;2224:39;;2282:38;2316:2;2305:9;2301:18;2282:38;:::i;:::-;2272:48;;2339:35;2370:2;2359:9;2355:18;2339:35;:::i;:::-;2329:45;;2052:328;;;;;:::o;2385:127::-;2446:10;2441:3;2437:20;2434:1;2427:31;2477:4;2474:1;2467:15;2501:4;2498:1;2491:15;2517:1205;2771:2;2783:21;;;2853:13;;2756:18;;;2875:22;;;2723:4;;2954:15;;;2928:2;2913:18;;;2723:4;2997:699;3011:6;3008:1;3005:13;2997:699;;;3076:6;3070:13;3112:2;3106:9;3145:1;3141:2;3138:9;3128:160;;3198:10;3193:3;3189:20;3186:1;3179:31;3237:4;3234:1;3227:15;3269:4;3266:1;3259:15;3128:160;3301:15;;3368:2;3360:11;;;3354:18;-1:-1:-1;;;;;3350:44:5;;;3336:12;;;3329:66;3447:2;3439:11;;;3433:18;3429:44;;3415:12;;;3408:66;3528:4;3520:13;;;3514:20;3510:46;;;3494:14;;;3487:70;3607:4;3599:13;;;3593:20;3577:14;;;3570:44;;;;3671:15;;;;;3382:3;3634:14;;;;3391:1;3026:9;2997:699;;3727:443;3810:6;3818;3826;3834;3887:3;3875:9;3866:7;3862:23;3858:33;3855:53;;;3904:1;3901;3894:12;3855:53;3927:29;3946:9;3927:29;:::i;:::-;3917:39;;3975:38;4009:2;3998:9;3994:18;3975:38;:::i;:::-;3965:48;-1:-1:-1;4082:2:5;4067:18;;4054:32;;-1:-1:-1;4129:35:5;4160:2;4145:18;;4129:35;:::i;:::-;4119:45;;3727:443;;;;;;;:::o;4175:254::-;4240:6;4248;4301:2;4289:9;4280:7;4276:23;4272:32;4269:52;;;4317:1;4314;4307:12;4269:52;4340:29;4359:9;4340:29;:::i;:::-;4330:39;;4388:35;4419:2;4408:9;4404:18;4388:35;:::i;:::-;4378:45;;4175:254;;;;;:::o;4434:869::-;4690:2;4702:21;;;4772:13;;4675:18;;;4794:22;;;4642:4;;4873:15;;;4847:2;4832:18;;;4642:4;4916:361;4930:6;4927:1;4924:13;4916:361;;;4989:13;;5031:9;;-1:-1:-1;;;;;5027:35:5;;;5015:48;;5111:2;5103:11;;;5097:18;5083:12;;;5076:40;5168:2;5160:11;;;5154:18;5150:44;;;5136:12;;;5129:66;;;;5252:15;;;;5224:4;5215:14;;;;5059:1;4945:9;4916:361;;5308:334;5385:6;5393;5401;5454:2;5442:9;5433:7;5429:23;5425:32;5422:52;;;5470:1;5467;5460:12;5422:52;5493:29;5512:9;5493:29;:::i;:::-;5483:39;;5541:38;5575:2;5564:9;5560:18;5541:38;:::i;:::-;5531:48;;5598:38;5632:2;5621:9;5617:18;5598:38;:::i;5647:260::-;5715:6;5723;5776:2;5764:9;5755:7;5751:23;5747:32;5744:52;;;5792:1;5789;5782:12;5744:52;5815:29;5834:9;5815:29;:::i;:::-;5805:39;;5863:38;5897:2;5886:9;5882:18;5863:38;:::i;5912:449::-;5998:6;6006;6014;6022;6075:3;6063:9;6054:7;6050:23;6046:33;6043:53;;;6092:1;6089;6082:12;6043:53;6115:29;6134:9;6115:29;:::i;:::-;6105:39;;6163:38;6197:2;6186:9;6182:18;6163:38;:::i;:::-;6153:48;;6220:38;6254:2;6243:9;6239:18;6220:38;:::i;:::-;5912:449;;;;-1:-1:-1;6210:48:5;;6327:2;6312:18;6299:32;;-1:-1:-1;;5912:449:5:o;6366:820::-;6628:2;6640:21;;;6710:13;;6613:18;;;6732:22;;;6580:4;;6811:15;;;6785:2;6770:18;;;6580:4;6854:306;6868:6;6865:1;6862:13;6854:306;;;6927:13;;6969:9;;-1:-1:-1;;;;;6965:35:5;;;6953:48;;7053:2;7045:11;;;7039:18;7035:44;7021:12;;;7014:66;7135:15;;;;7109:2;7100:12;;;;6997:1;6883:9;6854:306;;7191:127;7252:10;7247:3;7243:20;7240:1;7233:31;7283:4;7280:1;7273:15;7307:4;7304:1;7297:15;7323:135;7362:3;7383:17;;;7380:43;;7403:18;;:::i;:::-;-1:-1:-1;7450:1:5;7439:13;;7323:135::o;8155:127::-;8216:10;8211:3;8207:20;8204:1;8197:31;8247:4;8244:1;8237:15;8271:4;8268:1;8261:15;8287:127;8348:10;8343:3;8339:20;8336:1;8329:31;8379:4;8376:1;8369:15;8403:4;8400:1;8393:15;10355:613;-1:-1:-1;;;;;10660:32:5;;;10642:51;;10729:32;;;10724:2;10709:18;;10702:60;10798:32;;;;10793:2;10778:18;;10771:60;10862:2;10847:18;;10840:34;10905:3;10890:19;;10883:35;;;;10680:3;10934:19;;10927:35;;;;10629:3;10614:19;;10355:613::o;11278:128::-;11345:9;;;11366:11;;;11363:37;;;11380:18;;:::i;11411:127::-;11472:10;11467:3;11463:20;11460:1;11453:31;11503:4;11500:1;11493:15;11527:4;11524:1;11517:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1217800",
								"executionCost": "1266",
								"totalCost": "1219066"
							},
							"external": {
								"checkDelegateForAll(address,address)": "infinite",
								"checkDelegateForContract(address,address,address)": "infinite",
								"checkDelegateForToken(address,address,address,uint256)": "infinite",
								"delegateForAll(address,bool)": "infinite",
								"delegateForContract(address,address,bool)": "infinite",
								"delegateForToken(address,address,uint256,bool)": "infinite",
								"getContractLevelDelegations(address)": "infinite",
								"getDelegatesForAll(address)": "infinite",
								"getDelegatesForContract(address,address)": "infinite",
								"getDelegatesForToken(address,address,uint256)": "infinite",
								"getDelegationsByDelegate(address)": "infinite",
								"getTokenLevelDelegations(address)": "infinite",
								"revokeAllDelegates()": "25575",
								"revokeDelegate(address)": "26227",
								"revokeSelf(address)": "26229",
								"supportsInterface(bytes4)": "447"
							},
							"internal": {
								"_computeAllDelegationHash(address,address)": "infinite",
								"_computeContractDelegationHash(address,address,address)": "infinite",
								"_computeTokenDelegationHash(address,address,address,uint256)": "infinite",
								"_getDelegatesForLevel(address,enum IDelegationRegistry.DelegationType,address,uint256)": "infinite",
								"_revokeDelegate(address,address)": "infinite",
								"_setDelegationValues(address,bytes32,bool,enum IDelegationRegistry.DelegationType,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 2357,
									"end": 22671,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 2357,
									"end": 22671,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2357,
									"end": 22671,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2357,
									"end": 22671,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 2357,
									"end": 22671,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2357,
									"end": 22671,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 2357,
									"end": 22671,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 2357,
									"end": 22671,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 2357,
									"end": 22671,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2357,
									"end": 22671,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2357,
									"end": 22671,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 2357,
									"end": 22671,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 2357,
									"end": 22671,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2357,
									"end": 22671,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2357,
									"end": 22671,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2357,
									"end": 22671,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2357,
									"end": 22671,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2357,
									"end": 22671,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2357,
									"end": 22671,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 2357,
									"end": 22671,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2357,
									"end": 22671,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209e4b5ace470d3b3f81ccaa3d9a9597956cb043225ee95ebf65d5c3122dfd431c64736f6c634300081b0033",
									".code": [
										{
											"begin": 2357,
											"end": 22671,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2357,
											"end": 22671,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2357,
											"end": 22671,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 22671,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 22671,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 22671,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 22671,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2357,
											"end": 22671,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 22671,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 22671,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 22671,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 22671,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2357,
											"end": 22671,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 22671,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 22671,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2357,
											"end": 22671,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 22671,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 22671,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2357,
											"end": 22671,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 22671,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 22671,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 22671,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 2357,
											"end": 22671,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 22671,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 22671,
											"name": "PUSH",
											"source": 0,
											"value": "685EE3E8"
										},
										{
											"begin": 2357,
											"end": 22671,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 22671,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 2357,
											"end": 22671,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 22671,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 22671,
											"name": "PUSH",
											"source": 0,
											"value": "ABA69CF8"
										},
										{
											"begin": 2357,
											"end": 22671,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 22671,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2357,
											"end": 22671,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 22671,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 22671,
											"name": "PUSH",
											"source": 0,
											"value": "ABA69CF8"
										},
										{
											"begin": 2357,
											"end": 22671,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 22671,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2357,
											"end": 22671,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 22671,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 22671,
											"name": "PUSH",
											"source": 0,
											"value": "ED4B878E"
										},
										{
											"begin": 2357,
											"end": 22671,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 22671,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2357,
											"end": 22671,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 22671,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 22671,
											"name": "PUSH",
											"source": 0,
											"value": "F956CF94"
										},
										{
											"begin": 2357,
											"end": 22671,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 22671,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 2357,
											"end": 22671,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 22671,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 22671,
											"name": "PUSH",
											"source": 0,
											"value": "FA352C00"
										},
										{
											"begin": 2357,
											"end": 22671,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 22671,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2357,
											"end": 22671,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 22671,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 22671,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 22671,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 22671,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2357,
											"end": 22671,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 22671,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 22671,
											"name": "PUSH",
											"source": 0,
											"value": "685EE3E8"
										},
										{
											"begin": 2357,
											"end": 22671,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 22671,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 2357,
											"end": 22671,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 22671,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 22671,
											"name": "PUSH",
											"source": 0,
											"value": "6F007D87"
										},
										{
											"begin": 2357,
											"end": 22671,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 22671,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2357,
											"end": 22671,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 22671,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 22671,
											"name": "PUSH",
											"source": 0,
											"value": "90C9A2D0"
										},
										{
											"begin": 2357,
											"end": 22671,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 22671,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 2357,
											"end": 22671,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 22671,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 22671,
											"name": "PUSH",
											"source": 0,
											"value": "9C395BC2"
										},
										{
											"begin": 2357,
											"end": 22671,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 22671,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 2357,
											"end": 22671,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 22671,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 22671,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 22671,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 22671,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 2357,
											"end": 22671,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 22671,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 22671,
											"name": "PUSH",
											"source": 0,
											"value": "36137872"
										},
										{
											"begin": 2357,
											"end": 22671,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 22671,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 2357,
											"end": 22671,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 22671,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 22671,
											"name": "PUSH",
											"source": 0,
											"value": "36137872"
										},
										{
											"begin": 2357,
											"end": 22671,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 22671,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 2357,
											"end": 22671,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 22671,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 22671,
											"name": "PUSH",
											"source": 0,
											"value": "49C95D29"
										},
										{
											"begin": 2357,
											"end": 22671,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 22671,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 2357,
											"end": 22671,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 22671,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 22671,
											"name": "PUSH",
											"source": 0,
											"value": "4FC69282"
										},
										{
											"begin": 2357,
											"end": 22671,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 22671,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 2357,
											"end": 22671,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 22671,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 22671,
											"name": "PUSH",
											"source": 0,
											"value": "537A5C3D"
										},
										{
											"begin": 2357,
											"end": 22671,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 22671,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 2357,
											"end": 22671,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 22671,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 22671,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 22671,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 22671,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 2357,
											"end": 22671,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 22671,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 22671,
											"name": "PUSH",
											"source": 0,
											"value": "1FFC9A7"
										},
										{
											"begin": 2357,
											"end": 22671,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 22671,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2357,
											"end": 22671,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 22671,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 22671,
											"name": "PUSH",
											"source": 0,
											"value": "1221156B"
										},
										{
											"begin": 2357,
											"end": 22671,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 22671,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2357,
											"end": 22671,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 22671,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 22671,
											"name": "PUSH",
											"source": 0,
											"value": "1B61F675"
										},
										{
											"begin": 2357,
											"end": 22671,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 22671,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2357,
											"end": 22671,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 22671,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 22671,
											"name": "PUSH",
											"source": 0,
											"value": "219044B0"
										},
										{
											"begin": 2357,
											"end": 22671,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 22671,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 2357,
											"end": 22671,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 22671,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2357,
											"end": 22671,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 22671,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 22671,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 22671,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3561,
											"end": 3814,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 3561,
											"end": 3814,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3561,
											"end": 3814,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 3561,
											"end": 3814,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 3561,
											"end": 3814,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3561,
											"end": 3814,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3561,
											"end": 3814,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 3561,
											"end": 3814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3561,
											"end": 3814,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 3561,
											"end": 3814,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3561,
											"end": 3814,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 3561,
											"end": 3814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3561,
											"end": 3814,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 3561,
											"end": 3814,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3561,
											"end": 3814,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3561,
											"end": 3814,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 470,
											"end": 484,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 470,
											"end": 484,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 463,
											"end": 485,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 445,
											"end": 486,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 445,
											"end": 486,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 433,
											"end": 435,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 418,
											"end": 436,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3561,
											"end": 3814,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 3561,
											"end": 3814,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3561,
											"end": 3814,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3561,
											"end": 3814,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3561,
											"end": 3814,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3561,
											"end": 3814,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3561,
											"end": 3814,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3561,
											"end": 3814,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3561,
											"end": 3814,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 13033,
											"end": 13408,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13033,
											"end": 13408,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13033,
											"end": 13408,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 13033,
											"end": 13408,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 13033,
											"end": 13408,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 13033,
											"end": 13408,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13033,
											"end": 13408,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 13033,
											"end": 13408,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13033,
											"end": 13408,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 13033,
											"end": 13408,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13033,
											"end": 13408,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 13033,
											"end": 13408,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13033,
											"end": 13408,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 13033,
											"end": 13408,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13033,
											"end": 13408,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13033,
											"end": 13408,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13033,
											"end": 13408,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 13033,
											"end": 13408,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13033,
											"end": 13408,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13033,
											"end": 13408,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 13033,
											"end": 13408,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12256,
											"end": 12561,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 12256,
											"end": 12561,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12256,
											"end": 12561,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 12256,
											"end": 12561,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 12256,
											"end": 12561,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 12256,
											"end": 12561,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12256,
											"end": 12561,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 12256,
											"end": 12561,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12256,
											"end": 12561,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 12256,
											"end": 12561,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12256,
											"end": 12561,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 12256,
											"end": 12561,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9148,
											"end": 9252,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 9148,
											"end": 9252,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9148,
											"end": 9252,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 9148,
											"end": 9252,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9148,
											"end": 9252,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 9148,
											"end": 9252,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9148,
											"end": 9252,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 9148,
											"end": 9252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9148,
											"end": 9252,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9148,
											"end": 9252,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9148,
											"end": 9252,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 9148,
											"end": 9252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9148,
											"end": 9252,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 9148,
											"end": 9252,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9148,
											"end": 9252,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 8756,
											"end": 8912,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 8756,
											"end": 8912,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8756,
											"end": 8912,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 8756,
											"end": 8912,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 8756,
											"end": 8912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4488,
											"end": 5145,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 4488,
											"end": 5145,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4488,
											"end": 5145,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 4488,
											"end": 5145,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 4488,
											"end": 5145,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4488,
											"end": 5145,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4488,
											"end": 5145,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 4488,
											"end": 5145,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4488,
											"end": 5145,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 4488,
											"end": 5145,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4488,
											"end": 5145,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 4488,
											"end": 5145,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9706,
											"end": 12195,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 9706,
											"end": 12195,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9706,
											"end": 12195,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 9706,
											"end": 12195,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 9706,
											"end": 12195,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 9706,
											"end": 12195,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9706,
											"end": 12195,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 9706,
											"end": 12195,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9706,
											"end": 12195,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 9706,
											"end": 12195,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9706,
											"end": 12195,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 9706,
											"end": 12195,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9706,
											"end": 12195,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 9706,
											"end": 12195,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9706,
											"end": 12195,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9706,
											"end": 12195,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9706,
											"end": 12195,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 9706,
											"end": 12195,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9706,
											"end": 12195,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9706,
											"end": 12195,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 9706,
											"end": 12195,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5206,
											"end": 5924,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 5206,
											"end": 5924,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5206,
											"end": 5924,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 5206,
											"end": 5924,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 5206,
											"end": 5924,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5206,
											"end": 5924,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5206,
											"end": 5924,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 5206,
											"end": 5924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5206,
											"end": 5924,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 5206,
											"end": 5924,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5206,
											"end": 5924,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 5206,
											"end": 5924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3930,
											"end": 4427,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 3930,
											"end": 4427,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3930,
											"end": 4427,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 3930,
											"end": 4427,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 3930,
											"end": 4427,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3930,
											"end": 4427,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3930,
											"end": 4427,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 3930,
											"end": 4427,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3930,
											"end": 4427,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 3930,
											"end": 4427,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3930,
											"end": 4427,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 3930,
											"end": 4427,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18869,
											"end": 20829,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 18869,
											"end": 20829,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18869,
											"end": 20829,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 18869,
											"end": 20829,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 18869,
											"end": 20829,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 18869,
											"end": 20829,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 18869,
											"end": 20829,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 18869,
											"end": 20829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18869,
											"end": 20829,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 18869,
											"end": 20829,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18869,
											"end": 20829,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 18869,
											"end": 20829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18869,
											"end": 20829,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 18869,
											"end": 20829,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18869,
											"end": 20829,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18869,
											"end": 20829,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18869,
											"end": 20829,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 18869,
											"end": 20829,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18869,
											"end": 20829,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18869,
											"end": 20829,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 18869,
											"end": 20829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21383,
											"end": 21964,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 21383,
											"end": 21964,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21383,
											"end": 21964,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 21383,
											"end": 21964,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 21383,
											"end": 21964,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 21383,
											"end": 21964,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 21383,
											"end": 21964,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 21383,
											"end": 21964,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21383,
											"end": 21964,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 21383,
											"end": 21964,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21383,
											"end": 21964,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 21383,
											"end": 21964,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20890,
											"end": 21322,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 20890,
											"end": 21322,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20890,
											"end": 21322,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 20890,
											"end": 21322,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 20890,
											"end": 21322,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 20890,
											"end": 21322,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20890,
											"end": 21322,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 20890,
											"end": 21322,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20890,
											"end": 21322,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 20890,
											"end": 21322,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20890,
											"end": 21322,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 20890,
											"end": 21322,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22025,
											"end": 22669,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 22025,
											"end": 22669,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22025,
											"end": 22669,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 22025,
											"end": 22669,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 22025,
											"end": 22669,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 22025,
											"end": 22669,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22025,
											"end": 22669,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 22025,
											"end": 22669,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22025,
											"end": 22669,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 22025,
											"end": 22669,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22025,
											"end": 22669,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 22025,
											"end": 22669,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12622,
											"end": 12972,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 12622,
											"end": 12972,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12622,
											"end": 12972,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 12622,
											"end": 12972,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 12622,
											"end": 12972,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 12622,
											"end": 12972,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12622,
											"end": 12972,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 12622,
											"end": 12972,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12622,
											"end": 12972,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 12622,
											"end": 12972,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12622,
											"end": 12972,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 12622,
											"end": 12972,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16846,
											"end": 18808,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 16846,
											"end": 18808,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16846,
											"end": 18808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 16846,
											"end": 18808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 16846,
											"end": 18808,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 16846,
											"end": 18808,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16846,
											"end": 18808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 16846,
											"end": 18808,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16846,
											"end": 18808,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 16846,
											"end": 18808,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16846,
											"end": 18808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 16846,
											"end": 18808,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16846,
											"end": 18808,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 16846,
											"end": 18808,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16846,
											"end": 18808,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16846,
											"end": 18808,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16846,
											"end": 18808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 16846,
											"end": 18808,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16846,
											"end": 18808,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16846,
											"end": 18808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 16846,
											"end": 18808,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8973,
											"end": 9087,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 8973,
											"end": 9087,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8973,
											"end": 9087,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 8973,
											"end": 9087,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 8973,
											"end": 9087,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 8973,
											"end": 9087,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8973,
											"end": 9087,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 8973,
											"end": 9087,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8973,
											"end": 9087,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 8973,
											"end": 9087,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8973,
											"end": 9087,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 8973,
											"end": 9087,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3561,
											"end": 3814,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 3561,
											"end": 3814,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3668,
											"end": 3672,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3703,
											"end": 3755,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3703,
											"end": 3755,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "596D3D5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3703,
											"end": 3755,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3703,
											"end": 3755,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3703,
											"end": 3807,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 3703,
											"end": 3807,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1FFC9A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2206,
											"end": 2246,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2206,
											"end": 2246,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2206,
											"end": 2246,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 3807,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 3771,
											"end": 3807,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3684,
											"end": 3807,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3561,
											"end": 3814,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3561,
											"end": 3814,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13033,
											"end": 13408,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 13033,
											"end": 13408,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13176,
											"end": 13202,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 13233,
											"end": 13401,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 13272,
											"end": 13277,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 13295,
											"end": 13335,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 13353,
											"end": 13362,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 13380,
											"end": 13387,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 13233,
											"end": 13254,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 13233,
											"end": 13401,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13233,
											"end": 13401,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 13233,
											"end": 13401,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13214,
											"end": 13401,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 13033,
											"end": 13408,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13033,
											"end": 13408,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12256,
											"end": 12561,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 12256,
											"end": 12561,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12336,
											"end": 12362,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 12393,
											"end": 12554,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 12432,
											"end": 12437,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12455,
											"end": 12493,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 12519,
											"end": 12520,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12539,
											"end": 12540,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12393,
											"end": 12414,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 12393,
											"end": 12554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9148,
											"end": 9252,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 9148,
											"end": 9252,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9211,
											"end": 9245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 9227,
											"end": 9237,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 9239,
											"end": 9244,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9211,
											"end": 9226,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 9211,
											"end": 9245,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9211,
											"end": 9245,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 9211,
											"end": 9245,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9148,
											"end": 9252,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9148,
											"end": 9252,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8756,
											"end": 8912,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 8756,
											"end": 8912,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8829,
											"end": 8839,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 8816,
											"end": 8840,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8816,
											"end": 8840,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8816,
											"end": 8840,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8816,
											"end": 8840,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8816,
											"end": 8828,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8816,
											"end": 8840,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8816,
											"end": 8840,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8816,
											"end": 8840,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8816,
											"end": 8840,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8816,
											"end": 8840,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8814,
											"end": 8840,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8814,
											"end": 8840,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8816,
											"end": 8840,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8816,
											"end": 8840,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8816,
											"end": 8840,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8814,
											"end": 8840,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 8814,
											"end": 8840,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8814,
											"end": 8840,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 8814,
											"end": 8840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8814,
											"end": 8840,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 8814,
											"end": 8840,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8814,
											"end": 8840,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8814,
											"end": 8840,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8814,
											"end": 8840,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8855,
											"end": 8905,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8855,
											"end": 8905,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8894,
											"end": 8904,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 7609,
											"end": 7660,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7609,
											"end": 7660,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8855,
											"end": 8905,
											"name": "PUSH",
											"source": 0,
											"value": "32D74BEFD0B842E19694E3E3AF46263E18BCCE41352C8B600FF0002B49EDF662"
										},
										{
											"begin": 8855,
											"end": 8905,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7597,
											"end": 7599,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7582,
											"end": 7600,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8855,
											"end": 8905,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8855,
											"end": 8905,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8855,
											"end": 8905,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8855,
											"end": 8905,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8855,
											"end": 8905,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8855,
											"end": 8905,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8855,
											"end": 8905,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 8756,
											"end": 8912,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4488,
											"end": 5145,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 4488,
											"end": 5145,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4624,
											"end": 4646,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4649,
											"end": 4758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 4693,
											"end": 4703,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 4717,
											"end": 4725,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4739,
											"end": 4748,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4649,
											"end": 4679,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 4649,
											"end": 4758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4649,
											"end": 4758,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 4649,
											"end": 4758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4624,
											"end": 4758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4624,
											"end": 4758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4768,
											"end": 4986,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 4802,
											"end": 4810,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4824,
											"end": 4838,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4852,
											"end": 4857,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4871,
											"end": 4914,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 4928,
											"end": 4938,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 4952,
											"end": 4961,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 4975,
											"end": 4976,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4768,
											"end": 4788,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 4768,
											"end": 4986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4768,
											"end": 4986,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 4768,
											"end": 4986,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5001,
											"end": 5138,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5001,
											"end": 5138,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5001,
											"end": 5138,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5054,
											"end": 5064,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 7896,
											"end": 7947,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7896,
											"end": 7947,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7983,
											"end": 8015,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 7983,
											"end": 8015,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7983,
											"end": 8015,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7978,
											"end": 7980,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7963,
											"end": 7981,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7963,
											"end": 7981,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7956,
											"end": 8016,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8052,
											"end": 8084,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 8052,
											"end": 8084,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8032,
											"end": 8050,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8032,
											"end": 8050,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8032,
											"end": 8050,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8025,
											"end": 8085,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8128,
											"end": 8142,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8128,
											"end": 8142,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8121,
											"end": 8143,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8116,
											"end": 8118,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 8101,
											"end": 8119,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8101,
											"end": 8119,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8094,
											"end": 8144,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5001,
											"end": 5138,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5001,
											"end": 5138,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5001,
											"end": 5138,
											"name": "PUSH",
											"source": 0,
											"value": "8D6B2F5255B8D815CC368855B2251146E003BF4E2FCCCAEC66145FFF5C174B4F"
										},
										{
											"begin": 5001,
											"end": 5138,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5001,
											"end": 5138,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5001,
											"end": 5138,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5001,
											"end": 5138,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7883,
											"end": 7886,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 5001,
											"end": 5138,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5001,
											"end": 5138,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5001,
											"end": 5138,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 4614,
											"end": 5145,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4488,
											"end": 5145,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4488,
											"end": 5145,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4488,
											"end": 5145,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4488,
											"end": 5145,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9706,
											"end": 12195,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 9706,
											"end": 12195,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9928,
											"end": 9954,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9928,
											"end": 9954,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9855,
											"end": 9925,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9928,
											"end": 9954,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9928,
											"end": 9954,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9928,
											"end": 9954,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9928,
											"end": 9944,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 9928,
											"end": 9954,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9928,
											"end": 9954,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9928,
											"end": 9954,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9928,
											"end": 9954,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9928,
											"end": 9954,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9795,
											"end": 9843,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 9795,
											"end": 9843,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10006,
											"end": 10053,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 9928,
											"end": 9954,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10006,
											"end": 10051,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 10006,
											"end": 10053,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10006,
											"end": 10053,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 10006,
											"end": 10053,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9964,
											"end": 10053,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10063,
											"end": 10086,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9964,
											"end": 10053,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10107,
											"end": 10202,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10107,
											"end": 10202,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10107,
											"end": 10202,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 10107,
											"end": 10202,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10107,
											"end": 10202,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 10107,
											"end": 10202,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10107,
											"end": 10202,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 10107,
											"end": 10202,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 10107,
											"end": 10202,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10107,
											"end": 10202,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 10107,
											"end": 10202,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10107,
											"end": 10202,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10107,
											"end": 10202,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10107,
											"end": 10202,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10107,
											"end": 10202,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10107,
											"end": 10202,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10107,
											"end": 10202,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10107,
											"end": 10202,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10107,
											"end": 10202,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10107,
											"end": 10202,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 10107,
											"end": 10202,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10107,
											"end": 10202,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10107,
											"end": 10202,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10107,
											"end": 10202,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10107,
											"end": 10202,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10107,
											"end": 10202,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10107,
											"end": 10202,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10107,
											"end": 10202,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10107,
											"end": 10202,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 10107,
											"end": 10202,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10107,
											"end": 10202,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10107,
											"end": 10202,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10107,
											"end": 10202,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10107,
											"end": 10202,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 10107,
											"end": 10202,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 10107,
											"end": 10202,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10107,
											"end": 10202,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10107,
											"end": 10202,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10107,
											"end": 10202,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10107,
											"end": 10202,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10107,
											"end": 10202,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10107,
											"end": 10202,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10107,
											"end": 10202,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10107,
											"end": 10202,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 10107,
											"end": 10202,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10107,
											"end": 10202,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10107,
											"end": 10202,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10107,
											"end": 10202,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 10107,
											"end": 10202,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10100,
											"end": 10202,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10217,
											"end": 10226,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10212,
											"end": 11876,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 10212,
											"end": 11876,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10236,
											"end": 10267,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10232,
											"end": 10233,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10232,
											"end": 10267,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 10212,
											"end": 11876,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10212,
											"end": 11876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 10212,
											"end": 11876,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10285,
											"end": 10305,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10308,
											"end": 10339,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 10308,
											"end": 10333,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 10337,
											"end": 10338,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10308,
											"end": 10336,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 10308,
											"end": 10339,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10308,
											"end": 10339,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 10308,
											"end": 10339,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10353,
											"end": 10426,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10429,
											"end": 10457,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10429,
											"end": 10457,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10429,
											"end": 10457,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10429,
											"end": 10443,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10429,
											"end": 10457,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10429,
											"end": 10457,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10429,
											"end": 10457,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10429,
											"end": 10457,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10429,
											"end": 10457,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10429,
											"end": 10457,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10353,
											"end": 10457,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10353,
											"end": 10457,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10353,
											"end": 10457,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 10353,
											"end": 10457,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10353,
											"end": 10457,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10353,
											"end": 10457,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10353,
											"end": 10457,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10353,
											"end": 10457,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10353,
											"end": 10457,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10353,
											"end": 10457,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10285,
											"end": 10339,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 10285,
											"end": 10339,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10353,
											"end": 10426,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10353,
											"end": 10426,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10353,
											"end": 10457,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10353,
											"end": 10457,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10429,
											"end": 10457,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10353,
											"end": 10457,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10353,
											"end": 10457,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10353,
											"end": 10457,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 10353,
											"end": 10457,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10353,
											"end": 10457,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 10353,
											"end": 10457,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10353,
											"end": 10457,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 10353,
											"end": 10457,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10353,
											"end": 10457,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 10353,
											"end": 10457,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10353,
											"end": 10457,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 10353,
											"end": 10457,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 10353,
											"end": 10457,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10353,
											"end": 10457,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 10353,
											"end": 10457,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10353,
											"end": 10457,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 10353,
											"end": 10457,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10353,
											"end": 10457,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 10353,
											"end": 10457,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10353,
											"end": 10457,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 10353,
											"end": 10457,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10353,
											"end": 10457,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 10353,
											"end": 10457,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 10353,
											"end": 10457,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10353,
											"end": 10457,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 10353,
											"end": 10457,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10353,
											"end": 10457,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10353,
											"end": 10457,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10353,
											"end": 10457,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10353,
											"end": 10457,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10353,
											"end": 10457,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 10353,
											"end": 10457,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10353,
											"end": 10457,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10353,
											"end": 10457,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 10353,
											"end": 10457,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10353,
											"end": 10457,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10353,
											"end": 10457,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10353,
											"end": 10457,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10353,
											"end": 10457,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10353,
											"end": 10457,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10353,
											"end": 10457,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10353,
											"end": 10457,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10353,
											"end": 10457,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10353,
											"end": 10457,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10353,
											"end": 10457,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 10353,
											"end": 10457,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10353,
											"end": 10457,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 10353,
											"end": 10457,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10353,
											"end": 10457,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10353,
											"end": 10457,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10353,
											"end": 10457,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10353,
											"end": 10457,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10353,
											"end": 10457,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 10353,
											"end": 10457,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10353,
											"end": 10457,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10353,
											"end": 10457,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 10353,
											"end": 10457,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 10353,
											"end": 10457,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10353,
											"end": 10457,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10353,
											"end": 10457,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10353,
											"end": 10457,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10353,
											"end": 10457,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10353,
											"end": 10457,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 10353,
											"end": 10457,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10353,
											"end": 10457,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10353,
											"end": 10457,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10353,
											"end": 10457,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 10353,
											"end": 10457,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10353,
											"end": 10457,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 10353,
											"end": 10457,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10353,
											"end": 10457,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10353,
											"end": 10457,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 10353,
											"end": 10457,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10353,
											"end": 10457,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10353,
											"end": 10457,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10353,
											"end": 10457,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10353,
											"end": 10457,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10353,
											"end": 10457,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10353,
											"end": 10457,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10487,
											"end": 10508,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10487,
											"end": 10508,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10487,
											"end": 10508,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10487,
											"end": 10508,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10565,
											"end": 10586,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10565,
											"end": 10586,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10353,
											"end": 10457,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10353,
											"end": 10457,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10487,
											"end": 10508,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10565,
											"end": 10586,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10353,
											"end": 10457,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10353,
											"end": 10457,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10636,
											"end": 10641,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10636,
											"end": 10683,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 10636,
											"end": 10683,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10636,
											"end": 10683,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 10636,
											"end": 10683,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10636,
											"end": 10683,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 10636,
											"end": 10683,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10636,
											"end": 10683,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 10636,
											"end": 10683,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 10636,
											"end": 10683,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10636,
											"end": 10683,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 10636,
											"end": 10683,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10636,
											"end": 10683,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10632,
											"end": 11709,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 10632,
											"end": 11709,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10744,
											"end": 10786,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 10770,
											"end": 10775,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10777,
											"end": 10785,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": 10744,
											"end": 10769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 10744,
											"end": 10786,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10744,
											"end": 10786,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 10744,
											"end": 10786,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10728,
											"end": 10740,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 10728,
											"end": 10786,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10703,
											"end": 10858,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 10703,
											"end": 10858,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10835,
											"end": 10839,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 10703,
											"end": 10858,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 10703,
											"end": 10858,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10632,
											"end": 11709,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 10632,
											"end": 11709,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10632,
											"end": 11709,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 10632,
											"end": 11709,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10891,
											"end": 10934,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 10882,
											"end": 10887,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10882,
											"end": 10934,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 10882,
											"end": 10934,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10882,
											"end": 10934,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 10882,
											"end": 10934,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10882,
											"end": 10934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 10882,
											"end": 10934,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10882,
											"end": 10934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 10882,
											"end": 10934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 10882,
											"end": 10934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10882,
											"end": 10934,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 10882,
											"end": 10934,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10882,
											"end": 10934,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10878,
											"end": 11709,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 10878,
											"end": 11709,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11015,
											"end": 11183,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 11071,
											"end": 11076,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11102,
											"end": 11110,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": 11136,
											"end": 11151,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 11136,
											"end": 11161,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 11136,
											"end": 11161,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11136,
											"end": 11161,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11015,
											"end": 11045,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 11015,
											"end": 11183,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10878,
											"end": 11709,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 10878,
											"end": 11709,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11288,
											"end": 11328,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 11279,
											"end": 11284,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11279,
											"end": 11328,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 11279,
											"end": 11328,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11279,
											"end": 11328,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 11279,
											"end": 11328,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11279,
											"end": 11328,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 11279,
											"end": 11328,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11279,
											"end": 11328,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 11279,
											"end": 11328,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 11279,
											"end": 11328,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11279,
											"end": 11328,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 11279,
											"end": 11328,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11279,
											"end": 11328,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11275,
											"end": 11709,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 11275,
											"end": 11709,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11409,
											"end": 11623,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 11462,
											"end": 11467,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11493,
											"end": 11501,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": 11527,
											"end": 11542,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 11527,
											"end": 11552,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 11527,
											"end": 11552,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11527,
											"end": 11552,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11578,
											"end": 11593,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 11578,
											"end": 11601,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 11578,
											"end": 11601,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11578,
											"end": 11601,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11409,
											"end": 11436,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 11409,
											"end": 11623,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11409,
											"end": 11623,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 11409,
											"end": 11623,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11373,
											"end": 11385,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 11373,
											"end": 11623,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11348,
											"end": 11695,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 11348,
											"end": 11695,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11672,
											"end": 11676,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 11348,
											"end": 11695,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 11348,
											"end": 11695,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11726,
											"end": 11731,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11722,
											"end": 11807,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11722,
											"end": 11807,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 11722,
											"end": 11807,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11777,
											"end": 11792,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11751,
											"end": 11755,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 11756,
											"end": 11773,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 11756,
											"end": 11773,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 11756,
											"end": 11773,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11756,
											"end": 11773,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 11756,
											"end": 11773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11756,
											"end": 11773,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 11756,
											"end": 11773,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11756,
											"end": 11773,
											"name": "SWAP10",
											"source": 0
										},
										{
											"begin": 11756,
											"end": 11773,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11751,
											"end": 11774,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11751,
											"end": 11774,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11751,
											"end": 11774,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11751,
											"end": 11774,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 11751,
											"end": 11774,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 11751,
											"end": 11774,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11751,
											"end": 11774,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 11751,
											"end": 11774,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 11751,
											"end": 11774,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11751,
											"end": 11774,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 11751,
											"end": 11774,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11751,
											"end": 11774,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11751,
											"end": 11774,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 11751,
											"end": 11774,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11751,
											"end": 11774,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11751,
											"end": 11774,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11751,
											"end": 11792,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11751,
											"end": 11792,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11751,
											"end": 11792,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11751,
											"end": 11792,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11722,
											"end": 11807,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 11722,
											"end": 11807,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11848,
											"end": 11851,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 11848,
											"end": 11851,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 11848,
											"end": 11851,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11848,
											"end": 11851,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 11848,
											"end": 11851,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10271,
											"end": 11876,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10271,
											"end": 11876,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10271,
											"end": 11876,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10271,
											"end": 11876,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10271,
											"end": 11876,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10212,
											"end": 11876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 10212,
											"end": 11876,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10212,
											"end": 11876,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 10212,
											"end": 11876,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10212,
											"end": 11876,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11923,
											"end": 11938,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11889,
											"end": 11920,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11889,
											"end": 11938,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 11885,
											"end": 12189,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11885,
											"end": 12189,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 11885,
											"end": 12189,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12142,
											"end": 12153,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12142,
											"end": 12153,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11997,
											"end": 12108,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11997,
											"end": 12108,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11997,
											"end": 12108,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12138,
											"end": 12164,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12138,
											"end": 12164,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12125,
											"end": 12165,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 12125,
											"end": 12165,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11885,
											"end": 12189,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 11885,
											"end": 12189,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9845,
											"end": 12195,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9845,
											"end": 12195,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9845,
											"end": 12195,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9706,
											"end": 12195,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9706,
											"end": 12195,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9706,
											"end": 12195,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9706,
											"end": 12195,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5206,
											"end": 5924,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 5206,
											"end": 5924,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5364,
											"end": 5386,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5389,
											"end": 5516,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 5430,
											"end": 5440,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 5454,
											"end": 5462,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 5476,
											"end": 5485,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 5499,
											"end": 5506,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 5389,
											"end": 5416,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 5389,
											"end": 5516,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5389,
											"end": 5516,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 5389,
											"end": 5516,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5364,
											"end": 5516,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5364,
											"end": 5516,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5526,
											"end": 5747,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 5560,
											"end": 5568,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5582,
											"end": 5596,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5610,
											"end": 5615,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5629,
											"end": 5669,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 5683,
											"end": 5693,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 5707,
											"end": 5716,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 5730,
											"end": 5737,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 5526,
											"end": 5546,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 5526,
											"end": 5747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5526,
											"end": 5747,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 5526,
											"end": 5747,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5762,
											"end": 5917,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5762,
											"end": 5917,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5762,
											"end": 5917,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5812,
											"end": 5822,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 8672,
											"end": 8723,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8672,
											"end": 8723,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8759,
											"end": 8791,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 8759,
											"end": 8791,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8759,
											"end": 8791,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8754,
											"end": 8756,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8739,
											"end": 8757,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8739,
											"end": 8757,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8732,
											"end": 8792,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8828,
											"end": 8860,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 8828,
											"end": 8860,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8808,
											"end": 8826,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8808,
											"end": 8826,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8808,
											"end": 8826,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8801,
											"end": 8861,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8892,
											"end": 8894,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 8877,
											"end": 8895,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8877,
											"end": 8895,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8870,
											"end": 8904,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 8870,
											"end": 8904,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8870,
											"end": 8904,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8948,
											"end": 8962,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8948,
											"end": 8962,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8941,
											"end": 8963,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8935,
											"end": 8938,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 8920,
											"end": 8939,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8920,
											"end": 8939,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8913,
											"end": 8964,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5762,
											"end": 5917,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5762,
											"end": 5917,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5762,
											"end": 5917,
											"name": "PUSH",
											"source": 0,
											"value": "E89C6BA1E8957285AED22618F52AA1DCB9D5BB64E1533D8B55136C72FCF5AA5D"
										},
										{
											"begin": 5762,
											"end": 5917,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5762,
											"end": 5917,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5762,
											"end": 5917,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5762,
											"end": 5917,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8659,
											"end": 8662,
											"name": "PUSH",
											"source": 5,
											"value": "A0"
										},
										{
											"begin": 5762,
											"end": 5917,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5762,
											"end": 5917,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5762,
											"end": 5917,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 5354,
											"end": 5924,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5206,
											"end": 5924,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5206,
											"end": 5924,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5206,
											"end": 5924,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5206,
											"end": 5924,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5206,
											"end": 5924,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3930,
											"end": 4427,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 3930,
											"end": 4427,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4012,
											"end": 4034,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4037,
											"end": 4118,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 4076,
											"end": 4086,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 4100,
											"end": 4108,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4037,
											"end": 4062,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 4037,
											"end": 4118,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4037,
											"end": 4118,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 4037,
											"end": 4118,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4012,
											"end": 4118,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4012,
											"end": 4118,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4128,
											"end": 4342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 4162,
											"end": 4170,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4184,
											"end": 4198,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4212,
											"end": 4217,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4231,
											"end": 4269,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4283,
											"end": 4293,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 4315,
											"end": 4316,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4331,
											"end": 4332,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4128,
											"end": 4148,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 4128,
											"end": 4342,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4128,
											"end": 4342,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 4128,
											"end": 4342,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4357,
											"end": 4420,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4357,
											"end": 4420,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4357,
											"end": 4420,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4392,
											"end": 4402,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 9171,
											"end": 9222,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9171,
											"end": 9222,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9258,
											"end": 9290,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 9258,
											"end": 9290,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9253,
											"end": 9255,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9238,
											"end": 9256,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9238,
											"end": 9256,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9231,
											"end": 9291,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9334,
											"end": 9348,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9334,
											"end": 9348,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 9327,
											"end": 9349,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 9307,
											"end": 9325,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9307,
											"end": 9325,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9307,
											"end": 9325,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9300,
											"end": 9350,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4357,
											"end": 4420,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4357,
											"end": 4420,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4357,
											"end": 4420,
											"name": "PUSH",
											"source": 0,
											"value": "58781EAB4A0743AB1C285A238BE846A235F06CDB5B968030573A635E5F8C92FA"
										},
										{
											"begin": 4357,
											"end": 4420,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4357,
											"end": 4420,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4357,
											"end": 4420,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4357,
											"end": 4420,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9159,
											"end": 9161,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 4357,
											"end": 4420,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4357,
											"end": 4420,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4357,
											"end": 4420,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 4002,
											"end": 4427,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3930,
											"end": 4427,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3930,
											"end": 4427,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3930,
											"end": 4427,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18869,
											"end": 20829,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 18869,
											"end": 20829,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19109,
											"end": 19127,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19109,
											"end": 19127,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19056,
											"end": 19106,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19109,
											"end": 19127,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19109,
											"end": 19127,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19109,
											"end": 19127,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19109,
											"end": 19127,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19109,
											"end": 19127,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19109,
											"end": 19127,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19109,
											"end": 19127,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19109,
											"end": 19127,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19109,
											"end": 19127,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19109,
											"end": 19127,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19109,
											"end": 19127,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 19141,
											"end": 19153,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 19141,
											"end": 19160,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19141,
											"end": 19160,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19141,
											"end": 19160,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19141,
											"end": 19160,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 19141,
											"end": 19160,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 19141,
											"end": 19160,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 19109,
											"end": 19170,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 19109,
											"end": 19170,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19109,
											"end": 19170,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19109,
											"end": 19170,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19109,
											"end": 19170,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19109,
											"end": 19170,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19109,
											"end": 19170,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 18979,
											"end": 19040,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 18979,
											"end": 19040,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19206,
											"end": 19232,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 19109,
											"end": 19170,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19206,
											"end": 19230,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 19206,
											"end": 19232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19206,
											"end": 19232,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 19206,
											"end": 19232,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19180,
											"end": 19232,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 19242,
											"end": 19265,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19180,
											"end": 19232,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19298,
											"end": 19378,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19298,
											"end": 19378,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19298,
											"end": 19378,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 19298,
											"end": 19378,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 19298,
											"end": 19378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 19298,
											"end": 19378,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19298,
											"end": 19378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 19298,
											"end": 19378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 19298,
											"end": 19378,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19298,
											"end": 19378,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 19298,
											"end": 19378,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19298,
											"end": 19378,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19298,
											"end": 19378,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19298,
											"end": 19378,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19298,
											"end": 19378,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19298,
											"end": 19378,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19298,
											"end": 19378,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19298,
											"end": 19378,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19298,
											"end": 19378,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19298,
											"end": 19378,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 19298,
											"end": 19378,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19298,
											"end": 19378,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19298,
											"end": 19378,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19298,
											"end": 19378,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19298,
											"end": 19378,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19298,
											"end": 19378,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19298,
											"end": 19378,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19298,
											"end": 19378,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 19298,
											"end": 19378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 19298,
											"end": 19378,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19298,
											"end": 19378,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19298,
											"end": 19378,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19298,
											"end": 19378,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19298,
											"end": 19378,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 19298,
											"end": 19378,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 19298,
											"end": 19378,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19298,
											"end": 19378,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 19298,
											"end": 19378,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19298,
											"end": 19378,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 19298,
											"end": 19378,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19298,
											"end": 19378,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19298,
											"end": 19378,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19298,
											"end": 19378,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19298,
											"end": 19378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 19298,
											"end": 19378,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19298,
											"end": 19378,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19298,
											"end": 19378,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19298,
											"end": 19378,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 19298,
											"end": 19378,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 19279,
											"end": 19378,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 19393,
											"end": 19402,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19388,
											"end": 20576,
											"name": "tag",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 19388,
											"end": 20576,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19412,
											"end": 19427,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19408,
											"end": 19409,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19408,
											"end": 19427,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 19388,
											"end": 20576,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 19388,
											"end": 20576,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 19388,
											"end": 20576,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19445,
											"end": 19467,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19470,
											"end": 19493,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 19470,
											"end": 19487,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 19491,
											"end": 19492,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19470,
											"end": 19490,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 19470,
											"end": 19493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19470,
											"end": 19493,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 19470,
											"end": 19493,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19507,
											"end": 19545,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19548,
											"end": 19608,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19548,
											"end": 19608,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19548,
											"end": 19608,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19548,
											"end": 19562,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 19548,
											"end": 19608,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19548,
											"end": 19608,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19548,
											"end": 19608,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19548,
											"end": 19608,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19548,
											"end": 19608,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 19445,
											"end": 19493,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19445,
											"end": 19493,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 19684,
											"end": 19724,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 19643,
											"end": 19664,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19643,
											"end": 19664,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 19643,
											"end": 19664,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 19643,
											"end": 19664,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19643,
											"end": 19724,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 19643,
											"end": 19724,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19643,
											"end": 19724,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 19643,
											"end": 19724,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 19643,
											"end": 19724,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 19643,
											"end": 19724,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19643,
											"end": 19724,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 19643,
											"end": 19724,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 19643,
											"end": 19724,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19643,
											"end": 19724,
											"name": "tag",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 19643,
											"end": 19724,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19643,
											"end": 19724,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 19622,
											"end": 20507,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 19622,
											"end": 20507,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19969,
											"end": 19993,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 19969,
											"end": 19993,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19969,
											"end": 19993,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19969,
											"end": 19993,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 20019,
											"end": 20044,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 20019,
											"end": 20044,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20019,
											"end": 20044,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20019,
											"end": 20044,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 20070,
											"end": 20093,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 20070,
											"end": 20093,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20070,
											"end": 20093,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20070,
											"end": 20093,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 19885,
											"end": 20115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 19885,
											"end": 20115,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 19938,
											"end": 19943,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 19938,
											"end": 19943,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19969,
											"end": 19993,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19969,
											"end": 19993,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19969,
											"end": 19993,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19969,
											"end": 19993,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 20019,
											"end": 20044,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20019,
											"end": 20044,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20019,
											"end": 20044,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19885,
											"end": 19912,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 19885,
											"end": 20115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19885,
											"end": 20115,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 19885,
											"end": 20115,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19847,
											"end": 19861,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19847,
											"end": 20115,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 19822,
											"end": 20493,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 19822,
											"end": 20493,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20194,
											"end": 20474,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20194,
											"end": 20474,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20194,
											"end": 20474,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20194,
											"end": 20474,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 20194,
											"end": 20474,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20194,
											"end": 20474,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20194,
											"end": 20474,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20194,
											"end": 20474,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20296,
											"end": 20321,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 20296,
											"end": 20321,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20296,
											"end": 20321,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20296,
											"end": 20321,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 20296,
											"end": 20321,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20296,
											"end": 20321,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20296,
											"end": 20321,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20194,
											"end": 20474,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20194,
											"end": 20474,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20360,
											"end": 20383,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 20360,
											"end": 20383,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 20360,
											"end": 20383,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20360,
											"end": 20383,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 20194,
											"end": 20474,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20194,
											"end": 20474,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20194,
											"end": 20474,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20194,
											"end": 20474,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20296,
											"end": 20321,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 20423,
											"end": 20447,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 20423,
											"end": 20447,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20423,
											"end": 20447,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 20423,
											"end": 20447,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20194,
											"end": 20474,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20194,
											"end": 20474,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20194,
											"end": 20474,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20194,
											"end": 20474,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20194,
											"end": 20474,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20194,
											"end": 20474,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20194,
											"end": 20474,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20156,
											"end": 20172,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 20173,
											"end": 20190,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 20173,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 20173,
											"end": 20190,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20173,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 20173,
											"end": 20190,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20173,
											"end": 20190,
											"name": "tag",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 20173,
											"end": 20190,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20173,
											"end": 20190,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 20173,
											"end": 20190,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20156,
											"end": 20191,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20156,
											"end": 20191,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20156,
											"end": 20191,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20156,
											"end": 20191,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 20156,
											"end": 20191,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 20156,
											"end": 20191,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20156,
											"end": 20191,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 20156,
											"end": 20191,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 20156,
											"end": 20191,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20156,
											"end": 20191,
											"name": "tag",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 20156,
											"end": 20191,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20156,
											"end": 20191,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20156,
											"end": 20191,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 20156,
											"end": 20191,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20156,
											"end": 20191,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20156,
											"end": 20191,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20156,
											"end": 20474,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20156,
											"end": 20474,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20156,
											"end": 20474,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20156,
											"end": 20474,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19822,
											"end": 20493,
											"name": "tag",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 19822,
											"end": 20493,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 20548,
											"end": 20551,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 20548,
											"end": 20551,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19388,
											"end": 20576,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 19388,
											"end": 20576,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21383,
											"end": 21964,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 21383,
											"end": 21964,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 21695,
											"end": 21714,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21695,
											"end": 21714,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21695,
											"end": 21714,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21529,
											"end": 21533,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21695,
											"end": 21714,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21695,
											"end": 21714,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21695,
											"end": 21714,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21695,
											"end": 21707,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 21695,
											"end": 21714,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21695,
											"end": 21714,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21695,
											"end": 21714,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21695,
											"end": 21714,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21695,
											"end": 21714,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21695,
											"end": 21714,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21695,
											"end": 21714,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21695,
											"end": 21714,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 21695,
											"end": 21714,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 21732,
											"end": 21747,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 21732,
											"end": 21754,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21732,
											"end": 21754,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21732,
											"end": 21754,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21732,
											"end": 21754,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21732,
											"end": 21754,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 21732,
											"end": 21764,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 21732,
											"end": 21764,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 21732,
											"end": 21764,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21732,
											"end": 21764,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21732,
											"end": 21764,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 21732,
											"end": 21764,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21732,
											"end": 21764,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21732,
											"end": 21764,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21732,
											"end": 21764,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21732,
											"end": 21764,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21732,
											"end": 21764,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 21732,
											"end": 21764,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 21732,
											"end": 21764,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 21591,
											"end": 21778,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21591,
											"end": 21778,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21591,
											"end": 21778,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21591,
											"end": 21778,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 21591,
											"end": 21778,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9620,
											"end": 9671,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 9620,
											"end": 9671,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9620,
											"end": 9671,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 9620,
											"end": 9671,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9687,
											"end": 9705,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9687,
											"end": 9705,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 9687,
											"end": 9705,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9680,
											"end": 9740,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 9680,
											"end": 9740,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9680,
											"end": 9740,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9776,
											"end": 9808,
											"name": "SWAP7",
											"source": 5
										},
										{
											"begin": 9776,
											"end": 9808,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 9776,
											"end": 9808,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9756,
											"end": 9774,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 9756,
											"end": 9774,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9756,
											"end": 9774,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9749,
											"end": 9809,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9825,
											"end": 9843,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 9825,
											"end": 9843,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9825,
											"end": 9843,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9818,
											"end": 9852,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9818,
											"end": 9852,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9818,
											"end": 9852,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9868,
											"end": 9887,
											"name": "PUSH",
											"source": 5,
											"value": "A0"
										},
										{
											"begin": 9868,
											"end": 9887,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9868,
											"end": 9887,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9868,
											"end": 9887,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9861,
											"end": 9896,
											"name": "SWAP8",
											"source": 5
										},
										{
											"begin": 9861,
											"end": 9896,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9861,
											"end": 9896,
											"name": "SWAP8",
											"source": 5
										},
										{
											"begin": 9861,
											"end": 9896,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 21591,
											"end": 21778,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21591,
											"end": 21778,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21591,
											"end": 21778,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21591,
											"end": 21778,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21591,
											"end": 21778,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21591,
											"end": 21778,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21591,
											"end": 21778,
											"name": "SWAP8",
											"source": 0
										},
										{
											"begin": 21591,
											"end": 21778,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21591,
											"end": 21778,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 21591,
											"end": 21778,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9592,
											"end": 9611,
											"name": "PUSH",
											"source": 5,
											"value": "C0"
										},
										{
											"begin": 9592,
											"end": 9611,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 21591,
											"end": 21778,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21591,
											"end": 21778,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21568,
											"end": 21788,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 21568,
											"end": 21788,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21568,
											"end": 21788,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 21568,
											"end": 21788,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21568,
											"end": 21788,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21568,
											"end": 21788,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 21568,
											"end": 21788,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21568,
											"end": 21788,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 21568,
											"end": 21788,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 21817,
											"end": 21835,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 21817,
											"end": 21835,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21817,
											"end": 21835,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21817,
											"end": 21835,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21817,
											"end": 21835,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21817,
											"end": 21835,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21817,
											"end": 21835,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21817,
											"end": 21835,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21817,
											"end": 21835,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 21817,
											"end": 21856,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 21817,
											"end": 21856,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21817,
											"end": 21856,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21817,
											"end": 21856,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 21817,
											"end": 21856,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21817,
											"end": 21856,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21817,
											"end": 21856,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21817,
											"end": 21856,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21817,
											"end": 21856,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 21817,
											"end": 21879,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 21817,
											"end": 21879,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21568,
											"end": 21788,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21817,
											"end": 21865,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 21817,
											"end": 21879,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21817,
											"end": 21879,
											"name": "tag",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 21817,
											"end": 21879,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21817,
											"end": 21957,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 21817,
											"end": 21957,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21921,
											"end": 21957,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 21941,
											"end": 21949,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 21951,
											"end": 21956,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 21921,
											"end": 21940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 21921,
											"end": 21957,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21921,
											"end": 21957,
											"name": "tag",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 21921,
											"end": 21957,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21817,
											"end": 21957,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 21817,
											"end": 21957,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21817,
											"end": 21957,
											"name": "tag",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 21817,
											"end": 21957,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21898,
											"end": 21902,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 21817,
											"end": 21957,
											"name": "tag",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 21817,
											"end": 21957,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21798,
											"end": 21957,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 21383,
											"end": 21964,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 21383,
											"end": 21964,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20890,
											"end": 21322,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 20890,
											"end": 21322,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 21143,
											"end": 21162,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21143,
											"end": 21162,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21143,
											"end": 21162,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21004,
											"end": 21008,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21143,
											"end": 21162,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21143,
											"end": 21162,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21143,
											"end": 21162,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21143,
											"end": 21155,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 21143,
											"end": 21162,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21143,
											"end": 21162,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21143,
											"end": 21162,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21143,
											"end": 21162,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21143,
											"end": 21162,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21143,
											"end": 21162,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21143,
											"end": 21162,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21143,
											"end": 21162,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 21143,
											"end": 21162,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 21180,
											"end": 21195,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 21180,
											"end": 21202,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21180,
											"end": 21202,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21180,
											"end": 21202,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21180,
											"end": 21202,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21180,
											"end": 21202,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 21180,
											"end": 21212,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 21180,
											"end": 21212,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 21180,
											"end": 21212,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21180,
											"end": 21212,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21180,
											"end": 21212,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 21180,
											"end": 21212,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21180,
											"end": 21212,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 21180,
											"end": 21212,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21180,
											"end": 21212,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21180,
											"end": 21212,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21180,
											"end": 21212,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21180,
											"end": 21212,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 21180,
											"end": 21212,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 21066,
											"end": 21226,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21066,
											"end": 21226,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21066,
											"end": 21226,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21066,
											"end": 21226,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 21066,
											"end": 21226,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10138,
											"end": 10189,
											"name": "SWAP8",
											"source": 5
										},
										{
											"begin": 10138,
											"end": 10189,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10138,
											"end": 10189,
											"name": "SWAP8",
											"source": 5
										},
										{
											"begin": 10138,
											"end": 10189,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10205,
											"end": 10223,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 10205,
											"end": 10223,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10205,
											"end": 10223,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10198,
											"end": 10258,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 10198,
											"end": 10258,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10198,
											"end": 10258,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10274,
											"end": 10292,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 10274,
											"end": 10292,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 10274,
											"end": 10292,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10267,
											"end": 10301,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10267,
											"end": 10301,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10267,
											"end": 10301,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10317,
											"end": 10335,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 10317,
											"end": 10335,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10317,
											"end": 10335,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 10317,
											"end": 10335,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10310,
											"end": 10344,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10310,
											"end": 10344,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10310,
											"end": 10344,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10310,
											"end": 10344,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 21066,
											"end": 21226,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21066,
											"end": 21226,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21066,
											"end": 21226,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21066,
											"end": 21226,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 21066,
											"end": 21226,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21066,
											"end": 21226,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21066,
											"end": 21226,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21066,
											"end": 21226,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21066,
											"end": 21226,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21066,
											"end": 21226,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10110,
											"end": 10129,
											"name": "PUSH",
											"source": 5,
											"value": "A0"
										},
										{
											"begin": 10110,
											"end": 10129,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10110,
											"end": 10129,
											"name": "SWAP7",
											"source": 5
										},
										{
											"begin": 10110,
											"end": 10129,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 21066,
											"end": 21226,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21066,
											"end": 21226,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21043,
											"end": 21236,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 21043,
											"end": 21236,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21043,
											"end": 21236,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 21043,
											"end": 21236,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21043,
											"end": 21236,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21043,
											"end": 21236,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 21043,
											"end": 21236,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21043,
											"end": 21236,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 21043,
											"end": 21236,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 21253,
											"end": 21271,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 21253,
											"end": 21271,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21253,
											"end": 21271,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21253,
											"end": 21271,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21253,
											"end": 21271,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21253,
											"end": 21271,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21253,
											"end": 21271,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21253,
											"end": 21271,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21253,
											"end": 21271,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 21253,
											"end": 21292,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 21253,
											"end": 21292,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21253,
											"end": 21292,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21253,
											"end": 21292,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 21253,
											"end": 21292,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21253,
											"end": 21292,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21253,
											"end": 21292,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21253,
											"end": 21292,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21253,
											"end": 21292,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 21253,
											"end": 21315,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 21253,
											"end": 21315,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21043,
											"end": 21236,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21253,
											"end": 21301,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 21253,
											"end": 21315,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22025,
											"end": 22669,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 22025,
											"end": 22669,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 22384,
											"end": 22403,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22384,
											"end": 22403,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 22384,
											"end": 22403,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22193,
											"end": 22197,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22384,
											"end": 22403,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22384,
											"end": 22403,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22384,
											"end": 22403,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22384,
											"end": 22396,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 22384,
											"end": 22403,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22384,
											"end": 22403,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22384,
											"end": 22403,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22384,
											"end": 22403,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22384,
											"end": 22403,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22384,
											"end": 22403,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22384,
											"end": 22403,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 22384,
											"end": 22403,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 22384,
											"end": 22403,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 22421,
											"end": 22436,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 22421,
											"end": 22443,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 22421,
											"end": 22443,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22421,
											"end": 22443,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22421,
											"end": 22443,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 22421,
											"end": 22443,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 22421,
											"end": 22453,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 22421,
											"end": 22453,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 22421,
											"end": 22453,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22421,
											"end": 22453,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 22421,
											"end": 22453,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22421,
											"end": 22453,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 22421,
											"end": 22453,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22421,
											"end": 22453,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22421,
											"end": 22453,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22421,
											"end": 22453,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 22421,
											"end": 22453,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 22421,
											"end": 22453,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 22255,
											"end": 22467,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22255,
											"end": 22467,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22193,
											"end": 22197,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 22193,
											"end": 22197,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 22193,
											"end": 22197,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 22193,
											"end": 22197,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 22255,
											"end": 22467,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 22255,
											"end": 22467,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 22283,
											"end": 22291,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 22283,
											"end": 22291,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 22309,
											"end": 22314,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 22309,
											"end": 22314,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 22332,
											"end": 22341,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 22332,
											"end": 22341,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 22359,
											"end": 22366,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 22359,
											"end": 22366,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 22384,
											"end": 22403,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22384,
											"end": 22403,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 22421,
											"end": 22453,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22255,
											"end": 22467,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22255,
											"end": 22467,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 22255,
											"end": 22467,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22255,
											"end": 22467,
											"name": "tag",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 22255,
											"end": 22467,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22255,
											"end": 22467,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22255,
											"end": 22467,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22255,
											"end": 22467,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 22255,
											"end": 22467,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22255,
											"end": 22467,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 22255,
											"end": 22467,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 22255,
											"end": 22467,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22255,
											"end": 22467,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22255,
											"end": 22467,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22255,
											"end": 22467,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22255,
											"end": 22467,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22255,
											"end": 22467,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22232,
											"end": 22477,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22232,
											"end": 22477,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22255,
											"end": 22467,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22232,
											"end": 22477,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 22232,
											"end": 22477,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 22232,
											"end": 22477,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22232,
											"end": 22477,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 22506,
											"end": 22524,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 22506,
											"end": 22524,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22506,
											"end": 22517,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22506,
											"end": 22524,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22506,
											"end": 22524,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22506,
											"end": 22524,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22506,
											"end": 22524,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22506,
											"end": 22524,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 22506,
											"end": 22524,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22506,
											"end": 22524,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22506,
											"end": 22524,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22506,
											"end": 22524,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 22525,
											"end": 22537,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 22525,
											"end": 22544,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 22525,
											"end": 22544,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22525,
											"end": 22544,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 22525,
											"end": 22544,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22525,
											"end": 22544,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 22525,
											"end": 22544,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 22506,
											"end": 22545,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22506,
											"end": 22545,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22506,
											"end": 22545,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22506,
											"end": 22545,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 22506,
											"end": 22545,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22506,
											"end": 22545,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22506,
											"end": 22545,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 22232,
											"end": 22477,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22232,
											"end": 22477,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 22506,
											"end": 22568,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 22506,
											"end": 22568,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22232,
											"end": 22477,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22506,
											"end": 22554,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 22506,
											"end": 22568,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22506,
											"end": 22568,
											"name": "tag",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 22506,
											"end": 22568,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22506,
											"end": 22662,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 22506,
											"end": 22662,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22610,
											"end": 22662,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 22635,
											"end": 22643,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 22645,
											"end": 22650,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 22652,
											"end": 22661,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 22610,
											"end": 22634,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 22610,
											"end": 22662,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22610,
											"end": 22662,
											"name": "tag",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 22610,
											"end": 22662,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22506,
											"end": 22662,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 22506,
											"end": 22662,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22506,
											"end": 22662,
											"name": "tag",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 22506,
											"end": 22662,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22587,
											"end": 22591,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 22506,
											"end": 22662,
											"name": "tag",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 22506,
											"end": 22662,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22487,
											"end": 22662,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 22025,
											"end": 22669,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 22025,
											"end": 22669,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12622,
											"end": 12972,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 12622,
											"end": 12972,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12743,
											"end": 12769,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 12800,
											"end": 12965,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 12839,
											"end": 12844,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12862,
											"end": 12905,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 12923,
											"end": 12932,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 12950,
											"end": 12951,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12800,
											"end": 12821,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 12800,
											"end": 12965,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12800,
											"end": 12965,
											"name": "tag",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 12800,
											"end": 12965,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12781,
											"end": 12965,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 12622,
											"end": 12972,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12622,
											"end": 12972,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16846,
											"end": 18808,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 16846,
											"end": 18808,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17117,
											"end": 17135,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17117,
											"end": 17135,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17064,
											"end": 17114,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17117,
											"end": 17135,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17117,
											"end": 17135,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17117,
											"end": 17135,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17117,
											"end": 17135,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17117,
											"end": 17135,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17117,
											"end": 17135,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17117,
											"end": 17135,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17117,
											"end": 17135,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17117,
											"end": 17135,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17117,
											"end": 17135,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17117,
											"end": 17135,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17149,
											"end": 17161,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 17149,
											"end": 17168,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17149,
											"end": 17168,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17149,
											"end": 17168,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17149,
											"end": 17168,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 17149,
											"end": 17168,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17149,
											"end": 17168,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17117,
											"end": 17178,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 17117,
											"end": 17178,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17117,
											"end": 17178,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17117,
											"end": 17178,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17117,
											"end": 17178,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17117,
											"end": 17178,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17117,
											"end": 17178,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 16972,
											"end": 17039,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 16972,
											"end": 17039,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17214,
											"end": 17240,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 17117,
											"end": 17178,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17214,
											"end": 17238,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 17214,
											"end": 17240,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17214,
											"end": 17240,
											"name": "tag",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 17214,
											"end": 17240,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17188,
											"end": 17240,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17250,
											"end": 17273,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17188,
											"end": 17240,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17309,
											"end": 17392,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17309,
											"end": 17392,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17309,
											"end": 17392,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 17309,
											"end": 17392,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17309,
											"end": 17392,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 17309,
											"end": 17392,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17309,
											"end": 17392,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 17309,
											"end": 17392,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 17309,
											"end": 17392,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17309,
											"end": 17392,
											"name": "tag",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 17309,
											"end": 17392,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17309,
											"end": 17392,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17309,
											"end": 17392,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17309,
											"end": 17392,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17309,
											"end": 17392,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17309,
											"end": 17392,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17309,
											"end": 17392,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17309,
											"end": 17392,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17309,
											"end": 17392,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17309,
											"end": 17392,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 17309,
											"end": 17392,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17309,
											"end": 17392,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17309,
											"end": 17392,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17309,
											"end": 17392,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17309,
											"end": 17392,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17309,
											"end": 17392,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17309,
											"end": 17392,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17309,
											"end": 17392,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17309,
											"end": 17392,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 17309,
											"end": 17392,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17309,
											"end": 17392,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17309,
											"end": 17392,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17309,
											"end": 17392,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17309,
											"end": 17392,
											"name": "tag",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 17309,
											"end": 17392,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 17309,
											"end": 17392,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17309,
											"end": 17392,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17309,
											"end": 17392,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17309,
											"end": 17392,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17309,
											"end": 17392,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17309,
											"end": 17392,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 17309,
											"end": 17392,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17309,
											"end": 17392,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17309,
											"end": 17392,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17309,
											"end": 17392,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17309,
											"end": 17392,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 17309,
											"end": 17392,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17309,
											"end": 17392,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17309,
											"end": 17392,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17309,
											"end": 17392,
											"name": "tag",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 17309,
											"end": 17392,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17287,
											"end": 17392,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17407,
											"end": 17416,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17402,
											"end": 18491,
											"name": "tag",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 17402,
											"end": 18491,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17426,
											"end": 17441,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17422,
											"end": 17423,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17422,
											"end": 17441,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 17402,
											"end": 18491,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17402,
											"end": 18491,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 17402,
											"end": 18491,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17459,
											"end": 17481,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17484,
											"end": 17507,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 17484,
											"end": 17501,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 17505,
											"end": 17506,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17484,
											"end": 17504,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 17484,
											"end": 17507,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17484,
											"end": 17507,
											"name": "tag",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 17484,
											"end": 17507,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17521,
											"end": 17559,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17562,
											"end": 17622,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17562,
											"end": 17622,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17562,
											"end": 17622,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17562,
											"end": 17576,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17562,
											"end": 17622,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17562,
											"end": 17622,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17562,
											"end": 17622,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17562,
											"end": 17622,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17562,
											"end": 17622,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17459,
											"end": 17507,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17459,
											"end": 17507,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17698,
											"end": 17741,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 17657,
											"end": 17678,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17657,
											"end": 17678,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17657,
											"end": 17678,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 17657,
											"end": 17678,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17657,
											"end": 17741,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 17657,
											"end": 17741,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17657,
											"end": 17741,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 17657,
											"end": 17741,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17657,
											"end": 17741,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 17657,
											"end": 17741,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17657,
											"end": 17741,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 17657,
											"end": 17741,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 17657,
											"end": 17741,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17657,
											"end": 17741,
											"name": "tag",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 17657,
											"end": 17741,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17657,
											"end": 17741,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17636,
											"end": 18422,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 17636,
											"end": 18422,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17989,
											"end": 18013,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 17989,
											"end": 18013,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17989,
											"end": 18013,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17989,
											"end": 18013,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 18039,
											"end": 18064,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 18039,
											"end": 18064,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18039,
											"end": 18064,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18039,
											"end": 18064,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17902,
											"end": 18086,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 17902,
											"end": 18086,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17958,
											"end": 17963,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 17958,
											"end": 17963,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17989,
											"end": 18013,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17989,
											"end": 18013,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17989,
											"end": 18013,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17989,
											"end": 18013,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18039,
											"end": 18064,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17902,
											"end": 17932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 17902,
											"end": 18086,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17902,
											"end": 18086,
											"name": "tag",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 17902,
											"end": 18086,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17864,
											"end": 17878,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17864,
											"end": 18086,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17839,
											"end": 18408,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 17839,
											"end": 18408,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18168,
											"end": 18389,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18168,
											"end": 18389,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18168,
											"end": 18389,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18168,
											"end": 18389,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18168,
											"end": 18389,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18168,
											"end": 18389,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18168,
											"end": 18389,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18168,
											"end": 18389,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18168,
											"end": 18389,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18273,
											"end": 18298,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 18273,
											"end": 18298,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18273,
											"end": 18298,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18273,
											"end": 18298,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18273,
											"end": 18298,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18273,
											"end": 18298,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18273,
											"end": 18298,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18168,
											"end": 18389,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18168,
											"end": 18389,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18273,
											"end": 18298,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 18338,
											"end": 18362,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18338,
											"end": 18362,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18338,
											"end": 18362,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 18338,
											"end": 18362,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18168,
											"end": 18389,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18168,
											"end": 18389,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18168,
											"end": 18389,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18168,
											"end": 18389,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18127,
											"end": 18146,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 18147,
											"end": 18164,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 18147,
											"end": 18164,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 18147,
											"end": 18164,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18147,
											"end": 18164,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 18147,
											"end": 18164,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18147,
											"end": 18164,
											"name": "tag",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 18147,
											"end": 18164,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18147,
											"end": 18164,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 18147,
											"end": 18164,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18127,
											"end": 18165,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18127,
											"end": 18165,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18127,
											"end": 18165,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18127,
											"end": 18165,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 18127,
											"end": 18165,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 18127,
											"end": 18165,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18127,
											"end": 18165,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 18127,
											"end": 18165,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 18127,
											"end": 18165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18127,
											"end": 18165,
											"name": "tag",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 18127,
											"end": 18165,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18127,
											"end": 18165,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18127,
											"end": 18165,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 18127,
											"end": 18165,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18127,
											"end": 18165,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18127,
											"end": 18165,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18127,
											"end": 18389,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18127,
											"end": 18389,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18127,
											"end": 18389,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18127,
											"end": 18389,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17839,
											"end": 18408,
											"name": "tag",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 17839,
											"end": 18408,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18463,
											"end": 18466,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 18463,
											"end": 18466,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17402,
											"end": 18491,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 17402,
											"end": 18491,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8973,
											"end": 9087,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 8973,
											"end": 9087,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9043,
											"end": 9080,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 9059,
											"end": 9067,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9069,
											"end": 9079,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 9043,
											"end": 9058,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 9043,
											"end": 9080,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13414,
											"end": 16785,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 13414,
											"end": 16785,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13699,
											"end": 13717,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 13699,
											"end": 13717,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13646,
											"end": 13696,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13699,
											"end": 13717,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13699,
											"end": 13717,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13699,
											"end": 13717,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13699,
											"end": 13717,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13699,
											"end": 13717,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13699,
											"end": 13717,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13699,
											"end": 13717,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13699,
											"end": 13717,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13699,
											"end": 13717,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13699,
											"end": 13717,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13699,
											"end": 13717,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13731,
											"end": 13743,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 13731,
											"end": 13750,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13731,
											"end": 13750,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13731,
											"end": 13750,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13731,
											"end": 13750,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 13731,
											"end": 13750,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13731,
											"end": 13750,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13699,
											"end": 13760,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 13699,
											"end": 13760,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13699,
											"end": 13760,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13699,
											"end": 13760,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13699,
											"end": 13760,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13699,
											"end": 13760,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13699,
											"end": 13760,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13608,
											"end": 13634,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 13608,
											"end": 13634,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13805,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 13699,
											"end": 13760,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13805,
											"end": 13829,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 13805,
											"end": 13831,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13805,
											"end": 13831,
											"name": "tag",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 13805,
											"end": 13831,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13770,
											"end": 13831,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13841,
											"end": 13863,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13770,
											"end": 13831,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13889,
											"end": 13928,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13889,
											"end": 13928,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13889,
											"end": 13928,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 13889,
											"end": 13928,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13889,
											"end": 13928,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 13889,
											"end": 13928,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13889,
											"end": 13928,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 13889,
											"end": 13928,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 13889,
											"end": 13928,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13889,
											"end": 13928,
											"name": "tag",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 13889,
											"end": 13928,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13889,
											"end": 13928,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13889,
											"end": 13928,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13889,
											"end": 13928,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13889,
											"end": 13928,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13889,
											"end": 13928,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13889,
											"end": 13928,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13889,
											"end": 13928,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13889,
											"end": 13928,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13889,
											"end": 13928,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 13889,
											"end": 13928,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13889,
											"end": 13928,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13889,
											"end": 13928,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13889,
											"end": 13928,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13889,
											"end": 13928,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13889,
											"end": 13928,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13889,
											"end": 13928,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13889,
											"end": 13928,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13889,
											"end": 13928,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 13889,
											"end": 13928,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13889,
											"end": 13928,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13889,
											"end": 13928,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13889,
											"end": 13928,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13889,
											"end": 13928,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13889,
											"end": 13928,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13889,
											"end": 13928,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 13889,
											"end": 13928,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13889,
											"end": 13928,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 13889,
											"end": 13928,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13889,
											"end": 13928,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 13889,
											"end": 13928,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13889,
											"end": 13928,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13889,
											"end": 13928,
											"name": "tag",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 13889,
											"end": 13928,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13877,
											"end": 13928,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13943,
											"end": 13952,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13938,
											"end": 16530,
											"name": "tag",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 13938,
											"end": 16530,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13962,
											"end": 13986,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13958,
											"end": 13959,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13958,
											"end": 13986,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 13938,
											"end": 16530,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13938,
											"end": 16530,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 13938,
											"end": 16530,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14004,
											"end": 14026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14029,
											"end": 14052,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 14029,
											"end": 14046,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14050,
											"end": 14051,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14029,
											"end": 14049,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 14029,
											"end": 14052,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14029,
											"end": 14052,
											"name": "tag",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 14029,
											"end": 14052,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14066,
											"end": 14104,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14107,
											"end": 14167,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14107,
											"end": 14167,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14107,
											"end": 14167,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14107,
											"end": 14121,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14107,
											"end": 14167,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14107,
											"end": 14167,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14107,
											"end": 14167,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14107,
											"end": 14167,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14107,
											"end": 14167,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14004,
											"end": 14052,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14004,
											"end": 14052,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14210,
											"end": 14224,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 14185,
											"end": 14224,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 14185,
											"end": 14224,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14185,
											"end": 14224,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 14185,
											"end": 14224,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14185,
											"end": 14224,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 14185,
											"end": 14224,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14185,
											"end": 14224,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 14185,
											"end": 14224,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 14185,
											"end": 14224,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14185,
											"end": 14224,
											"name": "tag",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 14185,
											"end": 14224,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14185,
											"end": 14206,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14185,
											"end": 14206,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14185,
											"end": 14206,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 14185,
											"end": 14206,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14185,
											"end": 14224,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 14185,
											"end": 14224,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14185,
											"end": 14224,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 14185,
											"end": 14224,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14185,
											"end": 14224,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 14185,
											"end": 14224,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14185,
											"end": 14224,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 14185,
											"end": 14224,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 14185,
											"end": 14224,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14185,
											"end": 14224,
											"name": "tag",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 14185,
											"end": 14224,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14185,
											"end": 14224,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14181,
											"end": 16461,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 14181,
											"end": 16461,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14266,
											"end": 14304,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 14248,
											"end": 14262,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 14248,
											"end": 14304,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 14248,
											"end": 14304,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14248,
											"end": 14304,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 14248,
											"end": 14304,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14248,
											"end": 14304,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 14248,
											"end": 14304,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14248,
											"end": 14304,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 14248,
											"end": 14304,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 14248,
											"end": 14304,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14248,
											"end": 14304,
											"name": "tag",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 14248,
											"end": 14304,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14248,
											"end": 14304,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14244,
											"end": 16447,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 14244,
											"end": 16447,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14558,
											"end": 14582,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 14558,
											"end": 14582,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14558,
											"end": 14582,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14558,
											"end": 14582,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14468,
											"end": 14608,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 14468,
											"end": 14608,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14523,
											"end": 14528,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": 14523,
											"end": 14528,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14558,
											"end": 14582,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14468,
											"end": 14493,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 14468,
											"end": 14608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14468,
											"end": 14608,
											"name": "tag",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 14468,
											"end": 14608,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14426,
											"end": 14440,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14426,
											"end": 14608,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14397,
											"end": 14734,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 14397,
											"end": 14734,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14687,
											"end": 14711,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 14687,
											"end": 14711,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14687,
											"end": 14711,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14687,
											"end": 14711,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14687,
											"end": 14711,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14657,
											"end": 14666,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 14667,
											"end": 14683,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14667,
											"end": 14683,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 14667,
											"end": 14683,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14667,
											"end": 14683,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 14667,
											"end": 14683,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14667,
											"end": 14683,
											"name": "tag",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 14667,
											"end": 14683,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14667,
											"end": 14683,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 14667,
											"end": 14683,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14657,
											"end": 14684,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14657,
											"end": 14684,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14657,
											"end": 14684,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14657,
											"end": 14684,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 14657,
											"end": 14684,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 14657,
											"end": 14684,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14657,
											"end": 14684,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 14657,
											"end": 14684,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 14657,
											"end": 14684,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14657,
											"end": 14684,
											"name": "tag",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 14657,
											"end": 14684,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14657,
											"end": 14684,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14657,
											"end": 14684,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 14657,
											"end": 14684,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14657,
											"end": 14684,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14657,
											"end": 14684,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14657,
											"end": 14711,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14657,
											"end": 14711,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14657,
											"end": 14711,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14657,
											"end": 14711,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14657,
											"end": 14711,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14657,
											"end": 14711,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14657,
											"end": 14711,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14657,
											"end": 14711,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14657,
											"end": 14711,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14397,
											"end": 14734,
											"name": "tag",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 14397,
											"end": 14734,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14244,
											"end": 16447,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 14244,
											"end": 16447,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14244,
											"end": 16447,
											"name": "tag",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 14244,
											"end": 16447,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14821,
											"end": 14864,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 14783,
											"end": 14797,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 14783,
											"end": 14864,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 14783,
											"end": 14864,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14783,
											"end": 14864,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 14783,
											"end": 14864,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14783,
											"end": 14864,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 14783,
											"end": 14864,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14783,
											"end": 14864,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 14783,
											"end": 14864,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 14783,
											"end": 14864,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14783,
											"end": 14864,
											"name": "tag",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 14783,
											"end": 14864,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14783,
											"end": 14864,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14758,
											"end": 16447,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 14758,
											"end": 16447,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14909,
											"end": 14934,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 14909,
											"end": 14934,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14909,
											"end": 14934,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14909,
											"end": 14934,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14909,
											"end": 14947,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14909,
											"end": 14947,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 14909,
											"end": 14947,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14909,
											"end": 14934,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14909,
											"end": 14934,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14909,
											"end": 14947,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14905,
											"end": 15520,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 14905,
											"end": 15520,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15230,
											"end": 15254,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 15230,
											"end": 15254,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15230,
											"end": 15254,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15230,
											"end": 15254,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 15127,
											"end": 15327,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 15127,
											"end": 15327,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15191,
											"end": 15196,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": 15191,
											"end": 15196,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15230,
											"end": 15254,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15288,
											"end": 15297,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 15127,
											"end": 15157,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 15127,
											"end": 15327,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14758,
											"end": 16447,
											"name": "tag",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 14758,
											"end": 16447,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15587,
											"end": 15627,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 15569,
											"end": 15583,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 15569,
											"end": 15627,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 15569,
											"end": 15627,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15569,
											"end": 15627,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 15569,
											"end": 15627,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15569,
											"end": 15627,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 15569,
											"end": 15627,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15569,
											"end": 15627,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 15569,
											"end": 15627,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 15569,
											"end": 15627,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15569,
											"end": 15627,
											"name": "tag",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 15569,
											"end": 15627,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15569,
											"end": 15627,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15544,
											"end": 16447,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 15544,
											"end": 16447,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15697,
											"end": 15722,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 15697,
											"end": 15722,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15697,
											"end": 15722,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15697,
											"end": 15722,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15697,
											"end": 15735,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 15697,
											"end": 15735,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15697,
											"end": 15735,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15697,
											"end": 15722,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15697,
											"end": 15722,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15697,
											"end": 15735,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 15697,
											"end": 15797,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15697,
											"end": 15797,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15697,
											"end": 15797,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "290"
										},
										{
											"begin": 15697,
											"end": 15797,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15697,
											"end": 15797,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15790,
											"end": 15797,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 15763,
											"end": 15778,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15763,
											"end": 15786,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 15763,
											"end": 15786,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15763,
											"end": 15786,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 15763,
											"end": 15797,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 15697,
											"end": 15797,
											"name": "tag",
											"source": 0,
											"value": "290"
										},
										{
											"begin": 15697,
											"end": 15797,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15668,
											"end": 16429,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15668,
											"end": 16429,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 15668,
											"end": 16429,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16098,
											"end": 16122,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 16098,
											"end": 16122,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16098,
											"end": 16122,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16098,
											"end": 16122,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 15998,
											"end": 16236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 15998,
											"end": 16236,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16059,
											"end": 16064,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": 16059,
											"end": 16064,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16098,
											"end": 16122,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16156,
											"end": 16165,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 16199,
											"end": 16206,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 15998,
											"end": 16025,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 15998,
											"end": 16236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15998,
											"end": 16236,
											"name": "tag",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 15998,
											"end": 16236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15952,
											"end": 15966,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15952,
											"end": 16236,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15919,
											"end": 16407,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 15919,
											"end": 16407,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16323,
											"end": 16380,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 16323,
											"end": 16380,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16323,
											"end": 16380,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16323,
											"end": 16380,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16323,
											"end": 16380,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16293,
											"end": 16302,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 16303,
											"end": 16319,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 16303,
											"end": 16319,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "294"
										},
										{
											"begin": 16303,
											"end": 16319,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16303,
											"end": 16319,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 16303,
											"end": 16319,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16303,
											"end": 16319,
											"name": "tag",
											"source": 0,
											"value": "294"
										},
										{
											"begin": 16303,
											"end": 16319,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16303,
											"end": 16319,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 16303,
											"end": 16319,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16293,
											"end": 16320,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16293,
											"end": 16320,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16293,
											"end": 16320,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16293,
											"end": 16320,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 16293,
											"end": 16320,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "296"
										},
										{
											"begin": 16293,
											"end": 16320,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16293,
											"end": 16320,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "296"
										},
										{
											"begin": 16293,
											"end": 16320,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 16293,
											"end": 16320,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16293,
											"end": 16320,
											"name": "tag",
											"source": 0,
											"value": "296"
										},
										{
											"begin": 16293,
											"end": 16320,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16293,
											"end": 16320,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16293,
											"end": 16320,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 16293,
											"end": 16320,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16293,
											"end": 16320,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16293,
											"end": 16320,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16293,
											"end": 16380,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16293,
											"end": 16380,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16293,
											"end": 16380,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16293,
											"end": 16380,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16293,
											"end": 16380,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16293,
											"end": 16380,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16293,
											"end": 16380,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16293,
											"end": 16380,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16293,
											"end": 16380,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15919,
											"end": 16407,
											"name": "tag",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 15919,
											"end": 16407,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16502,
											"end": 16505,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 16502,
											"end": 16505,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13938,
											"end": 16530,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 13938,
											"end": 16530,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13938,
											"end": 16530,
											"name": "tag",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 13938,
											"end": 16530,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13938,
											"end": 16530,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16570,
											"end": 16584,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16543,
											"end": 16567,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16543,
											"end": 16584,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 16539,
											"end": 16779,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16539,
											"end": 16779,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "297"
										},
										{
											"begin": 16539,
											"end": 16779,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16727,
											"end": 16743,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16727,
											"end": 16743,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16643,
											"end": 16688,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16643,
											"end": 16688,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16643,
											"end": 16688,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16723,
											"end": 16754,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16723,
											"end": 16754,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16705,
											"end": 16755,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 16705,
											"end": 16755,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16539,
											"end": 16779,
											"name": "tag",
											"source": 0,
											"value": "297"
										},
										{
											"begin": 16539,
											"end": 16779,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13636,
											"end": 16785,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13636,
											"end": 16785,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13636,
											"end": 16785,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13414,
											"end": 16785,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 13414,
											"end": 16785,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 13414,
											"end": 16785,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13414,
											"end": 16785,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13414,
											"end": 16785,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13414,
											"end": 16785,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13414,
											"end": 16785,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9347,
											"end": 9591,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 9347,
											"end": 9591,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9426,
											"end": 9448,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9426,
											"end": 9448,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9426,
											"end": 9448,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9426,
											"end": 9448,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9426,
											"end": 9448,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9426,
											"end": 9448,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9426,
											"end": 9448,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9426,
											"end": 9441,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 9426,
											"end": 9448,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9426,
											"end": 9448,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9426,
											"end": 9448,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9426,
											"end": 9448,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9426,
											"end": 9448,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9426,
											"end": 9448,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9426,
											"end": 9448,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9426,
											"end": 9448,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9426,
											"end": 9458,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 9426,
											"end": 9458,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 9426,
											"end": 9458,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9426,
											"end": 9458,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9426,
											"end": 9458,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9426,
											"end": 9458,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 9426,
											"end": 9458,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9426,
											"end": 9458,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9426,
											"end": 9458,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9426,
											"end": 9458,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9426,
											"end": 9458,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9424,
											"end": 9458,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9424,
											"end": 9458,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9426,
											"end": 9458,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9426,
											"end": 9458,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9426,
											"end": 9448,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9424,
											"end": 9458,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "299"
										},
										{
											"begin": 9424,
											"end": 9458,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9424,
											"end": 9458,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 9424,
											"end": 9458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9424,
											"end": 9458,
											"name": "tag",
											"source": 0,
											"value": "299"
										},
										{
											"begin": 9424,
											"end": 9458,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9424,
											"end": 9458,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9424,
											"end": 9458,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9424,
											"end": 9458,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9531,
											"end": 9584,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9531,
											"end": 9584,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9531,
											"end": 9584,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11165,
											"end": 11197,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 11165,
											"end": 11197,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 11147,
											"end": 11198,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11147,
											"end": 11198,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9573,
											"end": 9583,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 11229,
											"end": 11231,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 11214,
											"end": 11232,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11214,
											"end": 11232,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11207,
											"end": 11267,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9531,
											"end": 9584,
											"name": "PUSH",
											"source": 0,
											"value": "3E34A3EE53064FB79C0EE57448F03774A627A9270B0C41286EFB7D8E32DCDE93"
										},
										{
											"begin": 9531,
											"end": 9584,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11120,
											"end": 11138,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9531,
											"end": 9584,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9531,
											"end": 9584,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9531,
											"end": 9584,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9531,
											"end": 9584,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9531,
											"end": 9584,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9531,
											"end": 9584,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9531,
											"end": 9584,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 9347,
											"end": 9591,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9347,
											"end": 9591,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9347,
											"end": 9591,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7462,
											"end": 8004,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 7462,
											"end": 8004,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7650,
											"end": 7669,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7650,
											"end": 7669,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7650,
											"end": 7669,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7607,
											"end": 7614,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7650,
											"end": 7669,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7650,
											"end": 7669,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7650,
											"end": 7669,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7650,
											"end": 7662,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7650,
											"end": 7669,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7650,
											"end": 7669,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7650,
											"end": 7669,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7650,
											"end": 7669,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7650,
											"end": 7669,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7650,
											"end": 7669,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7650,
											"end": 7669,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7650,
											"end": 7669,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7650,
											"end": 7669,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7706,
											"end": 7721,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 7706,
											"end": 7728,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7706,
											"end": 7728,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7706,
											"end": 7728,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7706,
											"end": 7728,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7706,
											"end": 7728,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7706,
											"end": 7738,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 7706,
											"end": 7738,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 7706,
											"end": 7738,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7706,
											"end": 7738,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7706,
											"end": 7738,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7706,
											"end": 7738,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7706,
											"end": 7738,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 7706,
											"end": 7738,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7706,
											"end": 7738,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7706,
											"end": 7738,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7706,
											"end": 7738,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7706,
											"end": 7738,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7706,
											"end": 7738,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7706,
											"end": 7738,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7794,
											"end": 7983,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7794,
											"end": 7983,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7794,
											"end": 7983,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7794,
											"end": 7983,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7794,
											"end": 7983,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9620,
											"end": 9671,
											"name": "SWAP8",
											"source": 5
										},
										{
											"begin": 9620,
											"end": 9671,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9620,
											"end": 9671,
											"name": "SWAP8",
											"source": 5
										},
										{
											"begin": 9620,
											"end": 9671,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9687,
											"end": 9705,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 9687,
											"end": 9705,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9687,
											"end": 9705,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9680,
											"end": 9740,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 9680,
											"end": 9740,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9680,
											"end": 9740,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 9680,
											"end": 9740,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9776,
											"end": 9808,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 9776,
											"end": 9808,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9776,
											"end": 9808,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 9776,
											"end": 9808,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9756,
											"end": 9774,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 9756,
											"end": 9774,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 9756,
											"end": 9774,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9749,
											"end": 9809,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9825,
											"end": 9843,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 9825,
											"end": 9843,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 9825,
											"end": 9843,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9818,
											"end": 9852,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9868,
											"end": 9887,
											"name": "PUSH",
											"source": 5,
											"value": "A0"
										},
										{
											"begin": 9868,
											"end": 9887,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9868,
											"end": 9887,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 9868,
											"end": 9887,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9861,
											"end": 9896,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9861,
											"end": 9896,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9861,
											"end": 9896,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9861,
											"end": 9896,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7794,
											"end": 7983,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7794,
											"end": 7983,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7794,
											"end": 7983,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7794,
											"end": 7983,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7794,
											"end": 7983,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7794,
											"end": 7983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7794,
											"end": 7983,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7794,
											"end": 7983,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7794,
											"end": 7983,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7794,
											"end": 7983,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9592,
											"end": 9611,
											"name": "PUSH",
											"source": 5,
											"value": "C0"
										},
										{
											"begin": 9592,
											"end": 9611,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9592,
											"end": 9611,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 9592,
											"end": 9611,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7794,
											"end": 7983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7794,
											"end": 7983,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7767,
											"end": 7997,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7767,
											"end": 7997,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7767,
											"end": 7997,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7767,
											"end": 7997,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7767,
											"end": 7997,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7767,
											"end": 7997,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7462,
											"end": 8004,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6024,
											"end": 6881,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 6024,
											"end": 6881,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6284,
											"end": 6289,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6280,
											"end": 6875,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6280,
											"end": 6875,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "305"
										},
										{
											"begin": 6280,
											"end": 6875,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6305,
											"end": 6323,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6305,
											"end": 6323,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6305,
											"end": 6316,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6305,
											"end": 6323,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6305,
											"end": 6323,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6305,
											"end": 6323,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6305,
											"end": 6323,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6305,
											"end": 6323,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6305,
											"end": 6323,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6305,
											"end": 6323,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6305,
											"end": 6323,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6305,
											"end": 6323,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6305,
											"end": 6323,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6305,
											"end": 6323,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6324,
											"end": 6336,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6324,
											"end": 6343,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6324,
											"end": 6343,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6324,
											"end": 6343,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6324,
											"end": 6343,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6324,
											"end": 6343,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6324,
											"end": 6343,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6305,
											"end": 6344,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6305,
											"end": 6344,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6305,
											"end": 6344,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6305,
											"end": 6344,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6305,
											"end": 6344,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6305,
											"end": 6344,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6305,
											"end": 6344,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6305,
											"end": 6362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "306"
										},
										{
											"begin": 6305,
											"end": 6362,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6349,
											"end": 6361,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 6305,
											"end": 6348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "307"
										},
										{
											"begin": 6305,
											"end": 6362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6305,
											"end": 6362,
											"name": "tag",
											"source": 0,
											"value": "306"
										},
										{
											"begin": 6305,
											"end": 6362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6376,
											"end": 6402,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 6376,
											"end": 6402,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6376,
											"end": 6402,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6376,
											"end": 6402,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6376,
											"end": 6402,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6376,
											"end": 6402,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6376,
											"end": 6392,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 6376,
											"end": 6402,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6376,
											"end": 6402,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6376,
											"end": 6402,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6376,
											"end": 6402,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6376,
											"end": 6402,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6376,
											"end": 6420,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "308"
										},
										{
											"begin": 6376,
											"end": 6420,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6407,
											"end": 6419,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 6376,
											"end": 6406,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "307"
										},
										{
											"begin": 6376,
											"end": 6420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6376,
											"end": 6420,
											"name": "tag",
											"source": 0,
											"value": "308"
										},
										{
											"begin": 6376,
											"end": 6420,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6376,
											"end": 6420,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6465,
											"end": 6663,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6465,
											"end": 6663,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6465,
											"end": 6663,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6465,
											"end": 6663,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 6465,
											"end": 6663,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6465,
											"end": 6663,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6465,
											"end": 6663,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6465,
											"end": 6663,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6571,
											"end": 6576,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6465,
											"end": 6663,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 6465,
											"end": 6663,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6465,
											"end": 6663,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 6465,
											"end": 6663,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6465,
											"end": 6663,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "310"
										},
										{
											"begin": 6465,
											"end": 6663,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6465,
											"end": 6663,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "310"
										},
										{
											"begin": 6465,
											"end": 6663,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 6465,
											"end": 6663,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6465,
											"end": 6663,
											"name": "tag",
											"source": 0,
											"value": "310"
										},
										{
											"begin": 6465,
											"end": 6663,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6465,
											"end": 6663,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6465,
											"end": 6663,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6465,
											"end": 6663,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6465,
											"end": 6663,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 6465,
											"end": 6663,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6465,
											"end": 6663,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6465,
											"end": 6663,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6465,
											"end": 6663,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6465,
											"end": 6663,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6465,
											"end": 6663,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6465,
											"end": 6663,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6465,
											"end": 6663,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6465,
											"end": 6663,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6465,
											"end": 6663,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 6465,
											"end": 6663,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6465,
											"end": 6663,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6465,
											"end": 6663,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6465,
											"end": 6663,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6465,
											"end": 6663,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6465,
											"end": 6663,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6465,
											"end": 6663,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6465,
											"end": 6663,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6465,
											"end": 6663,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6465,
											"end": 6663,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6465,
											"end": 6663,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6465,
											"end": 6663,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 6465,
											"end": 6663,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6465,
											"end": 6663,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 6465,
											"end": 6663,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6465,
											"end": 6663,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6465,
											"end": 6663,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6465,
											"end": 6663,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 6465,
											"end": 6663,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6465,
											"end": 6663,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6465,
											"end": 6663,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6465,
											"end": 6663,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6465,
											"end": 6663,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6465,
											"end": 6663,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 6434,
											"end": 6462,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 6434,
											"end": 6462,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6434,
											"end": 6462,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6434,
											"end": 6448,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6434,
											"end": 6462,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6434,
											"end": 6462,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6434,
											"end": 6462,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6434,
											"end": 6462,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6434,
											"end": 6462,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6434,
											"end": 6663,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6434,
											"end": 6663,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6434,
											"end": 6663,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6434,
											"end": 6663,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6434,
											"end": 6462,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6434,
											"end": 6462,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6434,
											"end": 6663,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6434,
											"end": 6663,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6434,
											"end": 6663,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6434,
											"end": 6663,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 6434,
											"end": 6663,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6434,
											"end": 6663,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 6434,
											"end": 6663,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6434,
											"end": 6663,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "312"
										},
										{
											"begin": 6434,
											"end": 6663,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6434,
											"end": 6663,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "312"
										},
										{
											"begin": 6434,
											"end": 6663,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 6434,
											"end": 6663,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6434,
											"end": 6663,
											"name": "tag",
											"source": 0,
											"value": "312"
										},
										{
											"begin": 6434,
											"end": 6663,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6434,
											"end": 6663,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6434,
											"end": 6663,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 6434,
											"end": 6663,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6434,
											"end": 6663,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6434,
											"end": 6663,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6434,
											"end": 6663,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6434,
											"end": 6663,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6434,
											"end": 6663,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6434,
											"end": 6663,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6434,
											"end": 6663,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6434,
											"end": 6663,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6434,
											"end": 6663,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6434,
											"end": 6663,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6434,
											"end": 6663,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6434,
											"end": 6663,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "100"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6434,
											"end": 6663,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6434,
											"end": 6663,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6434,
											"end": 6663,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6434,
											"end": 6663,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 6434,
											"end": 6663,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6434,
											"end": 6663,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6434,
											"end": 6663,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6434,
											"end": 6663,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6434,
											"end": 6663,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6434,
											"end": 6663,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6434,
											"end": 6663,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6434,
											"end": 6663,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6434,
											"end": 6663,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6434,
											"end": 6663,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6434,
											"end": 6663,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6434,
											"end": 6663,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6434,
											"end": 6663,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6434,
											"end": 6663,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6434,
											"end": 6663,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6434,
											"end": 6663,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6434,
											"end": 6663,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6434,
											"end": 6663,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 6434,
											"end": 6663,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6434,
											"end": 6663,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6434,
											"end": 6663,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 6434,
											"end": 6663,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6434,
											"end": 6663,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6434,
											"end": 6663,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6434,
											"end": 6663,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 6434,
											"end": 6663,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6434,
											"end": 6663,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6434,
											"end": 6663,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6434,
											"end": 6663,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6434,
											"end": 6663,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6434,
											"end": 6663,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6434,
											"end": 6663,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 6434,
											"end": 6663,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6434,
											"end": 6663,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6434,
											"end": 6663,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6434,
											"end": 6663,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 6434,
											"end": 6663,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6434,
											"end": 6663,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6434,
											"end": 6663,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 6434,
											"end": 6663,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6434,
											"end": 6663,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6434,
											"end": 6663,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6434,
											"end": 6663,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6434,
											"end": 6663,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 6434,
											"end": 6663,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6434,
											"end": 6663,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6434,
											"end": 6663,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6434,
											"end": 6663,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6280,
											"end": 6875,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "313"
										},
										{
											"begin": 6280,
											"end": 6875,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6280,
											"end": 6875,
											"name": "tag",
											"source": 0,
											"value": "305"
										},
										{
											"begin": 6280,
											"end": 6875,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6694,
											"end": 6712,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6694,
											"end": 6712,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6694,
											"end": 6705,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6694,
											"end": 6712,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6694,
											"end": 6712,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6694,
											"end": 6712,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6694,
											"end": 6712,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6694,
											"end": 6712,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6694,
											"end": 6712,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6694,
											"end": 6712,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6694,
											"end": 6712,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6694,
											"end": 6712,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6694,
											"end": 6712,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6694,
											"end": 6712,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6713,
											"end": 6725,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6713,
											"end": 6732,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6713,
											"end": 6732,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6713,
											"end": 6732,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6713,
											"end": 6732,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6713,
											"end": 6732,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6713,
											"end": 6732,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6694,
											"end": 6733,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6694,
											"end": 6733,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6694,
											"end": 6733,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6694,
											"end": 6733,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6694,
											"end": 6733,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6694,
											"end": 6733,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6694,
											"end": 6733,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6694,
											"end": 6754,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "314"
										},
										{
											"begin": 6694,
											"end": 6754,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6741,
											"end": 6753,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 6694,
											"end": 6740,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "315"
										},
										{
											"begin": 6694,
											"end": 6754,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6694,
											"end": 6754,
											"name": "tag",
											"source": 0,
											"value": "314"
										},
										{
											"begin": 6694,
											"end": 6754,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6768,
											"end": 6794,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 6768,
											"end": 6794,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6768,
											"end": 6794,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6768,
											"end": 6794,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6768,
											"end": 6794,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6768,
											"end": 6794,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6768,
											"end": 6784,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 6768,
											"end": 6794,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6768,
											"end": 6794,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6768,
											"end": 6794,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6768,
											"end": 6794,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6768,
											"end": 6794,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6768,
											"end": 6815,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "316"
										},
										{
											"begin": 6768,
											"end": 6815,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6802,
											"end": 6814,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 6768,
											"end": 6801,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "315"
										},
										{
											"begin": 6768,
											"end": 6815,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6768,
											"end": 6815,
											"name": "tag",
											"source": 0,
											"value": "316"
										},
										{
											"begin": 6768,
											"end": 6815,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6836,
											"end": 6864,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6836,
											"end": 6864,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 6836,
											"end": 6864,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6836,
											"end": 6864,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6836,
											"end": 6850,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6836,
											"end": 6864,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6836,
											"end": 6864,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6836,
											"end": 6864,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6836,
											"end": 6864,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6836,
											"end": 6864,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6829,
											"end": 6864,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6829,
											"end": 6864,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6829,
											"end": 6864,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6829,
											"end": 6864,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6829,
											"end": 6864,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6829,
											"end": 6864,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6829,
											"end": 6864,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6829,
											"end": 6864,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6829,
											"end": 6864,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6829,
											"end": 6864,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6829,
											"end": 6864,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6829,
											"end": 6864,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6829,
											"end": 6864,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6829,
											"end": 6864,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6829,
											"end": 6864,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6829,
											"end": 6864,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6829,
											"end": 6864,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 6829,
											"end": 6864,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6829,
											"end": 6864,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6829,
											"end": 6864,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6829,
											"end": 6864,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6829,
											"end": 6864,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6829,
											"end": 6864,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6829,
											"end": 6864,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6829,
											"end": 6864,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6829,
											"end": 6864,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6829,
											"end": 6864,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 6829,
											"end": 6864,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6829,
											"end": 6864,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6280,
											"end": 6875,
											"name": "tag",
											"source": 0,
											"value": "313"
										},
										{
											"begin": 6280,
											"end": 6875,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6024,
											"end": 6881,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6024,
											"end": 6881,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6024,
											"end": 6881,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6024,
											"end": 6881,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6024,
											"end": 6881,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6024,
											"end": 6881,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6024,
											"end": 6881,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6024,
											"end": 6881,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7908,
											"end": 8023,
											"name": "tag",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 7908,
											"end": 8023,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7971,
											"end": 7978,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7997,
											"end": 8016,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 8005,
											"end": 8008,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5814,
											"end": 5832,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5814,
											"end": 5832,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5732,
											"end": 5839,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8365,
											"end": 8494,
											"name": "tag",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 8365,
											"end": 8494,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8439,
											"end": 8446,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8465,
											"end": 8487,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "221"
										},
										{
											"begin": 8469,
											"end": 8472,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8481,
											"end": 8486,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8465,
											"end": 8468,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "322"
										},
										{
											"begin": 8465,
											"end": 8487,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6980,
											"end": 7361,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 6980,
											"end": 7361,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7136,
											"end": 7155,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7136,
											"end": 7155,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7136,
											"end": 7155,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7093,
											"end": 7100,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7136,
											"end": 7155,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7136,
											"end": 7155,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7136,
											"end": 7155,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7136,
											"end": 7148,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7136,
											"end": 7155,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7136,
											"end": 7155,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7136,
											"end": 7155,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7136,
											"end": 7155,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7136,
											"end": 7155,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7136,
											"end": 7155,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7136,
											"end": 7155,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7136,
											"end": 7155,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7136,
											"end": 7155,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7192,
											"end": 7207,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 7192,
											"end": 7214,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7192,
											"end": 7214,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7192,
											"end": 7214,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7192,
											"end": 7214,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7192,
											"end": 7214,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7192,
											"end": 7224,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 7192,
											"end": 7224,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7192,
											"end": 7224,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 7192,
											"end": 7224,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7192,
											"end": 7224,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7192,
											"end": 7224,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7192,
											"end": 7224,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7192,
											"end": 7224,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 7192,
											"end": 7224,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7192,
											"end": 7224,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7192,
											"end": 7224,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7192,
											"end": 7224,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7192,
											"end": 7224,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7192,
											"end": 7224,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7192,
											"end": 7224,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7280,
											"end": 7340,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7280,
											"end": 7340,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7280,
											"end": 7340,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7280,
											"end": 7340,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7280,
											"end": 7340,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10138,
											"end": 10189,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 10138,
											"end": 10189,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10138,
											"end": 10189,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 10138,
											"end": 10189,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10205,
											"end": 10223,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 10205,
											"end": 10223,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10205,
											"end": 10223,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10198,
											"end": 10258,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 10198,
											"end": 10258,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10198,
											"end": 10258,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 10198,
											"end": 10258,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10274,
											"end": 10292,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 10274,
											"end": 10292,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 10274,
											"end": 10292,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10267,
											"end": 10301,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 10267,
											"end": 10301,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10267,
											"end": 10301,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 10267,
											"end": 10301,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10317,
											"end": 10335,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 10317,
											"end": 10335,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10317,
											"end": 10335,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 10317,
											"end": 10335,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10310,
											"end": 10344,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 10310,
											"end": 10344,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10310,
											"end": 10344,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 10310,
											"end": 10344,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7280,
											"end": 7340,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7280,
											"end": 7340,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7280,
											"end": 7340,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7280,
											"end": 7340,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7280,
											"end": 7340,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7280,
											"end": 7340,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7280,
											"end": 7340,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7280,
											"end": 7340,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7280,
											"end": 7340,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7280,
											"end": 7340,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10110,
											"end": 10129,
											"name": "PUSH",
											"source": 5,
											"value": "A0"
										},
										{
											"begin": 10110,
											"end": 10129,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10110,
											"end": 10129,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 10110,
											"end": 10129,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7280,
											"end": 7340,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7280,
											"end": 7340,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7280,
											"end": 7340,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7253,
											"end": 7354,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7253,
											"end": 7354,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7253,
											"end": 7354,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7253,
											"end": 7354,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7253,
											"end": 7354,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7253,
											"end": 7354,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6980,
											"end": 7361,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8102,
											"end": 8695,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 8102,
											"end": 8695,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8312,
											"end": 8331,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8312,
											"end": 8331,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8312,
											"end": 8331,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8269,
											"end": 8276,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8312,
											"end": 8331,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8312,
											"end": 8331,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8312,
											"end": 8331,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8312,
											"end": 8324,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8312,
											"end": 8331,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8312,
											"end": 8331,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8312,
											"end": 8331,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8312,
											"end": 8331,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8312,
											"end": 8331,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8312,
											"end": 8331,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8312,
											"end": 8331,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8312,
											"end": 8331,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8312,
											"end": 8331,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8368,
											"end": 8383,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 8368,
											"end": 8390,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8368,
											"end": 8390,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8368,
											"end": 8390,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8368,
											"end": 8390,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8368,
											"end": 8390,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8368,
											"end": 8400,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 8368,
											"end": 8400,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 8368,
											"end": 8400,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8368,
											"end": 8400,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8368,
											"end": 8400,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8368,
											"end": 8400,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 8368,
											"end": 8400,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8368,
											"end": 8400,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8368,
											"end": 8400,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8368,
											"end": 8400,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8368,
											"end": 8400,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8368,
											"end": 8400,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8456,
											"end": 8674,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8456,
											"end": 8674,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8269,
											"end": 8276,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8269,
											"end": 8276,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 8312,
											"end": 8331,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8368,
											"end": 8400,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8368,
											"end": 8400,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8456,
											"end": 8674,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "326"
										},
										{
											"begin": 8456,
											"end": 8674,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8391,
											"end": 8399,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 8391,
											"end": 8399,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8325,
											"end": 8330,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 8325,
											"end": 8330,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8545,
											"end": 8554,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 8545,
											"end": 8554,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8576,
											"end": 8583,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 8576,
											"end": 8583,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8312,
											"end": 8331,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 8312,
											"end": 8331,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8368,
											"end": 8400,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 8368,
											"end": 8400,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8456,
											"end": 8674,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8456,
											"end": 8674,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 8456,
											"end": 8674,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8456,
											"end": 8674,
											"name": "tag",
											"source": 0,
											"value": "326"
										},
										{
											"begin": 8456,
											"end": 8674,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8456,
											"end": 8674,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8456,
											"end": 8674,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8456,
											"end": 8674,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8456,
											"end": 8674,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8456,
											"end": 8674,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8456,
											"end": 8674,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8456,
											"end": 8674,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8456,
											"end": 8674,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8456,
											"end": 8674,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8456,
											"end": 8674,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8456,
											"end": 8674,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8456,
											"end": 8674,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8429,
											"end": 8688,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8429,
											"end": 8688,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8429,
											"end": 8688,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8429,
											"end": 8688,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8429,
											"end": 8688,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8429,
											"end": 8688,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8410,
											"end": 8688,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8410,
											"end": 8688,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8410,
											"end": 8688,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8410,
											"end": 8688,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8102,
											"end": 8695,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 8102,
											"end": 8695,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 8102,
											"end": 8695,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8102,
											"end": 8695,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8102,
											"end": 8695,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8102,
											"end": 8695,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8102,
											"end": 8695,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7689,
											"end": 7827,
											"name": "tag",
											"source": 4,
											"value": "205"
										},
										{
											"begin": 7689,
											"end": 7827,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7769,
											"end": 7773,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5620,
											"end": 5639,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5620,
											"end": 5639,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5620,
											"end": 5639,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5620,
											"end": 5632,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 5620,
											"end": 5632,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5620,
											"end": 5632,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5620,
											"end": 5639,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5620,
											"end": 5639,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5620,
											"end": 5639,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5620,
											"end": 5639,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5620,
											"end": 5639,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 5620,
											"end": 5639,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5620,
											"end": 5644,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5620,
											"end": 5644,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 7792,
											"end": 7820,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "221"
										},
										{
											"begin": 5524,
											"end": 5651,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7188,
											"end": 7311,
											"name": "tag",
											"source": 4,
											"value": "307"
										},
										{
											"begin": 7188,
											"end": 7311,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7258,
											"end": 7262,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7281,
											"end": 7304,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "221"
										},
										{
											"begin": 7286,
											"end": 7289,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7298,
											"end": 7303,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7281,
											"end": 7285,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "332"
										},
										{
											"begin": 7281,
											"end": 7304,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7479,
											"end": 7608,
											"name": "tag",
											"source": 4,
											"value": "315"
										},
										{
											"begin": 7479,
											"end": 7608,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7552,
											"end": 7556,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7575,
											"end": 7601,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "221"
										},
										{
											"begin": 7583,
											"end": 7586,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7595,
											"end": 7600,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7575,
											"end": 7582,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "335"
										},
										{
											"begin": 7575,
											"end": 7601,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6181,
											"end": 6299,
											"name": "tag",
											"source": 4,
											"value": "322"
										},
										{
											"begin": 6181,
											"end": 6299,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6248,
											"end": 6255,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6274,
											"end": 6277,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6274,
											"end": 6285,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6274,
											"end": 6285,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6286,
											"end": 6291,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6274,
											"end": 6292,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6274,
											"end": 6292,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6274,
											"end": 6292,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6274,
											"end": 6292,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 6274,
											"end": 6292,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "339"
										},
										{
											"begin": 6274,
											"end": 6292,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6274,
											"end": 6292,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "339"
										},
										{
											"begin": 6274,
											"end": 6292,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 6274,
											"end": 6292,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6274,
											"end": 6292,
											"name": "tag",
											"source": 4,
											"value": "339"
										},
										{
											"begin": 6274,
											"end": 6292,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6274,
											"end": 6292,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6274,
											"end": 6292,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6274,
											"end": 6292,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6274,
											"end": 6292,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6274,
											"end": 6292,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6274,
											"end": 6292,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 6274,
											"end": 6292,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6274,
											"end": 6292,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6267,
											"end": 6292,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6267,
											"end": 6292,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6181,
											"end": 6299,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6181,
											"end": 6299,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6181,
											"end": 6299,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6181,
											"end": 6299,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6181,
											"end": 6299,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3483,
											"end": 3887,
											"name": "tag",
											"source": 4,
											"value": "332"
										},
										{
											"begin": 3483,
											"end": 3887,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3546,
											"end": 3550,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5620,
											"end": 5639,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5620,
											"end": 5639,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5620,
											"end": 5639,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5620,
											"end": 5632,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 5620,
											"end": 5632,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5620,
											"end": 5632,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5620,
											"end": 5639,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5620,
											"end": 5639,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5620,
											"end": 5639,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5620,
											"end": 5639,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5620,
											"end": 5639,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 5620,
											"end": 5639,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3562,
											"end": 3881,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "344"
										},
										{
											"begin": 3562,
											"end": 3881,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3604,
											"end": 3627,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3604,
											"end": 3627,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3604,
											"end": 3627,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3604,
											"end": 3627,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3604,
											"end": 3627,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3604,
											"end": 3627,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3604,
											"end": 3627,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3604,
											"end": 3627,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 3604,
											"end": 3615,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3604,
											"end": 3627,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3604,
											"end": 3627,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3604,
											"end": 3627,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3604,
											"end": 3627,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3604,
											"end": 3627,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3604,
											"end": 3627,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3604,
											"end": 3627,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3604,
											"end": 3627,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3604,
											"end": 3627,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 3604,
											"end": 3627,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3604,
											"end": 3627,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3604,
											"end": 3627,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3604,
											"end": 3627,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 3784,
											"end": 3802,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3784,
											"end": 3802,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3762,
											"end": 3781,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3762,
											"end": 3781,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3762,
											"end": 3781,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3762,
											"end": 3774,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3762,
											"end": 3774,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 3762,
											"end": 3774,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3762,
											"end": 3781,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3762,
											"end": 3781,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 3762,
											"end": 3781,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3762,
											"end": 3781,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3762,
											"end": 3781,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3762,
											"end": 3781,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3762,
											"end": 3802,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3762,
											"end": 3802,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3762,
											"end": 3802,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3762,
											"end": 3802,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 3816,
											"end": 3827,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 3816,
											"end": 3827,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3562,
											"end": 3881,
											"name": "tag",
											"source": 4,
											"value": "344"
										},
										{
											"begin": 3562,
											"end": 3881,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3865,
											"end": 3870,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3858,
											"end": 3870,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 3858,
											"end": 3870,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4055,
											"end": 5443,
											"name": "tag",
											"source": 4,
											"value": "335"
										},
										{
											"begin": 4055,
											"end": 5443,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4121,
											"end": 4125,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4258,
											"end": 4277,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4258,
											"end": 4277,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4258,
											"end": 4277,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4258,
											"end": 4270,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4258,
											"end": 4270,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4258,
											"end": 4270,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4258,
											"end": 4277,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4258,
											"end": 4277,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4258,
											"end": 4277,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4258,
											"end": 4277,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4258,
											"end": 4277,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4258,
											"end": 4277,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4292,
											"end": 4307,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4292,
											"end": 4307,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4288,
											"end": 5437,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "348"
										},
										{
											"begin": 4288,
											"end": 5437,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4661,
											"end": 4682,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4685,
											"end": 4699,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "349"
										},
										{
											"begin": 4698,
											"end": 4699,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4685,
											"end": 4695,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4685,
											"end": 4699,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "350"
										},
										{
											"begin": 4685,
											"end": 4699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4685,
											"end": 4699,
											"name": "tag",
											"source": 4,
											"value": "349"
										},
										{
											"begin": 4685,
											"end": 4699,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4733,
											"end": 4751,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4733,
											"end": 4751,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4661,
											"end": 4699,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4661,
											"end": 4699,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4713,
											"end": 4730,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4713,
											"end": 4730,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4733,
											"end": 4755,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "351"
										},
										{
											"begin": 4733,
											"end": 4755,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4754,
											"end": 4755,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4754,
											"end": 4755,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4733,
											"end": 4755,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "350"
										},
										{
											"begin": 4733,
											"end": 4755,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4733,
											"end": 4755,
											"name": "tag",
											"source": 4,
											"value": "351"
										},
										{
											"begin": 4733,
											"end": 4755,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4713,
											"end": 4755,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4713,
											"end": 4755,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4787,
											"end": 4800,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4774,
											"end": 4783,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4774,
											"end": 4800,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 4770,
											"end": 5168,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "352"
										},
										{
											"begin": 4770,
											"end": 5168,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4820,
											"end": 4837,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4840,
											"end": 4843,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 4840,
											"end": 4851,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4840,
											"end": 4851,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4852,
											"end": 4861,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4840,
											"end": 4862,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4840,
											"end": 4862,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4840,
											"end": 4862,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4840,
											"end": 4862,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 4840,
											"end": 4862,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "354"
										},
										{
											"begin": 4840,
											"end": 4862,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4840,
											"end": 4862,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "354"
										},
										{
											"begin": 4840,
											"end": 4862,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 4840,
											"end": 4862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4840,
											"end": 4862,
											"name": "tag",
											"source": 4,
											"value": "354"
										},
										{
											"begin": 4840,
											"end": 4862,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4840,
											"end": 4862,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4840,
											"end": 4862,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4840,
											"end": 4862,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4840,
											"end": 4862,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4840,
											"end": 4862,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4840,
											"end": 4862,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4840,
											"end": 4862,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4840,
											"end": 4862,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4820,
											"end": 4862,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4820,
											"end": 4862,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4991,
											"end": 5000,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4962,
											"end": 4965,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 4962,
											"end": 4973,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4962,
											"end": 4973,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4974,
											"end": 4987,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4962,
											"end": 4988,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4962,
											"end": 4988,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4962,
											"end": 4988,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4962,
											"end": 4988,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 4962,
											"end": 4988,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "357"
										},
										{
											"begin": 4962,
											"end": 4988,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4962,
											"end": 4988,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "357"
										},
										{
											"begin": 4962,
											"end": 4988,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 4962,
											"end": 4988,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4962,
											"end": 4988,
											"name": "tag",
											"source": 4,
											"value": "357"
										},
										{
											"begin": 4962,
											"end": 4988,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4962,
											"end": 4988,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4962,
											"end": 4988,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4962,
											"end": 4988,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4962,
											"end": 4988,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4962,
											"end": 4988,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4962,
											"end": 4988,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4962,
											"end": 4988,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4962,
											"end": 4988,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4962,
											"end": 4988,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4962,
											"end": 4988,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4962,
											"end": 4988,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4962,
											"end": 5000,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4962,
											"end": 5000,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4962,
											"end": 5000,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4962,
											"end": 5000,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 5074,
											"end": 5097,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5074,
											"end": 5097,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5074,
											"end": 5097,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5074,
											"end": 5086,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 5074,
											"end": 5086,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 5074,
											"end": 5086,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5074,
											"end": 5097,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5074,
											"end": 5097,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5074,
											"end": 5097,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5074,
											"end": 5097,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5074,
											"end": 5097,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 5074,
											"end": 5110,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5074,
											"end": 5110,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5074,
											"end": 5110,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 4770,
											"end": 5168,
											"name": "tag",
											"source": 4,
											"value": "352"
										},
										{
											"begin": 4770,
											"end": 5168,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5246,
											"end": 5263,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5246,
											"end": 5263,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5246,
											"end": 5249,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 5246,
											"end": 5249,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5246,
											"end": 5263,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5246,
											"end": 5263,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "360"
										},
										{
											"begin": 5246,
											"end": 5263,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5246,
											"end": 5263,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "360"
										},
										{
											"begin": 5246,
											"end": 5263,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "361"
										},
										{
											"begin": 5246,
											"end": 5263,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5246,
											"end": 5263,
											"name": "tag",
											"source": 4,
											"value": "360"
										},
										{
											"begin": 5246,
											"end": 5263,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5246,
											"end": 5263,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 5246,
											"end": 5263,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5246,
											"end": 5263,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5246,
											"end": 5263,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5246,
											"end": 5263,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5246,
											"end": 5263,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5246,
											"end": 5263,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5246,
											"end": 5263,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5246,
											"end": 5263,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5246,
											"end": 5263,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5246,
											"end": 5263,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 5246,
											"end": 5263,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5246,
											"end": 5263,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5246,
											"end": 5263,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5246,
											"end": 5263,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 5246,
											"end": 5263,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5246,
											"end": 5263,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 5338,
											"end": 5341,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5338,
											"end": 5350,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 5338,
											"end": 5350,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5338,
											"end": 5357,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5351,
											"end": 5356,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 5338,
											"end": 5357,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5338,
											"end": 5357,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5338,
											"end": 5357,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5338,
											"end": 5357,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5338,
											"end": 5357,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5338,
											"end": 5357,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5338,
											"end": 5357,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5338,
											"end": 5357,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5338,
											"end": 5357,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5338,
											"end": 5357,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5338,
											"end": 5357,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 5331,
											"end": 5357,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5331,
											"end": 5357,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5331,
											"end": 5357,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 5379,
											"end": 5383,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 5372,
											"end": 5383,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 5372,
											"end": 5383,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5372,
											"end": 5383,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5372,
											"end": 5383,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5372,
											"end": 5383,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5372,
											"end": 5383,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 5372,
											"end": 5383,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4288,
											"end": 5437,
											"name": "tag",
											"source": 4,
											"value": "348"
										},
										{
											"begin": 4288,
											"end": 5437,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5421,
											"end": 5426,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5414,
											"end": 5426,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5414,
											"end": 5426,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5414,
											"end": 5426,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5414,
											"end": 5426,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 5414,
											"end": 5426,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 14,
											"end": 300,
											"name": "tag",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 14,
											"end": 300,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 72,
											"end": 78,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 125,
											"end": 127,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 113,
											"end": 122,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 104,
											"end": 111,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 100,
											"end": 123,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 96,
											"end": 128,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 93,
											"end": 145,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 93,
											"end": 145,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "371"
										},
										{
											"begin": 93,
											"end": 145,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 141,
											"end": 142,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 138,
											"end": 139,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 131,
											"end": 143,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 93,
											"end": 145,
											"name": "tag",
											"source": 5,
											"value": "371"
										},
										{
											"begin": 93,
											"end": 145,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 167,
											"end": 190,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 167,
											"end": 190,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 219,
											"end": 251,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 219,
											"end": 251,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 209,
											"end": 252,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 209,
											"end": 252,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 199,
											"end": 270,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "221"
										},
										{
											"begin": 199,
											"end": 270,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 266,
											"end": 267,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 263,
											"end": 264,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 256,
											"end": 268,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 497,
											"end": 670,
											"name": "tag",
											"source": 5,
											"value": "366"
										},
										{
											"begin": 497,
											"end": 670,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 565,
											"end": 585,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 565,
											"end": 585,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 614,
											"end": 645,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 614,
											"end": 645,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 604,
											"end": 646,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 604,
											"end": 646,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 594,
											"end": 664,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "375"
										},
										{
											"begin": 594,
											"end": 664,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 660,
											"end": 661,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 657,
											"end": 658,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 650,
											"end": 662,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 594,
											"end": 664,
											"name": "tag",
											"source": 5,
											"value": "375"
										},
										{
											"begin": 594,
											"end": 664,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 497,
											"end": 670,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 497,
											"end": 670,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 497,
											"end": 670,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 497,
											"end": 670,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 675,
											"end": 1049,
											"name": "tag",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 675,
											"end": 1049,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 752,
											"end": 758,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 760,
											"end": 766,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 768,
											"end": 774,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 821,
											"end": 823,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 809,
											"end": 818,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 800,
											"end": 807,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 796,
											"end": 819,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 792,
											"end": 824,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 789,
											"end": 841,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 789,
											"end": 841,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "377"
										},
										{
											"begin": 789,
											"end": 841,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 837,
											"end": 838,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 834,
											"end": 835,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 827,
											"end": 839,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 789,
											"end": 841,
											"name": "tag",
											"source": 5,
											"value": "377"
										},
										{
											"begin": 789,
											"end": 841,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 860,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "378"
										},
										{
											"begin": 879,
											"end": 888,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 860,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "366"
										},
										{
											"begin": 860,
											"end": 889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 860,
											"end": 889,
											"name": "tag",
											"source": 5,
											"value": "378"
										},
										{
											"begin": 860,
											"end": 889,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 850,
											"end": 889,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 850,
											"end": 889,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 908,
											"end": 946,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "379"
										},
										{
											"begin": 942,
											"end": 944,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 931,
											"end": 940,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 927,
											"end": 945,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 908,
											"end": 946,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "366"
										},
										{
											"begin": 908,
											"end": 946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 908,
											"end": 946,
											"name": "tag",
											"source": 5,
											"value": "379"
										},
										{
											"begin": 908,
											"end": 946,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 675,
											"end": 1049,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 675,
											"end": 1049,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 898,
											"end": 946,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 898,
											"end": 946,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1015,
											"end": 1017,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1000,
											"end": 1018,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1000,
											"end": 1018,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1000,
											"end": 1018,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1000,
											"end": 1018,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 987,
											"end": 1019,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 987,
											"end": 1019,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 675,
											"end": 1049,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1054,
											"end": 1691,
											"name": "tag",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 1054,
											"end": 1691,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1244,
											"end": 1246,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1256,
											"end": 1277,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1256,
											"end": 1277,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1256,
											"end": 1277,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1326,
											"end": 1339,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1326,
											"end": 1339,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1229,
											"end": 1247,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1229,
											"end": 1247,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1229,
											"end": 1247,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1348,
											"end": 1370,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1348,
											"end": 1370,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1348,
											"end": 1370,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1196,
											"end": 1200,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1196,
											"end": 1200,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1427,
											"end": 1442,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1427,
											"end": 1442,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1427,
											"end": 1442,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1401,
											"end": 1403,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1386,
											"end": 1404,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1386,
											"end": 1404,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1386,
											"end": 1404,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1196,
											"end": 1200,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1470,
											"end": 1665,
											"name": "tag",
											"source": 5,
											"value": "381"
										},
										{
											"begin": 1470,
											"end": 1665,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1484,
											"end": 1490,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1481,
											"end": 1482,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1478,
											"end": 1491,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 1470,
											"end": 1665,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1470,
											"end": 1665,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "383"
										},
										{
											"begin": 1470,
											"end": 1665,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1549,
											"end": 1562,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1549,
											"end": 1562,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1545,
											"end": 1584,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1533,
											"end": 1585,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1533,
											"end": 1585,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1614,
											"end": 1616,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1640,
											"end": 1655,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1640,
											"end": 1655,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1640,
											"end": 1655,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1640,
											"end": 1655,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1605,
											"end": 1617,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1605,
											"end": 1617,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1605,
											"end": 1617,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1605,
											"end": 1617,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1581,
											"end": 1582,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1499,
											"end": 1508,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1470,
											"end": 1665,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "381"
										},
										{
											"begin": 1470,
											"end": 1665,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1470,
											"end": 1665,
											"name": "tag",
											"source": 5,
											"value": "383"
										},
										{
											"begin": 1470,
											"end": 1665,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1682,
											"end": 1685,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1682,
											"end": 1685,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 1054,
											"end": 1691,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1054,
											"end": 1691,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1696,
											"end": 1882,
											"name": "tag",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 1696,
											"end": 1882,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1755,
											"end": 1761,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1808,
											"end": 1810,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1796,
											"end": 1805,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1787,
											"end": 1794,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1783,
											"end": 1806,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1811,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1776,
											"end": 1828,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1776,
											"end": 1828,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "385"
										},
										{
											"begin": 1776,
											"end": 1828,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1824,
											"end": 1825,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1821,
											"end": 1822,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1814,
											"end": 1826,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1776,
											"end": 1828,
											"name": "tag",
											"source": 5,
											"value": "385"
										},
										{
											"begin": 1776,
											"end": 1828,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1847,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "221"
										},
										{
											"begin": 1866,
											"end": 1875,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1847,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "366"
										},
										{
											"begin": 1847,
											"end": 1876,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1887,
											"end": 2047,
											"name": "tag",
											"source": 5,
											"value": "367"
										},
										{
											"begin": 1887,
											"end": 2047,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1952,
											"end": 1972,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1952,
											"end": 1972,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 2008,
											"end": 2021,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2008,
											"end": 2021,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2001,
											"end": 2022,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1991,
											"end": 2023,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1991,
											"end": 2023,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1981,
											"end": 2041,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "375"
										},
										{
											"begin": 1981,
											"end": 2041,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2037,
											"end": 2038,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2034,
											"end": 2035,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2027,
											"end": 2039,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2052,
											"end": 2380,
											"name": "tag",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 2052,
											"end": 2380,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2126,
											"end": 2132,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2134,
											"end": 2140,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2142,
											"end": 2148,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2195,
											"end": 2197,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 2183,
											"end": 2192,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2174,
											"end": 2181,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 2170,
											"end": 2193,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2166,
											"end": 2198,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 2163,
											"end": 2215,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2163,
											"end": 2215,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "390"
										},
										{
											"begin": 2163,
											"end": 2215,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2211,
											"end": 2212,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2208,
											"end": 2209,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2201,
											"end": 2213,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2163,
											"end": 2215,
											"name": "tag",
											"source": 5,
											"value": "390"
										},
										{
											"begin": 2163,
											"end": 2215,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2234,
											"end": 2263,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "391"
										},
										{
											"begin": 2253,
											"end": 2262,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2234,
											"end": 2263,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "366"
										},
										{
											"begin": 2234,
											"end": 2263,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2234,
											"end": 2263,
											"name": "tag",
											"source": 5,
											"value": "391"
										},
										{
											"begin": 2234,
											"end": 2263,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2224,
											"end": 2263,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2224,
											"end": 2263,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2282,
											"end": 2320,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "392"
										},
										{
											"begin": 2316,
											"end": 2318,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2305,
											"end": 2314,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2301,
											"end": 2319,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2282,
											"end": 2320,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "366"
										},
										{
											"begin": 2282,
											"end": 2320,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2282,
											"end": 2320,
											"name": "tag",
											"source": 5,
											"value": "392"
										},
										{
											"begin": 2282,
											"end": 2320,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2272,
											"end": 2320,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2272,
											"end": 2320,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2339,
											"end": 2374,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "393"
										},
										{
											"begin": 2370,
											"end": 2372,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2359,
											"end": 2368,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2355,
											"end": 2373,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2339,
											"end": 2374,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "367"
										},
										{
											"begin": 2339,
											"end": 2374,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2339,
											"end": 2374,
											"name": "tag",
											"source": 5,
											"value": "393"
										},
										{
											"begin": 2339,
											"end": 2374,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2329,
											"end": 2374,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2329,
											"end": 2374,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2052,
											"end": 2380,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2052,
											"end": 2380,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2052,
											"end": 2380,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2052,
											"end": 2380,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2052,
											"end": 2380,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2052,
											"end": 2380,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2385,
											"end": 2512,
											"name": "tag",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 2385,
											"end": 2512,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2446,
											"end": 2456,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B71"
										},
										{
											"begin": 2441,
											"end": 2444,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 2437,
											"end": 2457,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 2434,
											"end": 2435,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2427,
											"end": 2458,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2477,
											"end": 2481,
											"name": "PUSH",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 2474,
											"end": 2475,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2467,
											"end": 2482,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2501,
											"end": 2505,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 2498,
											"end": 2499,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2491,
											"end": 2506,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2517,
											"end": 3722,
											"name": "tag",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 2517,
											"end": 3722,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2771,
											"end": 2773,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2783,
											"end": 2804,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2783,
											"end": 2804,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2783,
											"end": 2804,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2853,
											"end": 2866,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2853,
											"end": 2866,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2756,
											"end": 2774,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2756,
											"end": 2774,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2756,
											"end": 2774,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2875,
											"end": 2897,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2875,
											"end": 2897,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2875,
											"end": 2897,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2723,
											"end": 2727,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2723,
											"end": 2727,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2954,
											"end": 2969,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2954,
											"end": 2969,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2954,
											"end": 2969,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2928,
											"end": 2930,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2913,
											"end": 2931,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2913,
											"end": 2931,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2913,
											"end": 2931,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2723,
											"end": 2727,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2997,
											"end": 3696,
											"name": "tag",
											"source": 5,
											"value": "396"
										},
										{
											"begin": 2997,
											"end": 3696,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3011,
											"end": 3017,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3008,
											"end": 3009,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3005,
											"end": 3018,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 2997,
											"end": 3696,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2997,
											"end": 3696,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "383"
										},
										{
											"begin": 2997,
											"end": 3696,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3070,
											"end": 3083,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3112,
											"end": 3114,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3106,
											"end": 3115,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3145,
											"end": 3146,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3141,
											"end": 3143,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3138,
											"end": 3147,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 3128,
											"end": 3288,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "399"
										},
										{
											"begin": 3128,
											"end": 3288,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3198,
											"end": 3208,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B71"
										},
										{
											"begin": 3193,
											"end": 3196,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 3189,
											"end": 3209,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 3186,
											"end": 3187,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3179,
											"end": 3210,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3237,
											"end": 3241,
											"name": "PUSH",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 3234,
											"end": 3235,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3227,
											"end": 3242,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3269,
											"end": 3273,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 3266,
											"end": 3267,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3259,
											"end": 3274,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3128,
											"end": 3288,
											"name": "tag",
											"source": 5,
											"value": "399"
										},
										{
											"begin": 3128,
											"end": 3288,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3301,
											"end": 3316,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3301,
											"end": 3316,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3368,
											"end": 3370,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3360,
											"end": 3371,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3360,
											"end": 3371,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3360,
											"end": 3371,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3354,
											"end": 3372,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3350,
											"end": 3394,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3350,
											"end": 3394,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3350,
											"end": 3394,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3336,
											"end": 3348,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3336,
											"end": 3348,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 3336,
											"end": 3348,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3329,
											"end": 3395,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3447,
											"end": 3449,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3439,
											"end": 3450,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3439,
											"end": 3450,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3439,
											"end": 3450,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3433,
											"end": 3451,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3429,
											"end": 3473,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3429,
											"end": 3473,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3415,
											"end": 3427,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3415,
											"end": 3427,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 3415,
											"end": 3427,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3408,
											"end": 3474,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3528,
											"end": 3532,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 3520,
											"end": 3533,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3520,
											"end": 3533,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3520,
											"end": 3533,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3514,
											"end": 3534,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3510,
											"end": 3556,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3510,
											"end": 3556,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3510,
											"end": 3556,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3494,
											"end": 3508,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3494,
											"end": 3508,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 3494,
											"end": 3508,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3487,
											"end": 3557,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3607,
											"end": 3611,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 3599,
											"end": 3612,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3599,
											"end": 3612,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3599,
											"end": 3612,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3593,
											"end": 3613,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3577,
											"end": 3591,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3577,
											"end": 3591,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3577,
											"end": 3591,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3570,
											"end": 3614,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3570,
											"end": 3614,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3570,
											"end": 3614,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3570,
											"end": 3614,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3671,
											"end": 3686,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 3671,
											"end": 3686,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3671,
											"end": 3686,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 3671,
											"end": 3686,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3671,
											"end": 3686,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3382,
											"end": 3385,
											"name": "PUSH",
											"source": 5,
											"value": "A0"
										},
										{
											"begin": 3634,
											"end": 3648,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3634,
											"end": 3648,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3634,
											"end": 3648,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3634,
											"end": 3648,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3391,
											"end": 3392,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 3026,
											"end": 3035,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2997,
											"end": 3696,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "396"
										},
										{
											"begin": 2997,
											"end": 3696,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3727,
											"end": 4170,
											"name": "tag",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 3727,
											"end": 4170,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3810,
											"end": 3816,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3818,
											"end": 3824,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3826,
											"end": 3832,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3834,
											"end": 3840,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3887,
											"end": 3890,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 3875,
											"end": 3884,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3866,
											"end": 3873,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 3862,
											"end": 3885,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3858,
											"end": 3891,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 3855,
											"end": 3908,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3855,
											"end": 3908,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "401"
										},
										{
											"begin": 3855,
											"end": 3908,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3904,
											"end": 3905,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3901,
											"end": 3902,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3894,
											"end": 3906,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3855,
											"end": 3908,
											"name": "tag",
											"source": 5,
											"value": "401"
										},
										{
											"begin": 3855,
											"end": 3908,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3927,
											"end": 3956,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "402"
										},
										{
											"begin": 3946,
											"end": 3955,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3927,
											"end": 3956,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "366"
										},
										{
											"begin": 3927,
											"end": 3956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3927,
											"end": 3956,
											"name": "tag",
											"source": 5,
											"value": "402"
										},
										{
											"begin": 3927,
											"end": 3956,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3917,
											"end": 3956,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 3917,
											"end": 3956,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3975,
											"end": 4013,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "403"
										},
										{
											"begin": 4009,
											"end": 4011,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3998,
											"end": 4007,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 3994,
											"end": 4012,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3975,
											"end": 4013,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "366"
										},
										{
											"begin": 3975,
											"end": 4013,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3975,
											"end": 4013,
											"name": "tag",
											"source": 5,
											"value": "403"
										},
										{
											"begin": 3975,
											"end": 4013,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3965,
											"end": 4013,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4082,
											"end": 4084,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4067,
											"end": 4085,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4067,
											"end": 4085,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4054,
											"end": 4086,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 4054,
											"end": 4086,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4129,
											"end": 4164,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "404"
										},
										{
											"begin": 4160,
											"end": 4162,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 4145,
											"end": 4163,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 4145,
											"end": 4163,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4129,
											"end": 4164,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "367"
										},
										{
											"begin": 4129,
											"end": 4164,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4129,
											"end": 4164,
											"name": "tag",
											"source": 5,
											"value": "404"
										},
										{
											"begin": 4129,
											"end": 4164,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4119,
											"end": 4164,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4119,
											"end": 4164,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3727,
											"end": 4170,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3727,
											"end": 4170,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 3727,
											"end": 4170,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3727,
											"end": 4170,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 3727,
											"end": 4170,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3727,
											"end": 4170,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3727,
											"end": 4170,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3727,
											"end": 4170,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4175,
											"end": 4429,
											"name": "tag",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 4175,
											"end": 4429,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4240,
											"end": 4246,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4248,
											"end": 4254,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4301,
											"end": 4303,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4289,
											"end": 4298,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4280,
											"end": 4287,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4276,
											"end": 4299,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4272,
											"end": 4304,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 4269,
											"end": 4321,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4269,
											"end": 4321,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "406"
										},
										{
											"begin": 4269,
											"end": 4321,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4317,
											"end": 4318,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4314,
											"end": 4315,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4307,
											"end": 4319,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4269,
											"end": 4321,
											"name": "tag",
											"source": 5,
											"value": "406"
										},
										{
											"begin": 4269,
											"end": 4321,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4340,
											"end": 4369,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "407"
										},
										{
											"begin": 4359,
											"end": 4368,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4340,
											"end": 4369,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "366"
										},
										{
											"begin": 4340,
											"end": 4369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4340,
											"end": 4369,
											"name": "tag",
											"source": 5,
											"value": "407"
										},
										{
											"begin": 4340,
											"end": 4369,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4330,
											"end": 4369,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4330,
											"end": 4369,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4388,
											"end": 4423,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "408"
										},
										{
											"begin": 4419,
											"end": 4421,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4408,
											"end": 4417,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4404,
											"end": 4422,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4388,
											"end": 4423,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "367"
										},
										{
											"begin": 4388,
											"end": 4423,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4388,
											"end": 4423,
											"name": "tag",
											"source": 5,
											"value": "408"
										},
										{
											"begin": 4388,
											"end": 4423,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4378,
											"end": 4423,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4378,
											"end": 4423,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4175,
											"end": 4429,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4175,
											"end": 4429,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4175,
											"end": 4429,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4175,
											"end": 4429,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4175,
											"end": 4429,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4175,
											"end": 4429,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4434,
											"end": 5303,
											"name": "tag",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 4434,
											"end": 5303,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4690,
											"end": 4692,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4702,
											"end": 4723,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4702,
											"end": 4723,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4702,
											"end": 4723,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4772,
											"end": 4785,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4772,
											"end": 4785,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4675,
											"end": 4693,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4675,
											"end": 4693,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4675,
											"end": 4693,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4794,
											"end": 4816,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4794,
											"end": 4816,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4794,
											"end": 4816,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4642,
											"end": 4646,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4642,
											"end": 4646,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4873,
											"end": 4888,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4873,
											"end": 4888,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4873,
											"end": 4888,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4847,
											"end": 4849,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4832,
											"end": 4850,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4832,
											"end": 4850,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4832,
											"end": 4850,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4642,
											"end": 4646,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4916,
											"end": 5277,
											"name": "tag",
											"source": 5,
											"value": "410"
										},
										{
											"begin": 4916,
											"end": 5277,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4930,
											"end": 4936,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4927,
											"end": 4928,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4924,
											"end": 4937,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 4916,
											"end": 5277,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4916,
											"end": 5277,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "383"
										},
										{
											"begin": 4916,
											"end": 5277,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4989,
											"end": 5002,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4989,
											"end": 5002,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5031,
											"end": 5040,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5031,
											"end": 5040,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5027,
											"end": 5062,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5027,
											"end": 5062,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5027,
											"end": 5062,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5015,
											"end": 5063,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5015,
											"end": 5063,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5111,
											"end": 5113,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5103,
											"end": 5114,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5103,
											"end": 5114,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5103,
											"end": 5114,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5097,
											"end": 5115,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5083,
											"end": 5095,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5083,
											"end": 5095,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 5083,
											"end": 5095,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5076,
											"end": 5116,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5168,
											"end": 5170,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5160,
											"end": 5171,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5160,
											"end": 5171,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5160,
											"end": 5171,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5154,
											"end": 5172,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5150,
											"end": 5194,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5150,
											"end": 5194,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5150,
											"end": 5194,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5136,
											"end": 5148,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5136,
											"end": 5148,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5136,
											"end": 5148,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5129,
											"end": 5195,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5129,
											"end": 5195,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5129,
											"end": 5195,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5129,
											"end": 5195,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5252,
											"end": 5267,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5252,
											"end": 5267,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 5252,
											"end": 5267,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5252,
											"end": 5267,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5224,
											"end": 5228,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 5215,
											"end": 5229,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5215,
											"end": 5229,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5215,
											"end": 5229,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5215,
											"end": 5229,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5059,
											"end": 5060,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 4945,
											"end": 4954,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4916,
											"end": 5277,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "410"
										},
										{
											"begin": 4916,
											"end": 5277,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5308,
											"end": 5642,
											"name": "tag",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 5308,
											"end": 5642,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5385,
											"end": 5391,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5393,
											"end": 5399,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5401,
											"end": 5407,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5454,
											"end": 5456,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 5442,
											"end": 5451,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5433,
											"end": 5440,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 5429,
											"end": 5452,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5425,
											"end": 5457,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 5422,
											"end": 5474,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5422,
											"end": 5474,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "414"
										},
										{
											"begin": 5422,
											"end": 5474,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5470,
											"end": 5471,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5467,
											"end": 5468,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5460,
											"end": 5472,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5422,
											"end": 5474,
											"name": "tag",
											"source": 5,
											"value": "414"
										},
										{
											"begin": 5422,
											"end": 5474,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5493,
											"end": 5522,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "415"
										},
										{
											"begin": 5512,
											"end": 5521,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5493,
											"end": 5522,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "366"
										},
										{
											"begin": 5493,
											"end": 5522,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5493,
											"end": 5522,
											"name": "tag",
											"source": 5,
											"value": "415"
										},
										{
											"begin": 5493,
											"end": 5522,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5483,
											"end": 5522,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5483,
											"end": 5522,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5541,
											"end": 5579,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "416"
										},
										{
											"begin": 5575,
											"end": 5577,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5564,
											"end": 5573,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5560,
											"end": 5578,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5541,
											"end": 5579,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "366"
										},
										{
											"begin": 5541,
											"end": 5579,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5541,
											"end": 5579,
											"name": "tag",
											"source": 5,
											"value": "416"
										},
										{
											"begin": 5541,
											"end": 5579,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5531,
											"end": 5579,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5531,
											"end": 5579,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5598,
											"end": 5636,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "393"
										},
										{
											"begin": 5632,
											"end": 5634,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5621,
											"end": 5630,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5617,
											"end": 5635,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5598,
											"end": 5636,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "366"
										},
										{
											"begin": 5598,
											"end": 5636,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5647,
											"end": 5907,
											"name": "tag",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 5647,
											"end": 5907,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5715,
											"end": 5721,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5723,
											"end": 5729,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5776,
											"end": 5778,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5764,
											"end": 5773,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5755,
											"end": 5762,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5751,
											"end": 5774,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5747,
											"end": 5779,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 5744,
											"end": 5796,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5744,
											"end": 5796,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "419"
										},
										{
											"begin": 5744,
											"end": 5796,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5792,
											"end": 5793,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5789,
											"end": 5790,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5782,
											"end": 5794,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5744,
											"end": 5796,
											"name": "tag",
											"source": 5,
											"value": "419"
										},
										{
											"begin": 5744,
											"end": 5796,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5815,
											"end": 5844,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "420"
										},
										{
											"begin": 5834,
											"end": 5843,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5815,
											"end": 5844,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "366"
										},
										{
											"begin": 5815,
											"end": 5844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5815,
											"end": 5844,
											"name": "tag",
											"source": 5,
											"value": "420"
										},
										{
											"begin": 5815,
											"end": 5844,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5805,
											"end": 5844,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5805,
											"end": 5844,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5863,
											"end": 5901,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "408"
										},
										{
											"begin": 5897,
											"end": 5899,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5886,
											"end": 5895,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5882,
											"end": 5900,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5863,
											"end": 5901,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "366"
										},
										{
											"begin": 5863,
											"end": 5901,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5912,
											"end": 6361,
											"name": "tag",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 5912,
											"end": 6361,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5998,
											"end": 6004,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6006,
											"end": 6012,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6014,
											"end": 6020,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6022,
											"end": 6028,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6075,
											"end": 6078,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 6063,
											"end": 6072,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 6054,
											"end": 6061,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 6050,
											"end": 6073,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6046,
											"end": 6079,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 6043,
											"end": 6096,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6043,
											"end": 6096,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "423"
										},
										{
											"begin": 6043,
											"end": 6096,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6092,
											"end": 6093,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6089,
											"end": 6090,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6082,
											"end": 6094,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 6043,
											"end": 6096,
											"name": "tag",
											"source": 5,
											"value": "423"
										},
										{
											"begin": 6043,
											"end": 6096,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6115,
											"end": 6144,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "424"
										},
										{
											"begin": 6134,
											"end": 6143,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 6115,
											"end": 6144,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "366"
										},
										{
											"begin": 6115,
											"end": 6144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6115,
											"end": 6144,
											"name": "tag",
											"source": 5,
											"value": "424"
										},
										{
											"begin": 6115,
											"end": 6144,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6105,
											"end": 6144,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 6105,
											"end": 6144,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6163,
											"end": 6201,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "425"
										},
										{
											"begin": 6197,
											"end": 6199,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6186,
											"end": 6195,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 6182,
											"end": 6200,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6163,
											"end": 6201,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "366"
										},
										{
											"begin": 6163,
											"end": 6201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6163,
											"end": 6201,
											"name": "tag",
											"source": 5,
											"value": "425"
										},
										{
											"begin": 6163,
											"end": 6201,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6153,
											"end": 6201,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6153,
											"end": 6201,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6220,
											"end": 6258,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "426"
										},
										{
											"begin": 6254,
											"end": 6256,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6243,
											"end": 6252,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 6239,
											"end": 6257,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6220,
											"end": 6258,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "366"
										},
										{
											"begin": 6220,
											"end": 6258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6220,
											"end": 6258,
											"name": "tag",
											"source": 5,
											"value": "426"
										},
										{
											"begin": 6220,
											"end": 6258,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5912,
											"end": 6361,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 5912,
											"end": 6361,
											"name": "SWAP7",
											"source": 5
										},
										{
											"begin": 5912,
											"end": 6361,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5912,
											"end": 6361,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6210,
											"end": 6258,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6210,
											"end": 6258,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 6327,
											"end": 6329,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 6312,
											"end": 6330,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6299,
											"end": 6331,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 6299,
											"end": 6331,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5912,
											"end": 6361,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6366,
											"end": 7186,
											"name": "tag",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 6366,
											"end": 7186,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6628,
											"end": 6630,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6640,
											"end": 6661,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6640,
											"end": 6661,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6640,
											"end": 6661,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6710,
											"end": 6723,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6710,
											"end": 6723,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6613,
											"end": 6631,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6613,
											"end": 6631,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6613,
											"end": 6631,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6732,
											"end": 6754,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6732,
											"end": 6754,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6732,
											"end": 6754,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6580,
											"end": 6584,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6580,
											"end": 6584,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6811,
											"end": 6826,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6811,
											"end": 6826,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6811,
											"end": 6826,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6785,
											"end": 6787,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6770,
											"end": 6788,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6770,
											"end": 6788,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6770,
											"end": 6788,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6580,
											"end": 6584,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6854,
											"end": 7160,
											"name": "tag",
											"source": 5,
											"value": "428"
										},
										{
											"begin": 6854,
											"end": 7160,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6868,
											"end": 6874,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6865,
											"end": 6866,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6862,
											"end": 6875,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 6854,
											"end": 7160,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6854,
											"end": 7160,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "383"
										},
										{
											"begin": 6854,
											"end": 7160,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6927,
											"end": 6940,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6927,
											"end": 6940,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6969,
											"end": 6978,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6969,
											"end": 6978,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6965,
											"end": 7000,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6965,
											"end": 7000,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6965,
											"end": 7000,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6953,
											"end": 7001,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 6953,
											"end": 7001,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7053,
											"end": 7055,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7045,
											"end": 7056,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7045,
											"end": 7056,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7045,
											"end": 7056,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7039,
											"end": 7057,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7035,
											"end": 7079,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7021,
											"end": 7033,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7021,
											"end": 7033,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 7021,
											"end": 7033,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7014,
											"end": 7080,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7135,
											"end": 7150,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7135,
											"end": 7150,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 7135,
											"end": 7150,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7135,
											"end": 7150,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7109,
											"end": 7111,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7100,
											"end": 7112,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7100,
											"end": 7112,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7100,
											"end": 7112,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7100,
											"end": 7112,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6997,
											"end": 6998,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 6883,
											"end": 6892,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6854,
											"end": 7160,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "428"
										},
										{
											"begin": 6854,
											"end": 7160,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7191,
											"end": 7318,
											"name": "tag",
											"source": 5,
											"value": "368"
										},
										{
											"begin": 7191,
											"end": 7318,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7252,
											"end": 7262,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B71"
										},
										{
											"begin": 7247,
											"end": 7250,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 7243,
											"end": 7263,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 7240,
											"end": 7241,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7233,
											"end": 7264,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7283,
											"end": 7287,
											"name": "PUSH",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 7280,
											"end": 7281,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 7273,
											"end": 7288,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7307,
											"end": 7311,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 7304,
											"end": 7305,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7297,
											"end": 7312,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 7323,
											"end": 7458,
											"name": "tag",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 7323,
											"end": 7458,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7362,
											"end": 7365,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7383,
											"end": 7400,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 7383,
											"end": 7400,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7383,
											"end": 7400,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7380,
											"end": 7423,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "434"
										},
										{
											"begin": 7380,
											"end": 7423,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7403,
											"end": 7421,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "434"
										},
										{
											"begin": 7403,
											"end": 7421,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "368"
										},
										{
											"begin": 7403,
											"end": 7421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7403,
											"end": 7421,
											"name": "tag",
											"source": 5,
											"value": "434"
										},
										{
											"begin": 7403,
											"end": 7421,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7450,
											"end": 7451,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 7439,
											"end": 7452,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7439,
											"end": 7452,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7323,
											"end": 7458,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8155,
											"end": 8282,
											"name": "tag",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 8155,
											"end": 8282,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8216,
											"end": 8226,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B71"
										},
										{
											"begin": 8211,
											"end": 8214,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 8207,
											"end": 8227,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 8204,
											"end": 8205,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8197,
											"end": 8228,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8247,
											"end": 8251,
											"name": "PUSH",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 8244,
											"end": 8245,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 8237,
											"end": 8252,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8271,
											"end": 8275,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 8268,
											"end": 8269,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8261,
											"end": 8276,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 8287,
											"end": 8414,
											"name": "tag",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 8287,
											"end": 8414,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8348,
											"end": 8358,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B71"
										},
										{
											"begin": 8343,
											"end": 8346,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 8339,
											"end": 8359,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 8336,
											"end": 8337,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8329,
											"end": 8360,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8379,
											"end": 8383,
											"name": "PUSH",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 8376,
											"end": 8377,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 8369,
											"end": 8384,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8403,
											"end": 8407,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 8400,
											"end": 8401,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8393,
											"end": 8408,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 10355,
											"end": 10968,
											"name": "tag",
											"source": 5,
											"value": "215"
										},
										{
											"begin": 10355,
											"end": 10968,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10660,
											"end": 10692,
											"name": "SWAP7",
											"source": 5
										},
										{
											"begin": 10660,
											"end": 10692,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 10660,
											"end": 10692,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10642,
											"end": 10693,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10642,
											"end": 10693,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10729,
											"end": 10761,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 10729,
											"end": 10761,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 10729,
											"end": 10761,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10724,
											"end": 10726,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10709,
											"end": 10727,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 10709,
											"end": 10727,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10702,
											"end": 10762,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10798,
											"end": 10830,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 10798,
											"end": 10830,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10798,
											"end": 10830,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 10798,
											"end": 10830,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10793,
											"end": 10795,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 10778,
											"end": 10796,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 10778,
											"end": 10796,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10771,
											"end": 10831,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10862,
											"end": 10864,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 10847,
											"end": 10865,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10847,
											"end": 10865,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10840,
											"end": 10874,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10905,
											"end": 10908,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 10890,
											"end": 10909,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10890,
											"end": 10909,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10883,
											"end": 10918,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 10883,
											"end": 10918,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10883,
											"end": 10918,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 10883,
											"end": 10918,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10680,
											"end": 10683,
											"name": "PUSH",
											"source": 5,
											"value": "A0"
										},
										{
											"begin": 10934,
											"end": 10953,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10934,
											"end": 10953,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10927,
											"end": 10962,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10927,
											"end": 10962,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10927,
											"end": 10962,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10927,
											"end": 10962,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10629,
											"end": 10632,
											"name": "PUSH",
											"source": 5,
											"value": "C0"
										},
										{
											"begin": 10614,
											"end": 10633,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10614,
											"end": 10633,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10355,
											"end": 10968,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11278,
											"end": 11406,
											"name": "tag",
											"source": 5,
											"value": "350"
										},
										{
											"begin": 11278,
											"end": 11406,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11345,
											"end": 11354,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11345,
											"end": 11354,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11345,
											"end": 11354,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 11366,
											"end": 11377,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11366,
											"end": 11377,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11366,
											"end": 11377,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 11363,
											"end": 11400,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 11363,
											"end": 11400,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 11363,
											"end": 11400,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 11380,
											"end": 11398,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 11380,
											"end": 11398,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "368"
										},
										{
											"begin": 11380,
											"end": 11398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11411,
											"end": 11538,
											"name": "tag",
											"source": 5,
											"value": "361"
										},
										{
											"begin": 11411,
											"end": 11538,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11472,
											"end": 11482,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B71"
										},
										{
											"begin": 11467,
											"end": 11470,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 11463,
											"end": 11483,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 11460,
											"end": 11461,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11453,
											"end": 11484,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 11503,
											"end": 11507,
											"name": "PUSH",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 11500,
											"end": 11501,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 11493,
											"end": 11508,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 11527,
											"end": 11531,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 11524,
											"end": 11525,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11517,
											"end": 11532,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"Delegate(copy)(copy)//contracts/DelegationRegistry.sol",
								"Delegate(copy)(copy)//contracts/IDelegationRegistry.sol",
								"Delegate/@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"Delegate/@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"Delegate/@openzeppelin/contracts/utils/structs/EnumerableSet.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"checkDelegateForAll(address,address)": "9c395bc2",
							"checkDelegateForContract(address,address,address)": "90c9a2d0",
							"checkDelegateForToken(address,address,address,uint256)": "aba69cf8",
							"delegateForAll(address,bool)": "685ee3e8",
							"delegateForContract(address,address,bool)": "49c95d29",
							"delegateForToken(address,address,uint256,bool)": "537a5c3d",
							"getContractLevelDelegations(address)": "f956cf94",
							"getDelegatesForAll(address)": "1b61f675",
							"getDelegatesForContract(address,address)": "ed4b878e",
							"getDelegatesForToken(address,address,uint256)": "1221156b",
							"getDelegationsByDelegate(address)": "4fc69282",
							"getTokenLevelDelegations(address)": "6f007d87",
							"revokeAllDelegates()": "36137872",
							"revokeDelegate(address)": "fa352c00",
							"revokeSelf(address)": "219044b0",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"DelegateForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"contract_\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"DelegateForContract\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"contract_\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"DelegateForToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"}],\"name\":\"RevokeAllDelegates\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"}],\"name\":\"RevokeDelegate\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"}],\"name\":\"checkDelegateForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"contract_\",\"type\":\"address\"}],\"name\":\"checkDelegateForContract\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"contract_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"checkDelegateForToken\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"delegateForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"contract_\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"delegateForContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"contract_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"delegateForToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"}],\"name\":\"getContractLevelDelegations\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"contract_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"}],\"internalType\":\"struct IDelegationRegistry.ContractDelegation[]\",\"name\":\"contractDelegations\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"}],\"name\":\"getDelegatesForAll\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"delegates\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"contract_\",\"type\":\"address\"}],\"name\":\"getDelegatesForContract\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"delegates\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"contract_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getDelegatesForToken\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"delegates\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"}],\"name\":\"getDelegationsByDelegate\",\"outputs\":[{\"components\":[{\"internalType\":\"enum IDelegationRegistry.DelegationType\",\"name\":\"type_\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"contract_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"internalType\":\"struct IDelegationRegistry.DelegationInfo[]\",\"name\":\"info\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"}],\"name\":\"getTokenLevelDelegations\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"contract_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"}],\"internalType\":\"struct IDelegationRegistry.TokenDelegation[]\",\"name\":\"tokenDelegations\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"revokeAllDelegates\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"}],\"name\":\"revokeDelegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"}],\"name\":\"revokeSelf\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"custom:coauthor\":\"foobar (0xfoobar)wwchung (manifoldxyz)purplehat (artblocks)ryley-o (artblocks)andy8052 (tessera)punk6529 (open metaverse)loopify (loopiverse)emiliano (nftrentals)arran (proof)james (collabland)john (gnosis safe)0xrusowsky\",\"custom:version\":\"1.0\",\"details\":\"See EIP-5639, new project launches can read previous cold wallet -> hot wallet delegations from here and integrate those permissions into their flow.\",\"kind\":\"dev\",\"methods\":{\"checkDelegateForAll(address,address)\":{\"params\":{\"delegate\":\"The hotwallet to act on your behalf\",\"vault\":\"The cold wallet who issued the delegation\"}},\"checkDelegateForContract(address,address,address)\":{\"params\":{\"contract_\":\"The address for the contract you're delegating\",\"delegate\":\"The hotwallet to act on your behalf\",\"vault\":\"The cold wallet who issued the delegation\"}},\"checkDelegateForToken(address,address,address,uint256)\":{\"params\":{\"contract_\":\"The address for the contract you're delegating\",\"delegate\":\"The hotwallet to act on your behalf\",\"tokenId\":\"The token id for the token you're delegating\",\"vault\":\"The cold wallet who issued the delegation\"}},\"delegateForAll(address,bool)\":{\"params\":{\"delegate\":\"The hotwallet to act on your behalf\",\"value\":\"Whether to enable or disable delegation for this address, true for setting and false for revoking\"}},\"delegateForContract(address,address,bool)\":{\"params\":{\"contract_\":\"The address for the contract you're delegating\",\"delegate\":\"The hotwallet to act on your behalf\",\"value\":\"Whether to enable or disable delegation for this address, true for setting and false for revoking\"}},\"delegateForToken(address,address,uint256,bool)\":{\"params\":{\"contract_\":\"The address for the contract you're delegating\",\"delegate\":\"The hotwallet to act on your behalf\",\"tokenId\":\"The token id for the token you're delegating\",\"value\":\"Whether to enable or disable delegation for this address, true for setting and false for revoking\"}},\"getContractLevelDelegations(address)\":{\"params\":{\"vault\":\"The cold wallet who issued the delegations\"},\"returns\":{\"contractDelegations\":\"Array of ContractDelegation structs\"}},\"getDelegatesForAll(address)\":{\"params\":{\"vault\":\"The cold wallet who issued the delegation\"},\"returns\":{\"delegates\":\"addresses Array of wallet-level delegates for a given vault\"}},\"getDelegatesForContract(address,address)\":{\"params\":{\"contract_\":\"The address for the contract you're delegating\",\"vault\":\"The cold wallet who issued the delegation\"},\"returns\":{\"delegates\":\"addresses Array of contract-level delegates for a given vault and contract\"}},\"getDelegatesForToken(address,address,uint256)\":{\"params\":{\"contract_\":\"The address for the contract holding the token\",\"tokenId\":\"The token id for the token you're delegating\",\"vault\":\"The cold wallet who issued the delegation\"},\"returns\":{\"delegates\":\"addresses Array of contract-level delegates for a given vault's token\"}},\"getDelegationsByDelegate(address)\":{\"params\":{\"delegate\":\"The delegate that you would like to retrieve delegations for\"},\"returns\":{\"info\":\"Array of DelegationInfo structs\"}},\"getTokenLevelDelegations(address)\":{\"params\":{\"vault\":\"The cold wallet who issued the delegations\"},\"returns\":{\"tokenDelegations\":\"Array of TokenDelegation structs\"}},\"revokeDelegate(address)\":{\"params\":{\"delegate\":\"The hotwallet to revoke\"}},\"revokeSelf(address)\":{\"params\":{\"vault\":\"The vault which delegated to the msg.sender, and should be removed\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"stateVariables\":{\"delegationHashes\":{\"details\":\"delegate -> delegationHashes\"},\"delegationInfo\":{\"details\":\"delegationHash -> DelegateInfo\"},\"delegations\":{\"details\":\"vault -> vaultVersion -> delegationHash\"}},\"title\":\"DelegationRegistry\",\"version\":1},\"userdoc\":{\"events\":{\"DelegateForAll(address,address,bool)\":{\"notice\":\"Emitted when a user delegates their entire wallet\"},\"DelegateForContract(address,address,address,bool)\":{\"notice\":\"Emitted when a user delegates a specific contract\"},\"DelegateForToken(address,address,address,uint256,bool)\":{\"notice\":\"Emitted when a user delegates a specific token\"},\"RevokeAllDelegates(address)\":{\"notice\":\"Emitted when a user revokes all delegations\"},\"RevokeDelegate(address,address)\":{\"notice\":\"Emitted when a user revoes all delegations for a given delegate\"}},\"kind\":\"user\",\"methods\":{\"checkDelegateForAll(address,address)\":{\"notice\":\"Returns true if the address is delegated to act on the entire vault\"},\"checkDelegateForContract(address,address,address)\":{\"notice\":\"Returns true if the address is delegated to act on your behalf for a token contract or an entire vault\"},\"checkDelegateForToken(address,address,address,uint256)\":{\"notice\":\"Returns true if the address is delegated to act on your behalf for a specific token, the token's contract or an entire vault\"},\"delegateForAll(address,bool)\":{\"notice\":\"Allow the delegate to act on your behalf for all contracts\"},\"delegateForContract(address,address,bool)\":{\"notice\":\"Allow the delegate to act on your behalf for a specific contract\"},\"delegateForToken(address,address,uint256,bool)\":{\"notice\":\"Allow the delegate to act on your behalf for a specific token\"},\"getContractLevelDelegations(address)\":{\"notice\":\"Returns all contract-level delegations for a given vault\"},\"getDelegatesForAll(address)\":{\"notice\":\"Returns an array of wallet-level delegates for a given vault\"},\"getDelegatesForContract(address,address)\":{\"notice\":\"Returns an array of contract-level delegates for a given vault and contract\"},\"getDelegatesForToken(address,address,uint256)\":{\"notice\":\"Returns an array of contract-level delegates for a given vault's token\"},\"getDelegationsByDelegate(address)\":{\"notice\":\"Returns all active delegations a given delegate is able to claim on behalf of\"},\"getTokenLevelDelegations(address)\":{\"notice\":\"Returns all token-level delegations for a given vault\"},\"revokeAllDelegates()\":{\"notice\":\"Revoke all delegates\"},\"revokeDelegate(address)\":{\"notice\":\"Revoke a specific delegate for all their permissions\"},\"revokeSelf(address)\":{\"notice\":\"Remove yourself as a delegate for a specific vault\"}},\"notice\":\"An immutable registry contract to be deployed as a standalone primitive.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":\"DelegationRegistry\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Delegate(copy)(copy)//contracts/DelegationRegistry.sol\":{\"keccak256\":\"0x497097084f56f0c6acf83e755860b8d7bb57317096978455475faba7514a3b07\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://66250c50eae0141a4254976b586f02f5f1deb0c2c5e863cb39c2988cab033506\",\"dweb:/ipfs/QmNtDhaBe5PXXPrbbegGkqERDCgupDWhydFYztschhmVsK\"]},\"Delegate(copy)(copy)//contracts/IDelegationRegistry.sol\":{\"keccak256\":\"0xfb5c60688b90c03d7a7a72d7422f8626a6f49d71493a155c9b9b4b4607b2f1ad\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://f698892d67217cd33efdd1b3a48e41675a21b46295320282f78552eb4a03a4b1\",\"dweb:/ipfs/QmSnpuYkYPiP7342CFDCgBQfsj24sXVuPF34NBMrCo9yVM\"]},\"Delegate/@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x13cb414da464ec9fef446e5ab43a40a4253de0586889490cef166d7981b50af3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eb443e4c23e8ecb1762e416ea7a9c7abfcd68a291b91c4be05e0e6bb99c788ff\",\"dweb:/ipfs/QmNjhe9r3QHGromsdd6Xoi4qJKZTXYeKT6ohBymD3fEQt5\"]},\"Delegate/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x459081472fd7f61ca152e5b8a368fab5ad48c834526cc421a7bc0d352486c680\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://83c1adbaa928d46ec81cb335ba50de64497de2b07699c59fa8cfd54b8ba0a1fb\",\"dweb:/ipfs/QmYw13ErJq29DZB8NRq9RUY7DufMJxaA2cCmuVcVyRvyhy\"]},\"Delegate/@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x7ee0dc5c24647a0e9f0dd2e5a601846a250e6994d489bc65206087245225b955\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c4edd9305df0d9a2d05a6af893a45e89e443014093f899d4e724738562deb0ea\",\"dweb:/ipfs/QmVYydCtB5RUpzhoFDAyALh5626LVQeWWabhLF9Vpt27YR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 28,
								"contract": "Delegate(copy)(copy)//contracts/DelegationRegistry.sol:DelegationRegistry",
								"label": "delegations",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Bytes32Set)1716_storage))"
							},
							{
								"astId": 33,
								"contract": "Delegate(copy)(copy)//contracts/DelegationRegistry.sol:DelegationRegistry",
								"label": "vaultVersion",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 40,
								"contract": "Delegate(copy)(copy)//contracts/DelegationRegistry.sol:DelegationRegistry",
								"label": "delegateVersion",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 46,
								"contract": "Delegate(copy)(copy)//contracts/DelegationRegistry.sol:DelegationRegistry",
								"label": "delegationHashes",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_struct(Bytes32Set)1716_storage)"
							},
							{
								"astId": 52,
								"contract": "Delegate(copy)(copy)//contracts/DelegationRegistry.sol:DelegationRegistry",
								"label": "delegationInfo",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_bytes32,t_struct(DelegationInfo)1270_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_bytes32)dyn_storage": {
								"base": "t_bytes32",
								"encoding": "dynamic_array",
								"label": "bytes32[]",
								"numberOfBytes": "32"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_enum(DelegationType)1257": {
								"encoding": "inplace",
								"label": "enum IDelegationRegistry.DelegationType",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_mapping(t_uint256,t_struct(Bytes32Set)1716_storage))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(uint256 => struct EnumerableSet.Bytes32Set))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_uint256,t_struct(Bytes32Set)1716_storage)"
							},
							"t_mapping(t_address,t_struct(Bytes32Set)1716_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct EnumerableSet.Bytes32Set)",
								"numberOfBytes": "32",
								"value": "t_struct(Bytes32Set)1716_storage"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_bytes32,t_struct(DelegationInfo)1270_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct IDelegationRegistry.DelegationInfo)",
								"numberOfBytes": "32",
								"value": "t_struct(DelegationInfo)1270_storage"
							},
							"t_mapping(t_bytes32,t_uint256)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_struct(Bytes32Set)1716_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct EnumerableSet.Bytes32Set)",
								"numberOfBytes": "32",
								"value": "t_struct(Bytes32Set)1716_storage"
							},
							"t_struct(Bytes32Set)1716_storage": {
								"encoding": "inplace",
								"label": "struct EnumerableSet.Bytes32Set",
								"members": [
									{
										"astId": 1715,
										"contract": "Delegate(copy)(copy)//contracts/DelegationRegistry.sol:DelegationRegistry",
										"label": "_inner",
										"offset": 0,
										"slot": "0",
										"type": "t_struct(Set)1522_storage"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(DelegationInfo)1270_storage": {
								"encoding": "inplace",
								"label": "struct IDelegationRegistry.DelegationInfo",
								"members": [
									{
										"astId": 1261,
										"contract": "Delegate(copy)(copy)//contracts/DelegationRegistry.sol:DelegationRegistry",
										"label": "type_",
										"offset": 0,
										"slot": "0",
										"type": "t_enum(DelegationType)1257"
									},
									{
										"astId": 1263,
										"contract": "Delegate(copy)(copy)//contracts/DelegationRegistry.sol:DelegationRegistry",
										"label": "vault",
										"offset": 1,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 1265,
										"contract": "Delegate(copy)(copy)//contracts/DelegationRegistry.sol:DelegationRegistry",
										"label": "delegate",
										"offset": 0,
										"slot": "1",
										"type": "t_address"
									},
									{
										"astId": 1267,
										"contract": "Delegate(copy)(copy)//contracts/DelegationRegistry.sol:DelegationRegistry",
										"label": "contract_",
										"offset": 0,
										"slot": "2",
										"type": "t_address"
									},
									{
										"astId": 1269,
										"contract": "Delegate(copy)(copy)//contracts/DelegationRegistry.sol:DelegationRegistry",
										"label": "tokenId",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "128"
							},
							"t_struct(Set)1522_storage": {
								"encoding": "inplace",
								"label": "struct EnumerableSet.Set",
								"members": [
									{
										"astId": 1517,
										"contract": "Delegate(copy)(copy)//contracts/DelegationRegistry.sol:DelegationRegistry",
										"label": "_values",
										"offset": 0,
										"slot": "0",
										"type": "t_array(t_bytes32)dyn_storage"
									},
									{
										"astId": 1521,
										"contract": "Delegate(copy)(copy)//contracts/DelegationRegistry.sol:DelegationRegistry",
										"label": "_indexes",
										"offset": 0,
										"slot": "1",
										"type": "t_mapping(t_bytes32,t_uint256)"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"events": {
							"DelegateForAll(address,address,bool)": {
								"notice": "Emitted when a user delegates their entire wallet"
							},
							"DelegateForContract(address,address,address,bool)": {
								"notice": "Emitted when a user delegates a specific contract"
							},
							"DelegateForToken(address,address,address,uint256,bool)": {
								"notice": "Emitted when a user delegates a specific token"
							},
							"RevokeAllDelegates(address)": {
								"notice": "Emitted when a user revokes all delegations"
							},
							"RevokeDelegate(address,address)": {
								"notice": "Emitted when a user revoes all delegations for a given delegate"
							}
						},
						"kind": "user",
						"methods": {
							"checkDelegateForAll(address,address)": {
								"notice": "Returns true if the address is delegated to act on the entire vault"
							},
							"checkDelegateForContract(address,address,address)": {
								"notice": "Returns true if the address is delegated to act on your behalf for a token contract or an entire vault"
							},
							"checkDelegateForToken(address,address,address,uint256)": {
								"notice": "Returns true if the address is delegated to act on your behalf for a specific token, the token's contract or an entire vault"
							},
							"delegateForAll(address,bool)": {
								"notice": "Allow the delegate to act on your behalf for all contracts"
							},
							"delegateForContract(address,address,bool)": {
								"notice": "Allow the delegate to act on your behalf for a specific contract"
							},
							"delegateForToken(address,address,uint256,bool)": {
								"notice": "Allow the delegate to act on your behalf for a specific token"
							},
							"getContractLevelDelegations(address)": {
								"notice": "Returns all contract-level delegations for a given vault"
							},
							"getDelegatesForAll(address)": {
								"notice": "Returns an array of wallet-level delegates for a given vault"
							},
							"getDelegatesForContract(address,address)": {
								"notice": "Returns an array of contract-level delegates for a given vault and contract"
							},
							"getDelegatesForToken(address,address,uint256)": {
								"notice": "Returns an array of contract-level delegates for a given vault's token"
							},
							"getDelegationsByDelegate(address)": {
								"notice": "Returns all active delegations a given delegate is able to claim on behalf of"
							},
							"getTokenLevelDelegations(address)": {
								"notice": "Returns all token-level delegations for a given vault"
							},
							"revokeAllDelegates()": {
								"notice": "Revoke all delegates"
							},
							"revokeDelegate(address)": {
								"notice": "Revoke a specific delegate for all their permissions"
							},
							"revokeSelf(address)": {
								"notice": "Remove yourself as a delegate for a specific vault"
							}
						},
						"notice": "An immutable registry contract to be deployed as a standalone primitive.",
						"version": 1
					}
				}
			},
			"Delegate(copy)(copy)//contracts/IDelegationRegistry.sol": {
				"IDelegationRegistry": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "vault",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "delegate",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "value",
									"type": "bool"
								}
							],
							"name": "DelegateForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "vault",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "delegate",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "contract_",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "value",
									"type": "bool"
								}
							],
							"name": "DelegateForContract",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "vault",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "delegate",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "contract_",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "value",
									"type": "bool"
								}
							],
							"name": "DelegateForToken",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "vault",
									"type": "address"
								}
							],
							"name": "RevokeAllDelegates",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "vault",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "delegate",
									"type": "address"
								}
							],
							"name": "RevokeDelegate",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "delegate",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "vault",
									"type": "address"
								}
							],
							"name": "checkDelegateForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "delegate",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "vault",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "contract_",
									"type": "address"
								}
							],
							"name": "checkDelegateForContract",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "delegate",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "vault",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "contract_",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "checkDelegateForToken",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "delegate",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "value",
									"type": "bool"
								}
							],
							"name": "delegateForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "delegate",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "contract_",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "value",
									"type": "bool"
								}
							],
							"name": "delegateForContract",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "delegate",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "contract_",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "value",
									"type": "bool"
								}
							],
							"name": "delegateForToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "vault",
									"type": "address"
								}
							],
							"name": "getContractLevelDelegations",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "contract_",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "delegate",
											"type": "address"
										}
									],
									"internalType": "struct IDelegationRegistry.ContractDelegation[]",
									"name": "delegations",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "vault",
									"type": "address"
								}
							],
							"name": "getDelegatesForAll",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "vault",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "contract_",
									"type": "address"
								}
							],
							"name": "getDelegatesForContract",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "vault",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "contract_",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getDelegatesForToken",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "delegate",
									"type": "address"
								}
							],
							"name": "getDelegationsByDelegate",
							"outputs": [
								{
									"components": [
										{
											"internalType": "enum IDelegationRegistry.DelegationType",
											"name": "type_",
											"type": "uint8"
										},
										{
											"internalType": "address",
											"name": "vault",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "delegate",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "contract_",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										}
									],
									"internalType": "struct IDelegationRegistry.DelegationInfo[]",
									"name": "",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "vault",
									"type": "address"
								}
							],
							"name": "getTokenLevelDelegations",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "contract_",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "delegate",
											"type": "address"
										}
									],
									"internalType": "struct IDelegationRegistry.TokenDelegation[]",
									"name": "delegations",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "revokeAllDelegates",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "delegate",
									"type": "address"
								}
							],
							"name": "revokeDelegate",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "vault",
									"type": "address"
								}
							],
							"name": "revokeSelf",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "See EIP-5639, new project launches can read previous cold wallet -> hot wallet delegations from here and integrate those permissions into their flow",
						"kind": "dev",
						"methods": {
							"checkDelegateForAll(address,address)": {
								"params": {
									"delegate": "The hotwallet to act on your behalf",
									"vault": "The cold wallet who issued the delegation"
								}
							},
							"checkDelegateForContract(address,address,address)": {
								"params": {
									"contract_": "The address for the contract you're delegating",
									"delegate": "The hotwallet to act on your behalf",
									"vault": "The cold wallet who issued the delegation"
								}
							},
							"checkDelegateForToken(address,address,address,uint256)": {
								"params": {
									"contract_": "The address for the contract you're delegating",
									"delegate": "The hotwallet to act on your behalf",
									"tokenId": "The token id for the token you're delegating",
									"vault": "The cold wallet who issued the delegation"
								}
							},
							"delegateForAll(address,bool)": {
								"params": {
									"delegate": "The hotwallet to act on your behalf",
									"value": "Whether to enable or disable delegation for this address, true for setting and false for revoking"
								}
							},
							"delegateForContract(address,address,bool)": {
								"params": {
									"contract_": "The address for the contract you're delegating",
									"delegate": "The hotwallet to act on your behalf",
									"value": "Whether to enable or disable delegation for this address, true for setting and false for revoking"
								}
							},
							"delegateForToken(address,address,uint256,bool)": {
								"params": {
									"contract_": "The address for the contract you're delegating",
									"delegate": "The hotwallet to act on your behalf",
									"tokenId": "The token id for the token you're delegating",
									"value": "Whether to enable or disable delegation for this address, true for setting and false for revoking"
								}
							},
							"getContractLevelDelegations(address)": {
								"params": {
									"vault": "The cold wallet who issued the delegations"
								},
								"returns": {
									"delegations": "Array of ContractDelegation structs"
								}
							},
							"getDelegatesForAll(address)": {
								"params": {
									"vault": "The cold wallet who issued the delegation"
								},
								"returns": {
									"_0": "addresses Array of wallet-level delegates for a given vault"
								}
							},
							"getDelegatesForContract(address,address)": {
								"params": {
									"contract_": "The address for the contract you're delegating",
									"vault": "The cold wallet who issued the delegation"
								},
								"returns": {
									"_0": "addresses Array of contract-level delegates for a given vault and contract"
								}
							},
							"getDelegatesForToken(address,address,uint256)": {
								"params": {
									"contract_": "The address for the contract holding the token",
									"tokenId": "The token id for the token you're delegating",
									"vault": "The cold wallet who issued the delegation"
								},
								"returns": {
									"_0": "addresses Array of contract-level delegates for a given vault's token"
								}
							},
							"getDelegationsByDelegate(address)": {
								"params": {
									"delegate": "The delegate that you would like to retrieve delegations for"
								},
								"returns": {
									"_0": "info Array of DelegationInfo structs"
								}
							},
							"getTokenLevelDelegations(address)": {
								"params": {
									"vault": "The cold wallet who issued the delegations"
								},
								"returns": {
									"delegations": "Array of TokenDelegation structs"
								}
							},
							"revokeDelegate(address)": {
								"params": {
									"delegate": "The hotwallet to revoke"
								}
							},
							"revokeSelf(address)": {
								"params": {
									"vault": "The vault which delegated to the msg.sender, and should be removed"
								}
							}
						},
						"title": "An immutable registry contract to be deployed as a standalone primitive",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"checkDelegateForAll(address,address)": "9c395bc2",
							"checkDelegateForContract(address,address,address)": "90c9a2d0",
							"checkDelegateForToken(address,address,address,uint256)": "aba69cf8",
							"delegateForAll(address,bool)": "685ee3e8",
							"delegateForContract(address,address,bool)": "49c95d29",
							"delegateForToken(address,address,uint256,bool)": "537a5c3d",
							"getContractLevelDelegations(address)": "f956cf94",
							"getDelegatesForAll(address)": "1b61f675",
							"getDelegatesForContract(address,address)": "ed4b878e",
							"getDelegatesForToken(address,address,uint256)": "1221156b",
							"getDelegationsByDelegate(address)": "4fc69282",
							"getTokenLevelDelegations(address)": "6f007d87",
							"revokeAllDelegates()": "36137872",
							"revokeDelegate(address)": "fa352c00",
							"revokeSelf(address)": "219044b0"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"DelegateForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"contract_\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"DelegateForContract\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"contract_\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"DelegateForToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"}],\"name\":\"RevokeAllDelegates\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"}],\"name\":\"RevokeDelegate\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"}],\"name\":\"checkDelegateForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"contract_\",\"type\":\"address\"}],\"name\":\"checkDelegateForContract\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"contract_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"checkDelegateForToken\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"delegateForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"contract_\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"delegateForContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"contract_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"delegateForToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"}],\"name\":\"getContractLevelDelegations\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"contract_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"}],\"internalType\":\"struct IDelegationRegistry.ContractDelegation[]\",\"name\":\"delegations\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"}],\"name\":\"getDelegatesForAll\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"contract_\",\"type\":\"address\"}],\"name\":\"getDelegatesForContract\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"contract_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getDelegatesForToken\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"}],\"name\":\"getDelegationsByDelegate\",\"outputs\":[{\"components\":[{\"internalType\":\"enum IDelegationRegistry.DelegationType\",\"name\":\"type_\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"contract_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"internalType\":\"struct IDelegationRegistry.DelegationInfo[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"}],\"name\":\"getTokenLevelDelegations\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"contract_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"}],\"internalType\":\"struct IDelegationRegistry.TokenDelegation[]\",\"name\":\"delegations\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"revokeAllDelegates\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"}],\"name\":\"revokeDelegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"}],\"name\":\"revokeSelf\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See EIP-5639, new project launches can read previous cold wallet -> hot wallet delegations from here and integrate those permissions into their flow\",\"kind\":\"dev\",\"methods\":{\"checkDelegateForAll(address,address)\":{\"params\":{\"delegate\":\"The hotwallet to act on your behalf\",\"vault\":\"The cold wallet who issued the delegation\"}},\"checkDelegateForContract(address,address,address)\":{\"params\":{\"contract_\":\"The address for the contract you're delegating\",\"delegate\":\"The hotwallet to act on your behalf\",\"vault\":\"The cold wallet who issued the delegation\"}},\"checkDelegateForToken(address,address,address,uint256)\":{\"params\":{\"contract_\":\"The address for the contract you're delegating\",\"delegate\":\"The hotwallet to act on your behalf\",\"tokenId\":\"The token id for the token you're delegating\",\"vault\":\"The cold wallet who issued the delegation\"}},\"delegateForAll(address,bool)\":{\"params\":{\"delegate\":\"The hotwallet to act on your behalf\",\"value\":\"Whether to enable or disable delegation for this address, true for setting and false for revoking\"}},\"delegateForContract(address,address,bool)\":{\"params\":{\"contract_\":\"The address for the contract you're delegating\",\"delegate\":\"The hotwallet to act on your behalf\",\"value\":\"Whether to enable or disable delegation for this address, true for setting and false for revoking\"}},\"delegateForToken(address,address,uint256,bool)\":{\"params\":{\"contract_\":\"The address for the contract you're delegating\",\"delegate\":\"The hotwallet to act on your behalf\",\"tokenId\":\"The token id for the token you're delegating\",\"value\":\"Whether to enable or disable delegation for this address, true for setting and false for revoking\"}},\"getContractLevelDelegations(address)\":{\"params\":{\"vault\":\"The cold wallet who issued the delegations\"},\"returns\":{\"delegations\":\"Array of ContractDelegation structs\"}},\"getDelegatesForAll(address)\":{\"params\":{\"vault\":\"The cold wallet who issued the delegation\"},\"returns\":{\"_0\":\"addresses Array of wallet-level delegates for a given vault\"}},\"getDelegatesForContract(address,address)\":{\"params\":{\"contract_\":\"The address for the contract you're delegating\",\"vault\":\"The cold wallet who issued the delegation\"},\"returns\":{\"_0\":\"addresses Array of contract-level delegates for a given vault and contract\"}},\"getDelegatesForToken(address,address,uint256)\":{\"params\":{\"contract_\":\"The address for the contract holding the token\",\"tokenId\":\"The token id for the token you're delegating\",\"vault\":\"The cold wallet who issued the delegation\"},\"returns\":{\"_0\":\"addresses Array of contract-level delegates for a given vault's token\"}},\"getDelegationsByDelegate(address)\":{\"params\":{\"delegate\":\"The delegate that you would like to retrieve delegations for\"},\"returns\":{\"_0\":\"info Array of DelegationInfo structs\"}},\"getTokenLevelDelegations(address)\":{\"params\":{\"vault\":\"The cold wallet who issued the delegations\"},\"returns\":{\"delegations\":\"Array of TokenDelegation structs\"}},\"revokeDelegate(address)\":{\"params\":{\"delegate\":\"The hotwallet to revoke\"}},\"revokeSelf(address)\":{\"params\":{\"vault\":\"The vault which delegated to the msg.sender, and should be removed\"}}},\"title\":\"An immutable registry contract to be deployed as a standalone primitive\",\"version\":1},\"userdoc\":{\"events\":{\"DelegateForAll(address,address,bool)\":{\"notice\":\"Emitted when a user delegates their entire wallet\"},\"DelegateForContract(address,address,address,bool)\":{\"notice\":\"Emitted when a user delegates a specific contract\"},\"DelegateForToken(address,address,address,uint256,bool)\":{\"notice\":\"Emitted when a user delegates a specific token\"},\"RevokeAllDelegates(address)\":{\"notice\":\"Emitted when a user revokes all delegations\"},\"RevokeDelegate(address,address)\":{\"notice\":\"Emitted when a user revoes all delegations for a given delegate\"}},\"kind\":\"user\",\"methods\":{\"checkDelegateForAll(address,address)\":{\"notice\":\"Returns true if the address is delegated to act on the entire vault\"},\"checkDelegateForContract(address,address,address)\":{\"notice\":\"Returns true if the address is delegated to act on your behalf for a token contract or an entire vault\"},\"checkDelegateForToken(address,address,address,uint256)\":{\"notice\":\"Returns true if the address is delegated to act on your behalf for a specific token, the token's contract or an entire vault\"},\"delegateForAll(address,bool)\":{\"notice\":\"Allow the delegate to act on your behalf for all contracts\"},\"delegateForContract(address,address,bool)\":{\"notice\":\"Allow the delegate to act on your behalf for a specific contract\"},\"delegateForToken(address,address,uint256,bool)\":{\"notice\":\"Allow the delegate to act on your behalf for a specific token\"},\"getContractLevelDelegations(address)\":{\"notice\":\"Returns all contract-level delegations for a given vault\"},\"getDelegatesForAll(address)\":{\"notice\":\"Returns an array of wallet-level delegates for a given vault\"},\"getDelegatesForContract(address,address)\":{\"notice\":\"Returns an array of contract-level delegates for a given vault and contract\"},\"getDelegatesForToken(address,address,uint256)\":{\"notice\":\"Returns an array of contract-level delegates for a given vault's token\"},\"getDelegationsByDelegate(address)\":{\"notice\":\"Returns all active delegations a given delegate is able to claim on behalf of\"},\"getTokenLevelDelegations(address)\":{\"notice\":\"Returns all token-level delegations for a given vault\"},\"revokeAllDelegates()\":{\"notice\":\"Revoke all delegates\"},\"revokeDelegate(address)\":{\"notice\":\"Revoke a specific delegate for all their permissions\"},\"revokeSelf(address)\":{\"notice\":\"Remove yourself as a delegate for a specific vault\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Delegate(copy)(copy)//contracts/IDelegationRegistry.sol\":\"IDelegationRegistry\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Delegate(copy)(copy)//contracts/IDelegationRegistry.sol\":{\"keccak256\":\"0xfb5c60688b90c03d7a7a72d7422f8626a6f49d71493a155c9b9b4b4607b2f1ad\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://f698892d67217cd33efdd1b3a48e41675a21b46295320282f78552eb4a03a4b1\",\"dweb:/ipfs/QmSnpuYkYPiP7342CFDCgBQfsj24sXVuPF34NBMrCo9yVM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"events": {
							"DelegateForAll(address,address,bool)": {
								"notice": "Emitted when a user delegates their entire wallet"
							},
							"DelegateForContract(address,address,address,bool)": {
								"notice": "Emitted when a user delegates a specific contract"
							},
							"DelegateForToken(address,address,address,uint256,bool)": {
								"notice": "Emitted when a user delegates a specific token"
							},
							"RevokeAllDelegates(address)": {
								"notice": "Emitted when a user revokes all delegations"
							},
							"RevokeDelegate(address,address)": {
								"notice": "Emitted when a user revoes all delegations for a given delegate"
							}
						},
						"kind": "user",
						"methods": {
							"checkDelegateForAll(address,address)": {
								"notice": "Returns true if the address is delegated to act on the entire vault"
							},
							"checkDelegateForContract(address,address,address)": {
								"notice": "Returns true if the address is delegated to act on your behalf for a token contract or an entire vault"
							},
							"checkDelegateForToken(address,address,address,uint256)": {
								"notice": "Returns true if the address is delegated to act on your behalf for a specific token, the token's contract or an entire vault"
							},
							"delegateForAll(address,bool)": {
								"notice": "Allow the delegate to act on your behalf for all contracts"
							},
							"delegateForContract(address,address,bool)": {
								"notice": "Allow the delegate to act on your behalf for a specific contract"
							},
							"delegateForToken(address,address,uint256,bool)": {
								"notice": "Allow the delegate to act on your behalf for a specific token"
							},
							"getContractLevelDelegations(address)": {
								"notice": "Returns all contract-level delegations for a given vault"
							},
							"getDelegatesForAll(address)": {
								"notice": "Returns an array of wallet-level delegates for a given vault"
							},
							"getDelegatesForContract(address,address)": {
								"notice": "Returns an array of contract-level delegates for a given vault and contract"
							},
							"getDelegatesForToken(address,address,uint256)": {
								"notice": "Returns an array of contract-level delegates for a given vault's token"
							},
							"getDelegationsByDelegate(address)": {
								"notice": "Returns all active delegations a given delegate is able to claim on behalf of"
							},
							"getTokenLevelDelegations(address)": {
								"notice": "Returns all token-level delegations for a given vault"
							},
							"revokeAllDelegates()": {
								"notice": "Revoke all delegates"
							},
							"revokeDelegate(address)": {
								"notice": "Revoke a specific delegate for all their permissions"
							},
							"revokeSelf(address)": {
								"notice": "Remove yourself as a delegate for a specific vault"
							}
						},
						"version": 1
					}
				}
			},
			"Delegate/@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Delegate/@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Delegate/@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x13cb414da464ec9fef446e5ab43a40a4253de0586889490cef166d7981b50af3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eb443e4c23e8ecb1762e416ea7a9c7abfcd68a291b91c4be05e0e6bb99c788ff\",\"dweb:/ipfs/QmNjhe9r3QHGromsdd6Xoi4qJKZTXYeKT6ohBymD3fEQt5\"]},\"Delegate/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x459081472fd7f61ca152e5b8a368fab5ad48c834526cc421a7bc0d352486c680\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://83c1adbaa928d46ec81cb335ba50de64497de2b07699c59fa8cfd54b8ba0a1fb\",\"dweb:/ipfs/QmYw13ErJq29DZB8NRq9RUY7DufMJxaA2cCmuVcVyRvyhy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Delegate/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Delegate/@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Delegate/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x459081472fd7f61ca152e5b8a368fab5ad48c834526cc421a7bc0d352486c680\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://83c1adbaa928d46ec81cb335ba50de64497de2b07699c59fa8cfd54b8ba0a1fb\",\"dweb:/ipfs/QmYw13ErJq29DZB8NRq9RUY7DufMJxaA2cCmuVcVyRvyhy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Delegate/@openzeppelin/contracts/utils/structs/EnumerableSet.sol": {
				"EnumerableSet": {
					"abi": [],
					"devdoc": {
						"details": "Library for managing https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive types. Sets have the following properties: - Elements are added, removed, and checked for existence in constant time (O(1)). - Elements are enumerated in O(n). No guarantees are made on the ordering. ```solidity contract Example {     // Add the library methods     using EnumerableSet for EnumerableSet.AddressSet;     // Declare a set state variable     EnumerableSet.AddressSet private mySet; } ``` As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`) and `uint256` (`UintSet`) are supported. [WARNING] ==== Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable. See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info. In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an array of EnumerableSet. ====",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Delegate/@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2598:14228  library EnumerableSet {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"Delegate/@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2598:14228  library EnumerableSet {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa2646970667358221220e214726a9edbd94d76f1be578007a11acc2a298372da83145884b845ddd88a1164736f6c634300081b0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220e214726a9edbd94d76f1be578007a11acc2a298372da83145884b845ddd88a1164736f6c634300081b0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE2 EQ PUSH19 0x6A9EDBD94D76F1BE578007A11ACC2A298372DA DUP4 EQ PC DUP5 0xB8 GASLIMIT 0xDD 0xD8 DUP11 GT PUSH5 0x736F6C6343 STOP ADDMOD SHL STOP CALLER ",
							"sourceMap": "2598:11630:4:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;2598:11630:4;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220e214726a9edbd94d76f1be578007a11acc2a298372da83145884b845ddd88a1164736f6c634300081b0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE2 EQ PUSH19 0x6A9EDBD94D76F1BE578007A11ACC2A298372DA DUP4 EQ PC DUP5 0xB8 GASLIMIT 0xDD 0xD8 DUP11 GT PUSH5 0x736F6C6343 STOP ADDMOD SHL STOP CALLER ",
							"sourceMap": "2598:11630:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"_add(struct EnumerableSet.Set storage pointer,bytes32)": "infinite",
								"_at(struct EnumerableSet.Set storage pointer,uint256)": "infinite",
								"_contains(struct EnumerableSet.Set storage pointer,bytes32)": "infinite",
								"_length(struct EnumerableSet.Set storage pointer)": "infinite",
								"_remove(struct EnumerableSet.Set storage pointer,bytes32)": "infinite",
								"_values(struct EnumerableSet.Set storage pointer)": "infinite",
								"add(struct EnumerableSet.AddressSet storage pointer,address)": "infinite",
								"add(struct EnumerableSet.Bytes32Set storage pointer,bytes32)": "infinite",
								"add(struct EnumerableSet.UintSet storage pointer,uint256)": "infinite",
								"at(struct EnumerableSet.AddressSet storage pointer,uint256)": "infinite",
								"at(struct EnumerableSet.Bytes32Set storage pointer,uint256)": "infinite",
								"at(struct EnumerableSet.UintSet storage pointer,uint256)": "infinite",
								"contains(struct EnumerableSet.AddressSet storage pointer,address)": "infinite",
								"contains(struct EnumerableSet.Bytes32Set storage pointer,bytes32)": "infinite",
								"contains(struct EnumerableSet.UintSet storage pointer,uint256)": "infinite",
								"length(struct EnumerableSet.AddressSet storage pointer)": "infinite",
								"length(struct EnumerableSet.Bytes32Set storage pointer)": "infinite",
								"length(struct EnumerableSet.UintSet storage pointer)": "infinite",
								"remove(struct EnumerableSet.AddressSet storage pointer,address)": "infinite",
								"remove(struct EnumerableSet.Bytes32Set storage pointer,bytes32)": "infinite",
								"remove(struct EnumerableSet.UintSet storage pointer,uint256)": "infinite",
								"values(struct EnumerableSet.AddressSet storage pointer)": "infinite",
								"values(struct EnumerableSet.Bytes32Set storage pointer)": "infinite",
								"values(struct EnumerableSet.UintSet storage pointer)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 2598,
									"end": 14228,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2598,
									"end": 14228,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2598,
									"end": 14228,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 2598,
									"end": 14228,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2598,
									"end": 14228,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2598,
									"end": 14228,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2598,
									"end": 14228,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 2598,
									"end": 14228,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 2598,
									"end": 14228,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 2598,
									"end": 14228,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2598,
									"end": 14228,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 2598,
									"end": 14228,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 2598,
									"end": 14228,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 2598,
									"end": 14228,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 2598,
									"end": 14228,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 2598,
									"end": 14228,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2598,
									"end": 14228,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 2598,
									"end": 14228,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2598,
									"end": 14228,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 2598,
									"end": 14228,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 2598,
									"end": 14228,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 2598,
									"end": 14228,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2598,
									"end": 14228,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 2598,
									"end": 14228,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 2598,
									"end": 14228,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2598,
									"end": 14228,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 2598,
									"end": 14228,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2598,
									"end": 14228,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 2598,
									"end": 14228,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 2598,
									"end": 14228,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2598,
									"end": 14228,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 2598,
									"end": 14228,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2598,
									"end": 14228,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2598,
									"end": 14228,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e214726a9edbd94d76f1be578007a11acc2a298372da83145884b845ddd88a1164736f6c634300081b0033",
									".code": [
										{
											"begin": 2598,
											"end": 14228,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 2598,
											"end": 14228,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 2598,
											"end": 14228,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 2598,
											"end": 14228,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 2598,
											"end": 14228,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2598,
											"end": 14228,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2598,
											"end": 14228,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2598,
											"end": 14228,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2598,
											"end": 14228,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"Delegate(copy)(copy)//contracts/DelegationRegistry.sol",
								"Delegate(copy)(copy)//contracts/IDelegationRegistry.sol",
								"Delegate/@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"Delegate/@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"Delegate/@openzeppelin/contracts/utils/structs/EnumerableSet.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for managing https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive types. Sets have the following properties: - Elements are added, removed, and checked for existence in constant time (O(1)). - Elements are enumerated in O(n). No guarantees are made on the ordering. ```solidity contract Example {     // Add the library methods     using EnumerableSet for EnumerableSet.AddressSet;     // Declare a set state variable     EnumerableSet.AddressSet private mySet; } ``` As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`) and `uint256` (`UintSet`) are supported. [WARNING] ==== Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable. See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info. In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an array of EnumerableSet. ====\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Delegate/@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":\"EnumerableSet\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Delegate/@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x7ee0dc5c24647a0e9f0dd2e5a601846a250e6994d489bc65206087245225b955\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c4edd9305df0d9a2d05a6af893a45e89e443014093f899d4e724738562deb0ea\",\"dweb:/ipfs/QmVYydCtB5RUpzhoFDAyALh5626LVQeWWabhLF9Vpt27YR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"Delegate(copy)(copy)//contracts/DelegationRegistry.sol": {
				"ast": {
					"absolutePath": "Delegate(copy)(copy)//contracts/DelegationRegistry.sol",
					"exportedSymbols": {
						"DelegationRegistry": [
							1248
						],
						"ERC165": [
							1499
						],
						"EnumerableSet": [
							2124
						],
						"IDelegationRegistry": [
							1475
						]
					},
					"id": 1249,
					"license": "CC0-1.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "1305:24:0"
						},
						{
							"absolutePath": "Delegate(copy)(copy)//contracts/IDelegationRegistry.sol",
							"file": "./IDelegationRegistry.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1249,
							"sourceUnit": 1476,
							"src": "1331:62:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "IDelegationRegistry",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1475,
										"src": "1339:19:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "Delegate/@openzeppelin/contracts/utils/structs/EnumerableSet.sol",
							"file": "Delegate/@openzeppelin/contracts/utils/structs/EnumerableSet.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1249,
							"sourceUnit": 2125,
							"src": "1394:95:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4,
										"name": "EnumerableSet",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2124,
										"src": "1402:13:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "Delegate/@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "Delegate/@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"id": 7,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1249,
							"sourceUnit": 1500,
							"src": "1490:87:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 6,
										"name": "ERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1499,
										"src": "1498:6:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 9,
										"name": "IDelegationRegistry",
										"nameLocations": [
											"2388:19:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1475,
										"src": "2388:19:0"
									},
									"id": 10,
									"nodeType": "InheritanceSpecifier",
									"src": "2388:19:0"
								},
								{
									"baseName": {
										"id": 11,
										"name": "ERC165",
										"nameLocations": [
											"2409:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1499,
										"src": "2409:6:0"
									},
									"id": 12,
									"nodeType": "InheritanceSpecifier",
									"src": "2409:6:0"
								}
							],
							"canonicalName": "DelegationRegistry",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 8,
								"nodeType": "StructuredDocumentation",
								"src": "1579:777:0",
								"text": " @title DelegationRegistry\n @custom:version 1.0\n @notice An immutable registry contract to be deployed as a standalone primitive.\n @dev See EIP-5639, new project launches can read previous cold wallet -> hot wallet delegations\n from here and integrate those permissions into their flow.\n @custom:coauthor foobar (0xfoobar)\n @custom:coauthor wwchung (manifoldxyz)\n @custom:coauthor purplehat (artblocks)\n @custom:coauthor ryley-o (artblocks)\n @custom:coauthor andy8052 (tessera)\n @custom:coauthor punk6529 (open metaverse)\n @custom:coauthor loopify (loopiverse)\n @custom:coauthor emiliano (nftrentals)\n @custom:coauthor arran (proof)\n @custom:coauthor james (collabland)\n @custom:coauthor john (gnosis safe)\n @custom:coauthor 0xrusowsky"
							},
							"fullyImplemented": true,
							"id": 1248,
							"linearizedBaseContracts": [
								1248,
								1499,
								1511,
								1475
							],
							"name": "DelegationRegistry",
							"nameLocation": "2366:18:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 16,
									"libraryName": {
										"id": 13,
										"name": "EnumerableSet",
										"nameLocations": [
											"2428:13:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2124,
										"src": "2428:13:0"
									},
									"nodeType": "UsingForDirective",
									"src": "2422:49:0",
									"typeName": {
										"id": 15,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 14,
											"name": "EnumerableSet.AddressSet",
											"nameLocations": [
												"2446:13:0",
												"2460:10:0"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1837,
											"src": "2446:24:0"
										},
										"referencedDeclaration": 1837,
										"src": "2446:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_AddressSet_$1837_storage_ptr",
											"typeString": "struct EnumerableSet.AddressSet"
										}
									}
								},
								{
									"global": false,
									"id": 20,
									"libraryName": {
										"id": 17,
										"name": "EnumerableSet",
										"nameLocations": [
											"2482:13:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2124,
										"src": "2482:13:0"
									},
									"nodeType": "UsingForDirective",
									"src": "2476:49:0",
									"typeName": {
										"id": 19,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 18,
											"name": "EnumerableSet.Bytes32Set",
											"nameLocations": [
												"2500:13:0",
												"2514:10:0"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1716,
											"src": "2500:24:0"
										},
										"referencedDeclaration": 1716,
										"src": "2500:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Bytes32Set_$1716_storage_ptr",
											"typeString": "struct EnumerableSet.Bytes32Set"
										}
									}
								},
								{
									"constant": false,
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "2531:126:0",
										"text": "@notice The global mapping and single source of truth for delegations\n @dev vault -> vaultVersion -> delegationHash"
									},
									"id": 28,
									"mutability": "mutable",
									"name": "delegations",
									"nameLocation": "2744:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 1248,
									"src": "2662:93:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Bytes32Set_$1716_storage_$_$",
										"typeString": "mapping(address => mapping(uint256 => struct EnumerableSet.Bytes32Set))"
									},
									"typeName": {
										"id": 27,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 22,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2670:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2662:64:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Bytes32Set_$1716_storage_$_$",
											"typeString": "mapping(address => mapping(uint256 => struct EnumerableSet.Bytes32Set))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 26,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 23,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2689:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "Mapping",
											"src": "2681:44:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Bytes32Set_$1716_storage_$",
												"typeString": "mapping(uint256 => struct EnumerableSet.Bytes32Set)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 25,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 24,
													"name": "EnumerableSet.Bytes32Set",
													"nameLocations": [
														"2700:13:0",
														"2714:10:0"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 1716,
													"src": "2700:24:0"
												},
												"referencedDeclaration": 1716,
												"src": "2700:24:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$1716_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												}
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 29,
										"nodeType": "StructuredDocumentation",
										"src": "2762:67:0",
										"text": "@notice A mapping of wallets to versions (for cheap revocation)"
									},
									"id": 33,
									"mutability": "mutable",
									"name": "vaultVersion",
									"nameLocation": "2871:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 1248,
									"src": "2834:49:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 32,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 30,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2842:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2834:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 31,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "2853:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 34,
										"nodeType": "StructuredDocumentation",
										"src": "2890:80:0",
										"text": "@notice A mapping of wallets to delegates to versions (for cheap revocation)"
									},
									"id": 40,
									"mutability": "mutable",
									"name": "delegateVersion",
									"nameLocation": "3032:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 1248,
									"src": "2975:72:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 39,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 35,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2983:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2975:47:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 38,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 36,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "3002:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "2994:27:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 37,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3013:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "3054:153:0",
										"text": "@notice A secondary mapping to return onchain enumerability of delegations that a given address can perform\n @dev delegate -> delegationHashes"
									},
									"id": 46,
									"mutability": "mutable",
									"name": "delegationHashes",
									"nameLocation": "3266:16:0",
									"nodeType": "VariableDeclaration",
									"scope": 1248,
									"src": "3212:70:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Bytes32Set_$1716_storage_$",
										"typeString": "mapping(address => struct EnumerableSet.Bytes32Set)"
									},
									"typeName": {
										"id": 45,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 42,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "3220:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "3212:44:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Bytes32Set_$1716_storage_$",
											"typeString": "mapping(address => struct EnumerableSet.Bytes32Set)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 44,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 43,
												"name": "EnumerableSet.Bytes32Set",
												"nameLocations": [
													"3231:13:0",
													"3245:10:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1716,
												"src": "3231:24:0"
											},
											"referencedDeclaration": 1716,
											"src": "3231:24:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Bytes32Set_$1716_storage_ptr",
												"typeString": "struct EnumerableSet.Bytes32Set"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 47,
										"nodeType": "StructuredDocumentation",
										"src": "3289:132:0",
										"text": "@notice A secondary mapping used to return delegation information about a delegation\n @dev delegationHash -> DelegateInfo"
									},
									"id": 52,
									"mutability": "mutable",
									"name": "delegationInfo",
									"nameLocation": "3498:14:0",
									"nodeType": "VariableDeclaration",
									"scope": 1248,
									"src": "3426:86:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_DelegationInfo_$1270_storage_$",
										"typeString": "mapping(bytes32 => struct IDelegationRegistry.DelegationInfo)"
									},
									"typeName": {
										"id": 51,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 48,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "3434:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "3426:54:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_DelegationInfo_$1270_storage_$",
											"typeString": "mapping(bytes32 => struct IDelegationRegistry.DelegationInfo)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 50,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 49,
												"name": "IDelegationRegistry.DelegationInfo",
												"nameLocations": [
													"3445:19:0",
													"3465:14:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1270,
												"src": "3445:34:0"
											},
											"referencedDeclaration": 1270,
											"src": "3445:34:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_DelegationInfo_$1270_storage_ptr",
												"typeString": "struct IDelegationRegistry.DelegationInfo"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1498
									],
									"body": {
										"id": 74,
										"nodeType": "Block",
										"src": "3674:140:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 72,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 67,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 62,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 55,
															"src": "3703:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 64,
																		"name": "IDelegationRegistry",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1475,
																		"src": "3723:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IDelegationRegistry_$1475_$",
																			"typeString": "type(contract IDelegationRegistry)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IDelegationRegistry_$1475_$",
																			"typeString": "type(contract IDelegationRegistry)"
																		}
																	],
																	"id": 63,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "3718:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 65,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3718:25:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IDelegationRegistry_$1475",
																	"typeString": "type(contract IDelegationRegistry)"
																}
															},
															"id": 66,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "3744:11:0",
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "3718:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "3703:52:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 70,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 55,
																"src": "3795:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 68,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "3771:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_DelegationRegistry_$1248_$",
																	"typeString": "type(contract super DelegationRegistry)"
																}
															},
															"id": 69,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3777:17:0",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1498,
															"src": "3771:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 71,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3771:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3703:104:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 61,
												"id": 73,
												"nodeType": "Return",
												"src": "3684:123:0"
											}
										]
									},
									"documentation": {
										"id": 53,
										"nodeType": "StructuredDocumentation",
										"src": "3519:37:0",
										"text": " @inheritdoc ERC165"
									},
									"functionSelector": "01ffc9a7",
									"id": 75,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "3570:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 58,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 57,
												"name": "ERC165",
												"nameLocations": [
													"3651:6:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1499,
												"src": "3651:6:0"
											}
										],
										"src": "3642:16:0"
									},
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "3604:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 75,
												"src": "3597:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 54,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "3597:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3587:34:0"
									},
									"returnParameters": {
										"id": 61,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 60,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 75,
												"src": "3668:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 59,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3668:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3667:6:0"
									},
									"scope": 1248,
									"src": "3561:253:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1337
									],
									"body": {
										"id": 117,
										"nodeType": "Block",
										"src": "4002:425:0",
										"statements": [
											{
												"assignments": [
													85
												],
												"declarations": [
													{
														"constant": false,
														"id": 85,
														"mutability": "mutable",
														"name": "delegationHash",
														"nameLocation": "4020:14:0",
														"nodeType": "VariableDeclaration",
														"scope": 117,
														"src": "4012:22:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 84,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "4012:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 91,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 87,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4076:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 88,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4080:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4076:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 89,
															"name": "delegate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 78,
															"src": "4100:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 86,
														"name": "_computeAllDelegationHash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 322,
														"src": "4037:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bytes32_$",
															"typeString": "function (address,address) view returns (bytes32)"
														}
													},
													"id": 90,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4037:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4012:106:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 93,
															"name": "delegate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 78,
															"src": "4162:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 94,
															"name": "delegationHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 85,
															"src": "4184:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 95,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 80,
															"src": "4212:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"expression": {
																"expression": {
																	"id": 96,
																	"name": "IDelegationRegistry",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1475,
																	"src": "4231:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IDelegationRegistry_$1475_$",
																		"typeString": "type(contract IDelegationRegistry)"
																	}
																},
																"id": 97,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4251:14:0",
																"memberName": "DelegationType",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1257,
																"src": "4231:34:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_DelegationType_$1257_$",
																	"typeString": "type(enum IDelegationRegistry.DelegationType)"
																}
															},
															"id": 98,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "4266:3:0",
															"memberName": "ALL",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1254,
															"src": "4231:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_DelegationType_$1257",
																"typeString": "enum IDelegationRegistry.DelegationType"
															}
														},
														{
															"expression": {
																"id": 99,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4283:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 100,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4287:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4283:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 103,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4315:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 102,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4307:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 101,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4307:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 104,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4307:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "30",
															"id": 105,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4331:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_enum$_DelegationType_$1257",
																"typeString": "enum IDelegationRegistry.DelegationType"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 92,
														"name": "_setDelegationValues",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 287,
														"src": "4128:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes32_$_t_bool_$_t_enum$_DelegationType_$1257_$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,bytes32,bool,enum IDelegationRegistry.DelegationType,address,address,uint256)"
														}
													},
													"id": 106,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4128:214:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 107,
												"nodeType": "ExpressionStatement",
												"src": "4128:214:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 111,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4392:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 112,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4396:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4392:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 113,
															"name": "delegate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 78,
															"src": "4404:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 114,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 80,
															"src": "4414:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"expression": {
															"id": 108,
															"name": "IDelegationRegistry",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1475,
															"src": "4357:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IDelegationRegistry_$1475_$",
																"typeString": "type(contract IDelegationRegistry)"
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4377:14:0",
														"memberName": "DelegateForAll",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1293,
														"src": "4357:34:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 115,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4357:63:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 116,
												"nodeType": "EmitStatement",
												"src": "4352:68:0"
											}
										]
									},
									"documentation": {
										"id": 76,
										"nodeType": "StructuredDocumentation",
										"src": "3875:50:0",
										"text": " @inheritdoc IDelegationRegistry"
									},
									"functionSelector": "685ee3e8",
									"id": 118,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "delegateForAll",
									"nameLocation": "3939:14:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 82,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3993:8:0"
									},
									"parameters": {
										"id": 81,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 78,
												"mutability": "mutable",
												"name": "delegate",
												"nameLocation": "3962:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "3954:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 77,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3954:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 80,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3977:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "3972:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 79,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3972:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3953:30:0"
									},
									"returnParameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4002:0:0"
									},
									"scope": 1248,
									"src": "3930:497:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1347
									],
									"body": {
										"id": 161,
										"nodeType": "Block",
										"src": "4614:531:0",
										"statements": [
											{
												"assignments": [
													130
												],
												"declarations": [
													{
														"constant": false,
														"id": 130,
														"mutability": "mutable",
														"name": "delegationHash",
														"nameLocation": "4632:14:0",
														"nodeType": "VariableDeclaration",
														"scope": 161,
														"src": "4624:22:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 129,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "4624:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 137,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 132,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4693:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 133,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4697:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4693:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 134,
															"name": "delegate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 121,
															"src": "4717:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 135,
															"name": "contract_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 123,
															"src": "4739:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 131,
														"name": "_computeContractDelegationHash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 360,
														"src": "4649:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_address_$returns$_t_bytes32_$",
															"typeString": "function (address,address,address) view returns (bytes32)"
														}
													},
													"id": 136,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4649:109:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4624:134:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 139,
															"name": "delegate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 121,
															"src": "4802:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 140,
															"name": "delegationHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 130,
															"src": "4824:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 141,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 125,
															"src": "4852:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"expression": {
																"expression": {
																	"id": 142,
																	"name": "IDelegationRegistry",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1475,
																	"src": "4871:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IDelegationRegistry_$1475_$",
																		"typeString": "type(contract IDelegationRegistry)"
																	}
																},
																"id": 143,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4891:14:0",
																"memberName": "DelegationType",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1257,
																"src": "4871:34:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_DelegationType_$1257_$",
																	"typeString": "type(enum IDelegationRegistry.DelegationType)"
																}
															},
															"id": 144,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "4906:8:0",
															"memberName": "CONTRACT",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1255,
															"src": "4871:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_DelegationType_$1257",
																"typeString": "enum IDelegationRegistry.DelegationType"
															}
														},
														{
															"expression": {
																"id": 145,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4928:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 146,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4932:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4928:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 147,
															"name": "contract_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 123,
															"src": "4952:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "30",
															"id": 148,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4975:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_enum$_DelegationType_$1257",
																"typeString": "enum IDelegationRegistry.DelegationType"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 138,
														"name": "_setDelegationValues",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 287,
														"src": "4768:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes32_$_t_bool_$_t_enum$_DelegationType_$1257_$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,bytes32,bool,enum IDelegationRegistry.DelegationType,address,address,uint256)"
														}
													},
													"id": 149,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4768:218:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 150,
												"nodeType": "ExpressionStatement",
												"src": "4768:218:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 154,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5054:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 155,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5058:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5054:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 156,
															"name": "delegate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 121,
															"src": "5078:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 157,
															"name": "contract_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 123,
															"src": "5100:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 158,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 125,
															"src": "5123:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"expression": {
															"id": 151,
															"name": "IDelegationRegistry",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1475,
															"src": "5001:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IDelegationRegistry_$1475_$",
																"typeString": "type(contract IDelegationRegistry)"
															}
														},
														"id": 153,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5021:19:0",
														"memberName": "DelegateForContract",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1304,
														"src": "5001:39:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,address,bool)"
														}
													},
													"id": 159,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5001:137:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 160,
												"nodeType": "EmitStatement",
												"src": "4996:142:0"
											}
										]
									},
									"documentation": {
										"id": 119,
										"nodeType": "StructuredDocumentation",
										"src": "4433:50:0",
										"text": " @inheritdoc IDelegationRegistry"
									},
									"functionSelector": "49c95d29",
									"id": 162,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "delegateForContract",
									"nameLocation": "4497:19:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 127,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4605:8:0"
									},
									"parameters": {
										"id": 126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "delegate",
												"nameLocation": "4534:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 162,
												"src": "4526:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4526:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 123,
												"mutability": "mutable",
												"name": "contract_",
												"nameLocation": "4560:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 162,
												"src": "4552:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 122,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4552:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 125,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4584:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 162,
												"src": "4579:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 124,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4579:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4516:79:0"
									},
									"returnParameters": {
										"id": 128,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4614:0:0"
									},
									"scope": 1248,
									"src": "4488:657:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1359
									],
									"body": {
										"id": 209,
										"nodeType": "Block",
										"src": "5354:570:0",
										"statements": [
											{
												"assignments": [
													176
												],
												"declarations": [
													{
														"constant": false,
														"id": 176,
														"mutability": "mutable",
														"name": "delegationHash",
														"nameLocation": "5372:14:0",
														"nodeType": "VariableDeclaration",
														"scope": 209,
														"src": "5364:22:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 175,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "5364:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 184,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 178,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5430:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 179,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5434:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5430:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 180,
															"name": "delegate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 165,
															"src": "5454:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 181,
															"name": "contract_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 167,
															"src": "5476:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 182,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 169,
															"src": "5499:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 177,
														"name": "_computeTokenDelegationHash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 401,
														"src": "5389:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$_t_bytes32_$",
															"typeString": "function (address,address,address,uint256) view returns (bytes32)"
														}
													},
													"id": 183,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5389:127:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5364:152:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 186,
															"name": "delegate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 165,
															"src": "5560:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 187,
															"name": "delegationHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 176,
															"src": "5582:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 188,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 171,
															"src": "5610:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"expression": {
																"expression": {
																	"id": 189,
																	"name": "IDelegationRegistry",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1475,
																	"src": "5629:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IDelegationRegistry_$1475_$",
																		"typeString": "type(contract IDelegationRegistry)"
																	}
																},
																"id": 190,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5649:14:0",
																"memberName": "DelegationType",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1257,
																"src": "5629:34:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_DelegationType_$1257_$",
																	"typeString": "type(enum IDelegationRegistry.DelegationType)"
																}
															},
															"id": 191,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "5664:5:0",
															"memberName": "TOKEN",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1256,
															"src": "5629:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_DelegationType_$1257",
																"typeString": "enum IDelegationRegistry.DelegationType"
															}
														},
														{
															"expression": {
																"id": 192,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5683:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 193,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5687:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5683:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 194,
															"name": "contract_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 167,
															"src": "5707:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 195,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 169,
															"src": "5730:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_enum$_DelegationType_$1257",
																"typeString": "enum IDelegationRegistry.DelegationType"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 185,
														"name": "_setDelegationValues",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 287,
														"src": "5526:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes32_$_t_bool_$_t_enum$_DelegationType_$1257_$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,bytes32,bool,enum IDelegationRegistry.DelegationType,address,address,uint256)"
														}
													},
													"id": 196,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5526:221:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 197,
												"nodeType": "ExpressionStatement",
												"src": "5526:221:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 201,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5812:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 202,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5816:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5812:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 203,
															"name": "delegate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 165,
															"src": "5836:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 204,
															"name": "contract_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 167,
															"src": "5858:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 205,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 169,
															"src": "5881:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 206,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 171,
															"src": "5902:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"expression": {
															"id": 198,
															"name": "IDelegationRegistry",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1475,
															"src": "5762:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IDelegationRegistry_$1475_$",
																"typeString": "type(contract IDelegationRegistry)"
															}
														},
														"id": 200,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5782:16:0",
														"memberName": "DelegateForToken",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1317,
														"src": "5762:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,address,uint256,bool)"
														}
													},
													"id": 207,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5762:155:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 208,
												"nodeType": "EmitStatement",
												"src": "5757:160:0"
											}
										]
									},
									"documentation": {
										"id": 163,
										"nodeType": "StructuredDocumentation",
										"src": "5151:50:0",
										"text": " @inheritdoc IDelegationRegistry"
									},
									"functionSelector": "537a5c3d",
									"id": 210,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "delegateForToken",
									"nameLocation": "5215:16:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 173,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5345:8:0"
									},
									"parameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 165,
												"mutability": "mutable",
												"name": "delegate",
												"nameLocation": "5249:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "5241:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 164,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5241:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "contract_",
												"nameLocation": "5275:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "5267:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5267:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5302:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "5294:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 168,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5294:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5324:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "5319:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 170,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5319:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5231:104:0"
									},
									"returnParameters": {
										"id": 174,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5354:0:0"
									},
									"scope": 1248,
									"src": "5206:718:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 286,
										"nodeType": "Block",
										"src": "6270:611:0",
										"statements": [
											{
												"condition": {
													"id": 229,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 217,
													"src": "6284:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 284,
													"nodeType": "Block",
													"src": "6680:195:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 269,
																		"name": "delegateHash",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 215,
																		"src": "6741:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"expression": {
																		"baseExpression": {
																			"baseExpression": {
																				"id": 261,
																				"name": "delegations",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 28,
																				"src": "6694:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Bytes32Set_$1716_storage_$_$",
																					"typeString": "mapping(address => mapping(uint256 => struct EnumerableSet.Bytes32Set storage ref))"
																				}
																			},
																			"id": 266,
																			"indexExpression": {
																				"id": 262,
																				"name": "vault",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 222,
																				"src": "6706:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6694:18:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Bytes32Set_$1716_storage_$",
																				"typeString": "mapping(uint256 => struct EnumerableSet.Bytes32Set storage ref)"
																			}
																		},
																		"id": 267,
																		"indexExpression": {
																			"baseExpression": {
																				"id": 263,
																				"name": "vaultVersion",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 33,
																				"src": "6713:12:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 265,
																			"indexExpression": {
																				"id": 264,
																				"name": "vault",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 222,
																				"src": "6726:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6713:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "6694:39:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Bytes32Set_$1716_storage",
																			"typeString": "struct EnumerableSet.Bytes32Set storage ref"
																		}
																	},
																	"id": 268,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6734:6:0",
																	"memberName": "remove",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1752,
																	"src": "6694:46:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Bytes32Set_$1716_storage_ptr_$_t_bytes32_$returns$_t_bool_$attached_to$_t_struct$_Bytes32Set_$1716_storage_ptr_$",
																		"typeString": "function (struct EnumerableSet.Bytes32Set storage pointer,bytes32) returns (bool)"
																	}
																},
																"id": 270,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6694:60:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 271,
															"nodeType": "ExpressionStatement",
															"src": "6694:60:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 276,
																		"name": "delegateHash",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 215,
																		"src": "6802:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"expression": {
																		"baseExpression": {
																			"id": 272,
																			"name": "delegationHashes",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 46,
																			"src": "6768:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Bytes32Set_$1716_storage_$",
																				"typeString": "mapping(address => struct EnumerableSet.Bytes32Set storage ref)"
																			}
																		},
																		"id": 274,
																		"indexExpression": {
																			"id": 273,
																			"name": "delegate",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 213,
																			"src": "6785:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "6768:26:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Bytes32Set_$1716_storage",
																			"typeString": "struct EnumerableSet.Bytes32Set storage ref"
																		}
																	},
																	"id": 275,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6795:6:0",
																	"memberName": "remove",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1752,
																	"src": "6768:33:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Bytes32Set_$1716_storage_ptr_$_t_bytes32_$returns$_t_bool_$attached_to$_t_struct$_Bytes32Set_$1716_storage_ptr_$",
																		"typeString": "function (struct EnumerableSet.Bytes32Set storage pointer,bytes32) returns (bool)"
																	}
																},
																"id": 277,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6768:47:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 278,
															"nodeType": "ExpressionStatement",
															"src": "6768:47:0"
														},
														{
															"expression": {
																"id": 282,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "delete",
																"prefix": true,
																"src": "6829:35:0",
																"subExpression": {
																	"baseExpression": {
																		"id": 279,
																		"name": "delegationInfo",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 52,
																		"src": "6836:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_DelegationInfo_$1270_storage_$",
																			"typeString": "mapping(bytes32 => struct IDelegationRegistry.DelegationInfo storage ref)"
																		}
																	},
																	"id": 281,
																	"indexExpression": {
																		"id": 280,
																		"name": "delegateHash",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 215,
																		"src": "6851:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6836:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_DelegationInfo_$1270_storage",
																		"typeString": "struct IDelegationRegistry.DelegationInfo storage ref"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 283,
															"nodeType": "ExpressionStatement",
															"src": "6829:35:0"
														}
													]
												},
												"id": 285,
												"nodeType": "IfStatement",
												"src": "6280:595:0",
												"trueBody": {
													"id": 260,
													"nodeType": "Block",
													"src": "6291:383:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 238,
																		"name": "delegateHash",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 215,
																		"src": "6349:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"expression": {
																		"baseExpression": {
																			"baseExpression": {
																				"id": 230,
																				"name": "delegations",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 28,
																				"src": "6305:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Bytes32Set_$1716_storage_$_$",
																					"typeString": "mapping(address => mapping(uint256 => struct EnumerableSet.Bytes32Set storage ref))"
																				}
																			},
																			"id": 235,
																			"indexExpression": {
																				"id": 231,
																				"name": "vault",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 222,
																				"src": "6317:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6305:18:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Bytes32Set_$1716_storage_$",
																				"typeString": "mapping(uint256 => struct EnumerableSet.Bytes32Set storage ref)"
																			}
																		},
																		"id": 236,
																		"indexExpression": {
																			"baseExpression": {
																				"id": 232,
																				"name": "vaultVersion",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 33,
																				"src": "6324:12:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 234,
																			"indexExpression": {
																				"id": 233,
																				"name": "vault",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 222,
																				"src": "6337:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6324:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "6305:39:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Bytes32Set_$1716_storage",
																			"typeString": "struct EnumerableSet.Bytes32Set storage ref"
																		}
																	},
																	"id": 237,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6345:3:0",
																	"memberName": "add",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1734,
																	"src": "6305:43:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Bytes32Set_$1716_storage_ptr_$_t_bytes32_$returns$_t_bool_$attached_to$_t_struct$_Bytes32Set_$1716_storage_ptr_$",
																		"typeString": "function (struct EnumerableSet.Bytes32Set storage pointer,bytes32) returns (bool)"
																	}
																},
																"id": 239,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6305:57:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 240,
															"nodeType": "ExpressionStatement",
															"src": "6305:57:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 245,
																		"name": "delegateHash",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 215,
																		"src": "6407:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"expression": {
																		"baseExpression": {
																			"id": 241,
																			"name": "delegationHashes",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 46,
																			"src": "6376:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Bytes32Set_$1716_storage_$",
																				"typeString": "mapping(address => struct EnumerableSet.Bytes32Set storage ref)"
																			}
																		},
																		"id": 243,
																		"indexExpression": {
																			"id": 242,
																			"name": "delegate",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 213,
																			"src": "6393:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "6376:26:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Bytes32Set_$1716_storage",
																			"typeString": "struct EnumerableSet.Bytes32Set storage ref"
																		}
																	},
																	"id": 244,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6403:3:0",
																	"memberName": "add",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1734,
																	"src": "6376:30:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Bytes32Set_$1716_storage_ptr_$_t_bytes32_$returns$_t_bool_$attached_to$_t_struct$_Bytes32Set_$1716_storage_ptr_$",
																		"typeString": "function (struct EnumerableSet.Bytes32Set storage pointer,bytes32) returns (bool)"
																	}
																},
																"id": 246,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6376:44:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 247,
															"nodeType": "ExpressionStatement",
															"src": "6376:44:0"
														},
														{
															"expression": {
																"id": 258,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 248,
																		"name": "delegationInfo",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 52,
																		"src": "6434:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_DelegationInfo_$1270_storage_$",
																			"typeString": "mapping(bytes32 => struct IDelegationRegistry.DelegationInfo storage ref)"
																		}
																	},
																	"id": 250,
																	"indexExpression": {
																		"id": 249,
																		"name": "delegateHash",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 215,
																		"src": "6449:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6434:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_DelegationInfo_$1270_storage",
																		"typeString": "struct IDelegationRegistry.DelegationInfo storage ref"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 252,
																			"name": "vault",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 222,
																			"src": "6505:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 253,
																			"name": "delegate",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 213,
																			"src": "6538:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 254,
																			"name": "type_",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 220,
																			"src": "6571:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_enum$_DelegationType_$1257",
																				"typeString": "enum IDelegationRegistry.DelegationType"
																			}
																		},
																		{
																			"id": 255,
																			"name": "contract_",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 224,
																			"src": "6605:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 256,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 226,
																			"src": "6641:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_enum$_DelegationType_$1257",
																				"typeString": "enum IDelegationRegistry.DelegationType"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 251,
																		"name": "DelegationInfo",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1270,
																		"src": "6465:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_struct$_DelegationInfo_$1270_storage_ptr_$",
																			"typeString": "type(struct IDelegationRegistry.DelegationInfo storage pointer)"
																		}
																	},
																	"id": 257,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "structConstructorCall",
																	"lValueRequested": false,
																	"nameLocations": [
																		"6498:5:0",
																		"6528:8:0",
																		"6564:5:0",
																		"6594:9:0",
																		"6632:7:0"
																	],
																	"names": [
																		"vault",
																		"delegate",
																		"type_",
																		"contract_",
																		"tokenId"
																	],
																	"nodeType": "FunctionCall",
																	"src": "6465:198:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_DelegationInfo_$1270_memory_ptr",
																		"typeString": "struct IDelegationRegistry.DelegationInfo memory"
																	}
																},
																"src": "6434:229:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_DelegationInfo_$1270_storage",
																	"typeString": "struct IDelegationRegistry.DelegationInfo storage ref"
																}
															},
															"id": 259,
															"nodeType": "ExpressionStatement",
															"src": "6434:229:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 211,
										"nodeType": "StructuredDocumentation",
										"src": "5930:89:0",
										"text": " @dev Helper function to set all delegation values and enumeration sets"
									},
									"id": 287,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setDelegationValues",
									"nameLocation": "6033:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 213,
												"mutability": "mutable",
												"name": "delegate",
												"nameLocation": "6071:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 287,
												"src": "6063:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 212,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6063:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "delegateHash",
												"nameLocation": "6097:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 287,
												"src": "6089:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 214,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6089:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6124:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 287,
												"src": "6119:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 216,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6119:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "type_",
												"nameLocation": "6174:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 287,
												"src": "6139:40:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_DelegationType_$1257",
													"typeString": "enum IDelegationRegistry.DelegationType"
												},
												"typeName": {
													"id": 219,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 218,
														"name": "IDelegationRegistry.DelegationType",
														"nameLocations": [
															"6139:19:0",
															"6159:14:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1257,
														"src": "6139:34:0"
													},
													"referencedDeclaration": 1257,
													"src": "6139:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_DelegationType_$1257",
														"typeString": "enum IDelegationRegistry.DelegationType"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "vault",
												"nameLocation": "6197:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 287,
												"src": "6189:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6189:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "contract_",
												"nameLocation": "6220:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 287,
												"src": "6212:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 223,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6212:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6247:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 287,
												"src": "6239:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 225,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6239:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6053:207:0"
									},
									"returnParameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6270:0:0"
									},
									"scope": 1248,
									"src": "6024:857:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 321,
										"nodeType": "Block",
										"src": "7102:259:0",
										"statements": [
											{
												"assignments": [
													298
												],
												"declarations": [
													{
														"constant": false,
														"id": 298,
														"mutability": "mutable",
														"name": "vaultVersion_",
														"nameLocation": "7120:13:0",
														"nodeType": "VariableDeclaration",
														"scope": 321,
														"src": "7112:21:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 297,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7112:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 302,
												"initialValue": {
													"baseExpression": {
														"id": 299,
														"name": "vaultVersion",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 33,
														"src": "7136:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 301,
													"indexExpression": {
														"id": 300,
														"name": "vault",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 290,
														"src": "7149:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7136:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7112:43:0"
											},
											{
												"assignments": [
													304
												],
												"declarations": [
													{
														"constant": false,
														"id": 304,
														"mutability": "mutable",
														"name": "delegateVersion_",
														"nameLocation": "7173:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 321,
														"src": "7165:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 303,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7165:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 310,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 305,
															"name": "delegateVersion",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 40,
															"src": "7192:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 307,
														"indexExpression": {
															"id": 306,
															"name": "vault",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 290,
															"src": "7208:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "7192:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 309,
													"indexExpression": {
														"id": 308,
														"name": "delegate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 292,
														"src": "7215:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7192:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7165:59:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 314,
																	"name": "delegate",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 292,
																	"src": "7291:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 315,
																	"name": "vault",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 290,
																	"src": "7301:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 316,
																	"name": "vaultVersion_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 298,
																	"src": "7308:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 317,
																	"name": "delegateVersion_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 304,
																	"src": "7323:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 312,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "7280:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 313,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "7284:6:0",
																"memberName": "encode",
																"nodeType": "MemberAccess",
																"src": "7280:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 318,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7280:60:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 311,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "7253:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 319,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7253:101:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 296,
												"id": 320,
												"nodeType": "Return",
												"src": "7234:120:0"
											}
										]
									},
									"documentation": {
										"id": 288,
										"nodeType": "StructuredDocumentation",
										"src": "6887:88:0",
										"text": " @dev Helper function to compute delegation hash for wallet delegation"
									},
									"id": 322,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_computeAllDelegationHash",
									"nameLocation": "6989:25:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "vault",
												"nameLocation": "7032:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 322,
												"src": "7024:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 289,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7024:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "delegate",
												"nameLocation": "7055:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 322,
												"src": "7047:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 291,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7047:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7014:55:0"
									},
									"returnParameters": {
										"id": 296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 322,
												"src": "7093:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 294,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7093:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7092:9:0"
									},
									"scope": 1248,
									"src": "6980:381:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 359,
										"nodeType": "Block",
										"src": "7616:388:0",
										"statements": [
											{
												"assignments": [
													335
												],
												"declarations": [
													{
														"constant": false,
														"id": 335,
														"mutability": "mutable",
														"name": "vaultVersion_",
														"nameLocation": "7634:13:0",
														"nodeType": "VariableDeclaration",
														"scope": 359,
														"src": "7626:21:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 334,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7626:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 339,
												"initialValue": {
													"baseExpression": {
														"id": 336,
														"name": "vaultVersion",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 33,
														"src": "7650:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 338,
													"indexExpression": {
														"id": 337,
														"name": "vault",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 325,
														"src": "7663:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7650:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7626:43:0"
											},
											{
												"assignments": [
													341
												],
												"declarations": [
													{
														"constant": false,
														"id": 341,
														"mutability": "mutable",
														"name": "delegateVersion_",
														"nameLocation": "7687:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 359,
														"src": "7679:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 340,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7679:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 347,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 342,
															"name": "delegateVersion",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 40,
															"src": "7706:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 344,
														"indexExpression": {
															"id": 343,
															"name": "vault",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 325,
															"src": "7722:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "7706:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 346,
													"indexExpression": {
														"id": 345,
														"name": "delegate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 327,
														"src": "7729:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7706:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7679:59:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 351,
																	"name": "delegate",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 327,
																	"src": "7826:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 352,
																	"name": "vault",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 325,
																	"src": "7856:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 353,
																	"name": "contract_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 329,
																	"src": "7883:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 354,
																	"name": "vaultVersion_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 335,
																	"src": "7914:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 355,
																	"name": "delegateVersion_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 341,
																	"src": "7949:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 349,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "7794:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 350,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "7798:6:0",
																"memberName": "encode",
																"nodeType": "MemberAccess",
																"src": "7794:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 356,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7794:189:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 348,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "7767:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 357,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7767:230:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 333,
												"id": 358,
												"nodeType": "Return",
												"src": "7748:249:0"
											}
										]
									},
									"documentation": {
										"id": 323,
										"nodeType": "StructuredDocumentation",
										"src": "7367:90:0",
										"text": " @dev Helper function to compute delegation hash for contract delegation"
									},
									"id": 360,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_computeContractDelegationHash",
									"nameLocation": "7471:30:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 330,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 325,
												"mutability": "mutable",
												"name": "vault",
												"nameLocation": "7519:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 360,
												"src": "7511:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 324,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7511:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 327,
												"mutability": "mutable",
												"name": "delegate",
												"nameLocation": "7542:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 360,
												"src": "7534:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 326,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7534:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 329,
												"mutability": "mutable",
												"name": "contract_",
												"nameLocation": "7568:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 360,
												"src": "7560:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 328,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7560:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7501:82:0"
									},
									"returnParameters": {
										"id": 333,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 332,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 360,
												"src": "7607:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 331,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7607:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7606:9:0"
									},
									"scope": 1248,
									"src": "7462:542:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 400,
										"nodeType": "Block",
										"src": "8278:417:0",
										"statements": [
											{
												"assignments": [
													375
												],
												"declarations": [
													{
														"constant": false,
														"id": 375,
														"mutability": "mutable",
														"name": "vaultVersion_",
														"nameLocation": "8296:13:0",
														"nodeType": "VariableDeclaration",
														"scope": 400,
														"src": "8288:21:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 374,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8288:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 379,
												"initialValue": {
													"baseExpression": {
														"id": 376,
														"name": "vaultVersion",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 33,
														"src": "8312:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 378,
													"indexExpression": {
														"id": 377,
														"name": "vault",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 363,
														"src": "8325:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8312:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8288:43:0"
											},
											{
												"assignments": [
													381
												],
												"declarations": [
													{
														"constant": false,
														"id": 381,
														"mutability": "mutable",
														"name": "delegateVersion_",
														"nameLocation": "8349:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 400,
														"src": "8341:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 380,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8341:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 387,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 382,
															"name": "delegateVersion",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 40,
															"src": "8368:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 384,
														"indexExpression": {
															"id": 383,
															"name": "vault",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 363,
															"src": "8384:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "8368:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 386,
													"indexExpression": {
														"id": 385,
														"name": "delegate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 365,
														"src": "8391:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8368:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8341:59:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 391,
																	"name": "delegate",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 365,
																	"src": "8488:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 392,
																	"name": "vault",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 363,
																	"src": "8518:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 393,
																	"name": "contract_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 367,
																	"src": "8545:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 394,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 369,
																	"src": "8576:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 395,
																	"name": "vaultVersion_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 375,
																	"src": "8605:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 396,
																	"name": "delegateVersion_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 381,
																	"src": "8640:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 389,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "8456:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 390,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "8460:6:0",
																"memberName": "encode",
																"nodeType": "MemberAccess",
																"src": "8456:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 397,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8456:218:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 388,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "8429:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8429:259:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 373,
												"id": 399,
												"nodeType": "Return",
												"src": "8410:278:0"
											}
										]
									},
									"documentation": {
										"id": 361,
										"nodeType": "StructuredDocumentation",
										"src": "8010:87:0",
										"text": " @dev Helper function to compute delegation hash for token delegation"
									},
									"id": 401,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_computeTokenDelegationHash",
									"nameLocation": "8111:27:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 370,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 363,
												"mutability": "mutable",
												"name": "vault",
												"nameLocation": "8156:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 401,
												"src": "8148:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 362,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8148:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 365,
												"mutability": "mutable",
												"name": "delegate",
												"nameLocation": "8179:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 401,
												"src": "8171:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 364,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8171:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "contract_",
												"nameLocation": "8205:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 401,
												"src": "8197:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 366,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8197:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 369,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8232:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 401,
												"src": "8224:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 368,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8224:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8138:107:0"
									},
									"returnParameters": {
										"id": 373,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 401,
												"src": "8269:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 371,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "8269:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8268:9:0"
									},
									"scope": 1248,
									"src": "8102:593:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1363
									],
									"body": {
										"id": 419,
										"nodeType": "Block",
										"src": "8804:108:0",
										"statements": [
											{
												"expression": {
													"id": 410,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": true,
													"src": "8814:26:0",
													"subExpression": {
														"baseExpression": {
															"id": 406,
															"name": "vaultVersion",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 33,
															"src": "8816:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 409,
														"indexExpression": {
															"expression": {
																"id": 407,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "8829:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 408,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8833:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "8829:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8816:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 411,
												"nodeType": "ExpressionStatement",
												"src": "8814:26:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 415,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "8894:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 416,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8898:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "8894:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 412,
															"name": "IDelegationRegistry",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1475,
															"src": "8855:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IDelegationRegistry_$1475_$",
																"typeString": "type(contract IDelegationRegistry)"
															}
														},
														"id": 414,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8875:18:0",
														"memberName": "RevokeAllDelegates",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1322,
														"src": "8855:38:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 417,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8855:50:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 418,
												"nodeType": "EmitStatement",
												"src": "8850:55:0"
											}
										]
									},
									"documentation": {
										"id": 402,
										"nodeType": "StructuredDocumentation",
										"src": "8701:50:0",
										"text": " @inheritdoc IDelegationRegistry"
									},
									"functionSelector": "36137872",
									"id": 420,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "revokeAllDelegates",
									"nameLocation": "8765:18:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 404,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "8795:8:0"
									},
									"parameters": {
										"id": 403,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8783:2:0"
									},
									"returnParameters": {
										"id": 405,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8804:0:0"
									},
									"scope": 1248,
									"src": "8756:156:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1369
									],
									"body": {
										"id": 433,
										"nodeType": "Block",
										"src": "9033:54:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 428,
															"name": "delegate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 423,
															"src": "9059:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 429,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "9069:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 430,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9073:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "9069:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 427,
														"name": "_revokeDelegate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 472,
														"src": "9043:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 431,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9043:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 432,
												"nodeType": "ExpressionStatement",
												"src": "9043:37:0"
											}
										]
									},
									"documentation": {
										"id": 421,
										"nodeType": "StructuredDocumentation",
										"src": "8918:50:0",
										"text": " @inheritdoc IDelegationRegistry"
									},
									"functionSelector": "fa352c00",
									"id": 434,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "revokeDelegate",
									"nameLocation": "8982:14:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 425,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "9024:8:0"
									},
									"parameters": {
										"id": 424,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 423,
												"mutability": "mutable",
												"name": "delegate",
												"nameLocation": "9005:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 434,
												"src": "8997:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 422,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8997:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8996:18:0"
									},
									"returnParameters": {
										"id": 426,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9033:0:0"
									},
									"scope": 1248,
									"src": "8973:114:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1375
									],
									"body": {
										"id": 447,
										"nodeType": "Block",
										"src": "9201:51:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 442,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "9227:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 443,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9231:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "9227:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 444,
															"name": "vault",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 437,
															"src": "9239:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 441,
														"name": "_revokeDelegate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 472,
														"src": "9211:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9211:34:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 446,
												"nodeType": "ExpressionStatement",
												"src": "9211:34:0"
											}
										]
									},
									"documentation": {
										"id": 435,
										"nodeType": "StructuredDocumentation",
										"src": "9093:50:0",
										"text": " @inheritdoc IDelegationRegistry"
									},
									"functionSelector": "219044b0",
									"id": 448,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "revokeSelf",
									"nameLocation": "9157:10:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 439,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "9192:8:0"
									},
									"parameters": {
										"id": 438,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 437,
												"mutability": "mutable",
												"name": "vault",
												"nameLocation": "9176:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 448,
												"src": "9168:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 436,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9168:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9167:15:0"
									},
									"returnParameters": {
										"id": 440,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9201:0:0"
									},
									"scope": 1248,
									"src": "9148:104:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 471,
										"nodeType": "Block",
										"src": "9414:177:0",
										"statements": [
											{
												"expression": {
													"id": 461,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": true,
													"src": "9424:34:0",
													"subExpression": {
														"baseExpression": {
															"baseExpression": {
																"id": 456,
																"name": "delegateVersion",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 40,
																"src": "9426:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 458,
															"indexExpression": {
																"id": 457,
																"name": "vault",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 453,
																"src": "9442:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9426:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 460,
														"indexExpression": {
															"id": 459,
															"name": "delegate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 451,
															"src": "9449:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9426:32:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 462,
												"nodeType": "ExpressionStatement",
												"src": "9424:34:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 466,
															"name": "vault",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "9566:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 467,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "9573:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 468,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9577:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "9573:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 463,
															"name": "IDelegationRegistry",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1475,
															"src": "9531:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IDelegationRegistry_$1475_$",
																"typeString": "type(contract IDelegationRegistry)"
															}
														},
														"id": 465,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9551:14:0",
														"memberName": "RevokeDelegate",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1329,
														"src": "9531:34:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 469,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9531:53:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 470,
												"nodeType": "EmitStatement",
												"src": "9526:58:0"
											}
										]
									},
									"documentation": {
										"id": 449,
										"nodeType": "StructuredDocumentation",
										"src": "9258:84:0",
										"text": " @dev Revoke the `delegate` hotwallet from the `vault` coldwallet."
									},
									"id": 472,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revokeDelegate",
									"nameLocation": "9356:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 454,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 451,
												"mutability": "mutable",
												"name": "delegate",
												"nameLocation": "9380:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 472,
												"src": "9372:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 450,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9372:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "vault",
												"nameLocation": "9398:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 472,
												"src": "9390:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9390:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9371:33:0"
									},
									"returnParameters": {
										"id": 455,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9414:0:0"
									},
									"scope": 1248,
									"src": "9347:244:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1385
									],
									"body": {
										"id": 635,
										"nodeType": "Block",
										"src": "9845:2350:0",
										"statements": [
											{
												"assignments": [
													486
												],
												"declarations": [
													{
														"constant": false,
														"id": 486,
														"mutability": "mutable",
														"name": "potentialDelegationHashes",
														"nameLocation": "9900:25:0",
														"nodeType": "VariableDeclaration",
														"scope": 635,
														"src": "9855:70:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Bytes32Set_$1716_storage_ptr",
															"typeString": "struct EnumerableSet.Bytes32Set"
														},
														"typeName": {
															"id": 485,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 484,
																"name": "EnumerableSet.Bytes32Set",
																"nameLocations": [
																	"9855:13:0",
																	"9869:10:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1716,
																"src": "9855:24:0"
															},
															"referencedDeclaration": 1716,
															"src": "9855:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bytes32Set_$1716_storage_ptr",
																"typeString": "struct EnumerableSet.Bytes32Set"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 490,
												"initialValue": {
													"baseExpression": {
														"id": 487,
														"name": "delegationHashes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 46,
														"src": "9928:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Bytes32Set_$1716_storage_$",
															"typeString": "mapping(address => struct EnumerableSet.Bytes32Set storage ref)"
														}
													},
													"id": 489,
													"indexExpression": {
														"id": 488,
														"name": "delegate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 475,
														"src": "9945:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9928:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$1716_storage",
														"typeString": "struct EnumerableSet.Bytes32Set storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9855:99:0"
											},
											{
												"assignments": [
													492
												],
												"declarations": [
													{
														"constant": false,
														"id": 492,
														"mutability": "mutable",
														"name": "potentialDelegationHashesLength",
														"nameLocation": "9972:31:0",
														"nodeType": "VariableDeclaration",
														"scope": 635,
														"src": "9964:39:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 491,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9964:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 496,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 493,
															"name": "potentialDelegationHashes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 486,
															"src": "10006:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bytes32Set_$1716_storage_ptr",
																"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
															}
														},
														"id": 494,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "10045:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1785,
														"src": "10006:45:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32Set_$1716_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Bytes32Set_$1716_storage_ptr_$",
															"typeString": "function (struct EnumerableSet.Bytes32Set storage pointer) view returns (uint256)"
														}
													},
													"id": 495,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10006:47:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9964:89:0"
											},
											{
												"assignments": [
													498
												],
												"declarations": [
													{
														"constant": false,
														"id": 498,
														"mutability": "mutable",
														"name": "delegationCount",
														"nameLocation": "10071:15:0",
														"nodeType": "VariableDeclaration",
														"scope": 635,
														"src": "10063:23:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 497,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10063:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 500,
												"initialValue": {
													"hexValue": "30",
													"id": 499,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10089:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10063:27:0"
											},
											{
												"expression": {
													"id": 508,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 501,
														"name": "info",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 480,
														"src": "10100:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_DelegationInfo_$1270_memory_ptr_$dyn_memory_ptr",
															"typeString": "struct IDelegationRegistry.DelegationInfo memory[] memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 506,
																"name": "potentialDelegationHashesLength",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 492,
																"src": "10161:31:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 505,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "NewExpression",
															"src": "10107:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_DelegationInfo_$1270_memory_ptr_$dyn_memory_ptr_$",
																"typeString": "function (uint256) pure returns (struct IDelegationRegistry.DelegationInfo memory[] memory)"
															},
															"typeName": {
																"baseType": {
																	"id": 503,
																	"nodeType": "UserDefinedTypeName",
																	"pathNode": {
																		"id": 502,
																		"name": "IDelegationRegistry.DelegationInfo",
																		"nameLocations": [
																			"10111:19:0",
																			"10131:14:0"
																		],
																		"nodeType": "IdentifierPath",
																		"referencedDeclaration": 1270,
																		"src": "10111:34:0"
																	},
																	"referencedDeclaration": 1270,
																	"src": "10111:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_DelegationInfo_$1270_storage_ptr",
																		"typeString": "struct IDelegationRegistry.DelegationInfo"
																	}
																},
																"id": 504,
																"nodeType": "ArrayTypeName",
																"src": "10111:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_DelegationInfo_$1270_storage_$dyn_storage_ptr",
																	"typeString": "struct IDelegationRegistry.DelegationInfo[]"
																}
															}
														},
														"id": 507,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10107:95:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_DelegationInfo_$1270_memory_ptr_$dyn_memory_ptr",
															"typeString": "struct IDelegationRegistry.DelegationInfo memory[] memory"
														}
													},
													"src": "10100:102:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_DelegationInfo_$1270_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct IDelegationRegistry.DelegationInfo memory[] memory"
													}
												},
												"id": 509,
												"nodeType": "ExpressionStatement",
												"src": "10100:102:0"
											},
											{
												"body": {
													"id": 627,
													"nodeType": "Block",
													"src": "10271:1605:0",
													"statements": [
														{
															"assignments": [
																518
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 518,
																	"mutability": "mutable",
																	"name": "delegateHash",
																	"nameLocation": "10293:12:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 627,
																	"src": "10285:20:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	"typeName": {
																		"id": 517,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "10285:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 523,
															"initialValue": {
																"arguments": [
																	{
																		"id": 521,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 511,
																		"src": "10337:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 519,
																		"name": "potentialDelegationHashes",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 486,
																		"src": "10308:25:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Bytes32Set_$1716_storage_ptr",
																			"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																		}
																	},
																	"id": 520,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "10334:2:0",
																	"memberName": "at",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1803,
																	"src": "10308:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32Set_$1716_storage_ptr_$_t_uint256_$returns$_t_bytes32_$attached_to$_t_struct$_Bytes32Set_$1716_storage_ptr_$",
																		"typeString": "function (struct EnumerableSet.Bytes32Set storage pointer,uint256) view returns (bytes32)"
																	}
																},
																"id": 522,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10308:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "10285:54:0"
														},
														{
															"assignments": [
																528
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 528,
																	"mutability": "mutable",
																	"name": "delegationInfo_",
																	"nameLocation": "10411:15:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 627,
																	"src": "10353:73:0",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_DelegationInfo_$1270_memory_ptr",
																		"typeString": "struct IDelegationRegistry.DelegationInfo"
																	},
																	"typeName": {
																		"id": 527,
																		"nodeType": "UserDefinedTypeName",
																		"pathNode": {
																			"id": 526,
																			"name": "IDelegationRegistry.DelegationInfo",
																			"nameLocations": [
																				"10353:19:0",
																				"10373:14:0"
																			],
																			"nodeType": "IdentifierPath",
																			"referencedDeclaration": 1270,
																			"src": "10353:34:0"
																		},
																		"referencedDeclaration": 1270,
																		"src": "10353:34:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_DelegationInfo_$1270_storage_ptr",
																			"typeString": "struct IDelegationRegistry.DelegationInfo"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 532,
															"initialValue": {
																"baseExpression": {
																	"id": 529,
																	"name": "delegationInfo",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 52,
																	"src": "10429:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_DelegationInfo_$1270_storage_$",
																		"typeString": "mapping(bytes32 => struct IDelegationRegistry.DelegationInfo storage ref)"
																	}
																},
																"id": 531,
																"indexExpression": {
																	"id": 530,
																	"name": "delegateHash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 518,
																	"src": "10444:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "10429:28:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_DelegationInfo_$1270_storage",
																	"typeString": "struct IDelegationRegistry.DelegationInfo storage ref"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "10353:104:0"
														},
														{
															"assignments": [
																534
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 534,
																	"mutability": "mutable",
																	"name": "vault",
																	"nameLocation": "10479:5:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 627,
																	"src": "10471:13:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 533,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10471:7:0",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 537,
															"initialValue": {
																"expression": {
																	"id": 535,
																	"name": "delegationInfo_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 528,
																	"src": "10487:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_DelegationInfo_$1270_memory_ptr",
																		"typeString": "struct IDelegationRegistry.DelegationInfo memory"
																	}
																},
																"id": 536,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "10503:5:0",
																"memberName": "vault",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1263,
																"src": "10487:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "10471:37:0"
														},
														{
															"assignments": [
																542
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 542,
																	"mutability": "mutable",
																	"name": "type_",
																	"nameLocation": "10557:5:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 627,
																	"src": "10522:40:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_DelegationType_$1257",
																		"typeString": "enum IDelegationRegistry.DelegationType"
																	},
																	"typeName": {
																		"id": 541,
																		"nodeType": "UserDefinedTypeName",
																		"pathNode": {
																			"id": 540,
																			"name": "IDelegationRegistry.DelegationType",
																			"nameLocations": [
																				"10522:19:0",
																				"10542:14:0"
																			],
																			"nodeType": "IdentifierPath",
																			"referencedDeclaration": 1257,
																			"src": "10522:34:0"
																		},
																		"referencedDeclaration": 1257,
																		"src": "10522:34:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_DelegationType_$1257",
																			"typeString": "enum IDelegationRegistry.DelegationType"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 545,
															"initialValue": {
																"expression": {
																	"id": 543,
																	"name": "delegationInfo_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 528,
																	"src": "10565:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_DelegationInfo_$1270_memory_ptr",
																		"typeString": "struct IDelegationRegistry.DelegationInfo memory"
																	}
																},
																"id": 544,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "10581:5:0",
																"memberName": "type_",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1261,
																"src": "10565:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_DelegationType_$1257",
																	"typeString": "enum IDelegationRegistry.DelegationType"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "10522:64:0"
														},
														{
															"assignments": [
																547
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 547,
																	"mutability": "mutable",
																	"name": "valid",
																	"nameLocation": "10605:5:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 627,
																	"src": "10600:10:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"typeName": {
																		"id": 546,
																		"name": "bool",
																		"nodeType": "ElementaryTypeName",
																		"src": "10600:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 549,
															"initialValue": {
																"hexValue": "66616c7365",
																"id": 548,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10613:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "10600:18:0"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_enum$_DelegationType_$1257",
																	"typeString": "enum IDelegationRegistry.DelegationType"
																},
																"id": 554,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 550,
																	"name": "type_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 542,
																	"src": "10636:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_DelegationType_$1257",
																		"typeString": "enum IDelegationRegistry.DelegationType"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"expression": {
																		"expression": {
																			"id": 551,
																			"name": "IDelegationRegistry",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1475,
																			"src": "10645:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IDelegationRegistry_$1475_$",
																				"typeString": "type(contract IDelegationRegistry)"
																			}
																		},
																		"id": 552,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "10665:14:0",
																		"memberName": "DelegationType",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1257,
																		"src": "10645:34:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_DelegationType_$1257_$",
																			"typeString": "type(enum IDelegationRegistry.DelegationType)"
																		}
																	},
																	"id": 553,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "10680:3:0",
																	"memberName": "ALL",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1254,
																	"src": "10645:38:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_DelegationType_$1257",
																		"typeString": "enum IDelegationRegistry.DelegationType"
																	}
																},
																"src": "10636:47:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_enum$_DelegationType_$1257",
																		"typeString": "enum IDelegationRegistry.DelegationType"
																	},
																	"id": 572,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 568,
																		"name": "type_",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 542,
																		"src": "10882:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_DelegationType_$1257",
																			"typeString": "enum IDelegationRegistry.DelegationType"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"expression": {
																			"expression": {
																				"id": 569,
																				"name": "IDelegationRegistry",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1475,
																				"src": "10891:19:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_IDelegationRegistry_$1475_$",
																					"typeString": "type(contract IDelegationRegistry)"
																				}
																			},
																			"id": 570,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "10911:14:0",
																			"memberName": "DelegationType",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1257,
																			"src": "10891:34:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_DelegationType_$1257_$",
																				"typeString": "type(enum IDelegationRegistry.DelegationType)"
																			}
																		},
																		"id": 571,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "10926:8:0",
																		"memberName": "CONTRACT",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1255,
																		"src": "10891:43:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_DelegationType_$1257",
																			"typeString": "enum IDelegationRegistry.DelegationType"
																		}
																	},
																	"src": "10882:52:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseBody": {
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_enum$_DelegationType_$1257",
																			"typeString": "enum IDelegationRegistry.DelegationType"
																		},
																		"id": 592,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 588,
																			"name": "type_",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 542,
																			"src": "11279:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_enum$_DelegationType_$1257",
																				"typeString": "enum IDelegationRegistry.DelegationType"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"expression": {
																				"expression": {
																					"id": 589,
																					"name": "IDelegationRegistry",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1475,
																					"src": "11288:19:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_IDelegationRegistry_$1475_$",
																						"typeString": "type(contract IDelegationRegistry)"
																					}
																				},
																				"id": 590,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "11308:14:0",
																				"memberName": "DelegationType",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1257,
																				"src": "11288:34:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_enum$_DelegationType_$1257_$",
																					"typeString": "type(enum IDelegationRegistry.DelegationType)"
																				}
																			},
																			"id": 591,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "11323:5:0",
																			"memberName": "TOKEN",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1256,
																			"src": "11288:40:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_enum$_DelegationType_$1257",
																				"typeString": "enum IDelegationRegistry.DelegationType"
																			}
																		},
																		"src": "11279:49:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 610,
																	"nodeType": "IfStatement",
																	"src": "11275:434:0",
																	"trueBody": {
																		"id": 609,
																		"nodeType": "Block",
																		"src": "11330:379:0",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					},
																					"id": 602,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 593,
																						"name": "delegateHash",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 518,
																						"src": "11373:12:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"arguments": [
																							{
																								"id": 595,
																								"name": "vault",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 534,
																								"src": "11462:5:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							{
																								"id": 596,
																								"name": "delegate",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 475,
																								"src": "11493:8:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							{
																								"expression": {
																									"id": 597,
																									"name": "delegationInfo_",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 528,
																									"src": "11527:15:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_DelegationInfo_$1270_memory_ptr",
																										"typeString": "struct IDelegationRegistry.DelegationInfo memory"
																									}
																								},
																								"id": 598,
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberLocation": "11543:9:0",
																								"memberName": "contract_",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 1267,
																								"src": "11527:25:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							{
																								"expression": {
																									"id": 599,
																									"name": "delegationInfo_",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 528,
																									"src": "11578:15:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_DelegationInfo_$1270_memory_ptr",
																										"typeString": "struct IDelegationRegistry.DelegationInfo memory"
																									}
																								},
																								"id": 600,
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberLocation": "11594:7:0",
																								"memberName": "tokenId",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 1269,
																								"src": "11578:23:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								},
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								},
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"id": 594,
																							"name": "_computeTokenDelegationHash",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 401,
																							"src": "11409:27:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$_t_bytes32_$",
																								"typeString": "function (address,address,address,uint256) view returns (bytes32)"
																							}
																						},
																						"id": 601,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "11409:214:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					},
																					"src": "11373:250:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 608,
																				"nodeType": "IfStatement",
																				"src": "11348:347:0",
																				"trueBody": {
																					"id": 607,
																					"nodeType": "Block",
																					"src": "11642:53:0",
																					"statements": [
																						{
																							"expression": {
																								"id": 605,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftHandSide": {
																									"id": 603,
																									"name": "valid",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 547,
																									"src": "11664:5:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_bool",
																										"typeString": "bool"
																									}
																								},
																								"nodeType": "Assignment",
																								"operator": "=",
																								"rightHandSide": {
																									"hexValue": "74727565",
																									"id": 604,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "bool",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "11672:4:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_bool",
																										"typeString": "bool"
																									},
																									"value": "true"
																								},
																								"src": "11664:12:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bool",
																									"typeString": "bool"
																								}
																							},
																							"id": 606,
																							"nodeType": "ExpressionStatement",
																							"src": "11664:12:0"
																						}
																					]
																				}
																			}
																		]
																	}
																},
																"id": 611,
																"nodeType": "IfStatement",
																"src": "10878:831:0",
																"trueBody": {
																	"id": 587,
																	"nodeType": "Block",
																	"src": "10936:333:0",
																	"statements": [
																		{
																			"condition": {
																				"commonType": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				},
																				"id": 580,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 573,
																					"name": "delegateHash",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 518,
																					"src": "10979:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"arguments": [
																						{
																							"id": 575,
																							"name": "vault",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 534,
																							"src": "11071:5:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						{
																							"id": 576,
																							"name": "delegate",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 475,
																							"src": "11102:8:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						{
																							"expression": {
																								"id": 577,
																								"name": "delegationInfo_",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 528,
																								"src": "11136:15:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_DelegationInfo_$1270_memory_ptr",
																									"typeString": "struct IDelegationRegistry.DelegationInfo memory"
																								}
																							},
																							"id": 578,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "11152:9:0",
																							"memberName": "contract_",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1267,
																							"src": "11136:25:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							},
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							},
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 574,
																						"name": "_computeContractDelegationHash",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 360,
																						"src": "11015:30:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_address_$returns$_t_bytes32_$",
																							"typeString": "function (address,address,address) view returns (bytes32)"
																						}
																					},
																					"id": 579,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "11015:168:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				"src": "10979:204:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"id": 586,
																			"nodeType": "IfStatement",
																			"src": "10954:301:0",
																			"trueBody": {
																				"id": 585,
																				"nodeType": "Block",
																				"src": "11202:53:0",
																				"statements": [
																					{
																						"expression": {
																							"id": 583,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftHandSide": {
																								"id": 581,
																								"name": "valid",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 547,
																								"src": "11224:5:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bool",
																									"typeString": "bool"
																								}
																							},
																							"nodeType": "Assignment",
																							"operator": "=",
																							"rightHandSide": {
																								"hexValue": "74727565",
																								"id": 582,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "bool",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "11232:4:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bool",
																									"typeString": "bool"
																								},
																								"value": "true"
																							},
																							"src": "11224:12:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							}
																						},
																						"id": 584,
																						"nodeType": "ExpressionStatement",
																						"src": "11224:12:0"
																					}
																				]
																			}
																		}
																	]
																}
															},
															"id": 612,
															"nodeType": "IfStatement",
															"src": "10632:1077:0",
															"trueBody": {
																"id": 567,
																"nodeType": "Block",
																"src": "10685:187:0",
																"statements": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			},
																			"id": 560,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 555,
																				"name": "delegateHash",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 518,
																				"src": "10728:12:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"arguments": [
																					{
																						"id": 557,
																						"name": "vault",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 534,
																						"src": "10770:5:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"id": 558,
																						"name": "delegate",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 475,
																						"src": "10777:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						},
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"id": 556,
																					"name": "_computeAllDelegationHash",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 322,
																					"src": "10744:25:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bytes32_$",
																						"typeString": "function (address,address) view returns (bytes32)"
																					}
																				},
																				"id": 559,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10744:42:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"src": "10728:58:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 566,
																		"nodeType": "IfStatement",
																		"src": "10703:155:0",
																		"trueBody": {
																			"id": 565,
																			"nodeType": "Block",
																			"src": "10805:53:0",
																			"statements": [
																				{
																					"expression": {
																						"id": 563,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"id": 561,
																							"name": "valid",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 547,
																							"src": "10827:5:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "=",
																						"rightHandSide": {
																							"hexValue": "74727565",
																							"id": 562,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "bool",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "10835:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							},
																							"value": "true"
																						},
																						"src": "10827:12:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"id": 564,
																					"nodeType": "ExpressionStatement",
																					"src": "10827:12:0"
																				}
																			]
																		}
																	}
																]
															}
														},
														{
															"condition": {
																"id": 613,
																"name": "valid",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 547,
																"src": "11726:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 622,
															"nodeType": "IfStatement",
															"src": "11722:85:0",
															"trueBody": {
																"id": 621,
																"nodeType": "Block",
																"src": "11733:74:0",
																"statements": [
																	{
																		"expression": {
																			"id": 619,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 614,
																					"name": "info",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 480,
																					"src": "11751:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_struct$_DelegationInfo_$1270_memory_ptr_$dyn_memory_ptr",
																						"typeString": "struct IDelegationRegistry.DelegationInfo memory[] memory"
																					}
																				},
																				"id": 617,
																				"indexExpression": {
																					"id": 616,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "UnaryOperation",
																					"operator": "++",
																					"prefix": false,
																					"src": "11756:17:0",
																					"subExpression": {
																						"id": 615,
																						"name": "delegationCount",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 498,
																						"src": "11756:15:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "11751:23:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_DelegationInfo_$1270_memory_ptr",
																					"typeString": "struct IDelegationRegistry.DelegationInfo memory"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 618,
																				"name": "delegationInfo_",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 528,
																				"src": "11777:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_DelegationInfo_$1270_memory_ptr",
																					"typeString": "struct IDelegationRegistry.DelegationInfo memory"
																				}
																			},
																			"src": "11751:41:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_DelegationInfo_$1270_memory_ptr",
																				"typeString": "struct IDelegationRegistry.DelegationInfo memory"
																			}
																		},
																		"id": 620,
																		"nodeType": "ExpressionStatement",
																		"src": "11751:41:0"
																	}
																]
															}
														},
														{
															"id": 626,
															"nodeType": "UncheckedBlock",
															"src": "11820:46:0",
															"statements": [
																{
																	"expression": {
																		"id": 624,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "++",
																		"prefix": true,
																		"src": "11848:3:0",
																		"subExpression": {
																			"id": 623,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 511,
																			"src": "11850:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 625,
																	"nodeType": "ExpressionStatement",
																	"src": "11848:3:0"
																}
															]
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 516,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 514,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 511,
														"src": "10232:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 515,
														"name": "potentialDelegationHashesLength",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 492,
														"src": "10236:31:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10232:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 628,
												"initializationExpression": {
													"assignments": [
														511
													],
													"declarations": [
														{
															"constant": false,
															"id": 511,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "10225:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 628,
															"src": "10217:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 510,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "10217:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 513,
													"initialValue": {
														"hexValue": "30",
														"id": 512,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10229:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "10217:13:0"
												},
												"isSimpleCounterLoop": false,
												"nodeType": "ForStatement",
												"src": "10212:1664:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 631,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 629,
														"name": "potentialDelegationHashesLength",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 492,
														"src": "11889:31:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 630,
														"name": "delegationCount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 498,
														"src": "11923:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11889:49:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 634,
												"nodeType": "IfStatement",
												"src": "11885:304:0",
												"trueBody": {
													"id": 633,
													"nodeType": "Block",
													"src": "11940:249:0",
													"statements": [
														{
															"AST": {
																"nativeSrc": "11963:216:0",
																"nodeType": "YulBlock",
																"src": "11963:216:0",
																"statements": [
																	{
																		"nativeSrc": "11981:127:0",
																		"nodeType": "YulVariableDeclaration",
																		"src": "11981:127:0",
																		"value": {
																			"arguments": [
																				{
																					"name": "potentialDelegationHashesLength",
																					"nativeSrc": "12022:31:0",
																					"nodeType": "YulIdentifier",
																					"src": "12022:31:0"
																				},
																				{
																					"name": "delegationCount",
																					"nativeSrc": "12075:15:0",
																					"nodeType": "YulIdentifier",
																					"src": "12075:15:0"
																				}
																			],
																			"functionName": {
																				"name": "sub",
																				"nativeSrc": "11997:3:0",
																				"nodeType": "YulIdentifier",
																				"src": "11997:3:0"
																			},
																			"nativeSrc": "11997:111:0",
																			"nodeType": "YulFunctionCall",
																			"src": "11997:111:0"
																		},
																		"variables": [
																			{
																				"name": "decrease",
																				"nativeSrc": "11985:8:0",
																				"nodeType": "YulTypedName",
																				"src": "11985:8:0",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "info",
																					"nativeSrc": "12132:4:0",
																					"nodeType": "YulIdentifier",
																					"src": "12132:4:0"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "info",
																									"nativeSrc": "12148:4:0",
																									"nodeType": "YulIdentifier",
																									"src": "12148:4:0"
																								}
																							],
																							"functionName": {
																								"name": "mload",
																								"nativeSrc": "12142:5:0",
																								"nodeType": "YulIdentifier",
																								"src": "12142:5:0"
																							},
																							"nativeSrc": "12142:11:0",
																							"nodeType": "YulFunctionCall",
																							"src": "12142:11:0"
																						},
																						{
																							"name": "decrease",
																							"nativeSrc": "12155:8:0",
																							"nodeType": "YulIdentifier",
																							"src": "12155:8:0"
																						}
																					],
																					"functionName": {
																						"name": "sub",
																						"nativeSrc": "12138:3:0",
																						"nodeType": "YulIdentifier",
																						"src": "12138:3:0"
																					},
																					"nativeSrc": "12138:26:0",
																					"nodeType": "YulFunctionCall",
																					"src": "12138:26:0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "12125:6:0",
																				"nodeType": "YulIdentifier",
																				"src": "12125:6:0"
																			},
																			"nativeSrc": "12125:40:0",
																			"nodeType": "YulFunctionCall",
																			"src": "12125:40:0"
																		},
																		"nativeSrc": "12125:40:0",
																		"nodeType": "YulExpressionStatement",
																		"src": "12125:40:0"
																	}
																]
															},
															"evmVersion": "cancun",
															"externalReferences": [
																{
																	"declaration": 498,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "12075:15:0",
																	"valueSize": 1
																},
																{
																	"declaration": 480,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "12132:4:0",
																	"valueSize": 1
																},
																{
																	"declaration": 480,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "12148:4:0",
																	"valueSize": 1
																},
																{
																	"declaration": 492,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "12022:31:0",
																	"valueSize": 1
																}
															],
															"id": 632,
															"nodeType": "InlineAssembly",
															"src": "11954:225:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 473,
										"nodeType": "StructuredDocumentation",
										"src": "9651:50:0",
										"text": " @inheritdoc IDelegationRegistry"
									},
									"functionSelector": "4fc69282",
									"id": 636,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getDelegationsByDelegate",
									"nameLocation": "9715:24:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 476,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 475,
												"mutability": "mutable",
												"name": "delegate",
												"nameLocation": "9757:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 636,
												"src": "9749:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 474,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9749:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9739:32:0"
									},
									"returnParameters": {
										"id": 481,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 480,
												"mutability": "mutable",
												"name": "info",
												"nameLocation": "9839:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 636,
												"src": "9795:48:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_DelegationInfo_$1270_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct IDelegationRegistry.DelegationInfo[]"
												},
												"typeName": {
													"baseType": {
														"id": 478,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 477,
															"name": "IDelegationRegistry.DelegationInfo",
															"nameLocations": [
																"9795:19:0",
																"9815:14:0"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 1270,
															"src": "9795:34:0"
														},
														"referencedDeclaration": 1270,
														"src": "9795:34:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_DelegationInfo_$1270_storage_ptr",
															"typeString": "struct IDelegationRegistry.DelegationInfo"
														}
													},
													"id": 479,
													"nodeType": "ArrayTypeName",
													"src": "9795:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_DelegationInfo_$1270_storage_$dyn_storage_ptr",
														"typeString": "struct IDelegationRegistry.DelegationInfo[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9794:50:0"
									},
									"scope": 1248,
									"src": "9706:2489:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1394
									],
									"body": {
										"id": 657,
										"nodeType": "Block",
										"src": "12364:197:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 646,
															"name": "vault",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 639,
															"src": "12432:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"expression": {
																	"id": 647,
																	"name": "IDelegationRegistry",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1475,
																	"src": "12455:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IDelegationRegistry_$1475_$",
																		"typeString": "type(contract IDelegationRegistry)"
																	}
																},
																"id": 648,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "12475:14:0",
																"memberName": "DelegationType",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1257,
																"src": "12455:34:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_DelegationType_$1257_$",
																	"typeString": "type(enum IDelegationRegistry.DelegationType)"
																}
															},
															"id": 649,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "12490:3:0",
															"memberName": "ALL",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1254,
															"src": "12455:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_DelegationType_$1257",
																"typeString": "enum IDelegationRegistry.DelegationType"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 652,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12519:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 651,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12511:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 650,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12511:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 653,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12511:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "30",
															"id": 654,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12539:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_enum$_DelegationType_$1257",
																"typeString": "enum IDelegationRegistry.DelegationType"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 645,
														"name": "_getDelegatesForLevel",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 882,
														"src": "12393:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_enum$_DelegationType_$1257_$_t_address_$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
															"typeString": "function (address,enum IDelegationRegistry.DelegationType,address,uint256) view returns (address[] memory)"
														}
													},
													"id": 655,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12393:161:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
														"typeString": "address[] memory"
													}
												},
												"functionReturnParameters": 644,
												"id": 656,
												"nodeType": "Return",
												"src": "12374:180:0"
											}
										]
									},
									"documentation": {
										"id": 637,
										"nodeType": "StructuredDocumentation",
										"src": "12201:50:0",
										"text": " @inheritdoc IDelegationRegistry"
									},
									"functionSelector": "1b61f675",
									"id": 658,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getDelegatesForAll",
									"nameLocation": "12265:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 640,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 639,
												"mutability": "mutable",
												"name": "vault",
												"nameLocation": "12301:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 658,
												"src": "12293:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 638,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12293:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12283:29:0"
									},
									"returnParameters": {
										"id": 644,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 643,
												"mutability": "mutable",
												"name": "delegates",
												"nameLocation": "12353:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 658,
												"src": "12336:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 641,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "12336:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 642,
													"nodeType": "ArrayTypeName",
													"src": "12336:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12335:28:0"
									},
									"scope": 1248,
									"src": "12256:305:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1405
									],
									"body": {
										"id": 679,
										"nodeType": "Block",
										"src": "12771:201:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 671,
															"name": "vault",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 661,
															"src": "12839:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"expression": {
																	"id": 672,
																	"name": "IDelegationRegistry",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1475,
																	"src": "12862:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IDelegationRegistry_$1475_$",
																		"typeString": "type(contract IDelegationRegistry)"
																	}
																},
																"id": 673,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "12882:14:0",
																"memberName": "DelegationType",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1257,
																"src": "12862:34:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_DelegationType_$1257_$",
																	"typeString": "type(enum IDelegationRegistry.DelegationType)"
																}
															},
															"id": 674,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "12897:8:0",
															"memberName": "CONTRACT",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1255,
															"src": "12862:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_DelegationType_$1257",
																"typeString": "enum IDelegationRegistry.DelegationType"
															}
														},
														{
															"id": 675,
															"name": "contract_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 663,
															"src": "12923:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "30",
															"id": 676,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12950:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_enum$_DelegationType_$1257",
																"typeString": "enum IDelegationRegistry.DelegationType"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 670,
														"name": "_getDelegatesForLevel",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 882,
														"src": "12800:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_enum$_DelegationType_$1257_$_t_address_$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
															"typeString": "function (address,enum IDelegationRegistry.DelegationType,address,uint256) view returns (address[] memory)"
														}
													},
													"id": 677,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12800:165:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
														"typeString": "address[] memory"
													}
												},
												"functionReturnParameters": 669,
												"id": 678,
												"nodeType": "Return",
												"src": "12781:184:0"
											}
										]
									},
									"documentation": {
										"id": 659,
										"nodeType": "StructuredDocumentation",
										"src": "12567:50:0",
										"text": " @inheritdoc IDelegationRegistry"
									},
									"functionSelector": "ed4b878e",
									"id": 680,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getDelegatesForContract",
									"nameLocation": "12631:23:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 665,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "12725:8:0"
									},
									"parameters": {
										"id": 664,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 661,
												"mutability": "mutable",
												"name": "vault",
												"nameLocation": "12672:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 680,
												"src": "12664:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 660,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12664:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 663,
												"mutability": "mutable",
												"name": "contract_",
												"nameLocation": "12695:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 680,
												"src": "12687:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 662,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12687:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12654:56:0"
									},
									"returnParameters": {
										"id": 669,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 668,
												"mutability": "mutable",
												"name": "delegates",
												"nameLocation": "12760:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 680,
												"src": "12743:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 666,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "12743:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 667,
													"nodeType": "ArrayTypeName",
													"src": "12743:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12742:28:0"
									},
									"scope": 1248,
									"src": "12622:350:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1418
									],
									"body": {
										"id": 703,
										"nodeType": "Block",
										"src": "13204:204:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 695,
															"name": "vault",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 683,
															"src": "13272:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"expression": {
																	"id": 696,
																	"name": "IDelegationRegistry",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1475,
																	"src": "13295:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IDelegationRegistry_$1475_$",
																		"typeString": "type(contract IDelegationRegistry)"
																	}
																},
																"id": 697,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "13315:14:0",
																"memberName": "DelegationType",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1257,
																"src": "13295:34:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_DelegationType_$1257_$",
																	"typeString": "type(enum IDelegationRegistry.DelegationType)"
																}
															},
															"id": 698,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "13330:5:0",
															"memberName": "TOKEN",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1256,
															"src": "13295:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_DelegationType_$1257",
																"typeString": "enum IDelegationRegistry.DelegationType"
															}
														},
														{
															"id": 699,
															"name": "contract_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 685,
															"src": "13353:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 700,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 687,
															"src": "13380:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_enum$_DelegationType_$1257",
																"typeString": "enum IDelegationRegistry.DelegationType"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 694,
														"name": "_getDelegatesForLevel",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 882,
														"src": "13233:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_enum$_DelegationType_$1257_$_t_address_$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
															"typeString": "function (address,enum IDelegationRegistry.DelegationType,address,uint256) view returns (address[] memory)"
														}
													},
													"id": 701,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13233:168:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
														"typeString": "address[] memory"
													}
												},
												"functionReturnParameters": 693,
												"id": 702,
												"nodeType": "Return",
												"src": "13214:187:0"
											}
										]
									},
									"documentation": {
										"id": 681,
										"nodeType": "StructuredDocumentation",
										"src": "12978:50:0",
										"text": " @inheritdoc IDelegationRegistry"
									},
									"functionSelector": "1221156b",
									"id": 704,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getDelegatesForToken",
									"nameLocation": "13042:20:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 689,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "13158:8:0"
									},
									"parameters": {
										"id": 688,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 683,
												"mutability": "mutable",
												"name": "vault",
												"nameLocation": "13080:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 704,
												"src": "13072:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 682,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13072:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 685,
												"mutability": "mutable",
												"name": "contract_",
												"nameLocation": "13103:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 704,
												"src": "13095:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 684,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13095:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 687,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13130:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 704,
												"src": "13122:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 686,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13122:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13062:81:0"
									},
									"returnParameters": {
										"id": 693,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 692,
												"mutability": "mutable",
												"name": "delegates",
												"nameLocation": "13193:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 704,
												"src": "13176:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 690,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "13176:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 691,
													"nodeType": "ArrayTypeName",
													"src": "13176:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13175:28:0"
									},
									"scope": 1248,
									"src": "13033:375:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 881,
										"nodeType": "Block",
										"src": "13636:3149:0",
										"statements": [
											{
												"assignments": [
													723
												],
												"declarations": [
													{
														"constant": false,
														"id": 723,
														"mutability": "mutable",
														"name": "delegationHashes_",
														"nameLocation": "13679:17:0",
														"nodeType": "VariableDeclaration",
														"scope": 881,
														"src": "13646:50:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Bytes32Set_$1716_storage_ptr",
															"typeString": "struct EnumerableSet.Bytes32Set"
														},
														"typeName": {
															"id": 722,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 721,
																"name": "EnumerableSet.Bytes32Set",
																"nameLocations": [
																	"13646:13:0",
																	"13660:10:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1716,
																"src": "13646:24:0"
															},
															"referencedDeclaration": 1716,
															"src": "13646:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bytes32Set_$1716_storage_ptr",
																"typeString": "struct EnumerableSet.Bytes32Set"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 731,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 724,
															"name": "delegations",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 28,
															"src": "13699:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Bytes32Set_$1716_storage_$_$",
																"typeString": "mapping(address => mapping(uint256 => struct EnumerableSet.Bytes32Set storage ref))"
															}
														},
														"id": 726,
														"indexExpression": {
															"id": 725,
															"name": "vault",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 706,
															"src": "13711:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "13699:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Bytes32Set_$1716_storage_$",
															"typeString": "mapping(uint256 => struct EnumerableSet.Bytes32Set storage ref)"
														}
													},
													"id": 730,
													"indexExpression": {
														"baseExpression": {
															"id": 727,
															"name": "vaultVersion",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 33,
															"src": "13731:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 729,
														"indexExpression": {
															"id": 728,
															"name": "vault",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 706,
															"src": "13744:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "13731:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "13699:61:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$1716_storage",
														"typeString": "struct EnumerableSet.Bytes32Set storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13646:114:0"
											},
											{
												"assignments": [
													733
												],
												"declarations": [
													{
														"constant": false,
														"id": 733,
														"mutability": "mutable",
														"name": "potentialDelegatesLength",
														"nameLocation": "13778:24:0",
														"nodeType": "VariableDeclaration",
														"scope": 881,
														"src": "13770:32:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 732,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13770:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 737,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 734,
															"name": "delegationHashes_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 723,
															"src": "13805:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bytes32Set_$1716_storage_ptr",
																"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
															}
														},
														"id": 735,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "13823:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1785,
														"src": "13805:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32Set_$1716_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Bytes32Set_$1716_storage_ptr_$",
															"typeString": "function (struct EnumerableSet.Bytes32Set storage pointer) view returns (uint256)"
														}
													},
													"id": 736,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13805:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13770:61:0"
											},
											{
												"assignments": [
													739
												],
												"declarations": [
													{
														"constant": false,
														"id": 739,
														"mutability": "mutable",
														"name": "delegatesCount",
														"nameLocation": "13849:14:0",
														"nodeType": "VariableDeclaration",
														"scope": 881,
														"src": "13841:22:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 738,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13841:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 741,
												"initialValue": {
													"hexValue": "30",
													"id": 740,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13866:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13841:26:0"
											},
											{
												"expression": {
													"id": 748,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 742,
														"name": "delegates",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 717,
														"src": "13877:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[] memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 746,
																"name": "potentialDelegatesLength",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 733,
																"src": "13903:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 745,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "NewExpression",
															"src": "13889:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
																"typeString": "function (uint256) pure returns (address[] memory)"
															},
															"typeName": {
																"baseType": {
																	"id": 743,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "13893:7:0",
																	"stateMutability": "nonpayable",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 744,
																"nodeType": "ArrayTypeName",
																"src": "13893:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																	"typeString": "address[]"
																}
															}
														},
														"id": 747,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "13889:39:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[] memory"
														}
													},
													"src": "13877:51:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
														"typeString": "address[] memory"
													}
												},
												"id": 749,
												"nodeType": "ExpressionStatement",
												"src": "13877:51:0"
											},
											{
												"body": {
													"id": 873,
													"nodeType": "Block",
													"src": "13990:2540:0",
													"statements": [
														{
															"assignments": [
																758
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 758,
																	"mutability": "mutable",
																	"name": "delegationHash",
																	"nameLocation": "14012:14:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 873,
																	"src": "14004:22:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	"typeName": {
																		"id": 757,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "14004:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 763,
															"initialValue": {
																"arguments": [
																	{
																		"id": 761,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 751,
																		"src": "14050:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 759,
																		"name": "delegationHashes_",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 723,
																		"src": "14029:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Bytes32Set_$1716_storage_ptr",
																			"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																		}
																	},
																	"id": 760,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "14047:2:0",
																	"memberName": "at",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1803,
																	"src": "14029:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32Set_$1716_storage_ptr_$_t_uint256_$returns$_t_bytes32_$attached_to$_t_struct$_Bytes32Set_$1716_storage_ptr_$",
																		"typeString": "function (struct EnumerableSet.Bytes32Set storage pointer,uint256) view returns (bytes32)"
																	}
																},
																"id": 762,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14029:23:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "14004:48:0"
														},
														{
															"assignments": [
																766
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 766,
																	"mutability": "mutable",
																	"name": "delegationInfo_",
																	"nameLocation": "14089:15:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 873,
																	"src": "14066:38:0",
																	"stateVariable": false,
																	"storageLocation": "storage",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_DelegationInfo_$1270_storage_ptr",
																		"typeString": "struct IDelegationRegistry.DelegationInfo"
																	},
																	"typeName": {
																		"id": 765,
																		"nodeType": "UserDefinedTypeName",
																		"pathNode": {
																			"id": 764,
																			"name": "DelegationInfo",
																			"nameLocations": [
																				"14066:14:0"
																			],
																			"nodeType": "IdentifierPath",
																			"referencedDeclaration": 1270,
																			"src": "14066:14:0"
																		},
																		"referencedDeclaration": 1270,
																		"src": "14066:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_DelegationInfo_$1270_storage_ptr",
																			"typeString": "struct IDelegationRegistry.DelegationInfo"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 770,
															"initialValue": {
																"baseExpression": {
																	"id": 767,
																	"name": "delegationInfo",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 52,
																	"src": "14107:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_DelegationInfo_$1270_storage_$",
																		"typeString": "mapping(bytes32 => struct IDelegationRegistry.DelegationInfo storage ref)"
																	}
																},
																"id": 769,
																"indexExpression": {
																	"id": 768,
																	"name": "delegationHash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 758,
																	"src": "14139:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "14107:60:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_DelegationInfo_$1270_storage",
																	"typeString": "struct IDelegationRegistry.DelegationInfo storage ref"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "14066:101:0"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_enum$_DelegationType_$1257",
																	"typeString": "enum IDelegationRegistry.DelegationType"
																},
																"id": 774,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 771,
																		"name": "delegationInfo_",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 766,
																		"src": "14185:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_DelegationInfo_$1270_storage_ptr",
																			"typeString": "struct IDelegationRegistry.DelegationInfo storage pointer"
																		}
																	},
																	"id": 772,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "14201:5:0",
																	"memberName": "type_",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1261,
																	"src": "14185:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_DelegationType_$1257",
																		"typeString": "enum IDelegationRegistry.DelegationType"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 773,
																	"name": "delegationType",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 709,
																	"src": "14210:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_DelegationType_$1257",
																		"typeString": "enum IDelegationRegistry.DelegationType"
																	}
																},
																"src": "14185:39:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 868,
															"nodeType": "IfStatement",
															"src": "14181:2280:0",
															"trueBody": {
																"id": 867,
																"nodeType": "Block",
																"src": "14226:2235:0",
																"statements": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_enum$_DelegationType_$1257",
																				"typeString": "enum IDelegationRegistry.DelegationType"
																			},
																			"id": 779,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 775,
																				"name": "delegationType",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 709,
																				"src": "14248:14:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_enum$_DelegationType_$1257",
																					"typeString": "enum IDelegationRegistry.DelegationType"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"expression": {
																					"expression": {
																						"id": 776,
																						"name": "IDelegationRegistry",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1475,
																						"src": "14266:19:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_IDelegationRegistry_$1475_$",
																							"typeString": "type(contract IDelegationRegistry)"
																						}
																					},
																					"id": 777,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "14286:14:0",
																					"memberName": "DelegationType",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1257,
																					"src": "14266:34:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_enum$_DelegationType_$1257_$",
																						"typeString": "type(enum IDelegationRegistry.DelegationType)"
																					}
																				},
																				"id": 778,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberLocation": "14301:3:0",
																				"memberName": "ALL",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1254,
																				"src": "14266:38:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_enum$_DelegationType_$1257",
																					"typeString": "enum IDelegationRegistry.DelegationType"
																				}
																			},
																			"src": "14248:56:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseBody": {
																			"condition": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_DelegationType_$1257",
																					"typeString": "enum IDelegationRegistry.DelegationType"
																				},
																				"id": 802,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 798,
																					"name": "delegationType",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 709,
																					"src": "14783:14:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_DelegationType_$1257",
																						"typeString": "enum IDelegationRegistry.DelegationType"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"expression": {
																							"id": 799,
																							"name": "IDelegationRegistry",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1475,
																							"src": "14821:19:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_contract$_IDelegationRegistry_$1475_$",
																								"typeString": "type(contract IDelegationRegistry)"
																							}
																						},
																						"id": 800,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "14841:14:0",
																						"memberName": "DelegationType",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1257,
																						"src": "14821:34:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_DelegationType_$1257_$",
																							"typeString": "type(enum IDelegationRegistry.DelegationType)"
																						}
																					},
																					"id": 801,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "14856:8:0",
																					"memberName": "CONTRACT",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1255,
																					"src": "14821:43:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_DelegationType_$1257",
																						"typeString": "enum IDelegationRegistry.DelegationType"
																					}
																				},
																				"src": "14783:81:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"falseBody": {
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_enum$_DelegationType_$1257",
																						"typeString": "enum IDelegationRegistry.DelegationType"
																					},
																					"id": 832,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 828,
																						"name": "delegationType",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 709,
																						"src": "15569:14:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_DelegationType_$1257",
																							"typeString": "enum IDelegationRegistry.DelegationType"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 829,
																								"name": "IDelegationRegistry",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1475,
																								"src": "15587:19:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IDelegationRegistry_$1475_$",
																									"typeString": "type(contract IDelegationRegistry)"
																								}
																							},
																							"id": 830,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "15607:14:0",
																							"memberName": "DelegationType",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1257,
																							"src": "15587:34:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_enum$_DelegationType_$1257_$",
																								"typeString": "type(enum IDelegationRegistry.DelegationType)"
																							}
																						},
																						"id": 831,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "15622:5:0",
																						"memberName": "TOKEN",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1256,
																						"src": "15587:40:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_DelegationType_$1257",
																							"typeString": "enum IDelegationRegistry.DelegationType"
																						}
																					},
																					"src": "15569:58:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 864,
																				"nodeType": "IfStatement",
																				"src": "15544:903:0",
																				"trueBody": {
																					"id": 863,
																					"nodeType": "Block",
																					"src": "15646:801:0",
																					"statements": [
																						{
																							"condition": {
																								"commonType": {
																									"typeIdentifier": "t_bool",
																									"typeString": "bool"
																								},
																								"id": 841,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"commonType": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									},
																									"id": 836,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftExpression": {
																										"expression": {
																											"id": 833,
																											"name": "delegationInfo_",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 766,
																											"src": "15697:15:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_struct$_DelegationInfo_$1270_storage_ptr",
																												"typeString": "struct IDelegationRegistry.DelegationInfo storage pointer"
																											}
																										},
																										"id": 834,
																										"isConstant": false,
																										"isLValue": true,
																										"isPure": false,
																										"lValueRequested": false,
																										"memberLocation": "15713:9:0",
																										"memberName": "contract_",
																										"nodeType": "MemberAccess",
																										"referencedDeclaration": 1267,
																										"src": "15697:25:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									},
																									"nodeType": "BinaryOperation",
																									"operator": "==",
																									"rightExpression": {
																										"id": 835,
																										"name": "contract_",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 711,
																										"src": "15726:9:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									},
																									"src": "15697:38:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_bool",
																										"typeString": "bool"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "&&",
																								"rightExpression": {
																									"commonType": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									},
																									"id": 840,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftExpression": {
																										"expression": {
																											"id": 837,
																											"name": "delegationInfo_",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 766,
																											"src": "15763:15:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_struct$_DelegationInfo_$1270_storage_ptr",
																												"typeString": "struct IDelegationRegistry.DelegationInfo storage pointer"
																											}
																										},
																										"id": 838,
																										"isConstant": false,
																										"isLValue": true,
																										"isPure": false,
																										"lValueRequested": false,
																										"memberLocation": "15779:7:0",
																										"memberName": "tokenId",
																										"nodeType": "MemberAccess",
																										"referencedDeclaration": 1269,
																										"src": "15763:23:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"nodeType": "BinaryOperation",
																									"operator": "==",
																									"rightExpression": {
																										"id": 839,
																										"name": "tokenId",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 713,
																										"src": "15790:7:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"src": "15763:34:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_bool",
																										"typeString": "bool"
																									}
																								},
																								"src": "15697:100:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bool",
																									"typeString": "bool"
																								}
																							},
																							"id": 862,
																							"nodeType": "IfStatement",
																							"src": "15668:761:0",
																							"trueBody": {
																								"id": 861,
																								"nodeType": "Block",
																								"src": "15820:609:0",
																								"statements": [
																									{
																										"condition": {
																											"commonType": {
																												"typeIdentifier": "t_bytes32",
																												"typeString": "bytes32"
																											},
																											"id": 850,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": false,
																											"lValueRequested": false,
																											"leftExpression": {
																												"id": 842,
																												"name": "delegationHash",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 758,
																												"src": "15952:14:0",
																												"typeDescriptions": {
																													"typeIdentifier": "t_bytes32",
																													"typeString": "bytes32"
																												}
																											},
																											"nodeType": "BinaryOperation",
																											"operator": "==",
																											"rightExpression": {
																												"arguments": [
																													{
																														"id": 844,
																														"name": "vault",
																														"nodeType": "Identifier",
																														"overloadedDeclarations": [],
																														"referencedDeclaration": 706,
																														"src": "16059:5:0",
																														"typeDescriptions": {
																															"typeIdentifier": "t_address",
																															"typeString": "address"
																														}
																													},
																													{
																														"expression": {
																															"id": 845,
																															"name": "delegationInfo_",
																															"nodeType": "Identifier",
																															"overloadedDeclarations": [],
																															"referencedDeclaration": 766,
																															"src": "16098:15:0",
																															"typeDescriptions": {
																																"typeIdentifier": "t_struct$_DelegationInfo_$1270_storage_ptr",
																																"typeString": "struct IDelegationRegistry.DelegationInfo storage pointer"
																															}
																														},
																														"id": 846,
																														"isConstant": false,
																														"isLValue": true,
																														"isPure": false,
																														"lValueRequested": false,
																														"memberLocation": "16114:8:0",
																														"memberName": "delegate",
																														"nodeType": "MemberAccess",
																														"referencedDeclaration": 1265,
																														"src": "16098:24:0",
																														"typeDescriptions": {
																															"typeIdentifier": "t_address",
																															"typeString": "address"
																														}
																													},
																													{
																														"id": 847,
																														"name": "contract_",
																														"nodeType": "Identifier",
																														"overloadedDeclarations": [],
																														"referencedDeclaration": 711,
																														"src": "16156:9:0",
																														"typeDescriptions": {
																															"typeIdentifier": "t_address",
																															"typeString": "address"
																														}
																													},
																													{
																														"id": 848,
																														"name": "tokenId",
																														"nodeType": "Identifier",
																														"overloadedDeclarations": [],
																														"referencedDeclaration": 713,
																														"src": "16199:7:0",
																														"typeDescriptions": {
																															"typeIdentifier": "t_uint256",
																															"typeString": "uint256"
																														}
																													}
																												],
																												"expression": {
																													"argumentTypes": [
																														{
																															"typeIdentifier": "t_address",
																															"typeString": "address"
																														},
																														{
																															"typeIdentifier": "t_address",
																															"typeString": "address"
																														},
																														{
																															"typeIdentifier": "t_address",
																															"typeString": "address"
																														},
																														{
																															"typeIdentifier": "t_uint256",
																															"typeString": "uint256"
																														}
																													],
																													"id": 843,
																													"name": "_computeTokenDelegationHash",
																													"nodeType": "Identifier",
																													"overloadedDeclarations": [],
																													"referencedDeclaration": 401,
																													"src": "15998:27:0",
																													"typeDescriptions": {
																														"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$_t_bytes32_$",
																														"typeString": "function (address,address,address,uint256) view returns (bytes32)"
																													}
																												},
																												"id": 849,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": false,
																												"kind": "functionCall",
																												"lValueRequested": false,
																												"nameLocations": [],
																												"names": [],
																												"nodeType": "FunctionCall",
																												"src": "15998:238:0",
																												"tryCall": false,
																												"typeDescriptions": {
																													"typeIdentifier": "t_bytes32",
																													"typeString": "bytes32"
																												}
																											},
																											"src": "15952:284:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_bool",
																												"typeString": "bool"
																											}
																										},
																										"id": 860,
																										"nodeType": "IfStatement",
																										"src": "15919:488:0",
																										"trueBody": {
																											"id": 859,
																											"nodeType": "Block",
																											"src": "16263:144:0",
																											"statements": [
																												{
																													"expression": {
																														"id": 857,
																														"isConstant": false,
																														"isLValue": false,
																														"isPure": false,
																														"lValueRequested": false,
																														"leftHandSide": {
																															"baseExpression": {
																																"id": 851,
																																"name": "delegates",
																																"nodeType": "Identifier",
																																"overloadedDeclarations": [],
																																"referencedDeclaration": 717,
																																"src": "16293:9:0",
																																"typeDescriptions": {
																																	"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																																	"typeString": "address[] memory"
																																}
																															},
																															"id": 854,
																															"indexExpression": {
																																"id": 853,
																																"isConstant": false,
																																"isLValue": false,
																																"isPure": false,
																																"lValueRequested": false,
																																"nodeType": "UnaryOperation",
																																"operator": "++",
																																"prefix": false,
																																"src": "16303:16:0",
																																"subExpression": {
																																	"id": 852,
																																	"name": "delegatesCount",
																																	"nodeType": "Identifier",
																																	"overloadedDeclarations": [],
																																	"referencedDeclaration": 739,
																																	"src": "16303:14:0",
																																	"typeDescriptions": {
																																		"typeIdentifier": "t_uint256",
																																		"typeString": "uint256"
																																	}
																																},
																																"typeDescriptions": {
																																	"typeIdentifier": "t_uint256",
																																	"typeString": "uint256"
																																}
																															},
																															"isConstant": false,
																															"isLValue": true,
																															"isPure": false,
																															"lValueRequested": true,
																															"nodeType": "IndexAccess",
																															"src": "16293:27:0",
																															"typeDescriptions": {
																																"typeIdentifier": "t_address",
																																"typeString": "address"
																															}
																														},
																														"nodeType": "Assignment",
																														"operator": "=",
																														"rightHandSide": {
																															"expression": {
																																"id": 855,
																																"name": "delegationInfo_",
																																"nodeType": "Identifier",
																																"overloadedDeclarations": [],
																																"referencedDeclaration": 766,
																																"src": "16323:15:0",
																																"typeDescriptions": {
																																	"typeIdentifier": "t_struct$_DelegationInfo_$1270_storage_ptr",
																																	"typeString": "struct IDelegationRegistry.DelegationInfo storage pointer"
																																}
																															},
																															"id": 856,
																															"isConstant": false,
																															"isLValue": true,
																															"isPure": false,
																															"lValueRequested": false,
																															"memberLocation": "16372:8:0",
																															"memberName": "delegate",
																															"nodeType": "MemberAccess",
																															"referencedDeclaration": 1265,
																															"src": "16323:57:0",
																															"typeDescriptions": {
																																"typeIdentifier": "t_address",
																																"typeString": "address"
																															}
																														},
																														"src": "16293:87:0",
																														"typeDescriptions": {
																															"typeIdentifier": "t_address",
																															"typeString": "address"
																														}
																													},
																													"id": 858,
																													"nodeType": "ExpressionStatement",
																													"src": "16293:87:0"
																												}
																											]
																										}
																									}
																								]
																							}
																						}
																					]
																				}
																			},
																			"id": 865,
																			"nodeType": "IfStatement",
																			"src": "14758:1689:0",
																			"trueBody": {
																				"id": 827,
																				"nodeType": "Block",
																				"src": "14883:655:0",
																				"statements": [
																					{
																						"condition": {
																							"commonType": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							},
																							"id": 806,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"expression": {
																									"id": 803,
																									"name": "delegationInfo_",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 766,
																									"src": "14909:15:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_DelegationInfo_$1270_storage_ptr",
																										"typeString": "struct IDelegationRegistry.DelegationInfo storage pointer"
																									}
																								},
																								"id": 804,
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberLocation": "14925:9:0",
																								"memberName": "contract_",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 1267,
																								"src": "14909:25:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "==",
																							"rightExpression": {
																								"id": 805,
																								"name": "contract_",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 711,
																								"src": "14938:9:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							"src": "14909:38:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							}
																						},
																						"id": 826,
																						"nodeType": "IfStatement",
																						"src": "14905:615:0",
																						"trueBody": {
																							"id": 825,
																							"nodeType": "Block",
																							"src": "14949:571:0",
																							"statements": [
																								{
																									"condition": {
																										"commonType": {
																											"typeIdentifier": "t_bytes32",
																											"typeString": "bytes32"
																										},
																										"id": 814,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"leftExpression": {
																											"id": 807,
																											"name": "delegationHash",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 758,
																											"src": "15081:14:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_bytes32",
																												"typeString": "bytes32"
																											}
																										},
																										"nodeType": "BinaryOperation",
																										"operator": "==",
																										"rightExpression": {
																											"arguments": [
																												{
																													"id": 809,
																													"name": "vault",
																													"nodeType": "Identifier",
																													"overloadedDeclarations": [],
																													"referencedDeclaration": 706,
																													"src": "15191:5:0",
																													"typeDescriptions": {
																														"typeIdentifier": "t_address",
																														"typeString": "address"
																													}
																												},
																												{
																													"expression": {
																														"id": 810,
																														"name": "delegationInfo_",
																														"nodeType": "Identifier",
																														"overloadedDeclarations": [],
																														"referencedDeclaration": 766,
																														"src": "15230:15:0",
																														"typeDescriptions": {
																															"typeIdentifier": "t_struct$_DelegationInfo_$1270_storage_ptr",
																															"typeString": "struct IDelegationRegistry.DelegationInfo storage pointer"
																														}
																													},
																													"id": 811,
																													"isConstant": false,
																													"isLValue": true,
																													"isPure": false,
																													"lValueRequested": false,
																													"memberLocation": "15246:8:0",
																													"memberName": "delegate",
																													"nodeType": "MemberAccess",
																													"referencedDeclaration": 1265,
																													"src": "15230:24:0",
																													"typeDescriptions": {
																														"typeIdentifier": "t_address",
																														"typeString": "address"
																													}
																												},
																												{
																													"id": 812,
																													"name": "contract_",
																													"nodeType": "Identifier",
																													"overloadedDeclarations": [],
																													"referencedDeclaration": 711,
																													"src": "15288:9:0",
																													"typeDescriptions": {
																														"typeIdentifier": "t_address",
																														"typeString": "address"
																													}
																												}
																											],
																											"expression": {
																												"argumentTypes": [
																													{
																														"typeIdentifier": "t_address",
																														"typeString": "address"
																													},
																													{
																														"typeIdentifier": "t_address",
																														"typeString": "address"
																													},
																													{
																														"typeIdentifier": "t_address",
																														"typeString": "address"
																													}
																												],
																												"id": 808,
																												"name": "_computeContractDelegationHash",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 360,
																												"src": "15127:30:0",
																												"typeDescriptions": {
																													"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_address_$returns$_t_bytes32_$",
																													"typeString": "function (address,address,address) view returns (bytes32)"
																												}
																											},
																											"id": 813,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": false,
																											"kind": "functionCall",
																											"lValueRequested": false,
																											"nameLocations": [],
																											"names": [],
																											"nodeType": "FunctionCall",
																											"src": "15127:200:0",
																											"tryCall": false,
																											"typeDescriptions": {
																												"typeIdentifier": "t_bytes32",
																												"typeString": "bytes32"
																											}
																										},
																										"src": "15081:246:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_bool",
																											"typeString": "bool"
																										}
																									},
																									"id": 824,
																									"nodeType": "IfStatement",
																									"src": "15048:450:0",
																									"trueBody": {
																										"id": 823,
																										"nodeType": "Block",
																										"src": "15354:144:0",
																										"statements": [
																											{
																												"expression": {
																													"id": 821,
																													"isConstant": false,
																													"isLValue": false,
																													"isPure": false,
																													"lValueRequested": false,
																													"leftHandSide": {
																														"baseExpression": {
																															"id": 815,
																															"name": "delegates",
																															"nodeType": "Identifier",
																															"overloadedDeclarations": [],
																															"referencedDeclaration": 717,
																															"src": "15384:9:0",
																															"typeDescriptions": {
																																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																																"typeString": "address[] memory"
																															}
																														},
																														"id": 818,
																														"indexExpression": {
																															"id": 817,
																															"isConstant": false,
																															"isLValue": false,
																															"isPure": false,
																															"lValueRequested": false,
																															"nodeType": "UnaryOperation",
																															"operator": "++",
																															"prefix": false,
																															"src": "15394:16:0",
																															"subExpression": {
																																"id": 816,
																																"name": "delegatesCount",
																																"nodeType": "Identifier",
																																"overloadedDeclarations": [],
																																"referencedDeclaration": 739,
																																"src": "15394:14:0",
																																"typeDescriptions": {
																																	"typeIdentifier": "t_uint256",
																																	"typeString": "uint256"
																																}
																															},
																															"typeDescriptions": {
																																"typeIdentifier": "t_uint256",
																																"typeString": "uint256"
																															}
																														},
																														"isConstant": false,
																														"isLValue": true,
																														"isPure": false,
																														"lValueRequested": true,
																														"nodeType": "IndexAccess",
																														"src": "15384:27:0",
																														"typeDescriptions": {
																															"typeIdentifier": "t_address",
																															"typeString": "address"
																														}
																													},
																													"nodeType": "Assignment",
																													"operator": "=",
																													"rightHandSide": {
																														"expression": {
																															"id": 819,
																															"name": "delegationInfo_",
																															"nodeType": "Identifier",
																															"overloadedDeclarations": [],
																															"referencedDeclaration": 766,
																															"src": "15414:15:0",
																															"typeDescriptions": {
																																"typeIdentifier": "t_struct$_DelegationInfo_$1270_storage_ptr",
																																"typeString": "struct IDelegationRegistry.DelegationInfo storage pointer"
																															}
																														},
																														"id": 820,
																														"isConstant": false,
																														"isLValue": true,
																														"isPure": false,
																														"lValueRequested": false,
																														"memberLocation": "15463:8:0",
																														"memberName": "delegate",
																														"nodeType": "MemberAccess",
																														"referencedDeclaration": 1265,
																														"src": "15414:57:0",
																														"typeDescriptions": {
																															"typeIdentifier": "t_address",
																															"typeString": "address"
																														}
																													},
																													"src": "15384:87:0",
																													"typeDescriptions": {
																														"typeIdentifier": "t_address",
																														"typeString": "address"
																													}
																												},
																												"id": 822,
																												"nodeType": "ExpressionStatement",
																												"src": "15384:87:0"
																											}
																										]
																									}
																								}
																							]
																						}
																					}
																				]
																			}
																		},
																		"id": 866,
																		"nodeType": "IfStatement",
																		"src": "14244:2203:0",
																		"trueBody": {
																			"id": 797,
																			"nodeType": "Block",
																			"src": "14306:446:0",
																			"statements": [
																				{
																					"condition": {
																						"commonType": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						},
																						"id": 786,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 780,
																							"name": "delegationHash",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 758,
																							"src": "14426:14:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "==",
																						"rightExpression": {
																							"arguments": [
																								{
																									"id": 782,
																									"name": "vault",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 706,
																									"src": "14523:5:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								},
																								{
																									"expression": {
																										"id": 783,
																										"name": "delegationInfo_",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 766,
																										"src": "14558:15:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_struct$_DelegationInfo_$1270_storage_ptr",
																											"typeString": "struct IDelegationRegistry.DelegationInfo storage pointer"
																										}
																									},
																									"id": 784,
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberLocation": "14574:8:0",
																									"memberName": "delegate",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 1265,
																									"src": "14558:24:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									},
																									{
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								],
																								"id": 781,
																								"name": "_computeAllDelegationHash",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 322,
																								"src": "14468:25:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bytes32_$",
																									"typeString": "function (address,address) view returns (bytes32)"
																								}
																							},
																							"id": 785,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "functionCall",
																							"lValueRequested": false,
																							"nameLocations": [],
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "14468:140:0",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						},
																						"src": "14426:182:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"id": 796,
																					"nodeType": "IfStatement",
																					"src": "14397:337:0",
																					"trueBody": {
																						"id": 795,
																						"nodeType": "Block",
																						"src": "14631:103:0",
																						"statements": [
																							{
																								"expression": {
																									"id": 793,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftHandSide": {
																										"baseExpression": {
																											"id": 787,
																											"name": "delegates",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 717,
																											"src": "14657:9:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																												"typeString": "address[] memory"
																											}
																										},
																										"id": 790,
																										"indexExpression": {
																											"id": 789,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": false,
																											"lValueRequested": false,
																											"nodeType": "UnaryOperation",
																											"operator": "++",
																											"prefix": false,
																											"src": "14667:16:0",
																											"subExpression": {
																												"id": 788,
																												"name": "delegatesCount",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 739,
																												"src": "14667:14:0",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											},
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"isConstant": false,
																										"isLValue": true,
																										"isPure": false,
																										"lValueRequested": true,
																										"nodeType": "IndexAccess",
																										"src": "14657:27:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									},
																									"nodeType": "Assignment",
																									"operator": "=",
																									"rightHandSide": {
																										"expression": {
																											"id": 791,
																											"name": "delegationInfo_",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 766,
																											"src": "14687:15:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_struct$_DelegationInfo_$1270_storage_ptr",
																												"typeString": "struct IDelegationRegistry.DelegationInfo storage pointer"
																											}
																										},
																										"id": 792,
																										"isConstant": false,
																										"isLValue": true,
																										"isPure": false,
																										"lValueRequested": false,
																										"memberLocation": "14703:8:0",
																										"memberName": "delegate",
																										"nodeType": "MemberAccess",
																										"referencedDeclaration": 1265,
																										"src": "14687:24:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									},
																									"src": "14657:54:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								},
																								"id": 794,
																								"nodeType": "ExpressionStatement",
																								"src": "14657:54:0"
																							}
																						]
																					}
																				}
																			]
																		}
																	}
																]
															}
														},
														{
															"id": 872,
															"nodeType": "UncheckedBlock",
															"src": "16474:46:0",
															"statements": [
																{
																	"expression": {
																		"id": 870,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "++",
																		"prefix": true,
																		"src": "16502:3:0",
																		"subExpression": {
																			"id": 869,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 751,
																			"src": "16504:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 871,
																	"nodeType": "ExpressionStatement",
																	"src": "16502:3:0"
																}
															]
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 756,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 754,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 751,
														"src": "13958:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 755,
														"name": "potentialDelegatesLength",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 733,
														"src": "13962:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13958:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 874,
												"initializationExpression": {
													"assignments": [
														751
													],
													"declarations": [
														{
															"constant": false,
															"id": 751,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "13951:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 874,
															"src": "13943:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 750,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "13943:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 753,
													"initialValue": {
														"hexValue": "30",
														"id": 752,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "13955:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "13943:13:0"
												},
												"isSimpleCounterLoop": false,
												"nodeType": "ForStatement",
												"src": "13938:2592:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 877,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 875,
														"name": "potentialDelegatesLength",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 733,
														"src": "16543:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 876,
														"name": "delegatesCount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 739,
														"src": "16570:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "16543:41:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 880,
												"nodeType": "IfStatement",
												"src": "16539:240:0",
												"trueBody": {
													"id": 879,
													"nodeType": "Block",
													"src": "16586:193:0",
													"statements": [
														{
															"AST": {
																"nativeSrc": "16609:160:0",
																"nodeType": "YulBlock",
																"src": "16609:160:0",
																"statements": [
																	{
																		"nativeSrc": "16627:61:0",
																		"nodeType": "YulVariableDeclaration",
																		"src": "16627:61:0",
																		"value": {
																			"arguments": [
																				{
																					"name": "potentialDelegatesLength",
																					"nativeSrc": "16647:24:0",
																					"nodeType": "YulIdentifier",
																					"src": "16647:24:0"
																				},
																				{
																					"name": "delegatesCount",
																					"nativeSrc": "16673:14:0",
																					"nodeType": "YulIdentifier",
																					"src": "16673:14:0"
																				}
																			],
																			"functionName": {
																				"name": "sub",
																				"nativeSrc": "16643:3:0",
																				"nodeType": "YulIdentifier",
																				"src": "16643:3:0"
																			},
																			"nativeSrc": "16643:45:0",
																			"nodeType": "YulFunctionCall",
																			"src": "16643:45:0"
																		},
																		"variables": [
																			{
																				"name": "decrease",
																				"nativeSrc": "16631:8:0",
																				"nodeType": "YulTypedName",
																				"src": "16631:8:0",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "delegates",
																					"nativeSrc": "16712:9:0",
																					"nodeType": "YulIdentifier",
																					"src": "16712:9:0"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "delegates",
																									"nativeSrc": "16733:9:0",
																									"nodeType": "YulIdentifier",
																									"src": "16733:9:0"
																								}
																							],
																							"functionName": {
																								"name": "mload",
																								"nativeSrc": "16727:5:0",
																								"nodeType": "YulIdentifier",
																								"src": "16727:5:0"
																							},
																							"nativeSrc": "16727:16:0",
																							"nodeType": "YulFunctionCall",
																							"src": "16727:16:0"
																						},
																						{
																							"name": "decrease",
																							"nativeSrc": "16745:8:0",
																							"nodeType": "YulIdentifier",
																							"src": "16745:8:0"
																						}
																					],
																					"functionName": {
																						"name": "sub",
																						"nativeSrc": "16723:3:0",
																						"nodeType": "YulIdentifier",
																						"src": "16723:3:0"
																					},
																					"nativeSrc": "16723:31:0",
																					"nodeType": "YulFunctionCall",
																					"src": "16723:31:0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "16705:6:0",
																				"nodeType": "YulIdentifier",
																				"src": "16705:6:0"
																			},
																			"nativeSrc": "16705:50:0",
																			"nodeType": "YulFunctionCall",
																			"src": "16705:50:0"
																		},
																		"nativeSrc": "16705:50:0",
																		"nodeType": "YulExpressionStatement",
																		"src": "16705:50:0"
																	}
																]
															},
															"evmVersion": "cancun",
															"externalReferences": [
																{
																	"declaration": 717,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "16712:9:0",
																	"valueSize": 1
																},
																{
																	"declaration": 717,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "16733:9:0",
																	"valueSize": 1
																},
																{
																	"declaration": 739,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "16673:14:0",
																	"valueSize": 1
																},
																{
																	"declaration": 733,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "16647:24:0",
																	"valueSize": 1
																}
															],
															"id": 878,
															"nodeType": "InlineAssembly",
															"src": "16600:169:0"
														}
													]
												}
											}
										]
									},
									"id": 882,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getDelegatesForLevel",
									"nameLocation": "13423:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 714,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 706,
												"mutability": "mutable",
												"name": "vault",
												"nameLocation": "13462:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 882,
												"src": "13454:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 705,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13454:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "delegationType",
												"nameLocation": "13512:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 882,
												"src": "13477:49:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_DelegationType_$1257",
													"typeString": "enum IDelegationRegistry.DelegationType"
												},
												"typeName": {
													"id": 708,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 707,
														"name": "IDelegationRegistry.DelegationType",
														"nameLocations": [
															"13477:19:0",
															"13497:14:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1257,
														"src": "13477:34:0"
													},
													"referencedDeclaration": 1257,
													"src": "13477:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_DelegationType_$1257",
														"typeString": "enum IDelegationRegistry.DelegationType"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 711,
												"mutability": "mutable",
												"name": "contract_",
												"nameLocation": "13544:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 882,
												"src": "13536:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 710,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13536:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 713,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13571:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 882,
												"src": "13563:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 712,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13563:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13444:140:0"
									},
									"returnParameters": {
										"id": 718,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 717,
												"mutability": "mutable",
												"name": "delegates",
												"nameLocation": "13625:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 882,
												"src": "13608:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 715,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "13608:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 716,
													"nodeType": "ArrayTypeName",
													"src": "13608:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13607:28:0"
									},
									"scope": 1248,
									"src": "13414:3371:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1428
									],
									"body": {
										"id": 989,
										"nodeType": "Block",
										"src": "17054:1754:0",
										"statements": [
											{
												"assignments": [
													896
												],
												"declarations": [
													{
														"constant": false,
														"id": 896,
														"mutability": "mutable",
														"name": "delegationHashes_",
														"nameLocation": "17097:17:0",
														"nodeType": "VariableDeclaration",
														"scope": 989,
														"src": "17064:50:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Bytes32Set_$1716_storage_ptr",
															"typeString": "struct EnumerableSet.Bytes32Set"
														},
														"typeName": {
															"id": 895,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 894,
																"name": "EnumerableSet.Bytes32Set",
																"nameLocations": [
																	"17064:13:0",
																	"17078:10:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1716,
																"src": "17064:24:0"
															},
															"referencedDeclaration": 1716,
															"src": "17064:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bytes32Set_$1716_storage_ptr",
																"typeString": "struct EnumerableSet.Bytes32Set"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 904,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 897,
															"name": "delegations",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 28,
															"src": "17117:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Bytes32Set_$1716_storage_$_$",
																"typeString": "mapping(address => mapping(uint256 => struct EnumerableSet.Bytes32Set storage ref))"
															}
														},
														"id": 899,
														"indexExpression": {
															"id": 898,
															"name": "vault",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 885,
															"src": "17129:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "17117:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Bytes32Set_$1716_storage_$",
															"typeString": "mapping(uint256 => struct EnumerableSet.Bytes32Set storage ref)"
														}
													},
													"id": 903,
													"indexExpression": {
														"baseExpression": {
															"id": 900,
															"name": "vaultVersion",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 33,
															"src": "17149:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 902,
														"indexExpression": {
															"id": 901,
															"name": "vault",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 885,
															"src": "17162:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "17149:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "17117:61:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$1716_storage",
														"typeString": "struct EnumerableSet.Bytes32Set storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17064:114:0"
											},
											{
												"assignments": [
													906
												],
												"declarations": [
													{
														"constant": false,
														"id": 906,
														"mutability": "mutable",
														"name": "potentialLength",
														"nameLocation": "17196:15:0",
														"nodeType": "VariableDeclaration",
														"scope": 989,
														"src": "17188:23:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 905,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "17188:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 910,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 907,
															"name": "delegationHashes_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 896,
															"src": "17214:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bytes32Set_$1716_storage_ptr",
																"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
															}
														},
														"id": 908,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "17232:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1785,
														"src": "17214:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32Set_$1716_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Bytes32Set_$1716_storage_ptr_$",
															"typeString": "function (struct EnumerableSet.Bytes32Set storage pointer) view returns (uint256)"
														}
													},
													"id": 909,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17214:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17188:52:0"
											},
											{
												"assignments": [
													912
												],
												"declarations": [
													{
														"constant": false,
														"id": 912,
														"mutability": "mutable",
														"name": "delegationCount",
														"nameLocation": "17258:15:0",
														"nodeType": "VariableDeclaration",
														"scope": 989,
														"src": "17250:23:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 911,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "17250:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 914,
												"initialValue": {
													"hexValue": "30",
													"id": 913,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "17276:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17250:27:0"
											},
											{
												"expression": {
													"id": 922,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 915,
														"name": "contractDelegations",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 890,
														"src": "17287:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_ContractDelegation_$1276_memory_ptr_$dyn_memory_ptr",
															"typeString": "struct IDelegationRegistry.ContractDelegation memory[] memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 920,
																"name": "potentialLength",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 906,
																"src": "17367:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 919,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "NewExpression",
															"src": "17309:44:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_ContractDelegation_$1276_memory_ptr_$dyn_memory_ptr_$",
																"typeString": "function (uint256) pure returns (struct IDelegationRegistry.ContractDelegation memory[] memory)"
															},
															"typeName": {
																"baseType": {
																	"id": 917,
																	"nodeType": "UserDefinedTypeName",
																	"pathNode": {
																		"id": 916,
																		"name": "IDelegationRegistry.ContractDelegation",
																		"nameLocations": [
																			"17313:19:0",
																			"17333:18:0"
																		],
																		"nodeType": "IdentifierPath",
																		"referencedDeclaration": 1276,
																		"src": "17313:38:0"
																	},
																	"referencedDeclaration": 1276,
																	"src": "17313:38:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_ContractDelegation_$1276_storage_ptr",
																		"typeString": "struct IDelegationRegistry.ContractDelegation"
																	}
																},
																"id": 918,
																"nodeType": "ArrayTypeName",
																"src": "17313:40:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_ContractDelegation_$1276_storage_$dyn_storage_ptr",
																	"typeString": "struct IDelegationRegistry.ContractDelegation[]"
																}
															}
														},
														"id": 921,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "17309:83:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_ContractDelegation_$1276_memory_ptr_$dyn_memory_ptr",
															"typeString": "struct IDelegationRegistry.ContractDelegation memory[] memory"
														}
													},
													"src": "17287:105:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_ContractDelegation_$1276_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct IDelegationRegistry.ContractDelegation memory[] memory"
													}
												},
												"id": 923,
												"nodeType": "ExpressionStatement",
												"src": "17287:105:0"
											},
											{
												"body": {
													"id": 981,
													"nodeType": "Block",
													"src": "17445:1046:0",
													"statements": [
														{
															"assignments": [
																932
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 932,
																	"mutability": "mutable",
																	"name": "delegationHash",
																	"nameLocation": "17467:14:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 981,
																	"src": "17459:22:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	"typeName": {
																		"id": 931,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "17459:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 937,
															"initialValue": {
																"arguments": [
																	{
																		"id": 935,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 925,
																		"src": "17505:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 933,
																		"name": "delegationHashes_",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 896,
																		"src": "17484:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Bytes32Set_$1716_storage_ptr",
																			"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																		}
																	},
																	"id": 934,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "17502:2:0",
																	"memberName": "at",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1803,
																	"src": "17484:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32Set_$1716_storage_ptr_$_t_uint256_$returns$_t_bytes32_$attached_to$_t_struct$_Bytes32Set_$1716_storage_ptr_$",
																		"typeString": "function (struct EnumerableSet.Bytes32Set storage pointer,uint256) view returns (bytes32)"
																	}
																},
																"id": 936,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17484:23:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "17459:48:0"
														},
														{
															"assignments": [
																940
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 940,
																	"mutability": "mutable",
																	"name": "delegationInfo_",
																	"nameLocation": "17544:15:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 981,
																	"src": "17521:38:0",
																	"stateVariable": false,
																	"storageLocation": "storage",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_DelegationInfo_$1270_storage_ptr",
																		"typeString": "struct IDelegationRegistry.DelegationInfo"
																	},
																	"typeName": {
																		"id": 939,
																		"nodeType": "UserDefinedTypeName",
																		"pathNode": {
																			"id": 938,
																			"name": "DelegationInfo",
																			"nameLocations": [
																				"17521:14:0"
																			],
																			"nodeType": "IdentifierPath",
																			"referencedDeclaration": 1270,
																			"src": "17521:14:0"
																		},
																		"referencedDeclaration": 1270,
																		"src": "17521:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_DelegationInfo_$1270_storage_ptr",
																			"typeString": "struct IDelegationRegistry.DelegationInfo"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 944,
															"initialValue": {
																"baseExpression": {
																	"id": 941,
																	"name": "delegationInfo",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 52,
																	"src": "17562:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_DelegationInfo_$1270_storage_$",
																		"typeString": "mapping(bytes32 => struct IDelegationRegistry.DelegationInfo storage ref)"
																	}
																},
																"id": 943,
																"indexExpression": {
																	"id": 942,
																	"name": "delegationHash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 932,
																	"src": "17594:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "17562:60:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_DelegationInfo_$1270_storage",
																	"typeString": "struct IDelegationRegistry.DelegationInfo storage ref"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "17521:101:0"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_enum$_DelegationType_$1257",
																	"typeString": "enum IDelegationRegistry.DelegationType"
																},
																"id": 950,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 945,
																		"name": "delegationInfo_",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 940,
																		"src": "17657:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_DelegationInfo_$1270_storage_ptr",
																			"typeString": "struct IDelegationRegistry.DelegationInfo storage pointer"
																		}
																	},
																	"id": 946,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "17673:5:0",
																	"memberName": "type_",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1261,
																	"src": "17657:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_DelegationType_$1257",
																		"typeString": "enum IDelegationRegistry.DelegationType"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"expression": {
																		"expression": {
																			"id": 947,
																			"name": "IDelegationRegistry",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1475,
																			"src": "17698:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IDelegationRegistry_$1475_$",
																				"typeString": "type(contract IDelegationRegistry)"
																			}
																		},
																		"id": 948,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "17718:14:0",
																		"memberName": "DelegationType",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1257,
																		"src": "17698:34:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_DelegationType_$1257_$",
																			"typeString": "type(enum IDelegationRegistry.DelegationType)"
																		}
																	},
																	"id": 949,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "17733:8:0",
																	"memberName": "CONTRACT",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1255,
																	"src": "17698:43:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_DelegationType_$1257",
																		"typeString": "enum IDelegationRegistry.DelegationType"
																	}
																},
																"src": "17657:84:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 976,
															"nodeType": "IfStatement",
															"src": "17636:786:0",
															"trueBody": {
																"id": 975,
																"nodeType": "Block",
																"src": "17756:666:0",
																"statements": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			},
																			"id": 959,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 951,
																				"name": "delegationHash",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 932,
																				"src": "17864:14:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"arguments": [
																					{
																						"id": 953,
																						"name": "vault",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 885,
																						"src": "17958:5:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"expression": {
																							"id": 954,
																							"name": "delegationInfo_",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 940,
																							"src": "17989:15:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_DelegationInfo_$1270_storage_ptr",
																								"typeString": "struct IDelegationRegistry.DelegationInfo storage pointer"
																							}
																						},
																						"id": 955,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "18005:8:0",
																						"memberName": "delegate",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1265,
																						"src": "17989:24:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"expression": {
																							"id": 956,
																							"name": "delegationInfo_",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 940,
																							"src": "18039:15:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_DelegationInfo_$1270_storage_ptr",
																								"typeString": "struct IDelegationRegistry.DelegationInfo storage pointer"
																							}
																						},
																						"id": 957,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "18055:9:0",
																						"memberName": "contract_",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1267,
																						"src": "18039:25:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						},
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						},
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"id": 952,
																					"name": "_computeContractDelegationHash",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 360,
																					"src": "17902:30:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_address_$returns$_t_bytes32_$",
																						"typeString": "function (address,address,address) view returns (bytes32)"
																					}
																				},
																				"id": 958,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "17902:184:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"src": "17864:222:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 974,
																		"nodeType": "IfStatement",
																		"src": "17839:569:0",
																		"trueBody": {
																			"id": 973,
																			"nodeType": "Block",
																			"src": "18105:303:0",
																			"statements": [
																				{
																					"expression": {
																						"id": 971,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"baseExpression": {
																								"id": 960,
																								"name": "contractDelegations",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 890,
																								"src": "18127:19:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_array$_t_struct$_ContractDelegation_$1276_memory_ptr_$dyn_memory_ptr",
																									"typeString": "struct IDelegationRegistry.ContractDelegation memory[] memory"
																								}
																							},
																							"id": 963,
																							"indexExpression": {
																								"id": 962,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "UnaryOperation",
																								"operator": "++",
																								"prefix": false,
																								"src": "18147:17:0",
																								"subExpression": {
																									"id": 961,
																									"name": "delegationCount",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 912,
																									"src": "18147:15:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": true,
																							"nodeType": "IndexAccess",
																							"src": "18127:38:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_ContractDelegation_$1276_memory_ptr",
																								"typeString": "struct IDelegationRegistry.ContractDelegation memory"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "=",
																						"rightHandSide": {
																							"arguments": [
																								{
																									"expression": {
																										"id": 966,
																										"name": "delegationInfo_",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 940,
																										"src": "18273:15:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_struct$_DelegationInfo_$1270_storage_ptr",
																											"typeString": "struct IDelegationRegistry.DelegationInfo storage pointer"
																										}
																									},
																									"id": 967,
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberLocation": "18289:9:0",
																									"memberName": "contract_",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 1267,
																									"src": "18273:25:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								},
																								{
																									"expression": {
																										"id": 968,
																										"name": "delegationInfo_",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 940,
																										"src": "18338:15:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_struct$_DelegationInfo_$1270_storage_ptr",
																											"typeString": "struct IDelegationRegistry.DelegationInfo storage pointer"
																										}
																									},
																									"id": 969,
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberLocation": "18354:8:0",
																									"memberName": "delegate",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 1265,
																									"src": "18338:24:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									},
																									{
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								],
																								"expression": {
																									"id": 964,
																									"name": "IDelegationRegistry",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1475,
																									"src": "18168:19:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_contract$_IDelegationRegistry_$1475_$",
																										"typeString": "type(contract IDelegationRegistry)"
																									}
																								},
																								"id": 965,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberLocation": "18213:18:0",
																								"memberName": "ContractDelegation",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 1276,
																								"src": "18168:63:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_struct$_ContractDelegation_$1276_storage_ptr_$",
																									"typeString": "type(struct IDelegationRegistry.ContractDelegation storage pointer)"
																								}
																							},
																							"id": 970,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "structConstructorCall",
																							"lValueRequested": false,
																							"nameLocations": [
																								"18262:9:0",
																								"18328:8:0"
																							],
																							"names": [
																								"contract_",
																								"delegate"
																							],
																							"nodeType": "FunctionCall",
																							"src": "18168:221:0",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_ContractDelegation_$1276_memory_ptr",
																								"typeString": "struct IDelegationRegistry.ContractDelegation memory"
																							}
																						},
																						"src": "18127:262:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_ContractDelegation_$1276_memory_ptr",
																							"typeString": "struct IDelegationRegistry.ContractDelegation memory"
																						}
																					},
																					"id": 972,
																					"nodeType": "ExpressionStatement",
																					"src": "18127:262:0"
																				}
																			]
																		}
																	}
																]
															}
														},
														{
															"id": 980,
															"nodeType": "UncheckedBlock",
															"src": "18435:46:0",
															"statements": [
																{
																	"expression": {
																		"id": 978,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "++",
																		"prefix": true,
																		"src": "18463:3:0",
																		"subExpression": {
																			"id": 977,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 925,
																			"src": "18465:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 979,
																	"nodeType": "ExpressionStatement",
																	"src": "18463:3:0"
																}
															]
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 930,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 928,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 925,
														"src": "17422:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 929,
														"name": "potentialLength",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 906,
														"src": "17426:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "17422:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 982,
												"initializationExpression": {
													"assignments": [
														925
													],
													"declarations": [
														{
															"constant": false,
															"id": 925,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "17415:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 982,
															"src": "17407:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 924,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "17407:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 927,
													"initialValue": {
														"hexValue": "30",
														"id": 926,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "17419:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "17407:13:0"
												},
												"isSimpleCounterLoop": false,
												"nodeType": "ForStatement",
												"src": "17402:1089:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 985,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 983,
														"name": "potentialLength",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 906,
														"src": "18504:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 984,
														"name": "delegationCount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 912,
														"src": "18522:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "18504:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 988,
												"nodeType": "IfStatement",
												"src": "18500:302:0",
												"trueBody": {
													"id": 987,
													"nodeType": "Block",
													"src": "18539:263:0",
													"statements": [
														{
															"AST": {
																"nativeSrc": "18562:230:0",
																"nodeType": "YulBlock",
																"src": "18562:230:0",
																"statements": [
																	{
																		"nativeSrc": "18580:53:0",
																		"nodeType": "YulVariableDeclaration",
																		"src": "18580:53:0",
																		"value": {
																			"arguments": [
																				{
																					"name": "potentialLength",
																					"nativeSrc": "18600:15:0",
																					"nodeType": "YulIdentifier",
																					"src": "18600:15:0"
																				},
																				{
																					"name": "delegationCount",
																					"nativeSrc": "18617:15:0",
																					"nodeType": "YulIdentifier",
																					"src": "18617:15:0"
																				}
																			],
																			"functionName": {
																				"name": "sub",
																				"nativeSrc": "18596:3:0",
																				"nodeType": "YulIdentifier",
																				"src": "18596:3:0"
																			},
																			"nativeSrc": "18596:37:0",
																			"nodeType": "YulFunctionCall",
																			"src": "18596:37:0"
																		},
																		"variables": [
																			{
																				"name": "decrease",
																				"nativeSrc": "18584:8:0",
																				"nodeType": "YulTypedName",
																				"src": "18584:8:0",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "contractDelegations",
																					"nativeSrc": "18678:19:0",
																					"nodeType": "YulIdentifier",
																					"src": "18678:19:0"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "contractDelegations",
																									"nativeSrc": "18729:19:0",
																									"nodeType": "YulIdentifier",
																									"src": "18729:19:0"
																								}
																							],
																							"functionName": {
																								"name": "mload",
																								"nativeSrc": "18723:5:0",
																								"nodeType": "YulIdentifier",
																								"src": "18723:5:0"
																							},
																							"nativeSrc": "18723:26:0",
																							"nodeType": "YulFunctionCall",
																							"src": "18723:26:0"
																						},
																						{
																							"name": "decrease",
																							"nativeSrc": "18751:8:0",
																							"nodeType": "YulIdentifier",
																							"src": "18751:8:0"
																						}
																					],
																					"functionName": {
																						"name": "sub",
																						"nativeSrc": "18719:3:0",
																						"nodeType": "YulIdentifier",
																						"src": "18719:3:0"
																					},
																					"nativeSrc": "18719:41:0",
																					"nodeType": "YulFunctionCall",
																					"src": "18719:41:0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "18650:6:0",
																				"nodeType": "YulIdentifier",
																				"src": "18650:6:0"
																			},
																			"nativeSrc": "18650:128:0",
																			"nodeType": "YulFunctionCall",
																			"src": "18650:128:0"
																		},
																		"nativeSrc": "18650:128:0",
																		"nodeType": "YulExpressionStatement",
																		"src": "18650:128:0"
																	}
																]
															},
															"evmVersion": "cancun",
															"externalReferences": [
																{
																	"declaration": 890,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "18678:19:0",
																	"valueSize": 1
																},
																{
																	"declaration": 890,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "18729:19:0",
																	"valueSize": 1
																},
																{
																	"declaration": 912,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "18617:15:0",
																	"valueSize": 1
																},
																{
																	"declaration": 906,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "18600:15:0",
																	"valueSize": 1
																}
															],
															"id": 986,
															"nodeType": "InlineAssembly",
															"src": "18553:239:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 883,
										"nodeType": "StructuredDocumentation",
										"src": "16791:50:0",
										"text": " @inheritdoc IDelegationRegistry"
									},
									"functionSelector": "f956cf94",
									"id": 990,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getContractLevelDelegations",
									"nameLocation": "16855:27:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 886,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 885,
												"mutability": "mutable",
												"name": "vault",
												"nameLocation": "16900:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 990,
												"src": "16892:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 884,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16892:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16882:29:0"
									},
									"returnParameters": {
										"id": 891,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 890,
												"mutability": "mutable",
												"name": "contractDelegations",
												"nameLocation": "17020:19:0",
												"nodeType": "VariableDeclaration",
												"scope": 990,
												"src": "16972:67:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_ContractDelegation_$1276_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct IDelegationRegistry.ContractDelegation[]"
												},
												"typeName": {
													"baseType": {
														"id": 888,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 887,
															"name": "IDelegationRegistry.ContractDelegation",
															"nameLocations": [
																"16972:19:0",
																"16992:18:0"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 1276,
															"src": "16972:38:0"
														},
														"referencedDeclaration": 1276,
														"src": "16972:38:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ContractDelegation_$1276_storage_ptr",
															"typeString": "struct IDelegationRegistry.ContractDelegation"
														}
													},
													"id": 889,
													"nodeType": "ArrayTypeName",
													"src": "16972:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_ContractDelegation_$1276_storage_$dyn_storage_ptr",
														"typeString": "struct IDelegationRegistry.ContractDelegation[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16958:91:0"
									},
									"scope": 1248,
									"src": "16846:1962:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1438
									],
									"body": {
										"id": 1101,
										"nodeType": "Block",
										"src": "19046:1783:0",
										"statements": [
											{
												"assignments": [
													1004
												],
												"declarations": [
													{
														"constant": false,
														"id": 1004,
														"mutability": "mutable",
														"name": "delegationHashes_",
														"nameLocation": "19089:17:0",
														"nodeType": "VariableDeclaration",
														"scope": 1101,
														"src": "19056:50:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Bytes32Set_$1716_storage_ptr",
															"typeString": "struct EnumerableSet.Bytes32Set"
														},
														"typeName": {
															"id": 1003,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1002,
																"name": "EnumerableSet.Bytes32Set",
																"nameLocations": [
																	"19056:13:0",
																	"19070:10:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1716,
																"src": "19056:24:0"
															},
															"referencedDeclaration": 1716,
															"src": "19056:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bytes32Set_$1716_storage_ptr",
																"typeString": "struct EnumerableSet.Bytes32Set"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1012,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 1005,
															"name": "delegations",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 28,
															"src": "19109:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Bytes32Set_$1716_storage_$_$",
																"typeString": "mapping(address => mapping(uint256 => struct EnumerableSet.Bytes32Set storage ref))"
															}
														},
														"id": 1007,
														"indexExpression": {
															"id": 1006,
															"name": "vault",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 993,
															"src": "19121:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "19109:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Bytes32Set_$1716_storage_$",
															"typeString": "mapping(uint256 => struct EnumerableSet.Bytes32Set storage ref)"
														}
													},
													"id": 1011,
													"indexExpression": {
														"baseExpression": {
															"id": 1008,
															"name": "vaultVersion",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 33,
															"src": "19141:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1010,
														"indexExpression": {
															"id": 1009,
															"name": "vault",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 993,
															"src": "19154:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "19141:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "19109:61:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$1716_storage",
														"typeString": "struct EnumerableSet.Bytes32Set storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "19056:114:0"
											},
											{
												"assignments": [
													1014
												],
												"declarations": [
													{
														"constant": false,
														"id": 1014,
														"mutability": "mutable",
														"name": "potentialLength",
														"nameLocation": "19188:15:0",
														"nodeType": "VariableDeclaration",
														"scope": 1101,
														"src": "19180:23:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1013,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "19180:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1018,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1015,
															"name": "delegationHashes_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1004,
															"src": "19206:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bytes32Set_$1716_storage_ptr",
																"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
															}
														},
														"id": 1016,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "19224:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1785,
														"src": "19206:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32Set_$1716_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Bytes32Set_$1716_storage_ptr_$",
															"typeString": "function (struct EnumerableSet.Bytes32Set storage pointer) view returns (uint256)"
														}
													},
													"id": 1017,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19206:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "19180:52:0"
											},
											{
												"assignments": [
													1020
												],
												"declarations": [
													{
														"constant": false,
														"id": 1020,
														"mutability": "mutable",
														"name": "delegationCount",
														"nameLocation": "19250:15:0",
														"nodeType": "VariableDeclaration",
														"scope": 1101,
														"src": "19242:23:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1019,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "19242:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1022,
												"initialValue": {
													"hexValue": "30",
													"id": 1021,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "19268:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "19242:27:0"
											},
											{
												"expression": {
													"id": 1030,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1023,
														"name": "tokenDelegations",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 998,
														"src": "19279:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_TokenDelegation_$1284_memory_ptr_$dyn_memory_ptr",
															"typeString": "struct IDelegationRegistry.TokenDelegation memory[] memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1028,
																"name": "potentialLength",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1014,
																"src": "19353:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1027,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "NewExpression",
															"src": "19298:41:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_TokenDelegation_$1284_memory_ptr_$dyn_memory_ptr_$",
																"typeString": "function (uint256) pure returns (struct IDelegationRegistry.TokenDelegation memory[] memory)"
															},
															"typeName": {
																"baseType": {
																	"id": 1025,
																	"nodeType": "UserDefinedTypeName",
																	"pathNode": {
																		"id": 1024,
																		"name": "IDelegationRegistry.TokenDelegation",
																		"nameLocations": [
																			"19302:19:0",
																			"19322:15:0"
																		],
																		"nodeType": "IdentifierPath",
																		"referencedDeclaration": 1284,
																		"src": "19302:35:0"
																	},
																	"referencedDeclaration": 1284,
																	"src": "19302:35:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TokenDelegation_$1284_storage_ptr",
																		"typeString": "struct IDelegationRegistry.TokenDelegation"
																	}
																},
																"id": 1026,
																"nodeType": "ArrayTypeName",
																"src": "19302:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_TokenDelegation_$1284_storage_$dyn_storage_ptr",
																	"typeString": "struct IDelegationRegistry.TokenDelegation[]"
																}
															}
														},
														"id": 1029,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "19298:80:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_TokenDelegation_$1284_memory_ptr_$dyn_memory_ptr",
															"typeString": "struct IDelegationRegistry.TokenDelegation memory[] memory"
														}
													},
													"src": "19279:99:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_TokenDelegation_$1284_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct IDelegationRegistry.TokenDelegation memory[] memory"
													}
												},
												"id": 1031,
												"nodeType": "ExpressionStatement",
												"src": "19279:99:0"
											},
											{
												"body": {
													"id": 1093,
													"nodeType": "Block",
													"src": "19431:1145:0",
													"statements": [
														{
															"assignments": [
																1040
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1040,
																	"mutability": "mutable",
																	"name": "delegationHash",
																	"nameLocation": "19453:14:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 1093,
																	"src": "19445:22:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	"typeName": {
																		"id": 1039,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "19445:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1045,
															"initialValue": {
																"arguments": [
																	{
																		"id": 1043,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1033,
																		"src": "19491:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1041,
																		"name": "delegationHashes_",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1004,
																		"src": "19470:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Bytes32Set_$1716_storage_ptr",
																			"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																		}
																	},
																	"id": 1042,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "19488:2:0",
																	"memberName": "at",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1803,
																	"src": "19470:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32Set_$1716_storage_ptr_$_t_uint256_$returns$_t_bytes32_$attached_to$_t_struct$_Bytes32Set_$1716_storage_ptr_$",
																		"typeString": "function (struct EnumerableSet.Bytes32Set storage pointer,uint256) view returns (bytes32)"
																	}
																},
																"id": 1044,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "19470:23:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "19445:48:0"
														},
														{
															"assignments": [
																1048
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1048,
																	"mutability": "mutable",
																	"name": "delegationInfo_",
																	"nameLocation": "19530:15:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 1093,
																	"src": "19507:38:0",
																	"stateVariable": false,
																	"storageLocation": "storage",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_DelegationInfo_$1270_storage_ptr",
																		"typeString": "struct IDelegationRegistry.DelegationInfo"
																	},
																	"typeName": {
																		"id": 1047,
																		"nodeType": "UserDefinedTypeName",
																		"pathNode": {
																			"id": 1046,
																			"name": "DelegationInfo",
																			"nameLocations": [
																				"19507:14:0"
																			],
																			"nodeType": "IdentifierPath",
																			"referencedDeclaration": 1270,
																			"src": "19507:14:0"
																		},
																		"referencedDeclaration": 1270,
																		"src": "19507:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_DelegationInfo_$1270_storage_ptr",
																			"typeString": "struct IDelegationRegistry.DelegationInfo"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1052,
															"initialValue": {
																"baseExpression": {
																	"id": 1049,
																	"name": "delegationInfo",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 52,
																	"src": "19548:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_DelegationInfo_$1270_storage_$",
																		"typeString": "mapping(bytes32 => struct IDelegationRegistry.DelegationInfo storage ref)"
																	}
																},
																"id": 1051,
																"indexExpression": {
																	"id": 1050,
																	"name": "delegationHash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1040,
																	"src": "19580:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "19548:60:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_DelegationInfo_$1270_storage",
																	"typeString": "struct IDelegationRegistry.DelegationInfo storage ref"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "19507:101:0"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_enum$_DelegationType_$1257",
																	"typeString": "enum IDelegationRegistry.DelegationType"
																},
																"id": 1058,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1053,
																		"name": "delegationInfo_",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1048,
																		"src": "19643:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_DelegationInfo_$1270_storage_ptr",
																			"typeString": "struct IDelegationRegistry.DelegationInfo storage pointer"
																		}
																	},
																	"id": 1054,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "19659:5:0",
																	"memberName": "type_",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1261,
																	"src": "19643:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_DelegationType_$1257",
																		"typeString": "enum IDelegationRegistry.DelegationType"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"expression": {
																		"expression": {
																			"id": 1055,
																			"name": "IDelegationRegistry",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1475,
																			"src": "19684:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IDelegationRegistry_$1475_$",
																				"typeString": "type(contract IDelegationRegistry)"
																			}
																		},
																		"id": 1056,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "19704:14:0",
																		"memberName": "DelegationType",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1257,
																		"src": "19684:34:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_DelegationType_$1257_$",
																			"typeString": "type(enum IDelegationRegistry.DelegationType)"
																		}
																	},
																	"id": 1057,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "19719:5:0",
																	"memberName": "TOKEN",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1256,
																	"src": "19684:40:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_DelegationType_$1257",
																		"typeString": "enum IDelegationRegistry.DelegationType"
																	}
																},
																"src": "19643:81:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1088,
															"nodeType": "IfStatement",
															"src": "19622:885:0",
															"trueBody": {
																"id": 1087,
																"nodeType": "Block",
																"src": "19739:768:0",
																"statements": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			},
																			"id": 1069,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1059,
																				"name": "delegationHash",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1040,
																				"src": "19847:14:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"arguments": [
																					{
																						"id": 1061,
																						"name": "vault",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 993,
																						"src": "19938:5:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"expression": {
																							"id": 1062,
																							"name": "delegationInfo_",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1048,
																							"src": "19969:15:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_DelegationInfo_$1270_storage_ptr",
																								"typeString": "struct IDelegationRegistry.DelegationInfo storage pointer"
																							}
																						},
																						"id": 1063,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "19985:8:0",
																						"memberName": "delegate",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1265,
																						"src": "19969:24:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"expression": {
																							"id": 1064,
																							"name": "delegationInfo_",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1048,
																							"src": "20019:15:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_DelegationInfo_$1270_storage_ptr",
																								"typeString": "struct IDelegationRegistry.DelegationInfo storage pointer"
																							}
																						},
																						"id": 1065,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "20035:9:0",
																						"memberName": "contract_",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1267,
																						"src": "20019:25:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"expression": {
																							"id": 1066,
																							"name": "delegationInfo_",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1048,
																							"src": "20070:15:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_DelegationInfo_$1270_storage_ptr",
																								"typeString": "struct IDelegationRegistry.DelegationInfo storage pointer"
																							}
																						},
																						"id": 1067,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "20086:7:0",
																						"memberName": "tokenId",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1269,
																						"src": "20070:23:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						},
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						},
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						},
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"id": 1060,
																					"name": "_computeTokenDelegationHash",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 401,
																					"src": "19885:27:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$_t_bytes32_$",
																						"typeString": "function (address,address,address,uint256) view returns (bytes32)"
																					}
																				},
																				"id": 1068,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "19885:230:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"src": "19847:268:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 1086,
																		"nodeType": "IfStatement",
																		"src": "19822:671:0",
																		"trueBody": {
																			"id": 1085,
																			"nodeType": "Block",
																			"src": "20134:359:0",
																			"statements": [
																				{
																					"expression": {
																						"id": 1083,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"baseExpression": {
																								"id": 1070,
																								"name": "tokenDelegations",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 998,
																								"src": "20156:16:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_array$_t_struct$_TokenDelegation_$1284_memory_ptr_$dyn_memory_ptr",
																									"typeString": "struct IDelegationRegistry.TokenDelegation memory[] memory"
																								}
																							},
																							"id": 1073,
																							"indexExpression": {
																								"id": 1072,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "UnaryOperation",
																								"operator": "++",
																								"prefix": false,
																								"src": "20173:17:0",
																								"subExpression": {
																									"id": 1071,
																									"name": "delegationCount",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1020,
																									"src": "20173:15:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": true,
																							"nodeType": "IndexAccess",
																							"src": "20156:35:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_TokenDelegation_$1284_memory_ptr",
																								"typeString": "struct IDelegationRegistry.TokenDelegation memory"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "=",
																						"rightHandSide": {
																							"arguments": [
																								{
																									"expression": {
																										"id": 1076,
																										"name": "delegationInfo_",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1048,
																										"src": "20296:15:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_struct$_DelegationInfo_$1270_storage_ptr",
																											"typeString": "struct IDelegationRegistry.DelegationInfo storage pointer"
																										}
																									},
																									"id": 1077,
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberLocation": "20312:9:0",
																									"memberName": "contract_",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 1267,
																									"src": "20296:25:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								},
																								{
																									"expression": {
																										"id": 1078,
																										"name": "delegationInfo_",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1048,
																										"src": "20360:15:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_struct$_DelegationInfo_$1270_storage_ptr",
																											"typeString": "struct IDelegationRegistry.DelegationInfo storage pointer"
																										}
																									},
																									"id": 1079,
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberLocation": "20376:7:0",
																									"memberName": "tokenId",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 1269,
																									"src": "20360:23:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								{
																									"expression": {
																										"id": 1080,
																										"name": "delegationInfo_",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1048,
																										"src": "20423:15:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_struct$_DelegationInfo_$1270_storage_ptr",
																											"typeString": "struct IDelegationRegistry.DelegationInfo storage pointer"
																										}
																									},
																									"id": 1081,
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberLocation": "20439:8:0",
																									"memberName": "delegate",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 1265,
																									"src": "20423:24:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									},
																									{
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									},
																									{
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								],
																								"expression": {
																									"id": 1074,
																									"name": "IDelegationRegistry",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1475,
																									"src": "20194:19:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_contract$_IDelegationRegistry_$1475_$",
																										"typeString": "type(contract IDelegationRegistry)"
																									}
																								},
																								"id": 1075,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberLocation": "20239:15:0",
																								"memberName": "TokenDelegation",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 1284,
																								"src": "20194:60:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_struct$_TokenDelegation_$1284_storage_ptr_$",
																									"typeString": "type(struct IDelegationRegistry.TokenDelegation storage pointer)"
																								}
																							},
																							"id": 1082,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "structConstructorCall",
																							"lValueRequested": false,
																							"nameLocations": [
																								"20285:9:0",
																								"20351:7:0",
																								"20413:8:0"
																							],
																							"names": [
																								"contract_",
																								"tokenId",
																								"delegate"
																							],
																							"nodeType": "FunctionCall",
																							"src": "20194:280:0",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_TokenDelegation_$1284_memory_ptr",
																								"typeString": "struct IDelegationRegistry.TokenDelegation memory"
																							}
																						},
																						"src": "20156:318:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_TokenDelegation_$1284_memory_ptr",
																							"typeString": "struct IDelegationRegistry.TokenDelegation memory"
																						}
																					},
																					"id": 1084,
																					"nodeType": "ExpressionStatement",
																					"src": "20156:318:0"
																				}
																			]
																		}
																	}
																]
															}
														},
														{
															"id": 1092,
															"nodeType": "UncheckedBlock",
															"src": "20520:46:0",
															"statements": [
																{
																	"expression": {
																		"id": 1090,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "++",
																		"prefix": true,
																		"src": "20548:3:0",
																		"subExpression": {
																			"id": 1089,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1033,
																			"src": "20550:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1091,
																	"nodeType": "ExpressionStatement",
																	"src": "20548:3:0"
																}
															]
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1038,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1036,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1033,
														"src": "19408:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1037,
														"name": "potentialLength",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1014,
														"src": "19412:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "19408:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1094,
												"initializationExpression": {
													"assignments": [
														1033
													],
													"declarations": [
														{
															"constant": false,
															"id": 1033,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "19401:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 1094,
															"src": "19393:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1032,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "19393:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1035,
													"initialValue": {
														"hexValue": "30",
														"id": 1034,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "19405:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "19393:13:0"
												},
												"isSimpleCounterLoop": false,
												"nodeType": "ForStatement",
												"src": "19388:1188:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1097,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1095,
														"name": "potentialLength",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1014,
														"src": "20589:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 1096,
														"name": "delegationCount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1020,
														"src": "20607:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "20589:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1100,
												"nodeType": "IfStatement",
												"src": "20585:238:0",
												"trueBody": {
													"id": 1099,
													"nodeType": "Block",
													"src": "20624:199:0",
													"statements": [
														{
															"AST": {
																"nativeSrc": "20647:166:0",
																"nodeType": "YulBlock",
																"src": "20647:166:0",
																"statements": [
																	{
																		"nativeSrc": "20665:53:0",
																		"nodeType": "YulVariableDeclaration",
																		"src": "20665:53:0",
																		"value": {
																			"arguments": [
																				{
																					"name": "potentialLength",
																					"nativeSrc": "20685:15:0",
																					"nodeType": "YulIdentifier",
																					"src": "20685:15:0"
																				},
																				{
																					"name": "delegationCount",
																					"nativeSrc": "20702:15:0",
																					"nodeType": "YulIdentifier",
																					"src": "20702:15:0"
																				}
																			],
																			"functionName": {
																				"name": "sub",
																				"nativeSrc": "20681:3:0",
																				"nodeType": "YulIdentifier",
																				"src": "20681:3:0"
																			},
																			"nativeSrc": "20681:37:0",
																			"nodeType": "YulFunctionCall",
																			"src": "20681:37:0"
																		},
																		"variables": [
																			{
																				"name": "decrease",
																				"nativeSrc": "20669:8:0",
																				"nodeType": "YulTypedName",
																				"src": "20669:8:0",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "tokenDelegations",
																					"nativeSrc": "20742:16:0",
																					"nodeType": "YulIdentifier",
																					"src": "20742:16:0"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "tokenDelegations",
																									"nativeSrc": "20770:16:0",
																									"nodeType": "YulIdentifier",
																									"src": "20770:16:0"
																								}
																							],
																							"functionName": {
																								"name": "mload",
																								"nativeSrc": "20764:5:0",
																								"nodeType": "YulIdentifier",
																								"src": "20764:5:0"
																							},
																							"nativeSrc": "20764:23:0",
																							"nodeType": "YulFunctionCall",
																							"src": "20764:23:0"
																						},
																						{
																							"name": "decrease",
																							"nativeSrc": "20789:8:0",
																							"nodeType": "YulIdentifier",
																							"src": "20789:8:0"
																						}
																					],
																					"functionName": {
																						"name": "sub",
																						"nativeSrc": "20760:3:0",
																						"nodeType": "YulIdentifier",
																						"src": "20760:3:0"
																					},
																					"nativeSrc": "20760:38:0",
																					"nodeType": "YulFunctionCall",
																					"src": "20760:38:0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "20735:6:0",
																				"nodeType": "YulIdentifier",
																				"src": "20735:6:0"
																			},
																			"nativeSrc": "20735:64:0",
																			"nodeType": "YulFunctionCall",
																			"src": "20735:64:0"
																		},
																		"nativeSrc": "20735:64:0",
																		"nodeType": "YulExpressionStatement",
																		"src": "20735:64:0"
																	}
																]
															},
															"evmVersion": "cancun",
															"externalReferences": [
																{
																	"declaration": 1020,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "20702:15:0",
																	"valueSize": 1
																},
																{
																	"declaration": 1014,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "20685:15:0",
																	"valueSize": 1
																},
																{
																	"declaration": 998,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "20742:16:0",
																	"valueSize": 1
																},
																{
																	"declaration": 998,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "20770:16:0",
																	"valueSize": 1
																}
															],
															"id": 1098,
															"nodeType": "InlineAssembly",
															"src": "20638:175:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 991,
										"nodeType": "StructuredDocumentation",
										"src": "18814:50:0",
										"text": " @inheritdoc IDelegationRegistry"
									},
									"functionSelector": "6f007d87",
									"id": 1102,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTokenLevelDelegations",
									"nameLocation": "18878:24:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 994,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 993,
												"mutability": "mutable",
												"name": "vault",
												"nameLocation": "18920:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1102,
												"src": "18912:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 992,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18912:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18902:29:0"
									},
									"returnParameters": {
										"id": 999,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 998,
												"mutability": "mutable",
												"name": "tokenDelegations",
												"nameLocation": "19024:16:0",
												"nodeType": "VariableDeclaration",
												"scope": 1102,
												"src": "18979:61:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_TokenDelegation_$1284_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct IDelegationRegistry.TokenDelegation[]"
												},
												"typeName": {
													"baseType": {
														"id": 996,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 995,
															"name": "IDelegationRegistry.TokenDelegation",
															"nameLocations": [
																"18979:19:0",
																"18999:15:0"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 1284,
															"src": "18979:35:0"
														},
														"referencedDeclaration": 1284,
														"src": "18979:35:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenDelegation_$1284_storage_ptr",
															"typeString": "struct IDelegationRegistry.TokenDelegation"
														}
													},
													"id": 997,
													"nodeType": "ArrayTypeName",
													"src": "18979:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_TokenDelegation_$1284_storage_$dyn_storage_ptr",
														"typeString": "struct IDelegationRegistry.TokenDelegation[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18978:63:0"
									},
									"scope": 1248,
									"src": "18869:1960:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1448
									],
									"body": {
										"id": 1142,
										"nodeType": "Block",
										"src": "21010:312:0",
										"statements": [
											{
												"assignments": [
													1114
												],
												"declarations": [
													{
														"constant": false,
														"id": 1114,
														"mutability": "mutable",
														"name": "delegateHash",
														"nameLocation": "21028:12:0",
														"nodeType": "VariableDeclaration",
														"scope": 1142,
														"src": "21020:20:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1113,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "21020:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1130,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1118,
																	"name": "delegate",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1105,
																	"src": "21094:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1119,
																	"name": "vault",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1107,
																	"src": "21120:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"baseExpression": {
																		"id": 1120,
																		"name": "vaultVersion",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 33,
																		"src": "21143:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1122,
																	"indexExpression": {
																		"id": 1121,
																		"name": "vault",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1107,
																		"src": "21156:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "21143:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"baseExpression": {
																		"baseExpression": {
																			"id": 1123,
																			"name": "delegateVersion",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 40,
																			"src": "21180:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 1125,
																		"indexExpression": {
																			"id": 1124,
																			"name": "vault",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1107,
																			"src": "21196:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "21180:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1127,
																	"indexExpression": {
																		"id": 1126,
																		"name": "delegate",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1105,
																		"src": "21203:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "21180:32:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1116,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "21066:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1117,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "21070:6:0",
																"memberName": "encode",
																"nodeType": "MemberAccess",
																"src": "21066:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1128,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "21066:160:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1115,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "21043:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 1129,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21043:193:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "21020:216:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1139,
															"name": "delegateHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1114,
															"src": "21302:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 1131,
																	"name": "delegations",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 28,
																	"src": "21253:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Bytes32Set_$1716_storage_$_$",
																		"typeString": "mapping(address => mapping(uint256 => struct EnumerableSet.Bytes32Set storage ref))"
																	}
																},
																"id": 1133,
																"indexExpression": {
																	"id": 1132,
																	"name": "vault",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1107,
																	"src": "21265:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "21253:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Bytes32Set_$1716_storage_$",
																	"typeString": "mapping(uint256 => struct EnumerableSet.Bytes32Set storage ref)"
																}
															},
															"id": 1137,
															"indexExpression": {
																"baseExpression": {
																	"id": 1134,
																	"name": "vaultVersion",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 33,
																	"src": "21272:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1136,
																"indexExpression": {
																	"id": 1135,
																	"name": "vault",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1107,
																	"src": "21285:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "21272:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "21253:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bytes32Set_$1716_storage",
																"typeString": "struct EnumerableSet.Bytes32Set storage ref"
															}
														},
														"id": 1138,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "21293:8:0",
														"memberName": "contains",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1770,
														"src": "21253:48:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32Set_$1716_storage_ptr_$_t_bytes32_$returns$_t_bool_$attached_to$_t_struct$_Bytes32Set_$1716_storage_ptr_$",
															"typeString": "function (struct EnumerableSet.Bytes32Set storage pointer,bytes32) view returns (bool)"
														}
													},
													"id": 1140,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21253:62:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1112,
												"id": 1141,
												"nodeType": "Return",
												"src": "21246:69:0"
											}
										]
									},
									"documentation": {
										"id": 1103,
										"nodeType": "StructuredDocumentation",
										"src": "20835:50:0",
										"text": " @inheritdoc IDelegationRegistry"
									},
									"functionSelector": "9c395bc2",
									"id": 1143,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "checkDelegateForAll",
									"nameLocation": "20899:19:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1109,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "20986:8:0"
									},
									"parameters": {
										"id": 1108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1105,
												"mutability": "mutable",
												"name": "delegate",
												"nameLocation": "20936:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1143,
												"src": "20928:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1104,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20928:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1107,
												"mutability": "mutable",
												"name": "vault",
												"nameLocation": "20962:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1143,
												"src": "20954:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1106,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20954:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20918:55:0"
									},
									"returnParameters": {
										"id": 1112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1111,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1143,
												"src": "21004:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1110,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "21004:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21003:6:0"
									},
									"scope": 1248,
									"src": "20890:432:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1460
									],
									"body": {
										"id": 1192,
										"nodeType": "Block",
										"src": "21535:429:0",
										"statements": [
											{
												"assignments": [
													1157
												],
												"declarations": [
													{
														"constant": false,
														"id": 1157,
														"mutability": "mutable",
														"name": "delegateHash",
														"nameLocation": "21553:12:0",
														"nodeType": "VariableDeclaration",
														"scope": 1192,
														"src": "21545:20:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1156,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "21545:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1174,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1161,
																	"name": "delegate",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1146,
																	"src": "21619:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1162,
																	"name": "vault",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1148,
																	"src": "21645:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1163,
																	"name": "contract_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1150,
																	"src": "21668:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"baseExpression": {
																		"id": 1164,
																		"name": "vaultVersion",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 33,
																		"src": "21695:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1166,
																	"indexExpression": {
																		"id": 1165,
																		"name": "vault",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1148,
																		"src": "21708:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "21695:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"baseExpression": {
																		"baseExpression": {
																			"id": 1167,
																			"name": "delegateVersion",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 40,
																			"src": "21732:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 1169,
																		"indexExpression": {
																			"id": 1168,
																			"name": "vault",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1148,
																			"src": "21748:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "21732:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1171,
																	"indexExpression": {
																		"id": 1170,
																		"name": "delegate",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1146,
																		"src": "21755:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "21732:32:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1159,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "21591:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1160,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "21595:6:0",
																"memberName": "encode",
																"nodeType": "MemberAccess",
																"src": "21591:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1172,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "21591:187:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1158,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "21568:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 1173,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21568:220:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "21545:243:0"
											},
											{
												"expression": {
													"condition": {
														"arguments": [
															{
																"id": 1183,
																"name": "delegateHash",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1157,
																"src": "21866:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 1175,
																		"name": "delegations",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 28,
																		"src": "21817:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Bytes32Set_$1716_storage_$_$",
																			"typeString": "mapping(address => mapping(uint256 => struct EnumerableSet.Bytes32Set storage ref))"
																		}
																	},
																	"id": 1177,
																	"indexExpression": {
																		"id": 1176,
																		"name": "vault",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1148,
																		"src": "21829:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "21817:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Bytes32Set_$1716_storage_$",
																		"typeString": "mapping(uint256 => struct EnumerableSet.Bytes32Set storage ref)"
																	}
																},
																"id": 1181,
																"indexExpression": {
																	"baseExpression": {
																		"id": 1178,
																		"name": "vaultVersion",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 33,
																		"src": "21836:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1180,
																	"indexExpression": {
																		"id": 1179,
																		"name": "vault",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1148,
																		"src": "21849:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "21836:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "21817:39:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$1716_storage",
																	"typeString": "struct EnumerableSet.Bytes32Set storage ref"
																}
															},
															"id": 1182,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "21857:8:0",
															"memberName": "contains",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1770,
															"src": "21817:48:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32Set_$1716_storage_ptr_$_t_bytes32_$returns$_t_bool_$attached_to$_t_struct$_Bytes32Set_$1716_storage_ptr_$",
																"typeString": "function (struct EnumerableSet.Bytes32Set storage pointer,bytes32) view returns (bool)"
															}
														},
														"id": 1184,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "21817:62:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"arguments": [
															{
																"id": 1187,
																"name": "delegate",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1146,
																"src": "21941:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 1188,
																"name": "vault",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1148,
																"src": "21951:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1186,
															"name": "checkDelegateForAll",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1143,
															"src": "21921:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																"typeString": "function (address,address) view returns (bool)"
															}
														},
														"id": 1189,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "21921:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1190,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "21817:140:0",
													"trueExpression": {
														"hexValue": "74727565",
														"id": 1185,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "21898:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1155,
												"id": 1191,
												"nodeType": "Return",
												"src": "21798:159:0"
											}
										]
									},
									"documentation": {
										"id": 1144,
										"nodeType": "StructuredDocumentation",
										"src": "21328:50:0",
										"text": " @inheritdoc IDelegationRegistry"
									},
									"functionSelector": "90c9a2d0",
									"id": 1193,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "checkDelegateForContract",
									"nameLocation": "21392:24:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1152,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "21511:8:0"
									},
									"parameters": {
										"id": 1151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1146,
												"mutability": "mutable",
												"name": "delegate",
												"nameLocation": "21434:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1193,
												"src": "21426:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1145,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21426:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1148,
												"mutability": "mutable",
												"name": "vault",
												"nameLocation": "21460:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1193,
												"src": "21452:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1147,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21452:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1150,
												"mutability": "mutable",
												"name": "contract_",
												"nameLocation": "21483:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1193,
												"src": "21475:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1149,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21475:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21416:82:0"
									},
									"returnParameters": {
										"id": 1155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1154,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1193,
												"src": "21529:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1153,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "21529:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21528:6:0"
									},
									"scope": 1248,
									"src": "21383:581:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1474
									],
									"body": {
										"id": 1246,
										"nodeType": "Block",
										"src": "22199:470:0",
										"statements": [
											{
												"assignments": [
													1209
												],
												"declarations": [
													{
														"constant": false,
														"id": 1209,
														"mutability": "mutable",
														"name": "delegateHash",
														"nameLocation": "22217:12:0",
														"nodeType": "VariableDeclaration",
														"scope": 1246,
														"src": "22209:20:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1208,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "22209:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1227,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1213,
																	"name": "delegate",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1196,
																	"src": "22283:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1214,
																	"name": "vault",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1198,
																	"src": "22309:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1215,
																	"name": "contract_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1200,
																	"src": "22332:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1216,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1202,
																	"src": "22359:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"baseExpression": {
																		"id": 1217,
																		"name": "vaultVersion",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 33,
																		"src": "22384:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1219,
																	"indexExpression": {
																		"id": 1218,
																		"name": "vault",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1198,
																		"src": "22397:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "22384:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"baseExpression": {
																		"baseExpression": {
																			"id": 1220,
																			"name": "delegateVersion",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 40,
																			"src": "22421:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 1222,
																		"indexExpression": {
																			"id": 1221,
																			"name": "vault",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1198,
																			"src": "22437:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "22421:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1224,
																	"indexExpression": {
																		"id": 1223,
																		"name": "delegate",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1196,
																		"src": "22444:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "22421:32:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1211,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "22255:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1212,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "22259:6:0",
																"memberName": "encode",
																"nodeType": "MemberAccess",
																"src": "22255:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1225,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "22255:212:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1210,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "22232:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 1226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22232:245:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "22209:268:0"
											},
											{
												"expression": {
													"condition": {
														"arguments": [
															{
																"id": 1236,
																"name": "delegateHash",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1209,
																"src": "22555:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 1228,
																		"name": "delegations",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 28,
																		"src": "22506:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Bytes32Set_$1716_storage_$_$",
																			"typeString": "mapping(address => mapping(uint256 => struct EnumerableSet.Bytes32Set storage ref))"
																		}
																	},
																	"id": 1230,
																	"indexExpression": {
																		"id": 1229,
																		"name": "vault",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1198,
																		"src": "22518:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "22506:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Bytes32Set_$1716_storage_$",
																		"typeString": "mapping(uint256 => struct EnumerableSet.Bytes32Set storage ref)"
																	}
																},
																"id": 1234,
																"indexExpression": {
																	"baseExpression": {
																		"id": 1231,
																		"name": "vaultVersion",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 33,
																		"src": "22525:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1233,
																	"indexExpression": {
																		"id": 1232,
																		"name": "vault",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1198,
																		"src": "22538:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "22525:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "22506:39:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$1716_storage",
																	"typeString": "struct EnumerableSet.Bytes32Set storage ref"
																}
															},
															"id": 1235,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "22546:8:0",
															"memberName": "contains",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1770,
															"src": "22506:48:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32Set_$1716_storage_ptr_$_t_bytes32_$returns$_t_bool_$attached_to$_t_struct$_Bytes32Set_$1716_storage_ptr_$",
																"typeString": "function (struct EnumerableSet.Bytes32Set storage pointer,bytes32) view returns (bool)"
															}
														},
														"id": 1237,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "22506:62:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"arguments": [
															{
																"id": 1240,
																"name": "delegate",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1196,
																"src": "22635:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 1241,
																"name": "vault",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1198,
																"src": "22645:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 1242,
																"name": "contract_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1200,
																"src": "22652:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1239,
															"name": "checkDelegateForContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1193,
															"src": "22610:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_address_$returns$_t_bool_$",
																"typeString": "function (address,address,address) view returns (bool)"
															}
														},
														"id": 1243,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "22610:52:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1244,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "22506:156:0",
													"trueExpression": {
														"hexValue": "74727565",
														"id": 1238,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "22587:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1207,
												"id": 1245,
												"nodeType": "Return",
												"src": "22487:175:0"
											}
										]
									},
									"documentation": {
										"id": 1194,
										"nodeType": "StructuredDocumentation",
										"src": "21970:50:0",
										"text": " @inheritdoc IDelegationRegistry"
									},
									"functionSelector": "aba69cf8",
									"id": 1247,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "checkDelegateForToken",
									"nameLocation": "22034:21:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1204,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "22175:8:0"
									},
									"parameters": {
										"id": 1203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1196,
												"mutability": "mutable",
												"name": "delegate",
												"nameLocation": "22073:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1247,
												"src": "22065:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1195,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22065:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1198,
												"mutability": "mutable",
												"name": "vault",
												"nameLocation": "22099:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1247,
												"src": "22091:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1197,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22091:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1200,
												"mutability": "mutable",
												"name": "contract_",
												"nameLocation": "22122:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1247,
												"src": "22114:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1199,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22114:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1202,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "22149:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1247,
												"src": "22141:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1201,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22141:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22055:107:0"
									},
									"returnParameters": {
										"id": 1207,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1206,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1247,
												"src": "22193:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1205,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "22193:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22192:6:0"
									},
									"scope": 1248,
									"src": "22025:644:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1249,
							"src": "2357:20314:0",
							"usedErrors": [],
							"usedEvents": [
								1293,
								1304,
								1317,
								1322,
								1329
							]
						}
					],
					"src": "1305:21367:0"
				},
				"id": 0
			},
			"Delegate(copy)(copy)//contracts/IDelegationRegistry.sol": {
				"ast": {
					"absolutePath": "Delegate(copy)(copy)//contracts/IDelegationRegistry.sol",
					"exportedSymbols": {
						"IDelegationRegistry": [
							1475
						]
					},
					"id": 1476,
					"license": "CC0-1.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1250,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "1305:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IDelegationRegistry",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1251,
								"nodeType": "StructuredDocumentation",
								"src": "1331:249:1",
								"text": " @title An immutable registry contract to be deployed as a standalone primitive\n @dev See EIP-5639, new project launches can read previous cold wallet -> hot wallet delegations\n from here and integrate those permissions into their flow"
							},
							"fullyImplemented": false,
							"id": 1475,
							"linearizedBaseContracts": [
								1475
							],
							"name": "IDelegationRegistry",
							"nameLocation": "1591:19:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "IDelegationRegistry.DelegationType",
									"documentation": {
										"id": 1252,
										"nodeType": "StructuredDocumentation",
										"src": "1617:27:1",
										"text": "@notice Delegation type"
									},
									"id": 1257,
									"members": [
										{
											"id": 1253,
											"name": "NONE",
											"nameLocation": "1679:4:1",
											"nodeType": "EnumValue",
											"src": "1679:4:1"
										},
										{
											"id": 1254,
											"name": "ALL",
											"nameLocation": "1693:3:1",
											"nodeType": "EnumValue",
											"src": "1693:3:1"
										},
										{
											"id": 1255,
											"name": "CONTRACT",
											"nameLocation": "1706:8:1",
											"nodeType": "EnumValue",
											"src": "1706:8:1"
										},
										{
											"id": 1256,
											"name": "TOKEN",
											"nameLocation": "1724:5:1",
											"nodeType": "EnumValue",
											"src": "1724:5:1"
										}
									],
									"name": "DelegationType",
									"nameLocation": "1654:14:1",
									"nodeType": "EnumDefinition",
									"src": "1649:86:1"
								},
								{
									"canonicalName": "IDelegationRegistry.DelegationInfo",
									"documentation": {
										"id": 1258,
										"nodeType": "StructuredDocumentation",
										"src": "1741:72:1",
										"text": "@notice Info about a single delegation, used for onchain enumeration"
									},
									"id": 1270,
									"members": [
										{
											"constant": false,
											"id": 1261,
											"mutability": "mutable",
											"name": "type_",
											"nameLocation": "1865:5:1",
											"nodeType": "VariableDeclaration",
											"scope": 1270,
											"src": "1850:20:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_enum$_DelegationType_$1257",
												"typeString": "enum IDelegationRegistry.DelegationType"
											},
											"typeName": {
												"id": 1260,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 1259,
													"name": "DelegationType",
													"nameLocations": [
														"1850:14:1"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 1257,
													"src": "1850:14:1"
												},
												"referencedDeclaration": 1257,
												"src": "1850:14:1",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_DelegationType_$1257",
													"typeString": "enum IDelegationRegistry.DelegationType"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1263,
											"mutability": "mutable",
											"name": "vault",
											"nameLocation": "1888:5:1",
											"nodeType": "VariableDeclaration",
											"scope": 1270,
											"src": "1880:13:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1262,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1880:7:1",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1265,
											"mutability": "mutable",
											"name": "delegate",
											"nameLocation": "1911:8:1",
											"nodeType": "VariableDeclaration",
											"scope": 1270,
											"src": "1903:16:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1264,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1903:7:1",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1267,
											"mutability": "mutable",
											"name": "contract_",
											"nameLocation": "1937:9:1",
											"nodeType": "VariableDeclaration",
											"scope": 1270,
											"src": "1929:17:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1266,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1929:7:1",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1269,
											"mutability": "mutable",
											"name": "tokenId",
											"nameLocation": "1964:7:1",
											"nodeType": "VariableDeclaration",
											"scope": 1270,
											"src": "1956:15:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1268,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1956:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "DelegationInfo",
									"nameLocation": "1825:14:1",
									"nodeType": "StructDefinition",
									"scope": 1475,
									"src": "1818:160:1",
									"visibility": "public"
								},
								{
									"canonicalName": "IDelegationRegistry.ContractDelegation",
									"documentation": {
										"id": 1271,
										"nodeType": "StructuredDocumentation",
										"src": "1984:57:1",
										"text": "@notice Info about a single contract-level delegation"
									},
									"id": 1276,
									"members": [
										{
											"constant": false,
											"id": 1273,
											"mutability": "mutable",
											"name": "contract_",
											"nameLocation": "2090:9:1",
											"nodeType": "VariableDeclaration",
											"scope": 1276,
											"src": "2082:17:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1272,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2082:7:1",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1275,
											"mutability": "mutable",
											"name": "delegate",
											"nameLocation": "2117:8:1",
											"nodeType": "VariableDeclaration",
											"scope": 1276,
											"src": "2109:16:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1274,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2109:7:1",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ContractDelegation",
									"nameLocation": "2053:18:1",
									"nodeType": "StructDefinition",
									"scope": 1475,
									"src": "2046:86:1",
									"visibility": "public"
								},
								{
									"canonicalName": "IDelegationRegistry.TokenDelegation",
									"documentation": {
										"id": 1277,
										"nodeType": "StructuredDocumentation",
										"src": "2138:54:1",
										"text": "@notice Info about a single token-level delegation"
									},
									"id": 1284,
									"members": [
										{
											"constant": false,
											"id": 1279,
											"mutability": "mutable",
											"name": "contract_",
											"nameLocation": "2238:9:1",
											"nodeType": "VariableDeclaration",
											"scope": 1284,
											"src": "2230:17:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1278,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2230:7:1",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1281,
											"mutability": "mutable",
											"name": "tokenId",
											"nameLocation": "2265:7:1",
											"nodeType": "VariableDeclaration",
											"scope": 1284,
											"src": "2257:15:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1280,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2257:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1283,
											"mutability": "mutable",
											"name": "delegate",
											"nameLocation": "2290:8:1",
											"nodeType": "VariableDeclaration",
											"scope": 1284,
											"src": "2282:16:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1282,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2282:7:1",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "TokenDelegation",
									"nameLocation": "2204:15:1",
									"nodeType": "StructDefinition",
									"scope": 1475,
									"src": "2197:108:1",
									"visibility": "public"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1285,
										"nodeType": "StructuredDocumentation",
										"src": "2311:61:1",
										"text": "@notice Emitted when a user delegates their entire wallet"
									},
									"eventSelector": "58781eab4a0743ab1c285a238be846a235f06cdb5b968030573a635e5f8c92fa",
									"id": 1293,
									"name": "DelegateForAll",
									"nameLocation": "2383:14:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1292,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1287,
												"indexed": false,
												"mutability": "mutable",
												"name": "vault",
												"nameLocation": "2406:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1293,
												"src": "2398:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1286,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2398:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1289,
												"indexed": false,
												"mutability": "mutable",
												"name": "delegate",
												"nameLocation": "2421:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1293,
												"src": "2413:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1288,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2413:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1291,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2436:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1293,
												"src": "2431:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1290,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2431:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2397:45:1"
									},
									"src": "2377:66:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1294,
										"nodeType": "StructuredDocumentation",
										"src": "2449:61:1",
										"text": "@notice Emitted when a user delegates a specific contract"
									},
									"eventSelector": "8d6b2f5255b8d815cc368855b2251146e003bf4e2fcccaec66145fff5c174b4f",
									"id": 1304,
									"name": "DelegateForContract",
									"nameLocation": "2521:19:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1303,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1296,
												"indexed": false,
												"mutability": "mutable",
												"name": "vault",
												"nameLocation": "2549:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1304,
												"src": "2541:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1295,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2541:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1298,
												"indexed": false,
												"mutability": "mutable",
												"name": "delegate",
												"nameLocation": "2564:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1304,
												"src": "2556:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1297,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2556:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1300,
												"indexed": false,
												"mutability": "mutable",
												"name": "contract_",
												"nameLocation": "2582:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 1304,
												"src": "2574:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1299,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2574:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1302,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2598:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1304,
												"src": "2593:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1301,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2593:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2540:64:1"
									},
									"src": "2515:90:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1305,
										"nodeType": "StructuredDocumentation",
										"src": "2611:58:1",
										"text": "@notice Emitted when a user delegates a specific token"
									},
									"eventSelector": "e89c6ba1e8957285aed22618f52aa1dcb9d5bb64e1533d8b55136c72fcf5aa5d",
									"id": 1317,
									"name": "DelegateForToken",
									"nameLocation": "2680:16:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1307,
												"indexed": false,
												"mutability": "mutable",
												"name": "vault",
												"nameLocation": "2705:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1317,
												"src": "2697:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1306,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2697:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1309,
												"indexed": false,
												"mutability": "mutable",
												"name": "delegate",
												"nameLocation": "2720:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1317,
												"src": "2712:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1308,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1311,
												"indexed": false,
												"mutability": "mutable",
												"name": "contract_",
												"nameLocation": "2738:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 1317,
												"src": "2730:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1310,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2730:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1313,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2757:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1317,
												"src": "2749:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1312,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2749:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1315,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2771:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1317,
												"src": "2766:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1314,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2766:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2696:81:1"
									},
									"src": "2674:104:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1318,
										"nodeType": "StructuredDocumentation",
										"src": "2784:55:1",
										"text": "@notice Emitted when a user revokes all delegations"
									},
									"eventSelector": "32d74befd0b842e19694e3e3af46263e18bcce41352c8b600ff0002b49edf662",
									"id": 1322,
									"name": "RevokeAllDelegates",
									"nameLocation": "2850:18:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1320,
												"indexed": false,
												"mutability": "mutable",
												"name": "vault",
												"nameLocation": "2877:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1322,
												"src": "2869:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1319,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2869:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2868:15:1"
									},
									"src": "2844:40:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1323,
										"nodeType": "StructuredDocumentation",
										"src": "2890:75:1",
										"text": "@notice Emitted when a user revoes all delegations for a given delegate"
									},
									"eventSelector": "3e34a3ee53064fb79c0ee57448f03774a627a9270b0c41286efb7d8e32dcde93",
									"id": 1329,
									"name": "RevokeDelegate",
									"nameLocation": "2976:14:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1328,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1325,
												"indexed": false,
												"mutability": "mutable",
												"name": "vault",
												"nameLocation": "2999:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1329,
												"src": "2991:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1324,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2991:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1327,
												"indexed": false,
												"mutability": "mutable",
												"name": "delegate",
												"nameLocation": "3014:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1329,
												"src": "3006:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1326,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3006:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2990:33:1"
									},
									"src": "2970:54:1"
								},
								{
									"documentation": {
										"id": 1330,
										"nodeType": "StructuredDocumentation",
										"src": "3085:262:1",
										"text": " @notice Allow the delegate to act on your behalf for all contracts\n @param delegate The hotwallet to act on your behalf\n @param value Whether to enable or disable delegation for this address, true for setting and false for revoking"
									},
									"functionSelector": "685ee3e8",
									"id": 1337,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "delegateForAll",
									"nameLocation": "3361:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1332,
												"mutability": "mutable",
												"name": "delegate",
												"nameLocation": "3384:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1337,
												"src": "3376:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1331,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3376:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1334,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3399:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1337,
												"src": "3394:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1333,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3394:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3375:30:1"
									},
									"returnParameters": {
										"id": 1336,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3414:0:1"
									},
									"scope": 1475,
									"src": "3352:63:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1338,
										"nodeType": "StructuredDocumentation",
										"src": "3421:339:1",
										"text": " @notice Allow the delegate to act on your behalf for a specific contract\n @param delegate The hotwallet to act on your behalf\n @param contract_ The address for the contract you're delegating\n @param value Whether to enable or disable delegation for this address, true for setting and false for revoking"
									},
									"functionSelector": "49c95d29",
									"id": 1347,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "delegateForContract",
									"nameLocation": "3774:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1345,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1340,
												"mutability": "mutable",
												"name": "delegate",
												"nameLocation": "3802:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1347,
												"src": "3794:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1339,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3794:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1342,
												"mutability": "mutable",
												"name": "contract_",
												"nameLocation": "3820:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 1347,
												"src": "3812:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1341,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3812:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1344,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3836:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1347,
												"src": "3831:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1343,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3831:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3793:49:1"
									},
									"returnParameters": {
										"id": 1346,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3851:0:1"
									},
									"scope": 1475,
									"src": "3765:87:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1348,
										"nodeType": "StructuredDocumentation",
										"src": "3858:403:1",
										"text": " @notice Allow the delegate to act on your behalf for a specific token\n @param delegate The hotwallet to act on your behalf\n @param contract_ The address for the contract you're delegating\n @param tokenId The token id for the token you're delegating\n @param value Whether to enable or disable delegation for this address, true for setting and false for revoking"
									},
									"functionSelector": "537a5c3d",
									"id": 1359,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "delegateForToken",
									"nameLocation": "4275:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1357,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1350,
												"mutability": "mutable",
												"name": "delegate",
												"nameLocation": "4300:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1359,
												"src": "4292:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1349,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4292:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1352,
												"mutability": "mutable",
												"name": "contract_",
												"nameLocation": "4318:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 1359,
												"src": "4310:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1351,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4310:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1354,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4337:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1359,
												"src": "4329:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1353,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4329:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1356,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4351:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1359,
												"src": "4346:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1355,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4346:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4291:66:1"
									},
									"returnParameters": {
										"id": 1358,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4366:0:1"
									},
									"scope": 1475,
									"src": "4266:101:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1360,
										"nodeType": "StructuredDocumentation",
										"src": "4373:47:1",
										"text": " @notice Revoke all delegates"
									},
									"functionSelector": "36137872",
									"id": 1363,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "revokeAllDelegates",
									"nameLocation": "4434:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1361,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4452:2:1"
									},
									"returnParameters": {
										"id": 1362,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4463:0:1"
									},
									"scope": 1475,
									"src": "4425:39:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1364,
										"nodeType": "StructuredDocumentation",
										"src": "4470:126:1",
										"text": " @notice Revoke a specific delegate for all their permissions\n @param delegate The hotwallet to revoke"
									},
									"functionSelector": "fa352c00",
									"id": 1369,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "revokeDelegate",
									"nameLocation": "4610:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1366,
												"mutability": "mutable",
												"name": "delegate",
												"nameLocation": "4633:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1369,
												"src": "4625:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1365,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4625:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4624:18:1"
									},
									"returnParameters": {
										"id": 1368,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4651:0:1"
									},
									"scope": 1475,
									"src": "4601:51:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1370,
										"nodeType": "StructuredDocumentation",
										"src": "4658:164:1",
										"text": " @notice Remove yourself as a delegate for a specific vault\n @param vault The vault which delegated to the msg.sender, and should be removed"
									},
									"functionSelector": "219044b0",
									"id": 1375,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "revokeSelf",
									"nameLocation": "4836:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1373,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1372,
												"mutability": "mutable",
												"name": "vault",
												"nameLocation": "4855:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1375,
												"src": "4847:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1371,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4847:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4846:15:1"
									},
									"returnParameters": {
										"id": 1374,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4870:0:1"
									},
									"scope": 1475,
									"src": "4827:44:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1376,
										"nodeType": "StructuredDocumentation",
										"src": "4931:240:1",
										"text": " @notice Returns all active delegations a given delegate is able to claim on behalf of\n @param delegate The delegate that you would like to retrieve delegations for\n @return info Array of DelegationInfo structs"
									},
									"functionSelector": "4fc69282",
									"id": 1385,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getDelegationsByDelegate",
									"nameLocation": "5185:24:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1378,
												"mutability": "mutable",
												"name": "delegate",
												"nameLocation": "5218:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1385,
												"src": "5210:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1377,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5210:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5209:18:1"
									},
									"returnParameters": {
										"id": 1384,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1383,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1385,
												"src": "5251:23:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_DelegationInfo_$1270_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct IDelegationRegistry.DelegationInfo[]"
												},
												"typeName": {
													"baseType": {
														"id": 1381,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 1380,
															"name": "DelegationInfo",
															"nameLocations": [
																"5251:14:1"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 1270,
															"src": "5251:14:1"
														},
														"referencedDeclaration": 1270,
														"src": "5251:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_DelegationInfo_$1270_storage_ptr",
															"typeString": "struct IDelegationRegistry.DelegationInfo"
														}
													},
													"id": 1382,
													"nodeType": "ArrayTypeName",
													"src": "5251:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_DelegationInfo_$1270_storage_$dyn_storage_ptr",
														"typeString": "struct IDelegationRegistry.DelegationInfo[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5250:25:1"
									},
									"scope": 1475,
									"src": "5176:100:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1386,
										"nodeType": "StructuredDocumentation",
										"src": "5282:224:1",
										"text": " @notice Returns an array of wallet-level delegates for a given vault\n @param vault The cold wallet who issued the delegation\n @return addresses Array of wallet-level delegates for a given vault"
									},
									"functionSelector": "1b61f675",
									"id": 1394,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getDelegatesForAll",
									"nameLocation": "5520:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1388,
												"mutability": "mutable",
												"name": "vault",
												"nameLocation": "5547:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1394,
												"src": "5539:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5539:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5538:15:1"
									},
									"returnParameters": {
										"id": 1393,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1392,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1394,
												"src": "5577:16:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1390,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "5577:7:1",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1391,
													"nodeType": "ArrayTypeName",
													"src": "5577:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5576:18:1"
									},
									"scope": 1475,
									"src": "5511:84:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1395,
										"nodeType": "StructuredDocumentation",
										"src": "5601:325:1",
										"text": " @notice Returns an array of contract-level delegates for a given vault and contract\n @param vault The cold wallet who issued the delegation\n @param contract_ The address for the contract you're delegating\n @return addresses Array of contract-level delegates for a given vault and contract"
									},
									"functionSelector": "ed4b878e",
									"id": 1405,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getDelegatesForContract",
									"nameLocation": "5940:23:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1400,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1397,
												"mutability": "mutable",
												"name": "vault",
												"nameLocation": "5972:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1405,
												"src": "5964:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1396,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5964:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1399,
												"mutability": "mutable",
												"name": "contract_",
												"nameLocation": "5987:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 1405,
												"src": "5979:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1398,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5979:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5963:34:1"
									},
									"returnParameters": {
										"id": 1404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1403,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1405,
												"src": "6021:16:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1401,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "6021:7:1",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1402,
													"nodeType": "ArrayTypeName",
													"src": "6021:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6020:18:1"
									},
									"scope": 1475,
									"src": "5931:108:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1406,
										"nodeType": "StructuredDocumentation",
										"src": "6045:382:1",
										"text": " @notice Returns an array of contract-level delegates for a given vault's token\n @param vault The cold wallet who issued the delegation\n @param contract_ The address for the contract holding the token\n @param tokenId The token id for the token you're delegating\n @return addresses Array of contract-level delegates for a given vault's token"
									},
									"functionSelector": "1221156b",
									"id": 1418,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getDelegatesForToken",
									"nameLocation": "6441:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1413,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1408,
												"mutability": "mutable",
												"name": "vault",
												"nameLocation": "6470:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1418,
												"src": "6462:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1407,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6462:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1410,
												"mutability": "mutable",
												"name": "contract_",
												"nameLocation": "6485:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 1418,
												"src": "6477:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1409,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6477:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1412,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6504:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1418,
												"src": "6496:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1411,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6496:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6461:51:1"
									},
									"returnParameters": {
										"id": 1417,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1416,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1418,
												"src": "6560:16:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1414,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "6560:7:1",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1415,
													"nodeType": "ArrayTypeName",
													"src": "6560:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6559:18:1"
									},
									"scope": 1475,
									"src": "6432:146:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1419,
										"nodeType": "StructuredDocumentation",
										"src": "6584:209:1",
										"text": " @notice Returns all contract-level delegations for a given vault\n @param vault The cold wallet who issued the delegations\n @return delegations Array of ContractDelegation structs"
									},
									"functionSelector": "f956cf94",
									"id": 1428,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getContractLevelDelegations",
									"nameLocation": "6807:27:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1422,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1421,
												"mutability": "mutable",
												"name": "vault",
												"nameLocation": "6843:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1428,
												"src": "6835:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1420,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6835:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6834:15:1"
									},
									"returnParameters": {
										"id": 1427,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1426,
												"mutability": "mutable",
												"name": "delegations",
												"nameLocation": "6925:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 1428,
												"src": "6897:39:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_ContractDelegation_$1276_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct IDelegationRegistry.ContractDelegation[]"
												},
												"typeName": {
													"baseType": {
														"id": 1424,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 1423,
															"name": "ContractDelegation",
															"nameLocations": [
																"6897:18:1"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 1276,
															"src": "6897:18:1"
														},
														"referencedDeclaration": 1276,
														"src": "6897:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ContractDelegation_$1276_storage_ptr",
															"typeString": "struct IDelegationRegistry.ContractDelegation"
														}
													},
													"id": 1425,
													"nodeType": "ArrayTypeName",
													"src": "6897:20:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_ContractDelegation_$1276_storage_$dyn_storage_ptr",
														"typeString": "struct IDelegationRegistry.ContractDelegation[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6896:41:1"
									},
									"scope": 1475,
									"src": "6798:140:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1429,
										"nodeType": "StructuredDocumentation",
										"src": "6944:203:1",
										"text": " @notice Returns all token-level delegations for a given vault\n @param vault The cold wallet who issued the delegations\n @return delegations Array of TokenDelegation structs"
									},
									"functionSelector": "6f007d87",
									"id": 1438,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getTokenLevelDelegations",
									"nameLocation": "7161:24:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1431,
												"mutability": "mutable",
												"name": "vault",
												"nameLocation": "7194:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1438,
												"src": "7186:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1430,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7186:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7185:15:1"
									},
									"returnParameters": {
										"id": 1437,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1436,
												"mutability": "mutable",
												"name": "delegations",
												"nameLocation": "7249:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 1438,
												"src": "7224:36:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_TokenDelegation_$1284_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct IDelegationRegistry.TokenDelegation[]"
												},
												"typeName": {
													"baseType": {
														"id": 1434,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 1433,
															"name": "TokenDelegation",
															"nameLocations": [
																"7224:15:1"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 1284,
															"src": "7224:15:1"
														},
														"referencedDeclaration": 1284,
														"src": "7224:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenDelegation_$1284_storage_ptr",
															"typeString": "struct IDelegationRegistry.TokenDelegation"
														}
													},
													"id": 1435,
													"nodeType": "ArrayTypeName",
													"src": "7224:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_TokenDelegation_$1284_storage_$dyn_storage_ptr",
														"typeString": "struct IDelegationRegistry.TokenDelegation[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7223:38:1"
									},
									"scope": 1475,
									"src": "7152:110:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1439,
										"nodeType": "StructuredDocumentation",
										"src": "7268:215:1",
										"text": " @notice Returns true if the address is delegated to act on the entire vault\n @param delegate The hotwallet to act on your behalf\n @param vault The cold wallet who issued the delegation"
									},
									"functionSelector": "9c395bc2",
									"id": 1448,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "checkDelegateForAll",
									"nameLocation": "7497:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1441,
												"mutability": "mutable",
												"name": "delegate",
												"nameLocation": "7525:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1448,
												"src": "7517:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1440,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7517:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1443,
												"mutability": "mutable",
												"name": "vault",
												"nameLocation": "7543:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1448,
												"src": "7535:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1442,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7535:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7516:33:1"
									},
									"returnParameters": {
										"id": 1447,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1446,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1448,
												"src": "7573:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1445,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7573:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7572:6:1"
									},
									"scope": 1475,
									"src": "7488:91:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1449,
										"nodeType": "StructuredDocumentation",
										"src": "7585:321:1",
										"text": " @notice Returns true if the address is delegated to act on your behalf for a token contract or an entire vault\n @param delegate The hotwallet to act on your behalf\n @param contract_ The address for the contract you're delegating\n @param vault The cold wallet who issued the delegation"
									},
									"functionSelector": "90c9a2d0",
									"id": 1460,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "checkDelegateForContract",
									"nameLocation": "7920:24:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1456,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1451,
												"mutability": "mutable",
												"name": "delegate",
												"nameLocation": "7953:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1460,
												"src": "7945:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1450,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7945:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1453,
												"mutability": "mutable",
												"name": "vault",
												"nameLocation": "7971:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1460,
												"src": "7963:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7963:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1455,
												"mutability": "mutable",
												"name": "contract_",
												"nameLocation": "7986:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 1460,
												"src": "7978:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1454,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7978:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7944:52:1"
									},
									"returnParameters": {
										"id": 1459,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1458,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1460,
												"src": "8044:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1457,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8044:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8043:6:1"
									},
									"scope": 1475,
									"src": "7911:139:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1461,
										"nodeType": "StructuredDocumentation",
										"src": "8056:410:1",
										"text": " @notice Returns true if the address is delegated to act on your behalf for a specific token, the token's contract or an entire vault\n @param delegate The hotwallet to act on your behalf\n @param contract_ The address for the contract you're delegating\n @param tokenId The token id for the token you're delegating\n @param vault The cold wallet who issued the delegation"
									},
									"functionSelector": "aba69cf8",
									"id": 1474,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "checkDelegateForToken",
									"nameLocation": "8480:21:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1470,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1463,
												"mutability": "mutable",
												"name": "delegate",
												"nameLocation": "8510:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1474,
												"src": "8502:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1462,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8502:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1465,
												"mutability": "mutable",
												"name": "vault",
												"nameLocation": "8528:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1474,
												"src": "8520:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1464,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8520:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1467,
												"mutability": "mutable",
												"name": "contract_",
												"nameLocation": "8543:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 1474,
												"src": "8535:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1466,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8535:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1469,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8562:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1474,
												"src": "8554:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1468,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8554:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8501:69:1"
									},
									"returnParameters": {
										"id": 1473,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1472,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1474,
												"src": "8618:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1471,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8618:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8617:6:1"
									},
									"scope": 1475,
									"src": "8471:153:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1476,
							"src": "1581:7045:1",
							"usedErrors": [],
							"usedEvents": [
								1293,
								1304,
								1317,
								1322,
								1329
							]
						}
					],
					"src": "1305:7322:1"
				},
				"id": 1
			},
			"Delegate/@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "Delegate/@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							1499
						],
						"IERC165": [
							1511
						]
					},
					"id": 1500,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1477,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "1368:23:2"
						},
						{
							"absolutePath": "Delegate/@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 1478,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1500,
							"sourceUnit": 1512,
							"src": "1393:23:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1480,
										"name": "IERC165",
										"nameLocations": [
											"2023:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1511,
										"src": "2023:7:2"
									},
									"id": 1481,
									"nodeType": "InheritanceSpecifier",
									"src": "2023:7:2"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1479,
								"nodeType": "StructuredDocumentation",
								"src": "1418:576:2",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."
							},
							"fullyImplemented": true,
							"id": 1499,
							"linearizedBaseContracts": [
								1499,
								1511
							],
							"name": "ERC165",
							"nameLocation": "2013:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1510
									],
									"body": {
										"id": 1497,
										"nodeType": "Block",
										"src": "2189:64:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 1495,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1490,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1484,
														"src": "2206:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1492,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1511,
																	"src": "2226:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1511_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1511_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 1491,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "2221:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1493,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2221:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$1511",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 1494,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "2235:11:2",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "2221:25:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "2206:40:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1489,
												"id": 1496,
												"nodeType": "Return",
												"src": "2199:47:2"
											}
										]
									},
									"documentation": {
										"id": 1482,
										"nodeType": "StructuredDocumentation",
										"src": "2037:56:2",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1498,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "2107:17:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1486,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2165:8:2"
									},
									"parameters": {
										"id": 1485,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1484,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "2132:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 1498,
												"src": "2125:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1483,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2125:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2124:20:2"
									},
									"returnParameters": {
										"id": 1489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1488,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1498,
												"src": "2183:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1487,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2183:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2182:6:2"
									},
									"scope": 1499,
									"src": "2098:155:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1500,
							"src": "1995:260:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "1368:888:2"
				},
				"id": 2
			},
			"Delegate/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "Delegate/@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1511
						]
					},
					"id": 1512,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1501,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "1369:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1502,
								"nodeType": "StructuredDocumentation",
								"src": "1394:279:3",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1511,
							"linearizedBaseContracts": [
								1511
							],
							"name": "IERC165",
							"nameLocation": "1684:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1503,
										"nodeType": "StructuredDocumentation",
										"src": "1698:340:3",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1510,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "2052:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1506,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1505,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "2077:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 1510,
												"src": "2070:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1504,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2070:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2069:20:3"
									},
									"returnParameters": {
										"id": 1509,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1508,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1510,
												"src": "2113:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1507,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2113:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2112:6:3"
									},
									"scope": 1511,
									"src": "2043:76:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1512,
							"src": "1674:447:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "1369:753:3"
				},
				"id": 3
			},
			"Delegate/@openzeppelin/contracts/utils/structs/EnumerableSet.sol": {
				"ast": {
					"absolutePath": "Delegate/@openzeppelin/contracts/utils/structs/EnumerableSet.sol",
					"exportedSymbols": {
						"EnumerableSet": [
							2124
						]
					},
					"id": 2125,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1513,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "1474:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "EnumerableSet",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1514,
								"nodeType": "StructuredDocumentation",
								"src": "1499:1098:4",
								"text": " @dev Library for managing\n https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n types.\n Sets have the following properties:\n - Elements are added, removed, and checked for existence in constant time\n (O(1)).\n - Elements are enumerated in O(n). No guarantees are made on the ordering.\n ```solidity\n contract Example {\n     // Add the library methods\n     using EnumerableSet for EnumerableSet.AddressSet;\n     // Declare a set state variable\n     EnumerableSet.AddressSet private mySet;\n }\n ```\n As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\n and `uint256` (`UintSet`) are supported.\n [WARNING]\n ====\n Trying to delete such a structure from storage will likely result in data corruption, rendering the structure\n unusable.\n See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\n In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an\n array of EnumerableSet.\n ===="
							},
							"fullyImplemented": true,
							"id": 2124,
							"linearizedBaseContracts": [
								2124
							],
							"name": "EnumerableSet",
							"nameLocation": "2606:13:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "EnumerableSet.Set",
									"id": 1522,
									"members": [
										{
											"constant": false,
											"id": 1517,
											"mutability": "mutable",
											"name": "_values",
											"nameLocation": "3130:7:4",
											"nodeType": "VariableDeclaration",
											"scope": 1522,
											"src": "3120:17:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
												"typeString": "bytes32[]"
											},
											"typeName": {
												"baseType": {
													"id": 1515,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3120:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 1516,
												"nodeType": "ArrayTypeName",
												"src": "3120:9:4",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
													"typeString": "bytes32[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1521,
											"mutability": "mutable",
											"name": "_indexes",
											"nameLocation": "3298:8:4",
											"nodeType": "VariableDeclaration",
											"scope": 1522,
											"src": "3270:36:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
												"typeString": "mapping(bytes32 => uint256)"
											},
											"typeName": {
												"id": 1520,
												"keyName": "",
												"keyNameLocation": "-1:-1:-1",
												"keyType": {
													"id": 1518,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3278:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "Mapping",
												"src": "3270:27:4",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
													"typeString": "mapping(bytes32 => uint256)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 1519,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3289:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Set",
									"nameLocation": "3073:3:4",
									"nodeType": "StructDefinition",
									"scope": 2124,
									"src": "3066:247:4",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1563,
										"nodeType": "Block",
										"src": "3552:335:4",
										"statements": [
											{
												"condition": {
													"id": 1537,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3566:22:4",
													"subExpression": {
														"arguments": [
															{
																"id": 1534,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1526,
																"src": "3577:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Set_$1522_storage_ptr",
																	"typeString": "struct EnumerableSet.Set storage pointer"
																}
															},
															{
																"id": 1535,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1528,
																"src": "3582:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_struct$_Set_$1522_storage_ptr",
																	"typeString": "struct EnumerableSet.Set storage pointer"
																},
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 1533,
															"name": "_contains",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1667,
															"src": "3567:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1522_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
																"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"
															}
														},
														"id": 1536,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3567:21:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1561,
													"nodeType": "Block",
													"src": "3844:37:4",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 1559,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3865:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 1532,
															"id": 1560,
															"nodeType": "Return",
															"src": "3858:12:4"
														}
													]
												},
												"id": 1562,
												"nodeType": "IfStatement",
												"src": "3562:319:4",
												"trueBody": {
													"id": 1558,
													"nodeType": "Block",
													"src": "3590:248:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1543,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1528,
																		"src": "3621:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"expression": {
																		"expression": {
																			"id": 1538,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1526,
																			"src": "3604:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$1522_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 1541,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3608:7:4",
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1517,
																		"src": "3604:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 1542,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3616:4:4",
																	"memberName": "push",
																	"nodeType": "MemberAccess",
																	"src": "3604:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$_t_bytes32_$returns$__$attached_to$_t_array$_t_bytes32_$dyn_storage_ptr_$",
																		"typeString": "function (bytes32[] storage pointer,bytes32)"
																	}
																},
																"id": 1544,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3604:23:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1545,
															"nodeType": "ExpressionStatement",
															"src": "3604:23:4"
														},
														{
															"expression": {
																"id": 1554,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"id": 1546,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1526,
																			"src": "3762:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$1522_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 1549,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3766:8:4",
																		"memberName": "_indexes",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1521,
																		"src": "3762:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																			"typeString": "mapping(bytes32 => uint256)"
																		}
																	},
																	"id": 1550,
																	"indexExpression": {
																		"id": 1548,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1528,
																		"src": "3775:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "3762:19:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"expression": {
																			"id": 1551,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1526,
																			"src": "3784:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$1522_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 1552,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3788:7:4",
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1517,
																		"src": "3784:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 1553,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3796:6:4",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "3784:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3762:40:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1555,
															"nodeType": "ExpressionStatement",
															"src": "3762:40:4"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 1556,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3823:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 1532,
															"id": 1557,
															"nodeType": "Return",
															"src": "3816:11:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1523,
										"nodeType": "StructuredDocumentation",
										"src": "3319:159:4",
										"text": " @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."
									},
									"id": 1564,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_add",
									"nameLocation": "3492:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1526,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "3509:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 1564,
												"src": "3497:15:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$1522_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 1525,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1524,
														"name": "Set",
														"nameLocations": [
															"3497:3:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1522,
														"src": "3497:3:4"
													},
													"referencedDeclaration": 1522,
													"src": "3497:3:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$1522_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1528,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3522:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1564,
												"src": "3514:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1527,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3514:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3496:32:4"
									},
									"returnParameters": {
										"id": 1532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1531,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1564,
												"src": "3546:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1530,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3546:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3545:6:4"
									},
									"scope": 2124,
									"src": "3483:404:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1647,
										"nodeType": "Block",
										"src": "4127:1316:4",
										"statements": [
											{
												"assignments": [
													1576
												],
												"declarations": [
													{
														"constant": false,
														"id": 1576,
														"mutability": "mutable",
														"name": "valueIndex",
														"nameLocation": "4245:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 1647,
														"src": "4237:18:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1575,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4237:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1581,
												"initialValue": {
													"baseExpression": {
														"expression": {
															"id": 1577,
															"name": "set",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1568,
															"src": "4258:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1522_storage_ptr",
																"typeString": "struct EnumerableSet.Set storage pointer"
															}
														},
														"id": 1578,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4262:8:4",
														"memberName": "_indexes",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1521,
														"src": "4258:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
															"typeString": "mapping(bytes32 => uint256)"
														}
													},
													"id": 1580,
													"indexExpression": {
														"id": 1579,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1570,
														"src": "4271:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4258:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4237:40:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1584,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1582,
														"name": "valueIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1576,
														"src": "4292:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1583,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4306:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4292:15:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1645,
													"nodeType": "Block",
													"src": "5400:37:4",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 1643,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5421:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 1574,
															"id": 1644,
															"nodeType": "Return",
															"src": "5414:12:4"
														}
													]
												},
												"id": 1646,
												"nodeType": "IfStatement",
												"src": "4288:1149:4",
												"trueBody": {
													"id": 1642,
													"nodeType": "Block",
													"src": "4309:1085:4",
													"statements": [
														{
															"assignments": [
																1586
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1586,
																	"mutability": "mutable",
																	"name": "toDeleteIndex",
																	"nameLocation": "4669:13:4",
																	"nodeType": "VariableDeclaration",
																	"scope": 1642,
																	"src": "4661:21:4",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1585,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "4661:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1590,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1589,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1587,
																	"name": "valueIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1576,
																	"src": "4685:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1588,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4698:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "4685:14:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "4661:38:4"
														},
														{
															"assignments": [
																1592
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1592,
																	"mutability": "mutable",
																	"name": "lastIndex",
																	"nameLocation": "4721:9:4",
																	"nodeType": "VariableDeclaration",
																	"scope": 1642,
																	"src": "4713:17:4",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1591,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "4713:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1598,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1597,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"expression": {
																			"id": 1593,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1568,
																			"src": "4733:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$1522_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 1594,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4737:7:4",
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1517,
																		"src": "4733:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 1595,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4745:6:4",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "4733:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1596,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4754:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "4733:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "4713:42:4"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1601,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1599,
																	"name": "lastIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1592,
																	"src": "4774:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"id": 1600,
																	"name": "toDeleteIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1586,
																	"src": "4787:13:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4774:26:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1626,
															"nodeType": "IfStatement",
															"src": "4770:398:4",
															"trueBody": {
																"id": 1625,
																"nodeType": "Block",
																"src": "4802:366:4",
																"statements": [
																	{
																		"assignments": [
																			1603
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1603,
																				"mutability": "mutable",
																				"name": "lastValue",
																				"nameLocation": "4828:9:4",
																				"nodeType": "VariableDeclaration",
																				"scope": 1625,
																				"src": "4820:17:4",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				},
																				"typeName": {
																					"id": 1602,
																					"name": "bytes32",
																					"nodeType": "ElementaryTypeName",
																					"src": "4820:7:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 1608,
																		"initialValue": {
																			"baseExpression": {
																				"expression": {
																					"id": 1604,
																					"name": "set",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1568,
																					"src": "4840:3:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Set_$1522_storage_ptr",
																						"typeString": "struct EnumerableSet.Set storage pointer"
																					}
																				},
																				"id": 1605,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "4844:7:4",
																				"memberName": "_values",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1517,
																				"src": "4840:11:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																					"typeString": "bytes32[] storage ref"
																				}
																			},
																			"id": 1607,
																			"indexExpression": {
																				"id": 1606,
																				"name": "lastIndex",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1592,
																				"src": "4852:9:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "4840:22:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "4820:42:4"
																	},
																	{
																		"expression": {
																			"id": 1615,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"expression": {
																						"id": 1609,
																						"name": "set",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1568,
																						"src": "4962:3:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Set_$1522_storage_ptr",
																							"typeString": "struct EnumerableSet.Set storage pointer"
																						}
																					},
																					"id": 1612,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "4966:7:4",
																					"memberName": "_values",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1517,
																					"src": "4962:11:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																						"typeString": "bytes32[] storage ref"
																					}
																				},
																				"id": 1613,
																				"indexExpression": {
																					"id": 1611,
																					"name": "toDeleteIndex",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1586,
																					"src": "4974:13:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "4962:26:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 1614,
																				"name": "lastValue",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1603,
																				"src": "4991:9:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"src": "4962:38:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"id": 1616,
																		"nodeType": "ExpressionStatement",
																		"src": "4962:38:4"
																	},
																	{
																		"expression": {
																			"id": 1623,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"expression": {
																						"id": 1617,
																						"name": "set",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1568,
																						"src": "5074:3:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Set_$1522_storage_ptr",
																							"typeString": "struct EnumerableSet.Set storage pointer"
																						}
																					},
																					"id": 1620,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "5078:8:4",
																					"memberName": "_indexes",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1521,
																					"src": "5074:12:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																						"typeString": "mapping(bytes32 => uint256)"
																					}
																				},
																				"id": 1621,
																				"indexExpression": {
																					"id": 1619,
																					"name": "lastValue",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1603,
																					"src": "5087:9:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "5074:23:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 1622,
																				"name": "valueIndex",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1576,
																				"src": "5100:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "5074:36:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1624,
																		"nodeType": "ExpressionStatement",
																		"src": "5074:36:4"
																	}
																]
															}
														},
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"expression": {
																			"id": 1627,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1568,
																			"src": "5246:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$1522_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 1630,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5250:7:4",
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1517,
																		"src": "5246:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 1631,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5258:3:4",
																	"memberName": "pop",
																	"nodeType": "MemberAccess",
																	"src": "5246:15:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_bytes32_$dyn_storage_ptr_$",
																		"typeString": "function (bytes32[] storage pointer)"
																	}
																},
																"id": 1632,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5246:17:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1633,
															"nodeType": "ExpressionStatement",
															"src": "5246:17:4"
														},
														{
															"expression": {
																"id": 1638,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "delete",
																"prefix": true,
																"src": "5331:26:4",
																"subExpression": {
																	"baseExpression": {
																		"expression": {
																			"id": 1634,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1568,
																			"src": "5338:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$1522_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 1635,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5342:8:4",
																		"memberName": "_indexes",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1521,
																		"src": "5338:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																			"typeString": "mapping(bytes32 => uint256)"
																		}
																	},
																	"id": 1637,
																	"indexExpression": {
																		"id": 1636,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1570,
																		"src": "5351:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "5338:19:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1639,
															"nodeType": "ExpressionStatement",
															"src": "5331:26:4"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 1640,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5379:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 1574,
															"id": 1641,
															"nodeType": "Return",
															"src": "5372:11:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1565,
										"nodeType": "StructuredDocumentation",
										"src": "3893:157:4",
										"text": " @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."
									},
									"id": 1648,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_remove",
									"nameLocation": "4064:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1571,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1568,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "4084:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 1648,
												"src": "4072:15:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$1522_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 1567,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1566,
														"name": "Set",
														"nameLocations": [
															"4072:3:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1522,
														"src": "4072:3:4"
													},
													"referencedDeclaration": 1522,
													"src": "4072:3:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$1522_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1570,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4097:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1648,
												"src": "4089:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1569,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4089:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4071:32:4"
									},
									"returnParameters": {
										"id": 1574,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1573,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1648,
												"src": "4121:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1572,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4121:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4120:6:4"
									},
									"scope": 2124,
									"src": "4055:1388:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1666,
										"nodeType": "Block",
										"src": "5603:48:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1664,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"expression": {
																"id": 1659,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1652,
																"src": "5620:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Set_$1522_storage_ptr",
																	"typeString": "struct EnumerableSet.Set storage pointer"
																}
															},
															"id": 1660,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5624:8:4",
															"memberName": "_indexes",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1521,
															"src": "5620:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																"typeString": "mapping(bytes32 => uint256)"
															}
														},
														"id": 1662,
														"indexExpression": {
															"id": 1661,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1654,
															"src": "5633:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "5620:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1663,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5643:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5620:24:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1658,
												"id": 1665,
												"nodeType": "Return",
												"src": "5613:31:4"
											}
										]
									},
									"documentation": {
										"id": 1649,
										"nodeType": "StructuredDocumentation",
										"src": "5449:70:4",
										"text": " @dev Returns true if the value is in the set. O(1)."
									},
									"id": 1667,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contains",
									"nameLocation": "5533:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1655,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1652,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "5555:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 1667,
												"src": "5543:15:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$1522_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 1651,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1650,
														"name": "Set",
														"nameLocations": [
															"5543:3:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1522,
														"src": "5543:3:4"
													},
													"referencedDeclaration": 1522,
													"src": "5543:3:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$1522_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1654,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5568:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1667,
												"src": "5560:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1653,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5560:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5542:32:4"
									},
									"returnParameters": {
										"id": 1658,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1657,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1667,
												"src": "5597:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1656,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5597:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5596:6:4"
									},
									"scope": 2124,
									"src": "5524:127:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1680,
										"nodeType": "Block",
										"src": "5797:42:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"expression": {
															"id": 1676,
															"name": "set",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1671,
															"src": "5814:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1522_storage_ptr",
																"typeString": "struct EnumerableSet.Set storage pointer"
															}
														},
														"id": 1677,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5818:7:4",
														"memberName": "_values",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1517,
														"src": "5814:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
															"typeString": "bytes32[] storage ref"
														}
													},
													"id": 1678,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "5826:6:4",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "5814:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1675,
												"id": 1679,
												"nodeType": "Return",
												"src": "5807:25:4"
											}
										]
									},
									"documentation": {
										"id": 1668,
										"nodeType": "StructuredDocumentation",
										"src": "5657:70:4",
										"text": " @dev Returns the number of values on the set. O(1)."
									},
									"id": 1681,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_length",
									"nameLocation": "5741:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1672,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1671,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "5761:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 1681,
												"src": "5749:15:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$1522_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 1670,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1669,
														"name": "Set",
														"nameLocations": [
															"5749:3:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1522,
														"src": "5749:3:4"
													},
													"referencedDeclaration": 1522,
													"src": "5749:3:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$1522_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5748:17:4"
									},
									"returnParameters": {
										"id": 1675,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1674,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1681,
												"src": "5788:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1673,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5788:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5787:9:4"
									},
									"scope": 2124,
									"src": "5732:107:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1697,
										"nodeType": "Block",
										"src": "6257:42:4",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"id": 1692,
															"name": "set",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1685,
															"src": "6274:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1522_storage_ptr",
																"typeString": "struct EnumerableSet.Set storage pointer"
															}
														},
														"id": 1693,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6278:7:4",
														"memberName": "_values",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1517,
														"src": "6274:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
															"typeString": "bytes32[] storage ref"
														}
													},
													"id": 1695,
													"indexExpression": {
														"id": 1694,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1687,
														"src": "6286:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6274:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 1691,
												"id": 1696,
												"nodeType": "Return",
												"src": "6267:25:4"
											}
										]
									},
									"documentation": {
										"id": 1682,
										"nodeType": "StructuredDocumentation",
										"src": "5845:331:4",
										"text": " @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 1698,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_at",
									"nameLocation": "6190:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1688,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1685,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "6206:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 1698,
												"src": "6194:15:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$1522_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 1684,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1683,
														"name": "Set",
														"nameLocations": [
															"6194:3:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1522,
														"src": "6194:3:4"
													},
													"referencedDeclaration": 1522,
													"src": "6194:3:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$1522_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1687,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "6219:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1698,
												"src": "6211:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1686,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6211:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6193:32:4"
									},
									"returnParameters": {
										"id": 1691,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1690,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1698,
												"src": "6248:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1689,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6248:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6247:9:4"
									},
									"scope": 2124,
									"src": "6181:118:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1711,
										"nodeType": "Block",
										"src": "6913:35:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1708,
														"name": "set",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1702,
														"src": "6930:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Set_$1522_storage_ptr",
															"typeString": "struct EnumerableSet.Set storage pointer"
														}
													},
													"id": 1709,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "6934:7:4",
													"memberName": "_values",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1517,
													"src": "6930:11:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
														"typeString": "bytes32[] storage ref"
													}
												},
												"functionReturnParameters": 1707,
												"id": 1710,
												"nodeType": "Return",
												"src": "6923:18:4"
											}
										]
									},
									"documentation": {
										"id": 1699,
										"nodeType": "StructuredDocumentation",
										"src": "6305:529:4",
										"text": " @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."
									},
									"id": 1712,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_values",
									"nameLocation": "6848:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1703,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1702,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "6868:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 1712,
												"src": "6856:15:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$1522_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 1701,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1700,
														"name": "Set",
														"nameLocations": [
															"6856:3:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1522,
														"src": "6856:3:4"
													},
													"referencedDeclaration": 1522,
													"src": "6856:3:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$1522_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6855:17:4"
									},
									"returnParameters": {
										"id": 1707,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1706,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1712,
												"src": "6895:16:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 1704,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "6895:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 1705,
													"nodeType": "ArrayTypeName",
													"src": "6895:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6894:18:4"
									},
									"scope": 2124,
									"src": "6839:109:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"canonicalName": "EnumerableSet.Bytes32Set",
									"id": 1716,
									"members": [
										{
											"constant": false,
											"id": 1715,
											"mutability": "mutable",
											"name": "_inner",
											"nameLocation": "7005:6:4",
											"nodeType": "VariableDeclaration",
											"scope": 1716,
											"src": "7001:10:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Set_$1522_storage_ptr",
												"typeString": "struct EnumerableSet.Set"
											},
											"typeName": {
												"id": 1714,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 1713,
													"name": "Set",
													"nameLocations": [
														"7001:3:4"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 1522,
													"src": "7001:3:4"
												},
												"referencedDeclaration": 1522,
												"src": "7001:3:4",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$1522_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Bytes32Set",
									"nameLocation": "6980:10:4",
									"nodeType": "StructDefinition",
									"scope": 2124,
									"src": "6973:45:4",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1733,
										"nodeType": "Block",
										"src": "7264:47:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1728,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1720,
																"src": "7286:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$1716_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 1729,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7290:6:4",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1715,
															"src": "7286:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1522_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"id": 1730,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1722,
															"src": "7298:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1522_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1727,
														"name": "_add",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1564,
														"src": "7281:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$1522_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 1731,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7281:23:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1726,
												"id": 1732,
												"nodeType": "Return",
												"src": "7274:30:4"
											}
										]
									},
									"documentation": {
										"id": 1717,
										"nodeType": "StructuredDocumentation",
										"src": "7024:159:4",
										"text": " @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."
									},
									"id": 1734,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "7197:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1723,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1720,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "7220:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 1734,
												"src": "7201:22:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$1716_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 1719,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1718,
														"name": "Bytes32Set",
														"nameLocations": [
															"7201:10:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1716,
														"src": "7201:10:4"
													},
													"referencedDeclaration": 1716,
													"src": "7201:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$1716_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1722,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7233:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1734,
												"src": "7225:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1721,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7225:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7200:39:4"
									},
									"returnParameters": {
										"id": 1726,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1725,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1734,
												"src": "7258:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1724,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7258:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7257:6:4"
									},
									"scope": 2124,
									"src": "7188:123:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1751,
										"nodeType": "Block",
										"src": "7558:50:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1746,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1738,
																"src": "7583:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$1716_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 1747,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7587:6:4",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1715,
															"src": "7583:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1522_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"id": 1748,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1740,
															"src": "7595:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1522_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1745,
														"name": "_remove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1648,
														"src": "7575:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$1522_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 1749,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7575:26:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1744,
												"id": 1750,
												"nodeType": "Return",
												"src": "7568:33:4"
											}
										]
									},
									"documentation": {
										"id": 1735,
										"nodeType": "StructuredDocumentation",
										"src": "7317:157:4",
										"text": " @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."
									},
									"id": 1752,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "remove",
									"nameLocation": "7488:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1741,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1738,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "7514:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 1752,
												"src": "7495:22:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$1716_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 1737,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1736,
														"name": "Bytes32Set",
														"nameLocations": [
															"7495:10:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1716,
														"src": "7495:10:4"
													},
													"referencedDeclaration": 1716,
													"src": "7495:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$1716_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1740,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7527:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1752,
												"src": "7519:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1739,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7519:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7494:39:4"
									},
									"returnParameters": {
										"id": 1744,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1743,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1752,
												"src": "7552:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1742,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7552:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7551:6:4"
									},
									"scope": 2124,
									"src": "7479:129:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1769,
										"nodeType": "Block",
										"src": "7775:52:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1764,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1756,
																"src": "7802:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$1716_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 1765,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7806:6:4",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1715,
															"src": "7802:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1522_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"id": 1766,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1758,
															"src": "7814:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1522_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1763,
														"name": "_contains",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1667,
														"src": "7792:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1522_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"
														}
													},
													"id": 1767,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7792:28:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1762,
												"id": 1768,
												"nodeType": "Return",
												"src": "7785:35:4"
											}
										]
									},
									"documentation": {
										"id": 1753,
										"nodeType": "StructuredDocumentation",
										"src": "7614:70:4",
										"text": " @dev Returns true if the value is in the set. O(1)."
									},
									"id": 1770,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "contains",
									"nameLocation": "7698:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1759,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1756,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "7726:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 1770,
												"src": "7707:22:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$1716_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 1755,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1754,
														"name": "Bytes32Set",
														"nameLocations": [
															"7707:10:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1716,
														"src": "7707:10:4"
													},
													"referencedDeclaration": 1716,
													"src": "7707:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$1716_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1758,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7739:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1770,
												"src": "7731:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1757,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7731:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7706:39:4"
									},
									"returnParameters": {
										"id": 1762,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1761,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1770,
												"src": "7769:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1760,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7769:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7768:6:4"
									},
									"scope": 2124,
									"src": "7689:138:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1784,
										"nodeType": "Block",
										"src": "7980:43:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1780,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1774,
																"src": "8005:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$1716_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 1781,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8009:6:4",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1715,
															"src": "8005:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1522_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1522_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 1779,
														"name": "_length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1681,
														"src": "7997:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1522_storage_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (uint256)"
														}
													},
													"id": 1782,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7997:19:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1778,
												"id": 1783,
												"nodeType": "Return",
												"src": "7990:26:4"
											}
										]
									},
									"documentation": {
										"id": 1771,
										"nodeType": "StructuredDocumentation",
										"src": "7833:70:4",
										"text": " @dev Returns the number of values in the set. O(1)."
									},
									"id": 1785,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "length",
									"nameLocation": "7917:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1775,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1774,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "7943:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 1785,
												"src": "7924:22:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$1716_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 1773,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1772,
														"name": "Bytes32Set",
														"nameLocations": [
															"7924:10:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1716,
														"src": "7924:10:4"
													},
													"referencedDeclaration": 1716,
													"src": "7924:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$1716_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7923:24:4"
									},
									"returnParameters": {
										"id": 1778,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1777,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1785,
												"src": "7971:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1776,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7971:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7970:9:4"
									},
									"scope": 2124,
									"src": "7908:115:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1802,
										"nodeType": "Block",
										"src": "8448:46:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1797,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1789,
																"src": "8469:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$1716_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 1798,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8473:6:4",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1715,
															"src": "8469:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1522_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"id": 1799,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1791,
															"src": "8481:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1522_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1796,
														"name": "_at",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1698,
														"src": "8465:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1522_storage_ptr_$_t_uint256_$returns$_t_bytes32_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"
														}
													},
													"id": 1800,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8465:22:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 1795,
												"id": 1801,
												"nodeType": "Return",
												"src": "8458:29:4"
											}
										]
									},
									"documentation": {
										"id": 1786,
										"nodeType": "StructuredDocumentation",
										"src": "8029:331:4",
										"text": " @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 1803,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "at",
									"nameLocation": "8374:2:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1792,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1789,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "8396:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 1803,
												"src": "8377:22:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$1716_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 1788,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1787,
														"name": "Bytes32Set",
														"nameLocations": [
															"8377:10:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1716,
														"src": "8377:10:4"
													},
													"referencedDeclaration": 1716,
													"src": "8377:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$1716_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1791,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "8409:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1803,
												"src": "8401:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1790,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8401:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8376:39:4"
									},
									"returnParameters": {
										"id": 1795,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1794,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1803,
												"src": "8439:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1793,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "8439:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8438:9:4"
									},
									"scope": 2124,
									"src": "8365:129:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1832,
										"nodeType": "Block",
										"src": "9115:219:4",
										"statements": [
											{
												"assignments": [
													1817
												],
												"declarations": [
													{
														"constant": false,
														"id": 1817,
														"mutability": "mutable",
														"name": "store",
														"nameLocation": "9142:5:4",
														"nodeType": "VariableDeclaration",
														"scope": 1832,
														"src": "9125:22:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
															"typeString": "bytes32[]"
														},
														"typeName": {
															"baseType": {
																"id": 1815,
																"name": "bytes32",
																"nodeType": "ElementaryTypeName",
																"src": "9125:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 1816,
															"nodeType": "ArrayTypeName",
															"src": "9125:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
																"typeString": "bytes32[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1822,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1819,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1807,
																"src": "9158:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$1716_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 1820,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9162:6:4",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1715,
															"src": "9158:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1522_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1522_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 1818,
														"name": "_values",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1712,
														"src": "9150:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1522_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"
														}
													},
													"id": 1821,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9150:19:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
														"typeString": "bytes32[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9125:44:4"
											},
											{
												"assignments": [
													1827
												],
												"declarations": [
													{
														"constant": false,
														"id": 1827,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "9196:6:4",
														"nodeType": "VariableDeclaration",
														"scope": 1832,
														"src": "9179:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
															"typeString": "bytes32[]"
														},
														"typeName": {
															"baseType": {
																"id": 1825,
																"name": "bytes32",
																"nodeType": "ElementaryTypeName",
																"src": "9179:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 1826,
															"nodeType": "ArrayTypeName",
															"src": "9179:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
																"typeString": "bytes32[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1828,
												"nodeType": "VariableDeclarationStatement",
												"src": "9179:23:4"
											},
											{
												"AST": {
													"nativeSrc": "9265:39:4",
													"nodeType": "YulBlock",
													"src": "9265:39:4",
													"statements": [
														{
															"nativeSrc": "9279:15:4",
															"nodeType": "YulAssignment",
															"src": "9279:15:4",
															"value": {
																"name": "store",
																"nativeSrc": "9289:5:4",
																"nodeType": "YulIdentifier",
																"src": "9289:5:4"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "9279:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "9279:6:4"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1827,
														"isOffset": false,
														"isSlot": false,
														"src": "9279:6:4",
														"valueSize": 1
													},
													{
														"declaration": 1817,
														"isOffset": false,
														"isSlot": false,
														"src": "9289:5:4",
														"valueSize": 1
													}
												],
												"id": 1829,
												"nodeType": "InlineAssembly",
												"src": "9256:48:4"
											},
											{
												"expression": {
													"id": 1830,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1827,
													"src": "9321:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
														"typeString": "bytes32[] memory"
													}
												},
												"functionReturnParameters": 1812,
												"id": 1831,
												"nodeType": "Return",
												"src": "9314:13:4"
											}
										]
									},
									"documentation": {
										"id": 1804,
										"nodeType": "StructuredDocumentation",
										"src": "8500:529:4",
										"text": " @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."
									},
									"id": 1833,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "values",
									"nameLocation": "9043:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1808,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1807,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "9069:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 1833,
												"src": "9050:22:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$1716_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 1806,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1805,
														"name": "Bytes32Set",
														"nameLocations": [
															"9050:10:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1716,
														"src": "9050:10:4"
													},
													"referencedDeclaration": 1716,
													"src": "9050:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$1716_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9049:24:4"
									},
									"returnParameters": {
										"id": 1812,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1811,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1833,
												"src": "9097:16:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 1809,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "9097:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 1810,
													"nodeType": "ArrayTypeName",
													"src": "9097:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9096:18:4"
									},
									"scope": 2124,
									"src": "9034:300:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"canonicalName": "EnumerableSet.AddressSet",
									"id": 1837,
									"members": [
										{
											"constant": false,
											"id": 1836,
											"mutability": "mutable",
											"name": "_inner",
											"nameLocation": "9391:6:4",
											"nodeType": "VariableDeclaration",
											"scope": 1837,
											"src": "9387:10:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Set_$1522_storage_ptr",
												"typeString": "struct EnumerableSet.Set"
											},
											"typeName": {
												"id": 1835,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 1834,
													"name": "Set",
													"nameLocations": [
														"9387:3:4"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 1522,
													"src": "9387:3:4"
												},
												"referencedDeclaration": 1522,
												"src": "9387:3:4",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$1522_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AddressSet",
									"nameLocation": "9366:10:4",
									"nodeType": "StructDefinition",
									"scope": 2124,
									"src": "9359:45:4",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1863,
										"nodeType": "Block",
										"src": "9650:74:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1849,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1841,
																"src": "9672:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$1837_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 1850,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9676:6:4",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1836,
															"src": "9672:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1522_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1857,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1843,
																					"src": "9708:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1856,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "9700:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint160_$",
																					"typeString": "type(uint160)"
																				},
																				"typeName": {
																					"id": 1855,
																					"name": "uint160",
																					"nodeType": "ElementaryTypeName",
																					"src": "9700:7:4",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1858,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "9700:14:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		],
																		"id": 1854,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "9692:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 1853,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "9692:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1859,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9692:23:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1852,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9684:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 1851,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "9684:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1860,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9684:32:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1522_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1848,
														"name": "_add",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1564,
														"src": "9667:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$1522_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 1861,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9667:50:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1847,
												"id": 1862,
												"nodeType": "Return",
												"src": "9660:57:4"
											}
										]
									},
									"documentation": {
										"id": 1838,
										"nodeType": "StructuredDocumentation",
										"src": "9410:159:4",
										"text": " @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."
									},
									"id": 1864,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "9583:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1844,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1841,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "9606:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 1864,
												"src": "9587:22:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$1837_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 1840,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1839,
														"name": "AddressSet",
														"nameLocations": [
															"9587:10:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1837,
														"src": "9587:10:4"
													},
													"referencedDeclaration": 1837,
													"src": "9587:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$1837_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1843,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9619:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1864,
												"src": "9611:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1842,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9611:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9586:39:4"
									},
									"returnParameters": {
										"id": 1847,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1846,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1864,
												"src": "9644:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1845,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9644:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9643:6:4"
									},
									"scope": 2124,
									"src": "9574:150:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1890,
										"nodeType": "Block",
										"src": "9971:77:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1876,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1868,
																"src": "9996:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$1837_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 1877,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10000:6:4",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1836,
															"src": "9996:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1522_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1884,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1870,
																					"src": "10032:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1883,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "10024:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint160_$",
																					"typeString": "type(uint160)"
																				},
																				"typeName": {
																					"id": 1882,
																					"name": "uint160",
																					"nodeType": "ElementaryTypeName",
																					"src": "10024:7:4",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1885,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10024:14:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		],
																		"id": 1881,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "10016:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 1880,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "10016:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1886,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "10016:23:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1879,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10008:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 1878,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "10008:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1887,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10008:32:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1522_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1875,
														"name": "_remove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1648,
														"src": "9988:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$1522_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 1888,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9988:53:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1874,
												"id": 1889,
												"nodeType": "Return",
												"src": "9981:60:4"
											}
										]
									},
									"documentation": {
										"id": 1865,
										"nodeType": "StructuredDocumentation",
										"src": "9730:157:4",
										"text": " @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."
									},
									"id": 1891,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "remove",
									"nameLocation": "9901:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1871,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1868,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "9927:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 1891,
												"src": "9908:22:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$1837_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 1867,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1866,
														"name": "AddressSet",
														"nameLocations": [
															"9908:10:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1837,
														"src": "9908:10:4"
													},
													"referencedDeclaration": 1837,
													"src": "9908:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$1837_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1870,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9940:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1891,
												"src": "9932:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1869,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9932:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9907:39:4"
									},
									"returnParameters": {
										"id": 1874,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1873,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1891,
												"src": "9965:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1872,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9965:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9964:6:4"
									},
									"scope": 2124,
									"src": "9892:156:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1917,
										"nodeType": "Block",
										"src": "10215:79:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1903,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1895,
																"src": "10242:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$1837_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 1904,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10246:6:4",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1836,
															"src": "10242:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1522_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1911,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1897,
																					"src": "10278:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1910,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "10270:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint160_$",
																					"typeString": "type(uint160)"
																				},
																				"typeName": {
																					"id": 1909,
																					"name": "uint160",
																					"nodeType": "ElementaryTypeName",
																					"src": "10270:7:4",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1912,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10270:14:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		],
																		"id": 1908,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "10262:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 1907,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "10262:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1913,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "10262:23:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1906,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10254:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 1905,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "10254:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1914,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10254:32:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1522_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1902,
														"name": "_contains",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1667,
														"src": "10232:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1522_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"
														}
													},
													"id": 1915,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10232:55:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1901,
												"id": 1916,
												"nodeType": "Return",
												"src": "10225:62:4"
											}
										]
									},
									"documentation": {
										"id": 1892,
										"nodeType": "StructuredDocumentation",
										"src": "10054:70:4",
										"text": " @dev Returns true if the value is in the set. O(1)."
									},
									"id": 1918,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "contains",
									"nameLocation": "10138:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1898,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1895,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "10166:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 1918,
												"src": "10147:22:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$1837_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 1894,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1893,
														"name": "AddressSet",
														"nameLocations": [
															"10147:10:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1837,
														"src": "10147:10:4"
													},
													"referencedDeclaration": 1837,
													"src": "10147:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$1837_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1897,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10179:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1918,
												"src": "10171:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1896,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10171:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10146:39:4"
									},
									"returnParameters": {
										"id": 1901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1900,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1918,
												"src": "10209:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1899,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10209:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10208:6:4"
									},
									"scope": 2124,
									"src": "10129:165:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1932,
										"nodeType": "Block",
										"src": "10447:43:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1928,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1922,
																"src": "10472:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$1837_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 1929,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10476:6:4",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1836,
															"src": "10472:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1522_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1522_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 1927,
														"name": "_length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1681,
														"src": "10464:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1522_storage_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (uint256)"
														}
													},
													"id": 1930,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10464:19:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1926,
												"id": 1931,
												"nodeType": "Return",
												"src": "10457:26:4"
											}
										]
									},
									"documentation": {
										"id": 1919,
										"nodeType": "StructuredDocumentation",
										"src": "10300:70:4",
										"text": " @dev Returns the number of values in the set. O(1)."
									},
									"id": 1933,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "length",
									"nameLocation": "10384:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1923,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1922,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "10410:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 1933,
												"src": "10391:22:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$1837_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 1921,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1920,
														"name": "AddressSet",
														"nameLocations": [
															"10391:10:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1837,
														"src": "10391:10:4"
													},
													"referencedDeclaration": 1837,
													"src": "10391:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$1837_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10390:24:4"
									},
									"returnParameters": {
										"id": 1926,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1925,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1933,
												"src": "10438:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1924,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10438:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10437:9:4"
									},
									"scope": 2124,
									"src": "10375:115:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1959,
										"nodeType": "Block",
										"src": "10915:73:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"expression": {
																						"id": 1951,
																						"name": "set",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1937,
																						"src": "10960:3:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_AddressSet_$1837_storage_ptr",
																							"typeString": "struct EnumerableSet.AddressSet storage pointer"
																						}
																					},
																					"id": 1952,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "10964:6:4",
																					"memberName": "_inner",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1836,
																					"src": "10960:10:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Set_$1522_storage",
																						"typeString": "struct EnumerableSet.Set storage ref"
																					}
																				},
																				{
																					"id": 1953,
																					"name": "index",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1939,
																					"src": "10972:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_struct$_Set_$1522_storage",
																						"typeString": "struct EnumerableSet.Set storage ref"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1950,
																				"name": "_at",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1698,
																				"src": "10956:3:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1522_storage_ptr_$_t_uint256_$returns$_t_bytes32_$",
																					"typeString": "function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"
																				}
																			},
																			"id": 1954,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10956:22:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		],
																		"id": 1949,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "10948:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 1948,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "10948:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1955,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "10948:31:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1947,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10940:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint160_$",
																	"typeString": "type(uint160)"
																},
																"typeName": {
																	"id": 1946,
																	"name": "uint160",
																	"nodeType": "ElementaryTypeName",
																	"src": "10940:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1956,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10940:40:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														],
														"id": 1945,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "10932:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 1944,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "10932:7:4",
															"typeDescriptions": {}
														}
													},
													"id": 1957,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10932:49:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1943,
												"id": 1958,
												"nodeType": "Return",
												"src": "10925:56:4"
											}
										]
									},
									"documentation": {
										"id": 1934,
										"nodeType": "StructuredDocumentation",
										"src": "10496:331:4",
										"text": " @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 1960,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "at",
									"nameLocation": "10841:2:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1940,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1937,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "10863:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 1960,
												"src": "10844:22:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$1837_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 1936,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1935,
														"name": "AddressSet",
														"nameLocations": [
															"10844:10:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1837,
														"src": "10844:10:4"
													},
													"referencedDeclaration": 1837,
													"src": "10844:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$1837_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1939,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "10876:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1960,
												"src": "10868:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1938,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10868:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10843:39:4"
									},
									"returnParameters": {
										"id": 1943,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1942,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1960,
												"src": "10906:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1941,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10906:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10905:9:4"
									},
									"scope": 2124,
									"src": "10832:156:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1989,
										"nodeType": "Block",
										"src": "11609:219:4",
										"statements": [
											{
												"assignments": [
													1974
												],
												"declarations": [
													{
														"constant": false,
														"id": 1974,
														"mutability": "mutable",
														"name": "store",
														"nameLocation": "11636:5:4",
														"nodeType": "VariableDeclaration",
														"scope": 1989,
														"src": "11619:22:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
															"typeString": "bytes32[]"
														},
														"typeName": {
															"baseType": {
																"id": 1972,
																"name": "bytes32",
																"nodeType": "ElementaryTypeName",
																"src": "11619:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 1973,
															"nodeType": "ArrayTypeName",
															"src": "11619:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
																"typeString": "bytes32[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1979,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1976,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1964,
																"src": "11652:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$1837_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 1977,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "11656:6:4",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1836,
															"src": "11652:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1522_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1522_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 1975,
														"name": "_values",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1712,
														"src": "11644:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1522_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"
														}
													},
													"id": 1978,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11644:19:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
														"typeString": "bytes32[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11619:44:4"
											},
											{
												"assignments": [
													1984
												],
												"declarations": [
													{
														"constant": false,
														"id": 1984,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "11690:6:4",
														"nodeType": "VariableDeclaration",
														"scope": 1989,
														"src": "11673:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[]"
														},
														"typeName": {
															"baseType": {
																"id": 1982,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "11673:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1983,
															"nodeType": "ArrayTypeName",
															"src": "11673:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1985,
												"nodeType": "VariableDeclarationStatement",
												"src": "11673:23:4"
											},
											{
												"AST": {
													"nativeSrc": "11759:39:4",
													"nodeType": "YulBlock",
													"src": "11759:39:4",
													"statements": [
														{
															"nativeSrc": "11773:15:4",
															"nodeType": "YulAssignment",
															"src": "11773:15:4",
															"value": {
																"name": "store",
																"nativeSrc": "11783:5:4",
																"nodeType": "YulIdentifier",
																"src": "11783:5:4"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "11773:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "11773:6:4"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1984,
														"isOffset": false,
														"isSlot": false,
														"src": "11773:6:4",
														"valueSize": 1
													},
													{
														"declaration": 1974,
														"isOffset": false,
														"isSlot": false,
														"src": "11783:5:4",
														"valueSize": 1
													}
												],
												"id": 1986,
												"nodeType": "InlineAssembly",
												"src": "11750:48:4"
											},
											{
												"expression": {
													"id": 1987,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1984,
													"src": "11815:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
														"typeString": "address[] memory"
													}
												},
												"functionReturnParameters": 1969,
												"id": 1988,
												"nodeType": "Return",
												"src": "11808:13:4"
											}
										]
									},
									"documentation": {
										"id": 1961,
										"nodeType": "StructuredDocumentation",
										"src": "10994:529:4",
										"text": " @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."
									},
									"id": 1990,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "values",
									"nameLocation": "11537:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1965,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1964,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "11563:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 1990,
												"src": "11544:22:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$1837_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 1963,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1962,
														"name": "AddressSet",
														"nameLocations": [
															"11544:10:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1837,
														"src": "11544:10:4"
													},
													"referencedDeclaration": 1837,
													"src": "11544:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$1837_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11543:24:4"
									},
									"returnParameters": {
										"id": 1969,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1968,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1990,
												"src": "11591:16:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1966,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "11591:7:4",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1967,
													"nodeType": "ArrayTypeName",
													"src": "11591:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11590:18:4"
									},
									"scope": 2124,
									"src": "11528:300:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"canonicalName": "EnumerableSet.UintSet",
									"id": 1994,
									"members": [
										{
											"constant": false,
											"id": 1993,
											"mutability": "mutable",
											"name": "_inner",
											"nameLocation": "11879:6:4",
											"nodeType": "VariableDeclaration",
											"scope": 1994,
											"src": "11875:10:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Set_$1522_storage_ptr",
												"typeString": "struct EnumerableSet.Set"
											},
											"typeName": {
												"id": 1992,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 1991,
													"name": "Set",
													"nameLocations": [
														"11875:3:4"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 1522,
													"src": "11875:3:4"
												},
												"referencedDeclaration": 1522,
												"src": "11875:3:4",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$1522_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "UintSet",
									"nameLocation": "11857:7:4",
									"nodeType": "StructDefinition",
									"scope": 2124,
									"src": "11850:42:4",
									"visibility": "public"
								},
								{
									"body": {
										"id": 2014,
										"nodeType": "Block",
										"src": "12135:56:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2006,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1998,
																"src": "12157:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$1994_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 2007,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "12161:6:4",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1993,
															"src": "12157:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1522_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"id": 2010,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2000,
																	"src": "12177:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2009,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12169:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 2008,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "12169:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 2011,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12169:14:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1522_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2005,
														"name": "_add",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1564,
														"src": "12152:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$1522_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 2012,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12152:32:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2004,
												"id": 2013,
												"nodeType": "Return",
												"src": "12145:39:4"
											}
										]
									},
									"documentation": {
										"id": 1995,
										"nodeType": "StructuredDocumentation",
										"src": "11898:159:4",
										"text": " @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."
									},
									"id": 2015,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "12071:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2001,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1998,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "12091:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 2015,
												"src": "12075:19:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$1994_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 1997,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1996,
														"name": "UintSet",
														"nameLocations": [
															"12075:7:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1994,
														"src": "12075:7:4"
													},
													"referencedDeclaration": 1994,
													"src": "12075:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$1994_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2000,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12104:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 2015,
												"src": "12096:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1999,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12096:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12074:36:4"
									},
									"returnParameters": {
										"id": 2004,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2003,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2015,
												"src": "12129:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2002,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "12129:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12128:6:4"
									},
									"scope": 2124,
									"src": "12062:129:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2035,
										"nodeType": "Block",
										"src": "12435:59:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2027,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2019,
																"src": "12460:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$1994_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 2028,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "12464:6:4",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1993,
															"src": "12460:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1522_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"id": 2031,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2021,
																	"src": "12480:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2030,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12472:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 2029,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "12472:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 2032,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12472:14:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1522_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2026,
														"name": "_remove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1648,
														"src": "12452:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$1522_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 2033,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12452:35:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2025,
												"id": 2034,
												"nodeType": "Return",
												"src": "12445:42:4"
											}
										]
									},
									"documentation": {
										"id": 2016,
										"nodeType": "StructuredDocumentation",
										"src": "12197:157:4",
										"text": " @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."
									},
									"id": 2036,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "remove",
									"nameLocation": "12368:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2022,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2019,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "12391:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 2036,
												"src": "12375:19:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$1994_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 2018,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2017,
														"name": "UintSet",
														"nameLocations": [
															"12375:7:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1994,
														"src": "12375:7:4"
													},
													"referencedDeclaration": 1994,
													"src": "12375:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$1994_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2021,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12404:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 2036,
												"src": "12396:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2020,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12396:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12374:36:4"
									},
									"returnParameters": {
										"id": 2025,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2024,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2036,
												"src": "12429:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2023,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "12429:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12428:6:4"
									},
									"scope": 2124,
									"src": "12359:135:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2056,
										"nodeType": "Block",
										"src": "12658:61:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2048,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2040,
																"src": "12685:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$1994_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 2049,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "12689:6:4",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1993,
															"src": "12685:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1522_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"id": 2052,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2042,
																	"src": "12705:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2051,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12697:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 2050,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "12697:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 2053,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12697:14:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1522_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2047,
														"name": "_contains",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1667,
														"src": "12675:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1522_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"
														}
													},
													"id": 2054,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12675:37:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2046,
												"id": 2055,
												"nodeType": "Return",
												"src": "12668:44:4"
											}
										]
									},
									"documentation": {
										"id": 2037,
										"nodeType": "StructuredDocumentation",
										"src": "12500:70:4",
										"text": " @dev Returns true if the value is in the set. O(1)."
									},
									"id": 2057,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "contains",
									"nameLocation": "12584:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2043,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2040,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "12609:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 2057,
												"src": "12593:19:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$1994_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 2039,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2038,
														"name": "UintSet",
														"nameLocations": [
															"12593:7:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1994,
														"src": "12593:7:4"
													},
													"referencedDeclaration": 1994,
													"src": "12593:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$1994_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2042,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12622:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 2057,
												"src": "12614:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2041,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12614:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12592:36:4"
									},
									"returnParameters": {
										"id": 2046,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2045,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2057,
												"src": "12652:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2044,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "12652:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12651:6:4"
									},
									"scope": 2124,
									"src": "12575:144:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2071,
										"nodeType": "Block",
										"src": "12869:43:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2067,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2061,
																"src": "12894:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$1994_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 2068,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "12898:6:4",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1993,
															"src": "12894:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1522_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1522_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 2066,
														"name": "_length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1681,
														"src": "12886:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1522_storage_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (uint256)"
														}
													},
													"id": 2069,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12886:19:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2065,
												"id": 2070,
												"nodeType": "Return",
												"src": "12879:26:4"
											}
										]
									},
									"documentation": {
										"id": 2058,
										"nodeType": "StructuredDocumentation",
										"src": "12725:70:4",
										"text": " @dev Returns the number of values in the set. O(1)."
									},
									"id": 2072,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "length",
									"nameLocation": "12809:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2062,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2061,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "12832:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 2072,
												"src": "12816:19:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$1994_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 2060,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2059,
														"name": "UintSet",
														"nameLocations": [
															"12816:7:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1994,
														"src": "12816:7:4"
													},
													"referencedDeclaration": 1994,
													"src": "12816:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$1994_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12815:21:4"
									},
									"returnParameters": {
										"id": 2065,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2064,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2072,
												"src": "12860:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2063,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12860:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12859:9:4"
									},
									"scope": 2124,
									"src": "12800:112:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2092,
										"nodeType": "Block",
										"src": "13334:55:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 2086,
																		"name": "set",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2076,
																		"src": "13363:3:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UintSet_$1994_storage_ptr",
																			"typeString": "struct EnumerableSet.UintSet storage pointer"
																		}
																	},
																	"id": 2087,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "13367:6:4",
																	"memberName": "_inner",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1993,
																	"src": "13363:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Set_$1522_storage",
																		"typeString": "struct EnumerableSet.Set storage ref"
																	}
																},
																{
																	"id": 2088,
																	"name": "index",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2078,
																	"src": "13375:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_struct$_Set_$1522_storage",
																		"typeString": "struct EnumerableSet.Set storage ref"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2085,
																"name": "_at",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1698,
																"src": "13359:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1522_storage_ptr_$_t_uint256_$returns$_t_bytes32_$",
																	"typeString": "function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"
																}
															},
															"id": 2089,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13359:22:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2084,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "13351:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 2083,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13351:7:4",
															"typeDescriptions": {}
														}
													},
													"id": 2090,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13351:31:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2082,
												"id": 2091,
												"nodeType": "Return",
												"src": "13344:38:4"
											}
										]
									},
									"documentation": {
										"id": 2073,
										"nodeType": "StructuredDocumentation",
										"src": "12918:331:4",
										"text": " @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 2093,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "at",
									"nameLocation": "13263:2:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2079,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2076,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "13282:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 2093,
												"src": "13266:19:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$1994_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 2075,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2074,
														"name": "UintSet",
														"nameLocations": [
															"13266:7:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1994,
														"src": "13266:7:4"
													},
													"referencedDeclaration": 1994,
													"src": "13266:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$1994_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2078,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "13295:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 2093,
												"src": "13287:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2077,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13287:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13265:36:4"
									},
									"returnParameters": {
										"id": 2082,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2081,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2093,
												"src": "13325:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2080,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13325:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13324:9:4"
									},
									"scope": 2124,
									"src": "13254:135:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2122,
										"nodeType": "Block",
										"src": "14007:219:4",
										"statements": [
											{
												"assignments": [
													2107
												],
												"declarations": [
													{
														"constant": false,
														"id": 2107,
														"mutability": "mutable",
														"name": "store",
														"nameLocation": "14034:5:4",
														"nodeType": "VariableDeclaration",
														"scope": 2122,
														"src": "14017:22:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
															"typeString": "bytes32[]"
														},
														"typeName": {
															"baseType": {
																"id": 2105,
																"name": "bytes32",
																"nodeType": "ElementaryTypeName",
																"src": "14017:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 2106,
															"nodeType": "ArrayTypeName",
															"src": "14017:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
																"typeString": "bytes32[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2112,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 2109,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2097,
																"src": "14050:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$1994_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 2110,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "14054:6:4",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1993,
															"src": "14050:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1522_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1522_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 2108,
														"name": "_values",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1712,
														"src": "14042:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1522_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"
														}
													},
													"id": 2111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14042:19:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
														"typeString": "bytes32[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14017:44:4"
											},
											{
												"assignments": [
													2117
												],
												"declarations": [
													{
														"constant": false,
														"id": 2117,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "14088:6:4",
														"nodeType": "VariableDeclaration",
														"scope": 2122,
														"src": "14071:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 2115,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "14071:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2116,
															"nodeType": "ArrayTypeName",
															"src": "14071:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2118,
												"nodeType": "VariableDeclarationStatement",
												"src": "14071:23:4"
											},
											{
												"AST": {
													"nativeSrc": "14157:39:4",
													"nodeType": "YulBlock",
													"src": "14157:39:4",
													"statements": [
														{
															"nativeSrc": "14171:15:4",
															"nodeType": "YulAssignment",
															"src": "14171:15:4",
															"value": {
																"name": "store",
																"nativeSrc": "14181:5:4",
																"nodeType": "YulIdentifier",
																"src": "14181:5:4"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "14171:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "14171:6:4"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 2117,
														"isOffset": false,
														"isSlot": false,
														"src": "14171:6:4",
														"valueSize": 1
													},
													{
														"declaration": 2107,
														"isOffset": false,
														"isSlot": false,
														"src": "14181:5:4",
														"valueSize": 1
													}
												],
												"id": 2119,
												"nodeType": "InlineAssembly",
												"src": "14148:48:4"
											},
											{
												"expression": {
													"id": 2120,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2117,
													"src": "14213:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"functionReturnParameters": 2102,
												"id": 2121,
												"nodeType": "Return",
												"src": "14206:13:4"
											}
										]
									},
									"documentation": {
										"id": 2094,
										"nodeType": "StructuredDocumentation",
										"src": "13395:529:4",
										"text": " @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."
									},
									"id": 2123,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "values",
									"nameLocation": "13938:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2098,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2097,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "13961:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 2123,
												"src": "13945:19:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$1994_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 2096,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2095,
														"name": "UintSet",
														"nameLocations": [
															"13945:7:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1994,
														"src": "13945:7:4"
													},
													"referencedDeclaration": 1994,
													"src": "13945:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$1994_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13944:21:4"
									},
									"returnParameters": {
										"id": 2102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2101,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2123,
												"src": "13989:16:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2099,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "13989:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2100,
													"nodeType": "ArrayTypeName",
													"src": "13989:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13988:18:4"
									},
									"scope": 2124,
									"src": "13929:297:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2125,
							"src": "2598:11630:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "1474:12755:4"
				},
				"id": 4
			}
		}
	}
}