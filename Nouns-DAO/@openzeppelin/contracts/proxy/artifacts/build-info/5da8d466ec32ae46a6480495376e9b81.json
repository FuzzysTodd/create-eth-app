{
	"id": "5da8d466ec32ae46a6480495376e9b81",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.27",
	"solcLongVersion": "0.8.27+commit.40a35a09",
	"input": {
		"language": "Solidity",
		"sources": {
			"Nouns-DAO/@openzeppelin/contracts/proxy/Proxy.sol": {
				"content": "/*\n    \n   ██████  ██████   ██████  ██   ██ ██████   ██████   ██████  ██   ██    ██████  ███████ ██    ██\n  ██      ██    ██ ██    ██ ██  ██  ██   ██ ██    ██ ██    ██ ██  ██     ██   ██ ██      ██    ██\n  ██      ██    ██ ██    ██ █████   ██████  ██    ██ ██    ██ █████      ██   ██ █████   ██    ██\n  ██      ██    ██ ██    ██ ██  ██  ██   ██ ██    ██ ██    ██ ██  ██     ██   ██ ██       ██  ██\n   ██████  ██████   ██████  ██   ██ ██████   ██████   ██████  ██   ██ ██ ██████  ███████   ████\n  \n  Find any smart contract, and build your project faster: https://www.cookbook.dev\n  Twitter: https://twitter.com/cookbook_dev\n  Discord: https://discord.gg/cookbookdev\n  \n  Find this contract on Cookbook: https://www.cookbook.dev/protocols/Nouns-DAO?utm=code\n  */\n  \n  // SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.0 (proxy/Proxy.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev This abstract contract provides a fallback function that delegates all calls to another contract using the EVM\n * instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to\n * be specified by overriding the virtual {_implementation} function.\n *\n * Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a\n * different contract through the {_delegate} function.\n *\n * The success and return data of the delegated call will be returned back to the caller of the proxy.\n */\nabstract contract Proxy {\n    /**\n     * @dev Delegates the current call to `implementation`.\n     *\n     * This function does not return to its internall call site, it will return directly to the external caller.\n     */\n    function _delegate(address implementation) internal virtual {\n        assembly {\n            // Copy msg.data. We take full control of memory in this inline assembly\n            // block because it will not return to Solidity code. We overwrite the\n            // Solidity scratch pad at memory position 0.\n            calldatacopy(0, 0, calldatasize())\n\n            // Call the implementation.\n            // out and outsize are 0 because we don't know the size yet.\n            let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0)\n\n            // Copy the returned data.\n            returndatacopy(0, 0, returndatasize())\n\n            switch result\n            // delegatecall returns 0 on error.\n            case 0 {\n                revert(0, returndatasize())\n            }\n            default {\n                return(0, returndatasize())\n            }\n        }\n    }\n\n    /**\n     * @dev This is a virtual function that should be overriden so it returns the address to which the fallback function\n     * and {_fallback} should delegate.\n     */\n    function _implementation() internal view virtual returns (address);\n\n    /**\n     * @dev Delegates the current call to the address returned by `_implementation()`.\n     *\n     * This function does not return to its internall call site, it will return directly to the external caller.\n     */\n    function _fallback() internal virtual {\n        _beforeFallback();\n        _delegate(_implementation());\n    }\n\n    /**\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if no other\n     * function in the contract matches the call data.\n     */\n    fallback() external payable virtual {\n        _fallback();\n    }\n\n    /**\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if call data\n     * is empty.\n     */\n    receive() external payable virtual {\n        _fallback();\n    }\n\n    /**\n     * @dev Hook that is called before falling back to the implementation. Can happen as part of a manual `_fallback`\n     * call, or as part of the Solidity `fallback` or `receive` functions.\n     *\n     * If overriden should call `super._beforeFallback()`.\n     */\n    function _beforeFallback() internal virtual {}\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"Nouns-DAO/@openzeppelin/contracts/proxy/Proxy.sol": {
				"Proxy": {
					"abi": [
						{
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"details": "This abstract contract provides a fallback function that delegates all calls to another contract using the EVM instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to be specified by overriding the virtual {_implementation} function. Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a different contract through the {_delegate} function. The success and return data of the delegated call will be returned back to the caller of the proxy.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"This abstract contract provides a fallback function that delegates all calls to another contract using the EVM instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to be specified by overriding the virtual {_implementation} function. Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a different contract through the {_delegate} function. The success and return data of the delegated call will be returned back to the caller of the proxy.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Nouns-DAO/@openzeppelin/contracts/proxy/Proxy.sol\":\"Proxy\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Nouns-DAO/@openzeppelin/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xa6aa176a53484f842e8b446ba370444af1f7dde737b2f2f4fc2746969199f956\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aa981d7e8d5a0ad5f6d39f148d6b94b1847984355f19acf12e1a552dace1fc77\",\"dweb:/ipfs/QmYuiY74kfvAT33eE4Ew3XnbpydYsUd57jkZqsg4qLpshZ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"Nouns-DAO/@openzeppelin/contracts/proxy/Proxy.sol": {
				"ast": {
					"absolutePath": "Nouns-DAO/@openzeppelin/contracts/proxy/Proxy.sol",
					"exportedSymbols": {
						"Proxy": [
							51
						]
					},
					"id": 52,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "1354:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Proxy",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "1379:598:0",
								"text": " @dev This abstract contract provides a fallback function that delegates all calls to another contract using the EVM\n instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to\n be specified by overriding the virtual {_implementation} function.\n Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a\n different contract through the {_delegate} function.\n The success and return data of the delegated call will be returned back to the caller of the proxy."
							},
							"fullyImplemented": false,
							"id": 51,
							"linearizedBaseContracts": [
								51
							],
							"name": "Proxy",
							"nameLocation": "1996:5:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 9,
										"nodeType": "Block",
										"src": "2264:835:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2283:810:0",
													"nodeType": "YulBlock",
													"src": "2283:810:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2536:1:0",
																		"nodeType": "YulLiteral",
																		"src": "2536:1:0",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2539:1:0",
																		"nodeType": "YulLiteral",
																		"src": "2539:1:0",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "calldatasize",
																			"nativeSrc": "2542:12:0",
																			"nodeType": "YulIdentifier",
																			"src": "2542:12:0"
																		},
																		"nativeSrc": "2542:14:0",
																		"nodeType": "YulFunctionCall",
																		"src": "2542:14:0"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "2523:12:0",
																	"nodeType": "YulIdentifier",
																	"src": "2523:12:0"
																},
																"nativeSrc": "2523:34:0",
																"nodeType": "YulFunctionCall",
																"src": "2523:34:0"
															},
															"nativeSrc": "2523:34:0",
															"nodeType": "YulExpressionStatement",
															"src": "2523:34:0"
														},
														{
															"nativeSrc": "2684:74:0",
															"nodeType": "YulVariableDeclaration",
															"src": "2684:74:0",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "2711:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "2711:3:0"
																		},
																		"nativeSrc": "2711:5:0",
																		"nodeType": "YulFunctionCall",
																		"src": "2711:5:0"
																	},
																	{
																		"name": "implementation",
																		"nativeSrc": "2718:14:0",
																		"nodeType": "YulIdentifier",
																		"src": "2718:14:0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2734:1:0",
																		"nodeType": "YulLiteral",
																		"src": "2734:1:0",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "calldatasize",
																			"nativeSrc": "2737:12:0",
																			"nodeType": "YulIdentifier",
																			"src": "2737:12:0"
																		},
																		"nativeSrc": "2737:14:0",
																		"nodeType": "YulFunctionCall",
																		"src": "2737:14:0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2753:1:0",
																		"nodeType": "YulLiteral",
																		"src": "2753:1:0",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2756:1:0",
																		"nodeType": "YulLiteral",
																		"src": "2756:1:0",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "delegatecall",
																	"nativeSrc": "2698:12:0",
																	"nodeType": "YulIdentifier",
																	"src": "2698:12:0"
																},
																"nativeSrc": "2698:60:0",
																"nodeType": "YulFunctionCall",
																"src": "2698:60:0"
															},
															"variables": [
																{
																	"name": "result",
																	"nativeSrc": "2688:6:0",
																	"nodeType": "YulTypedName",
																	"src": "2688:6:0",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2826:1:0",
																		"nodeType": "YulLiteral",
																		"src": "2826:1:0",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2829:1:0",
																		"nodeType": "YulLiteral",
																		"src": "2829:1:0",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "returndatasize",
																			"nativeSrc": "2832:14:0",
																			"nodeType": "YulIdentifier",
																			"src": "2832:14:0"
																		},
																		"nativeSrc": "2832:16:0",
																		"nodeType": "YulFunctionCall",
																		"src": "2832:16:0"
																	}
																],
																"functionName": {
																	"name": "returndatacopy",
																	"nativeSrc": "2811:14:0",
																	"nodeType": "YulIdentifier",
																	"src": "2811:14:0"
																},
																"nativeSrc": "2811:38:0",
																"nodeType": "YulFunctionCall",
																"src": "2811:38:0"
															},
															"nativeSrc": "2811:38:0",
															"nodeType": "YulExpressionStatement",
															"src": "2811:38:0"
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "2944:59:0",
																		"nodeType": "YulBlock",
																		"src": "2944:59:0",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2969:1:0",
																							"nodeType": "YulLiteral",
																							"src": "2969:1:0",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"arguments": [],
																							"functionName": {
																								"name": "returndatasize",
																								"nativeSrc": "2972:14:0",
																								"nodeType": "YulIdentifier",
																								"src": "2972:14:0"
																							},
																							"nativeSrc": "2972:16:0",
																							"nodeType": "YulFunctionCall",
																							"src": "2972:16:0"
																						}
																					],
																					"functionName": {
																						"name": "revert",
																						"nativeSrc": "2962:6:0",
																						"nodeType": "YulIdentifier",
																						"src": "2962:6:0"
																					},
																					"nativeSrc": "2962:27:0",
																					"nodeType": "YulFunctionCall",
																					"src": "2962:27:0"
																				},
																				"nativeSrc": "2962:27:0",
																				"nodeType": "YulExpressionStatement",
																				"src": "2962:27:0"
																			}
																		]
																	},
																	"nativeSrc": "2937:66:0",
																	"nodeType": "YulCase",
																	"src": "2937:66:0",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2942:1:0",
																		"nodeType": "YulLiteral",
																		"src": "2942:1:0",
																		"type": "",
																		"value": "0"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "3024:59:0",
																		"nodeType": "YulBlock",
																		"src": "3024:59:0",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "3049:1:0",
																							"nodeType": "YulLiteral",
																							"src": "3049:1:0",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"arguments": [],
																							"functionName": {
																								"name": "returndatasize",
																								"nativeSrc": "3052:14:0",
																								"nodeType": "YulIdentifier",
																								"src": "3052:14:0"
																							},
																							"nativeSrc": "3052:16:0",
																							"nodeType": "YulFunctionCall",
																							"src": "3052:16:0"
																						}
																					],
																					"functionName": {
																						"name": "return",
																						"nativeSrc": "3042:6:0",
																						"nodeType": "YulIdentifier",
																						"src": "3042:6:0"
																					},
																					"nativeSrc": "3042:27:0",
																					"nodeType": "YulFunctionCall",
																					"src": "3042:27:0"
																				},
																				"nativeSrc": "3042:27:0",
																				"nodeType": "YulExpressionStatement",
																				"src": "3042:27:0"
																			}
																		]
																	},
																	"nativeSrc": "3016:67:0",
																	"nodeType": "YulCase",
																	"src": "3016:67:0",
																	"value": "default"
																}
															],
															"expression": {
																"name": "result",
																"nativeSrc": "2870:6:0",
																"nodeType": "YulIdentifier",
																"src": "2870:6:0"
															},
															"nativeSrc": "2863:220:0",
															"nodeType": "YulSwitch",
															"src": "2863:220:0"
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 5,
														"isOffset": false,
														"isSlot": false,
														"src": "2718:14:0",
														"valueSize": 1
													}
												],
												"id": 8,
												"nodeType": "InlineAssembly",
												"src": "2274:819:0"
											}
										]
									},
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "2008:191:0",
										"text": " @dev Delegates the current call to `implementation`.\n This function does not return to its internall call site, it will return directly to the external caller."
									},
									"id": 10,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_delegate",
									"nameLocation": "2213:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "2231:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 10,
												"src": "2223:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2223:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2222:24:0"
									},
									"returnParameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2264:0:0"
									},
									"scope": 51,
									"src": "2204:895:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"documentation": {
										"id": 11,
										"nodeType": "StructuredDocumentation",
										"src": "3105:172:0",
										"text": " @dev This is a virtual function that should be overriden so it returns the address to which the fallback function\n and {_fallback} should delegate."
									},
									"id": 16,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "_implementation",
									"nameLocation": "3291:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3306:2:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "3340:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3340:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3339:9:0"
									},
									"scope": 51,
									"src": "3282:67:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 28,
										"nodeType": "Block",
										"src": "3616:72:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 20,
														"name": "_beforeFallback",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 50,
														"src": "3626:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 21,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3626:17:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 22,
												"nodeType": "ExpressionStatement",
												"src": "3626:17:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 24,
																"name": "_implementation",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 16,
																"src": "3663:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 25,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3663:17:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 23,
														"name": "_delegate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "3653:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 26,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3653:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 27,
												"nodeType": "ExpressionStatement",
												"src": "3653:28:0"
											}
										]
									},
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "3355:218:0",
										"text": " @dev Delegates the current call to the address returned by `_implementation()`.\n This function does not return to its internall call site, it will return directly to the external caller."
									},
									"id": 29,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_fallback",
									"nameLocation": "3587:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3596:2:0"
									},
									"returnParameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3616:0:0"
									},
									"scope": 51,
									"src": "3578:110:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 36,
										"nodeType": "Block",
										"src": "3921:28:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 33,
														"name": "_fallback",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 29,
														"src": "3931:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 34,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3931:11:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 35,
												"nodeType": "ExpressionStatement",
												"src": "3931:11:0"
											}
										]
									},
									"documentation": {
										"id": 30,
										"nodeType": "StructuredDocumentation",
										"src": "3694:186:0",
										"text": " @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if no other\n function in the contract matches the call data."
									},
									"id": 37,
									"implemented": true,
									"kind": "fallback",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3893:2:0"
									},
									"returnParameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3921:0:0"
									},
									"scope": 51,
									"src": "3885:64:0",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "external"
								},
								{
									"body": {
										"id": 44,
										"nodeType": "Block",
										"src": "4144:28:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 41,
														"name": "_fallback",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 29,
														"src": "4154:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 42,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4154:11:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 43,
												"nodeType": "ExpressionStatement",
												"src": "4154:11:0"
											}
										]
									},
									"documentation": {
										"id": 38,
										"nodeType": "StructuredDocumentation",
										"src": "3955:149:0",
										"text": " @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if call data\n is empty."
									},
									"id": 45,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4116:2:0"
									},
									"returnParameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4144:0:0"
									},
									"scope": 51,
									"src": "4109:63:0",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "external"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "4497:2:0",
										"statements": []
									},
									"documentation": {
										"id": 46,
										"nodeType": "StructuredDocumentation",
										"src": "4178:270:0",
										"text": " @dev Hook that is called before falling back to the implementation. Can happen as part of a manual `_fallback`\n call, or as part of the Solidity `fallback` or `receive` functions.\n If overriden should call `super._beforeFallback()`."
									},
									"id": 50,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeFallback",
									"nameLocation": "4462:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4477:2:0"
									},
									"returnParameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4497:0:0"
									},
									"scope": 51,
									"src": "4453:46:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 52,
							"src": "1978:2523:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "1354:3148:0"
				},
				"id": 0
			}
		}
	}
}