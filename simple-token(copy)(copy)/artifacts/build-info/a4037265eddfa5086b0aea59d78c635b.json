{
	"id": "a4037265eddfa5086b0aea59d78c635b",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.28-nightly.2024.10.2",
	"solcLongVersion": "0.8.28-nightly.2024.10.2+commit.256e9528",
	"input": {
		"language": "Solidity",
		"sources": {
			"simple-token(copy)(copy)/simple-token.sol": {
				"content": "/*\n    \n   ██████  ██████   ██████  ██   ██ ██████   ██████   ██████  ██   ██    ██████  ███████ ██    ██\n  ██      ██    ██ ██    ██ ██  ██  ██   ██ ██    ██ ██    ██ ██  ██     ██   ██ ██      ██    ██\n  ██      ██    ██ ██    ██ █████   ██████  ██    ██ ██    ██ █████      ██   ██ █████   ██    ██\n  ██      ██    ██ ██    ██ ██  ██  ██   ██ ██    ██ ██    ██ ██  ██     ██   ██ ██       ██  ██\n   ██████  ██████   ██████  ██   ██ ██████   ██████   ██████  ██   ██ ██ ██████  ███████   ████\n  \n  Find any smart contract, and build your project faster: https://www.cookbook.dev\n  Twitter: https://twitter.com/cookbook_dev\n  Discord: https://discord.gg/cookbookdev\n  \n  Find this contract on Cookbook: https://www.cookbook.dev/contracts/simple-token?utm=code\n  */\n  \n  // SPDX-License-Identifier: UNLICENSED\n\npragma solidity ^0.8.10;\n\nimport \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\";\n\n/**\n * @title Simple Token\n * @author Breakthrough Labs Inc.\n * @notice Token, ERC20, Fixed Supply\n * @custom:version 1.0.7\n * @custom:address 4\n * @custom:default-precision 18\n * @custom:simple-description Simple Token. A fixed supply is minted on deployment, and\n * new tokens can never be created.\n * @dev ERC20 token with the following features:\n *\n *  - Premint your total supply.\n *  - No minting function. This allows users to comfortably know the future supply of the token.\n *\n */\n\ncontract FixedToken is ERC20 {\n    /**\n     * @param name Token Name\n     * @param symbol Token Symbol\n     * @param totalSupply Token Supply\n     */\n    constructor(\n        string memory name,\n        string memory symbol,\n        uint256 totalSupply\n    ) payable ERC20(name, symbol) {\n        _mint(msg.sender, totalSupply);\n    }\n}\n\n"
			},
			"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "/*\n    \n   ██████  ██████   ██████  ██   ██ ██████   ██████   ██████  ██   ██    ██████  ███████ ██    ██\n  ██      ██    ██ ██    ██ ██  ██  ██   ██ ██    ██ ██    ██ ██  ██     ██   ██ ██      ██    ██\n  ██      ██    ██ ██    ██ █████   ██████  ██    ██ ██    ██ █████      ██   ██ █████   ██    ██\n  ██      ██    ██ ██    ██ ██  ██  ██   ██ ██    ██ ██    ██ ██  ██     ██   ██ ██       ██  ██\n   ██████  ██████   ██████  ██   ██ ██████   ██████   ██████  ██   ██ ██ ██████  ███████   ████\n  \n  Find any smart contract, and build your project faster: https://www.cookbook.dev\n  Twitter: https://twitter.com/cookbook_dev\n  Discord: https://discord.gg/cookbookdev\n  \n  Find this contract on Cookbook: https://www.cookbook.dev/contracts/simple-token?utm=code\n  */\n  \n  // SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC20.sol\";\nimport \"./extensions/IERC20Metadata.sol\";\nimport \"../../utils/Context.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20 is Context, IERC20, IERC20Metadata {\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * The default value of {decimals} is 18. To select a different value for\n     * {decimals} you should overload it.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\n     * overridden;\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual override returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) public virtual override returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, amount);\n        _transfer(from, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        uint256 currentAllowance = allowance(owner, spender);\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\n        unchecked {\n            _approve(owner, spender, currentAllowance - subtractedValue);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Moves `amount` of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     */\n    function _transfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {\n        require(from != address(0), \"ERC20: transfer from the zero address\");\n        require(to != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, amount);\n\n        uint256 fromBalance = _balances[from];\n        require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\");\n        unchecked {\n            _balances[from] = fromBalance - amount;\n        }\n        _balances[to] += amount;\n\n        emit Transfer(from, to, amount);\n\n        _afterTokenTransfer(from, to, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply += amount;\n        _balances[account] += amount;\n        emit Transfer(address(0), account, amount);\n\n        _afterTokenTransfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        uint256 accountBalance = _balances[account];\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\n        unchecked {\n            _balances[account] = accountBalance - amount;\n        }\n        _totalSupply -= amount;\n\n        emit Transfer(account, address(0), amount);\n\n        _afterTokenTransfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n     *\n     * Does not update the allowance amount in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Might emit an {Approval} event.\n     */\n    function _spendAllowance(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            require(currentAllowance >= amount, \"ERC20: insufficient allowance\");\n            unchecked {\n                _approve(owner, spender, currentAllowance - amount);\n            }\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * has been transferred to `to`.\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n}\n"
			},
			"simple-token/@openzeppelin/contracts/utils/Context.sol": {
				"content": "/*\n    \n   ██████  ██████   ██████  ██   ██ ██████   ██████   ██████  ██   ██    ██████  ███████ ██    ██\n  ██      ██    ██ ██    ██ ██  ██  ██   ██ ██    ██ ██    ██ ██  ██     ██   ██ ██      ██    ██\n  ██      ██    ██ ██    ██ █████   ██████  ██    ██ ██    ██ █████      ██   ██ █████   ██    ██\n  ██      ██    ██ ██    ██ ██  ██  ██   ██ ██    ██ ██    ██ ██  ██     ██   ██ ██       ██  ██\n   ██████  ██████   ██████  ██   ██ ██████   ██████   ██████  ██   ██ ██ ██████  ███████   ████\n  \n  Find any smart contract, and build your project faster: https://www.cookbook.dev\n  Twitter: https://twitter.com/cookbook_dev\n  Discord: https://discord.gg/cookbookdev\n  \n  Find this contract on Cookbook: https://www.cookbook.dev/contracts/simple-token?utm=code\n  */\n  \n  // SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"simple-token/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "/*\n    \n   ██████  ██████   ██████  ██   ██ ██████   ██████   ██████  ██   ██    ██████  ███████ ██    ██\n  ██      ██    ██ ██    ██ ██  ██  ██   ██ ██    ██ ██    ██ ██  ██     ██   ██ ██      ██    ██\n  ██      ██    ██ ██    ██ █████   ██████  ██    ██ ██    ██ █████      ██   ██ █████   ██    ██\n  ██      ██    ██ ██    ██ ██  ██  ██   ██ ██    ██ ██    ██ ██  ██     ██   ██ ██       ██  ██\n   ██████  ██████   ██████  ██   ██ ██████   ██████   ██████  ██   ██ ██ ██████  ███████   ████\n  \n  Find any smart contract, and build your project faster: https://www.cookbook.dev\n  Twitter: https://twitter.com/cookbook_dev\n  Discord: https://discord.gg/cookbookdev\n  \n  Find this contract on Cookbook: https://www.cookbook.dev/contracts/simple-token?utm=code\n  */\n  \n  // SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n *\n * _Available since v4.1._\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"simple-token/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "/*\n    \n   ██████  ██████   ██████  ██   ██ ██████   ██████   ██████  ██   ██    ██████  ███████ ██    ██\n  ██      ██    ██ ██    ██ ██  ██  ██   ██ ██    ██ ██    ██ ██  ██     ██   ██ ██      ██    ██\n  ██      ██    ██ ██    ██ █████   ██████  ██    ██ ██    ██ █████      ██   ██ █████   ██    ██\n  ██      ██    ██ ██    ██ ██  ██  ██   ██ ██    ██ ██    ██ ██  ██     ██   ██ ██       ██  ██\n   ██████  ██████   ██████  ██   ██ ██████   ██████   ██████  ██   ██ ██ ██████  ███████   ████\n  \n  Find any smart contract, and build your project faster: https://www.cookbook.dev\n  Twitter: https://twitter.com/cookbook_dev\n  Discord: https://discord.gg/cookbookdev\n  \n  Find this contract on Cookbook: https://www.cookbook.dev/contracts/simple-token?utm=code\n  */\n  \n  // SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 5000000
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": [],
			"evmVersion": "istanbul"
		}
	},
	"output": {
		"contracts": {
			"simple-token(copy)(copy)/simple-token.sol": {
				"FixedToken": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "totalSupply",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "Breakthrough Labs Inc.",
						"custom:address": "4",
						"custom:default-precision": "18",
						"custom:simple-description": "Simple Token. A fixed supply is minted on deployment, and new tokens can never be created.",
						"custom:version": "1.0.7",
						"details": "ERC20 token with the following features:  - Premint your total supply.  - No minting function. This allows users to comfortably know the future supply of the token.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"params": {
									"name": "Token Name",
									"symbol": "Token Symbol",
									"totalSupply": "Token Supply"
								}
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
							}
						},
						"title": "Simple Token",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"simple-token(copy)(copy)/simple-token.sol\":1900:2236  contract FixedToken is ERC20 {... */\n  mstore(0x40, 0x80)\n    /* \"simple-token(copy)(copy)/simple-token.sol\":2054:2234  constructor(... */\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_1\n  swap2\n  tag_2\n  jump\t// in\ntag_1:\n    /* \"simple-token(copy)(copy)/simple-token.sol\":2173:2177  name */\n  dup3\n    /* \"simple-token(copy)(copy)/simple-token.sol\":2179:2185  symbol */\n  dup3\n    /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3317:3322  _name */\n  0x03\n    /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3317:3330  _name = name_ */\n  tag_6\n    /* \"simple-token(copy)(copy)/simple-token.sol\":2173:2177  name */\n  dup4\n    /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3317:3322  _name */\n  dup3\n    /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3317:3330  _name = name_ */\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3340:3347  _symbol */\n  0x04\n    /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3340:3357  _symbol = symbol_ */\n  tag_8\n    /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3350:3357  symbol_ */\n  dup3\n    /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3340:3347  _symbol */\n  dup3\n    /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3340:3357  _symbol = symbol_ */\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n    /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3251:3364  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"simple-token(copy)(copy)/simple-token.sol\":2197:2227  _mint(msg.sender, totalSupply) */\n  tag_10\n    /* \"simple-token(copy)(copy)/simple-token.sol\":2203:2213  msg.sender */\n  caller\n    /* \"simple-token(copy)(copy)/simple-token.sol\":2215:2226  totalSupply */\n  dup3\n    /* \"simple-token(copy)(copy)/simple-token.sol\":2197:2202  _mint */\n  shl(0x20, tag_11)\n    /* \"simple-token(copy)(copy)/simple-token.sol\":2197:2227  _mint(msg.sender, totalSupply) */\n  0x20\n  shr\n  jump\t// in\ntag_10:\n    /* \"simple-token(copy)(copy)/simple-token.sol\":2054:2234  constructor(... */\n  pop\n  pop\n  pop\n    /* \"simple-token(copy)(copy)/simple-token.sol\":1900:2236  contract FixedToken is ERC20 {... */\n  jump(tag_34)\n    /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9675:10064  function _mint(address account, uint256 amount) internal virtual {... */\ntag_11:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9758:9779  account != address(0) */\n  dup3\n  and\n    /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9750:9815  require(account != address(0), \"ERC20: mint to the zero address\") */\n  tag_14\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":4319:4321   */\n  0x20\n    /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9750:9815  require(account != address(0), \"ERC20: mint to the zero address\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":4301:4322   */\n  mstore\n    /* \"#utility.yul\":4358:4360   */\n  0x1f\n    /* \"#utility.yul\":4338:4356   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":4331:4361   */\n  mstore\n    /* \"#utility.yul\":4397:4430   */\n  0x45524332303a206d696e7420746f20746865207a65726f206164647265737300\n    /* \"#utility.yul\":4377:4395   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":4370:4431   */\n  mstore\n    /* \"#utility.yul\":4448:4466   */\n  0x64\n  add\n    /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9750:9815  require(account != address(0), \"ERC20: mint to the zero address\") */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_14:\n    /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9902:9908  amount */\n  dup1\n    /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9886:9898  _totalSupply */\n  0x02\n  0x00\n    /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9886:9908  _totalSupply += amount */\n  dup3\n  dup3\n  sload\n  tag_19\n  swap2\n  swap1\n  tag_20\n  jump\t// in\ntag_19:\n  swap1\n  swap2\n  sstore\n  pop\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9918:9936  _balances[account] */\n  dup3\n  and\n    /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9918:9927  _balances */\n  0x00\n    /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9918:9936  _balances[account] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  dup2\n  keccak256\n    /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9918:9946  _balances[account] += amount */\n  dup1\n  sload\n    /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9940:9946  amount */\n  dup4\n  swap3\n    /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9918:9927  _balances */\n  swap1\n    /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9918:9946  _balances[account] += amount */\n  tag_21\n  swap1\n    /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9940:9946  amount */\n  dup5\n  swap1\n    /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9918:9946  _balances[account] += amount */\n  tag_20\n  jump\t// in\ntag_21:\n  swap1\n  swap2\n  sstore\n  pop\n  pop\n    /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9961:9998  Transfer(address(0), account, amount) */\n  mload(0x40)\n    /* \"#utility.yul\":4850:4875   */\n  dup2\n  dup2\n  mstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9961:9998  Transfer(address(0), account, amount) */\n  dup4\n  and\n  swap1\n    /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9978:9979  0 */\n  0x00\n  swap1\n    /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9961:9998  Transfer(address(0), account, amount) */\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n  swap1\n    /* \"#utility.yul\":4838:4840   */\n  0x20\n    /* \"#utility.yul\":4823:4841   */\n  add\n    /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9961:9998  Transfer(address(0), account, amount) */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9675:10064  function _mint(address account, uint256 amount) internal virtual {... */\n  pop\n  pop\n  jump\t// out\n    /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":13059:13180  function _beforeTokenTransfer(... */\ntag_18:\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:141   */\ntag_28:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:980   */\ntag_29:\n    /* \"#utility.yul\":200:205   */\n  0x00\n    /* \"#utility.yul\":253:256   */\n  dup3\n    /* \"#utility.yul\":246:250   */\n  0x1f\n    /* \"#utility.yul\":238:244   */\n  dup4\n    /* \"#utility.yul\":234:251   */\n  add\n    /* \"#utility.yul\":230:257   */\n  slt\n    /* \"#utility.yul\":220:275   */\n  tag_37\n  jumpi\n    /* \"#utility.yul\":271:272   */\n  0x00\n    /* \"#utility.yul\":268:269   */\n  dup1\n    /* \"#utility.yul\":261:273   */\n  revert\n    /* \"#utility.yul\":220:275   */\ntag_37:\n    /* \"#utility.yul\":298:311   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":323:353   */\n  dup2\n  gt\n    /* \"#utility.yul\":320:376   */\n  iszero\n  tag_39\n  jumpi\n    /* \"#utility.yul\":356:374   */\n  tag_39\n  tag_28\n  jump\t// in\ntag_39:\n    /* \"#utility.yul\":405:407   */\n  0x40\n    /* \"#utility.yul\":399:408   */\n  mload\n    /* \"#utility.yul\":497:499   */\n  0x1f\n    /* \"#utility.yul\":459:476   */\n  dup3\n  add\n  not(0x1f)\n    /* \"#utility.yul\":455:486   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":488:490   */\n  0x3f\n    /* \"#utility.yul\":451:491   */\n  add\n    /* \"#utility.yul\":447:501   */\n  and\n    /* \"#utility.yul\":435:502   */\n  dup2\n  add\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":517:551   */\n  dup2\n  gt\n    /* \"#utility.yul\":553:575   */\n  dup3\n  dup3\n  lt\n    /* \"#utility.yul\":514:576   */\n  or\n    /* \"#utility.yul\":511:599   */\n  iszero\n  tag_41\n  jumpi\n    /* \"#utility.yul\":579:597   */\n  tag_41\n  tag_28\n  jump\t// in\ntag_41:\n    /* \"#utility.yul\":615:617   */\n  0x40\n    /* \"#utility.yul\":608:630   */\n  mstore\n    /* \"#utility.yul\":639:661   */\n  dup2\n  dup2\n  mstore\n    /* \"#utility.yul\":680:699   */\n  dup4\n  dup3\n  add\n    /* \"#utility.yul\":701:705   */\n  0x20\n    /* \"#utility.yul\":676:706   */\n  add\n    /* \"#utility.yul\":673:712   */\n  dup6\n  lt\n    /* \"#utility.yul\":670:729   */\n  iszero\n  tag_42\n  jumpi\n    /* \"#utility.yul\":725:726   */\n  0x00\n    /* \"#utility.yul\":722:723   */\n  dup1\n    /* \"#utility.yul\":715:727   */\n  revert\n    /* \"#utility.yul\":670:729   */\ntag_42:\n    /* \"#utility.yul\":747:748   */\n  0x00\n    /* \"#utility.yul\":757:900   */\ntag_43:\n    /* \"#utility.yul\":771:777   */\n  dup3\n    /* \"#utility.yul\":768:769   */\n  dup2\n    /* \"#utility.yul\":765:778   */\n  lt\n    /* \"#utility.yul\":757:900   */\n  iszero\n  tag_45\n  jumpi\n    /* \"#utility.yul\":883:887   */\n  0x20\n    /* \"#utility.yul\":867:881   */\n  dup2\n  dup7\n  add\n    /* \"#utility.yul\":863:888   */\n  dup2\n  add\n    /* \"#utility.yul\":857:889   */\n  mload\n    /* \"#utility.yul\":834:848   */\n  dup4\n  dup4\n  add\n    /* \"#utility.yul\":830:855   */\n  dup3\n  add\n    /* \"#utility.yul\":823:890   */\n  mstore\n    /* \"#utility.yul\":786:798   */\n  add\n    /* \"#utility.yul\":757:900   */\n  jump(tag_43)\ntag_45:\n  pop\n    /* \"#utility.yul\":948:949   */\n  0x00\n    /* \"#utility.yul\":920:939   */\n  swap2\n  dup2\n  add\n    /* \"#utility.yul\":941:945   */\n  0x20\n    /* \"#utility.yul\":916:946   */\n  add\n    /* \"#utility.yul\":909:950   */\n  swap2\n  swap1\n  swap2\n  mstore\n    /* \"#utility.yul\":924:930   */\n  swap4\n    /* \"#utility.yul\":146:980   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":985:1603   */\ntag_2:\n    /* \"#utility.yul\":1093:1099   */\n  0x00\n    /* \"#utility.yul\":1101:1107   */\n  dup1\n    /* \"#utility.yul\":1109:1115   */\n  0x00\n    /* \"#utility.yul\":1162:1164   */\n  0x60\n    /* \"#utility.yul\":1150:1159   */\n  dup5\n    /* \"#utility.yul\":1141:1148   */\n  dup7\n    /* \"#utility.yul\":1137:1160   */\n  sub\n    /* \"#utility.yul\":1133:1165   */\n  slt\n    /* \"#utility.yul\":1130:1182   */\n  iszero\n  tag_47\n  jumpi\n    /* \"#utility.yul\":1178:1179   */\n  0x00\n    /* \"#utility.yul\":1175:1176   */\n  dup1\n    /* \"#utility.yul\":1168:1180   */\n  revert\n    /* \"#utility.yul\":1130:1182   */\ntag_47:\n    /* \"#utility.yul\":1205:1221   */\n  dup4\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1233:1263   */\n  dup2\n  gt\n    /* \"#utility.yul\":1230:1280   */\n  iszero\n  tag_48\n  jumpi\n    /* \"#utility.yul\":1276:1277   */\n  0x00\n    /* \"#utility.yul\":1273:1274   */\n  dup1\n    /* \"#utility.yul\":1266:1278   */\n  revert\n    /* \"#utility.yul\":1230:1280   */\ntag_48:\n    /* \"#utility.yul\":1299:1360   */\n  tag_49\n    /* \"#utility.yul\":1352:1359   */\n  dup7\n    /* \"#utility.yul\":1343:1349   */\n  dup3\n    /* \"#utility.yul\":1332:1341   */\n  dup8\n    /* \"#utility.yul\":1328:1350   */\n  add\n    /* \"#utility.yul\":1299:1360   */\n  tag_29\n  jump\t// in\ntag_49:\n    /* \"#utility.yul\":1406:1408   */\n  0x20\n    /* \"#utility.yul\":1391:1409   */\n  dup7\n  add\n    /* \"#utility.yul\":1385:1410   */\n  mload\n    /* \"#utility.yul\":1289:1360   */\n  swap1\n  swap5\n  pop\n    /* \"#utility.yul\":1385:1410   */\n  swap1\n  pop\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1422:1454   */\n  dup2\n  gt\n    /* \"#utility.yul\":1419:1471   */\n  iszero\n  tag_50\n  jumpi\n    /* \"#utility.yul\":1467:1468   */\n  0x00\n    /* \"#utility.yul\":1464:1465   */\n  dup1\n    /* \"#utility.yul\":1457:1469   */\n  revert\n    /* \"#utility.yul\":1419:1471   */\ntag_50:\n    /* \"#utility.yul\":1490:1553   */\n  tag_51\n    /* \"#utility.yul\":1545:1552   */\n  dup7\n    /* \"#utility.yul\":1534:1542   */\n  dup3\n    /* \"#utility.yul\":1523:1532   */\n  dup8\n    /* \"#utility.yul\":1519:1543   */\n  add\n    /* \"#utility.yul\":1490:1553   */\n  tag_29\n  jump\t// in\ntag_51:\n    /* \"#utility.yul\":1480:1553   */\n  swap3\n  pop\n  pop\n    /* \"#utility.yul\":1593:1595   */\n  0x40\n    /* \"#utility.yul\":1582:1591   */\n  dup5\n    /* \"#utility.yul\":1578:1596   */\n  add\n    /* \"#utility.yul\":1572:1597   */\n  mload\n    /* \"#utility.yul\":1562:1597   */\n  swap1\n  pop\n    /* \"#utility.yul\":985:1603   */\n  swap3\n  pop\n  swap3\n  pop\n  swap3\n  jump\t// out\n    /* \"#utility.yul\":1608:1988   */\ntag_30:\n    /* \"#utility.yul\":1687:1688   */\n  0x01\n    /* \"#utility.yul\":1683:1695   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":1730:1742   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":1751:1812   */\n  tag_53\n  jumpi\n    /* \"#utility.yul\":1805:1809   */\n  0x7f\n    /* \"#utility.yul\":1797:1803   */\n  dup3\n    /* \"#utility.yul\":1793:1810   */\n  and\n    /* \"#utility.yul\":1783:1810   */\n  swap2\n  pop\n    /* \"#utility.yul\":1751:1812   */\ntag_53:\n    /* \"#utility.yul\":1858:1860   */\n  0x20\n    /* \"#utility.yul\":1850:1856   */\n  dup3\n    /* \"#utility.yul\":1847:1861   */\n  lt\n    /* \"#utility.yul\":1827:1845   */\n  dup2\n    /* \"#utility.yul\":1824:1862   */\n  sub\n    /* \"#utility.yul\":1821:1982   */\n  tag_54\n  jumpi\n    /* \"#utility.yul\":1904:1914   */\n  0x4e487b71\n    /* \"#utility.yul\":1899:1902   */\n  0xe0\n    /* \"#utility.yul\":1895:1915   */\n  shl\n    /* \"#utility.yul\":1892:1893   */\n  0x00\n    /* \"#utility.yul\":1885:1916   */\n  mstore\n    /* \"#utility.yul\":1939:1943   */\n  0x22\n    /* \"#utility.yul\":1936:1937   */\n  0x04\n    /* \"#utility.yul\":1929:1944   */\n  mstore\n    /* \"#utility.yul\":1967:1971   */\n  0x24\n    /* \"#utility.yul\":1964:1965   */\n  0x00\n    /* \"#utility.yul\":1957:1972   */\n  revert\n    /* \"#utility.yul\":1821:1982   */\ntag_54:\n  pop\n    /* \"#utility.yul\":1608:1988   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2119:2637   */\ntag_32:\n    /* \"#utility.yul\":2221:2223   */\n  0x1f\n    /* \"#utility.yul\":2216:2219   */\n  dup3\n    /* \"#utility.yul\":2213:2224   */\n  gt\n    /* \"#utility.yul\":2210:2631   */\n  iszero\n  tag_18\n  jumpi\n    /* \"#utility.yul\":2257:2262   */\n  dup1\n    /* \"#utility.yul\":2254:2255   */\n  0x00\n    /* \"#utility.yul\":2247:2263   */\n  mstore\n    /* \"#utility.yul\":2301:2305   */\n  0x20\n    /* \"#utility.yul\":2298:2299   */\n  0x00\n    /* \"#utility.yul\":2288:2306   */\n  keccak256\n    /* \"#utility.yul\":2371:2373   */\n  0x1f\n    /* \"#utility.yul\":2359:2369   */\n  dup5\n    /* \"#utility.yul\":2355:2374   */\n  add\n    /* \"#utility.yul\":2352:2353   */\n  0x05\n    /* \"#utility.yul\":2348:2375   */\n  shr\n    /* \"#utility.yul\":2342:2346   */\n  dup2\n    /* \"#utility.yul\":2338:2376   */\n  add\n    /* \"#utility.yul\":2407:2411   */\n  0x20\n    /* \"#utility.yul\":2395:2405   */\n  dup6\n    /* \"#utility.yul\":2392:2412   */\n  lt\n    /* \"#utility.yul\":2389:2436   */\n  iszero\n  tag_58\n  jumpi\n  pop\n    /* \"#utility.yul\":2430:2434   */\n  dup1\n    /* \"#utility.yul\":2389:2436   */\ntag_58:\n    /* \"#utility.yul\":2485:2487   */\n  0x1f\n    /* \"#utility.yul\":2480:2483   */\n  dup5\n    /* \"#utility.yul\":2476:2488   */\n  add\n    /* \"#utility.yul\":2473:2474   */\n  0x05\n    /* \"#utility.yul\":2469:2489   */\n  shr\n    /* \"#utility.yul\":2463:2467   */\n  dup3\n    /* \"#utility.yul\":2459:2490   */\n  add\n    /* \"#utility.yul\":2449:2490   */\n  swap2\n  pop\n    /* \"#utility.yul\":2540:2621   */\ntag_59:\n    /* \"#utility.yul\":2558:2560   */\n  dup2\n    /* \"#utility.yul\":2551:2556   */\n  dup2\n    /* \"#utility.yul\":2548:2561   */\n  lt\n    /* \"#utility.yul\":2540:2621   */\n  iszero\n  tag_61\n  jumpi\n    /* \"#utility.yul\":2617:2618   */\n  0x00\n    /* \"#utility.yul\":2603:2619   */\n  dup2\n  sstore\n    /* \"#utility.yul\":2584:2585   */\n  0x01\n    /* \"#utility.yul\":2573:2586   */\n  add\n    /* \"#utility.yul\":2540:2621   */\n  jump(tag_59)\ntag_61:\n    /* \"#utility.yul\":2544:2547   */\n  pop\n  pop\n    /* \"#utility.yul\":2119:2637   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2813:4112   */\ntag_7:\n    /* \"#utility.yul\":2933:2943   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":2955:2985   */\n  dup2\n  gt\n    /* \"#utility.yul\":2952:3008   */\n  iszero\n  tag_65\n  jumpi\n    /* \"#utility.yul\":2988:3006   */\n  tag_65\n  tag_28\n  jump\t// in\ntag_65:\n    /* \"#utility.yul\":3017:3114   */\n  tag_66\n    /* \"#utility.yul\":3107:3113   */\n  dup2\n    /* \"#utility.yul\":3067:3105   */\n  tag_67\n    /* \"#utility.yul\":3099:3103   */\n  dup5\n    /* \"#utility.yul\":3093:3104   */\n  sload\n    /* \"#utility.yul\":3067:3105   */\n  tag_30\n  jump\t// in\ntag_67:\n    /* \"#utility.yul\":3061:3065   */\n  dup5\n    /* \"#utility.yul\":3017:3114   */\n  tag_32\n  jump\t// in\ntag_66:\n    /* \"#utility.yul\":3163:3167   */\n  0x20\n    /* \"#utility.yul\":3194:3196   */\n  0x1f\n    /* \"#utility.yul\":3183:3197   */\n  dup3\n  gt\n    /* \"#utility.yul\":3211:3212   */\n  0x01\n    /* \"#utility.yul\":3206:3855   */\n  dup2\n  eq\n  tag_69\n  jumpi\n    /* \"#utility.yul\":3899:3900   */\n  0x00\n    /* \"#utility.yul\":3916:3922   */\n  dup4\n    /* \"#utility.yul\":3913:4002   */\n  iszero\n  tag_70\n  jumpi\n  pop\n    /* \"#utility.yul\":3968:3987   */\n  dup5\n  dup3\n  add\n    /* \"#utility.yul\":3962:3988   */\n  mload\n    /* \"#utility.yul\":3913:4002   */\ntag_70:\n  not(0x00)\n    /* \"#utility.yul\":2770:2771   */\n  0x03\n    /* \"#utility.yul\":2766:2777   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":2762:2786   */\n  shr\n    /* \"#utility.yul\":2758:2787   */\n  not\n    /* \"#utility.yul\":2748:2788   */\n  and\n    /* \"#utility.yul\":2794:2795   */\n  0x01\n    /* \"#utility.yul\":2790:2801   */\n  dup5\n  swap1\n  shl\n    /* \"#utility.yul\":2745:2802   */\n  or\n    /* \"#utility.yul\":4015:4096   */\n  dup5\n  sstore\n    /* \"#utility.yul\":3176:4106   */\n  jump(tag_61)\n    /* \"#utility.yul\":3206:3855   */\ntag_69:\n    /* \"#utility.yul\":2066:2067   */\n  0x00\n    /* \"#utility.yul\":2059:2073   */\n  dup5\n  dup2\n  mstore\n    /* \"#utility.yul\":2103:2107   */\n  0x20\n    /* \"#utility.yul\":2090:2108   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":3242:3262   */\n  dup6\n  and\n  swap2\n    /* \"#utility.yul\":3360:3582   */\ntag_73:\n    /* \"#utility.yul\":3374:3381   */\n  dup3\n    /* \"#utility.yul\":3371:3372   */\n  dup2\n    /* \"#utility.yul\":3368:3382   */\n  lt\n    /* \"#utility.yul\":3360:3582   */\n  iszero\n  tag_75\n  jumpi\n    /* \"#utility.yul\":3456:3475   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":3450:3476   */\n  mload\n    /* \"#utility.yul\":3435:3477   */\n  dup3\n  sstore\n    /* \"#utility.yul\":3563:3567   */\n  0x20\n    /* \"#utility.yul\":3548:3568   */\n  swap5\n  dup6\n  add\n  swap5\n    /* \"#utility.yul\":3516:3517   */\n  0x01\n    /* \"#utility.yul\":3504:3518   */\n  swap1\n  swap3\n  add\n  swap2\n    /* \"#utility.yul\":3390:3402   */\n  add\n    /* \"#utility.yul\":3360:3582   */\n  jump(tag_73)\ntag_75:\n    /* \"#utility.yul\":3364:3367   */\n  pop\n    /* \"#utility.yul\":3610:3616   */\n  dup5\n    /* \"#utility.yul\":3601:3608   */\n  dup3\n    /* \"#utility.yul\":3598:3617   */\n  lt\n    /* \"#utility.yul\":3595:3796   */\n  iszero\n  tag_76\n  jumpi\n    /* \"#utility.yul\":3671:3690   */\n  dup7\n  dup5\n  add\n    /* \"#utility.yul\":3665:3691   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":3754:3755   */\n  0x03\n    /* \"#utility.yul\":3750:3764   */\n  dup8\n  swap1\n  shl\n    /* \"#utility.yul\":3766:3769   */\n  0xf8\n    /* \"#utility.yul\":3746:3770   */\n  and\n    /* \"#utility.yul\":3742:3779   */\n  shr\n    /* \"#utility.yul\":3738:3780   */\n  not\n    /* \"#utility.yul\":3723:3781   */\n  and\n    /* \"#utility.yul\":3708:3782   */\n  dup2\n  sstore\n    /* \"#utility.yul\":3595:3796   */\ntag_76:\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":3842:3843   */\n  0x01\n    /* \"#utility.yul\":3826:3840   */\n  swap1\n  dup2\n  shl\n    /* \"#utility.yul\":3822:3844   */\n  add\n    /* \"#utility.yul\":3809:3845   */\n  swap1\n  sstore\n  pop\n    /* \"#utility.yul\":2813:4112   */\n  jump\t// out\n    /* \"#utility.yul\":4477:4699   */\ntag_20:\n    /* \"#utility.yul\":4542:4551   */\n  dup1\n  dup3\n  add\n    /* \"#utility.yul\":4563:4573   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":4560:4693   */\n  iszero\n  tag_79\n  jumpi\n    /* \"#utility.yul\":4615:4625   */\n  0x4e487b71\n    /* \"#utility.yul\":4610:4613   */\n  0xe0\n    /* \"#utility.yul\":4606:4626   */\n  shl\n    /* \"#utility.yul\":4603:4604   */\n  0x00\n    /* \"#utility.yul\":4596:4627   */\n  mstore\n    /* \"#utility.yul\":4650:4654   */\n  0x11\n    /* \"#utility.yul\":4647:4648   */\n  0x04\n    /* \"#utility.yul\":4640:4655   */\n  mstore\n    /* \"#utility.yul\":4678:4682   */\n  0x24\n    /* \"#utility.yul\":4675:4676   */\n  0x00\n    /* \"#utility.yul\":4668:4683   */\n  revert\n    /* \"#utility.yul\":4560:4693   */\ntag_79:\n    /* \"#utility.yul\":4477:4699   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4704:4881   */\ntag_34:\n    /* \"simple-token(copy)(copy)/simple-token.sol\":1900:2236  contract FixedToken is ERC20 {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"simple-token(copy)(copy)/simple-token.sol\":1900:2236  contract FixedToken is ERC20 {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x39509351\n      gt\n      tag_14\n      jumpi\n      dup1\n      0xa457c2d7\n      gt\n      tag_15\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_15:\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_10\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_14:\n      dup1\n      0x18160ddd\n      gt\n      tag_16\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_16:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3429:3527  function name() public view virtual override returns (string memory) {... */\n    tag_3:\n      tag_17\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5706:5903  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_4:\n      tag_21\n      tag_22\n      calldatasize\n      0x04\n      tag_23\n      jump\t// in\n    tag_22:\n      tag_24\n      jump\t// in\n    tag_21:\n      mload(0x40)\n        /* \"#utility.yul\":1276:1290   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1269:1291   */\n      iszero\n        /* \"#utility.yul\":1251:1292   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1239:1241   */\n      0x20\n        /* \"#utility.yul\":1224:1242   */\n      add\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5706:5903  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      tag_19\n        /* \"#utility.yul\":1111:1298   */\n      jump\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4517:4623  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_5:\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4604:4616  _totalSupply */\n      sload(0x02)\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4517:4623  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_27:\n      mload(0x40)\n        /* \"#utility.yul\":1449:1474   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1437:1439   */\n      0x20\n        /* \"#utility.yul\":1422:1440   */\n      add\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4517:4623  function totalSupply() public view virtual override returns (uint256) {... */\n      tag_19\n        /* \"#utility.yul\":1303:1480   */\n      jump\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6465:6751  function transferFrom(... */\n    tag_6:\n      tag_21\n      tag_32\n      calldatasize\n      0x04\n      tag_33\n      jump\t// in\n    tag_32:\n      tag_34\n      jump\t// in\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4366:4457  function decimals() public view virtual override returns (uint8) {... */\n    tag_7:\n      mload(0x40)\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4448:4450  18 */\n      0x12\n        /* \"#utility.yul\":2006:2042   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1994:1996   */\n      0x20\n        /* \"#utility.yul\":1979:1997   */\n      add\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4366:4457  function decimals() public view virtual override returns (uint8) {... */\n      tag_19\n        /* \"#utility.yul\":1864:2048   */\n      jump\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7146:7380  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_8:\n      tag_21\n      tag_41\n      calldatasize\n      0x04\n      tag_23\n      jump\t// in\n    tag_41:\n      tag_42\n      jump\t// in\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4681:4806  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_9:\n      tag_27\n      tag_45\n      calldatasize\n      0x04\n      tag_46\n      jump\t// in\n    tag_45:\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4781:4799  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4755:4762  uint256 */\n      0x00\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4781:4799  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4681:4806  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      jump\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3640:3742  function symbol() public view virtual override returns (string memory) {... */\n    tag_10:\n      tag_17\n      tag_50\n      jump\t// in\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7867:8294  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_11:\n      tag_21\n      tag_53\n      calldatasize\n      0x04\n      tag_23\n      jump\t// in\n    tag_53:\n      tag_54\n      jump\t// in\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5002:5191  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_12:\n      tag_21\n      tag_57\n      calldatasize\n      0x04\n      tag_23\n      jump\t// in\n    tag_57:\n      tag_58\n      jump\t// in\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5249:5398  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_13:\n      tag_27\n      tag_61\n      calldatasize\n      0x04\n      tag_62\n      jump\t// in\n    tag_61:\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5364:5382  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      swap2\n      dup3\n      and\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5338:5345  uint256 */\n      0x00\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5364:5382  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5364:5375  _allowances */\n      0x01\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5364:5382  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5364:5391  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5249:5398  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      jump\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3429:3527  function name() public view virtual override returns (string memory) {... */\n    tag_18:\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3483:3496  string memory */\n      0x60\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3515:3520  _name */\n      0x03\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3508:3520  return _name */\n      dup1\n      sload\n      tag_66\n      swap1\n      tag_67\n      jump\t// in\n    tag_66:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_68\n      swap1\n      tag_67\n      jump\t// in\n    tag_68:\n      dup1\n      iszero\n      tag_69\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_70\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_69)\n    tag_70:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_71:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_71\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_69:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3429:3527  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5706:5903  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_24:\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5789:5793  bool */\n      0x00\n        /* \"simple-token/@openzeppelin/contracts/utils/Context.sol\":1992:2002  msg.sender */\n      caller\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5843:5875  _approve(owner, spender, amount) */\n      tag_75\n        /* \"simple-token/@openzeppelin/contracts/utils/Context.sol\":1992:2002  msg.sender */\n      dup2\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5859:5866  spender */\n      dup6\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5868:5874  amount */\n      dup6\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5843:5851  _approve */\n      tag_76\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5843:5875  _approve(owner, spender, amount) */\n      jump\t// in\n    tag_75:\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5892:5896  true */\n      0x01\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5885:5896  return true */\n      swap2\n      pop\n      pop\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5706:5903  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_72:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6465:6751  function transferFrom(... */\n    tag_34:\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6592:6596  bool */\n      0x00\n        /* \"simple-token/@openzeppelin/contracts/utils/Context.sol\":1992:2002  msg.sender */\n      caller\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6648:6686  _spendAllowance(from, spender, amount) */\n      tag_80\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6664:6668  from */\n      dup6\n        /* \"simple-token/@openzeppelin/contracts/utils/Context.sol\":1992:2002  msg.sender */\n      dup3\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6679:6685  amount */\n      dup6\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6648:6663  _spendAllowance */\n      tag_81\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6648:6686  _spendAllowance(from, spender, amount) */\n      jump\t// in\n    tag_80:\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6696:6723  _transfer(from, to, amount) */\n      tag_82\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6706:6710  from */\n      dup6\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6712:6714  to */\n      dup6\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6716:6722  amount */\n      dup6\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6696:6705  _transfer */\n      tag_83\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6696:6723  _transfer(from, to, amount) */\n      jump\t// in\n    tag_82:\n      pop\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6740:6744  true */\n      0x01\n      swap5\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6465:6751  function transferFrom(... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7146:7380  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_42:\n        /* \"simple-token/@openzeppelin/contracts/utils/Context.sol\":1992:2002  msg.sender */\n      caller\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7234:7238  bool */\n      0x00\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5364:5382  _allowances[owner] */\n      dup2\n      dup2\n      mstore\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5364:5375  _allowances */\n      0x01\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5364:5382  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5364:5391  _allowances[owner][spender] */\n      dup8\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      sload\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7234:7238  bool */\n      swap1\n      swap2\n        /* \"simple-token/@openzeppelin/contracts/utils/Context.sol\":1992:2002  msg.sender */\n      swap1\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7288:7352  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      tag_75\n      swap1\n        /* \"simple-token/@openzeppelin/contracts/utils/Context.sol\":1992:2002  msg.sender */\n      dup3\n      swap1\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5364:5391  _allowances[owner][spender] */\n      dup7\n      swap1\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7313:7351  allowance(owner, spender) + addedValue */\n      tag_89\n      swap1\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7341:7351  addedValue */\n      dup8\n      swap1\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7313:7351  allowance(owner, spender) + addedValue */\n      tag_90\n      jump\t// in\n    tag_89:\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7288:7296  _approve */\n      tag_76\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7288:7352  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      jump\t// in\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3640:3742  function symbol() public view virtual override returns (string memory) {... */\n    tag_50:\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3696:3709  string memory */\n      0x60\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3728:3735  _symbol */\n      0x04\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3721:3735  return _symbol */\n      dup1\n      sload\n      tag_66\n      swap1\n      tag_67\n      jump\t// in\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7867:8294  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_54:\n        /* \"simple-token/@openzeppelin/contracts/utils/Context.sol\":1992:2002  msg.sender */\n      caller\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7960:7964  bool */\n      0x00\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5364:5382  _allowances[owner] */\n      dup2\n      dup2\n      mstore\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5364:5375  _allowances */\n      0x01\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5364:5382  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5364:5391  _allowances[owner][spender] */\n      dup8\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      sload\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7960:7964  bool */\n      swap1\n      swap2\n        /* \"simple-token/@openzeppelin/contracts/utils/Context.sol\":1992:2002  msg.sender */\n      swap1\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8104:8119  subtractedValue */\n      dup4\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8084:8100  currentAllowance */\n      dup2\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8084:8119  currentAllowance >= subtractedValue */\n      lt\n      iszero\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8076:8161  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_101\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":3437:3439   */\n      0x20\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8076:8161  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3419:3440   */\n      mstore\n        /* \"#utility.yul\":3476:3478   */\n      0x25\n        /* \"#utility.yul\":3456:3474   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3449:3479   */\n      mstore\n        /* \"#utility.yul\":3515:3549   */\n      0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77\n        /* \"#utility.yul\":3495:3513   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3488:3550   */\n      mstore\n        /* \"#utility.yul\":3586:3593   */\n      0x207a65726f000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3566:3584   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3559:3594   */\n      mstore\n        /* \"#utility.yul\":3611:3630   */\n      0x84\n      add\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8076:8161  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n    tag_102:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_101:\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8195:8255  _approve(owner, spender, currentAllowance - subtractedValue) */\n      tag_82\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8204:8209  owner */\n      dup3\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8211:8218  spender */\n      dup7\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8239:8254  subtractedValue */\n      dup7\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8220:8236  currentAllowance */\n      dup5\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8220:8254  currentAllowance - subtractedValue */\n      sub\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8195:8203  _approve */\n      tag_76\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8195:8255  _approve(owner, spender, currentAllowance - subtractedValue) */\n      jump\t// in\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5002:5191  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_58:\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5081:5085  bool */\n      0x00\n        /* \"simple-token/@openzeppelin/contracts/utils/Context.sol\":1992:2002  msg.sender */\n      caller\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5135:5163  _transfer(owner, to, amount) */\n      tag_75\n        /* \"simple-token/@openzeppelin/contracts/utils/Context.sol\":1992:2002  msg.sender */\n      dup2\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5152:5154  to */\n      dup6\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5156:5162  amount */\n      dup6\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5135:5144  _transfer */\n      tag_83\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5135:5163  _transfer(owner, to, amount) */\n      jump\t// in\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":11383:11753  function _approve(... */\n    tag_76:\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":11514:11533  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup4\n      and\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":11506:11574  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_111\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":3843:3845   */\n      0x20\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":11506:11574  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3825:3846   */\n      mstore\n        /* \"#utility.yul\":3882:3884   */\n      0x24\n        /* \"#utility.yul\":3862:3880   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":3855:3885   */\n      mstore\n        /* \"#utility.yul\":3921:3955   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":3901:3919   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3894:3956   */\n      mstore\n        /* \"#utility.yul\":3992:3998   */\n      0x7265737300000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3972:3990   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3965:3999   */\n      mstore\n        /* \"#utility.yul\":4016:4035   */\n      0x84\n      add\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":11506:11574  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_102\n        /* \"#utility.yul\":3641:4041   */\n      jump\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":11506:11574  require(owner != address(0), \"ERC20: approve from the zero address\") */\n    tag_111:\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":11592:11613  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup3\n      and\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":11584:11652  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_114\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":4248:4250   */\n      0x20\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":11584:11652  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4230:4251   */\n      mstore\n        /* \"#utility.yul\":4287:4289   */\n      0x22\n        /* \"#utility.yul\":4267:4285   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4260:4290   */\n      mstore\n        /* \"#utility.yul\":4326:4360   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":4306:4324   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4299:4361   */\n      mstore\n        /* \"#utility.yul\":4397:4401   */\n      0x7373000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4377:4395   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4370:4402   */\n      mstore\n        /* \"#utility.yul\":4419:4438   */\n      0x84\n      add\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":11584:11652  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_102\n        /* \"#utility.yul\":4046:4444   */\n      jump\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":11584:11652  require(spender != address(0), \"ERC20: approve to the zero address\") */\n    tag_114:\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":11663:11681  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":11663:11674  _allowances */\n      0x01\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":11663:11681  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":11663:11690  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":11663:11699  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":11714:11746  Approval(owner, spender, amount) */\n      swap1\n      mload\n        /* \"#utility.yul\":1449:1474   */\n      dup5\n      dup2\n      mstore\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":11714:11746  Approval(owner, spender, amount) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n        /* \"#utility.yul\":1422:1440   */\n      add\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":11714:11746  Approval(owner, spender, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":11383:11753  function _approve(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12034:12475  function _spendAllowance(... */\n    tag_81:\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5364:5382  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      and\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12164:12188  uint256 currentAllowance */\n      0x00\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5364:5382  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5364:5375  _allowances */\n      0x01\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5364:5382  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5364:5391  _allowances[owner][spender] */\n      swap4\n      dup7\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n      sload\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12250:12267  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12230:12267  currentAllowance != type(uint256).max */\n      dup2\n      eq\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12226:12469  if (currentAllowance != type(uint256).max) {... */\n      tag_124\n      jumpi\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12311:12317  amount */\n      dup2\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12291:12307  currentAllowance */\n      dup2\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12291:12317  currentAllowance >= amount */\n      lt\n      iszero\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12283:12351  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_121\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":4651:4653   */\n      0x20\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12283:12351  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4633:4654   */\n      mstore\n        /* \"#utility.yul\":4690:4692   */\n      0x1d\n        /* \"#utility.yul\":4670:4688   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4663:4693   */\n      mstore\n        /* \"#utility.yul\":4729:4760   */\n      0x45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000\n        /* \"#utility.yul\":4709:4727   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4702:4761   */\n      mstore\n        /* \"#utility.yul\":4778:4796   */\n      0x64\n      add\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12283:12351  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_102\n        /* \"#utility.yul\":4449:4802   */\n      jump\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12283:12351  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n    tag_121:\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12393:12444  _approve(owner, spender, currentAllowance - amount) */\n      tag_124\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12402:12407  owner */\n      dup5\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12409:12416  spender */\n      dup5\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12437:12443  amount */\n      dup5\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12418:12434  currentAllowance */\n      dup5\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12418:12443  currentAllowance - amount */\n      sub\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12393:12401  _approve */\n      tag_76\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12393:12444  _approve(owner, spender, currentAllowance - amount) */\n      jump\t// in\n    tag_124:\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12154:12475  {... */\n      pop\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12034:12475  function _spendAllowance(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8748:9399  function _transfer(... */\n    tag_83:\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8874:8892  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup4\n      and\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8866:8934  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_126\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":5009:5011   */\n      0x20\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8866:8934  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4991:5012   */\n      mstore\n        /* \"#utility.yul\":5048:5050   */\n      0x25\n        /* \"#utility.yul\":5028:5046   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5021:5051   */\n      mstore\n        /* \"#utility.yul\":5087:5121   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":5067:5085   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5060:5122   */\n      mstore\n        /* \"#utility.yul\":5158:5165   */\n      0x6472657373000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5138:5156   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5131:5166   */\n      mstore\n        /* \"#utility.yul\":5183:5202   */\n      0x84\n      add\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8866:8934  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_102\n        /* \"#utility.yul\":4807:5208   */\n      jump\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8866:8934  require(from != address(0), \"ERC20: transfer from the zero address\") */\n    tag_126:\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8952:8968  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup3\n      and\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8944:9008  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_129\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":5415:5417   */\n      0x20\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8944:9008  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5397:5418   */\n      mstore\n        /* \"#utility.yul\":5454:5456   */\n      0x23\n        /* \"#utility.yul\":5434:5452   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5427:5457   */\n      mstore\n        /* \"#utility.yul\":5493:5527   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":5473:5491   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5466:5528   */\n      mstore\n        /* \"#utility.yul\":5564:5569   */\n      0x6573730000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5544:5562   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5537:5570   */\n      mstore\n        /* \"#utility.yul\":5587:5606   */\n      0x84\n      add\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8944:9008  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_102\n        /* \"#utility.yul\":5213:5612   */\n      jump\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8944:9008  require(to != address(0), \"ERC20: transfer to the zero address\") */\n    tag_129:\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9090:9105  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup4\n      and\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9068:9087  uint256 fromBalance */\n      0x00\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9090:9105  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9123:9144  fromBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9115:9187  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_134\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":5819:5821   */\n      0x20\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9115:9187  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5801:5822   */\n      mstore\n        /* \"#utility.yul\":5858:5860   */\n      0x26\n        /* \"#utility.yul\":5838:5856   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5831:5861   */\n      mstore\n        /* \"#utility.yul\":5897:5931   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732062\n        /* \"#utility.yul\":5877:5895   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5870:5932   */\n      mstore\n        /* \"#utility.yul\":5968:5976   */\n      0x616c616e63650000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5948:5966   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5941:5977   */\n      mstore\n        /* \"#utility.yul\":5994:6013   */\n      0x84\n      add\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9115:9187  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_102\n        /* \"#utility.yul\":5617:6019   */\n      jump\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9115:9187  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n    tag_134:\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9221:9236  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup1\n      dup6\n      and\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9221:9230  _balances */\n      0x00\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9221:9236  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9239:9259  fromBalance - amount */\n      dup6\n      dup6\n      sub\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9221:9259  _balances[from] = fromBalance - amount */\n      swap1\n      sstore\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9279:9292  _balances[to] */\n      swap2\n      dup6\n      and\n      dup2\n      mstore\n      swap1\n      dup2\n      keccak256\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9279:9302  _balances[to] += amount */\n      dup1\n      sload\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9253:9259  amount */\n      dup5\n      swap3\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9221:9230  _balances */\n      swap1\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9279:9302  _balances[to] += amount */\n      tag_137\n      swap1\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9253:9259  amount */\n      dup5\n      swap1\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9279:9302  _balances[to] += amount */\n      tag_90\n      jump\t// in\n    tag_137:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9333:9335  to */\n      dup3\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9318:9344  Transfer(from, to, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9327:9331  from */\n      dup5\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9318:9344  Transfer(from, to, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9337:9343  amount */\n      dup5\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9318:9344  Transfer(from, to, amount) */\n      mload(0x40)\n      tag_138\n      swap2\n        /* \"#utility.yul\":1449:1474   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1437:1439   */\n      0x20\n        /* \"#utility.yul\":1422:1440   */\n      add\n      swap1\n        /* \"#utility.yul\":1303:1480   */\n      jump\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9318:9344  Transfer(from, to, amount) */\n    tag_138:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9355:9392  _afterTokenTransfer(from, to, amount) */\n      tag_124\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":13059:13180  function _beforeTokenTransfer(... */\n      jump\n        /* \"#utility.yul\":14:600   */\n    tag_20:\n        /* \"#utility.yul\":163:165   */\n      0x20\n        /* \"#utility.yul\":152:161   */\n      dup2\n        /* \"#utility.yul\":145:166   */\n      mstore\n        /* \"#utility.yul\":126:130   */\n      0x00\n        /* \"#utility.yul\":195:201   */\n      dup3\n        /* \"#utility.yul\":189:202   */\n      mload\n        /* \"#utility.yul\":238:244   */\n      dup1\n        /* \"#utility.yul\":233:235   */\n      0x20\n        /* \"#utility.yul\":222:231   */\n      dup5\n        /* \"#utility.yul\":218:236   */\n      add\n        /* \"#utility.yul\":211:245   */\n      mstore\n        /* \"#utility.yul\":263:264   */\n      0x00\n        /* \"#utility.yul\":273:413   */\n    tag_146:\n        /* \"#utility.yul\":287:293   */\n      dup2\n        /* \"#utility.yul\":284:285   */\n      dup2\n        /* \"#utility.yul\":281:294   */\n      lt\n        /* \"#utility.yul\":273:413   */\n      iszero\n      tag_148\n      jumpi\n        /* \"#utility.yul\":398:400   */\n      0x20\n        /* \"#utility.yul\":382:396   */\n      dup2\n      dup7\n      add\n        /* \"#utility.yul\":378:401   */\n      dup2\n      add\n        /* \"#utility.yul\":372:402   */\n      mload\n        /* \"#utility.yul\":367:369   */\n      0x40\n        /* \"#utility.yul\":348:365   */\n      dup7\n      dup5\n      add\n        /* \"#utility.yul\":344:370   */\n      add\n        /* \"#utility.yul\":337:403   */\n      mstore\n        /* \"#utility.yul\":302:312   */\n      add\n        /* \"#utility.yul\":273:413   */\n      jump(tag_146)\n    tag_148:\n        /* \"#utility.yul\":277:280   */\n      pop\n        /* \"#utility.yul\":462:463   */\n      0x00\n        /* \"#utility.yul\":457:459   */\n      0x40\n        /* \"#utility.yul\":448:454   */\n      dup3\n        /* \"#utility.yul\":437:446   */\n      dup6\n        /* \"#utility.yul\":433:455   */\n      add\n        /* \"#utility.yul\":429:460   */\n      add\n        /* \"#utility.yul\":422:464   */\n      mstore\n        /* \"#utility.yul\":591:593   */\n      0x40\n        /* \"#utility.yul\":521:587   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\n        /* \"#utility.yul\":516:518   */\n      0x1f\n        /* \"#utility.yul\":508:514   */\n      dup4\n        /* \"#utility.yul\":504:519   */\n      add\n        /* \"#utility.yul\":500:588   */\n      and\n        /* \"#utility.yul\":489:498   */\n      dup5\n        /* \"#utility.yul\":485:589   */\n      add\n        /* \"#utility.yul\":481:594   */\n      add\n        /* \"#utility.yul\":473:594   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":14:600   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":605:801   */\n    tag_143:\n        /* \"#utility.yul\":673:693   */\n      dup1\n      calldataload\n        /* \"#utility.yul\":733:775   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":722:776   */\n      dup2\n      and\n        /* \"#utility.yul\":712:777   */\n      dup2\n      eq\n        /* \"#utility.yul\":702:795   */\n      tag_150\n      jumpi\n        /* \"#utility.yul\":791:792   */\n      0x00\n        /* \"#utility.yul\":788:789   */\n      dup1\n        /* \"#utility.yul\":781:793   */\n      revert\n        /* \"#utility.yul\":702:795   */\n    tag_150:\n        /* \"#utility.yul\":605:801   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":806:1106   */\n    tag_23:\n        /* \"#utility.yul\":874:880   */\n      0x00\n        /* \"#utility.yul\":882:888   */\n      dup1\n        /* \"#utility.yul\":935:937   */\n      0x40\n        /* \"#utility.yul\":923:932   */\n      dup4\n        /* \"#utility.yul\":914:921   */\n      dup6\n        /* \"#utility.yul\":910:933   */\n      sub\n        /* \"#utility.yul\":906:938   */\n      slt\n        /* \"#utility.yul\":903:955   */\n      iszero\n      tag_152\n      jumpi\n        /* \"#utility.yul\":951:952   */\n      0x00\n        /* \"#utility.yul\":948:949   */\n      dup1\n        /* \"#utility.yul\":941:953   */\n      revert\n        /* \"#utility.yul\":903:955   */\n    tag_152:\n        /* \"#utility.yul\":974:1003   */\n      tag_153\n        /* \"#utility.yul\":993:1002   */\n      dup4\n        /* \"#utility.yul\":974:1003   */\n      tag_143\n      jump\t// in\n    tag_153:\n        /* \"#utility.yul\":964:1003   */\n      swap5\n        /* \"#utility.yul\":1072:1074   */\n      0x20\n        /* \"#utility.yul\":1057:1075   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1044:1076   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":806:1106   */\n      jump\t// out\n        /* \"#utility.yul\":1485:1859   */\n    tag_33:\n        /* \"#utility.yul\":1562:1568   */\n      0x00\n        /* \"#utility.yul\":1570:1576   */\n      dup1\n        /* \"#utility.yul\":1578:1584   */\n      0x00\n        /* \"#utility.yul\":1631:1633   */\n      0x60\n        /* \"#utility.yul\":1619:1628   */\n      dup5\n        /* \"#utility.yul\":1610:1617   */\n      dup7\n        /* \"#utility.yul\":1606:1629   */\n      sub\n        /* \"#utility.yul\":1602:1634   */\n      slt\n        /* \"#utility.yul\":1599:1651   */\n      iszero\n      tag_157\n      jumpi\n        /* \"#utility.yul\":1647:1648   */\n      0x00\n        /* \"#utility.yul\":1644:1645   */\n      dup1\n        /* \"#utility.yul\":1637:1649   */\n      revert\n        /* \"#utility.yul\":1599:1651   */\n    tag_157:\n        /* \"#utility.yul\":1670:1699   */\n      tag_158\n        /* \"#utility.yul\":1689:1698   */\n      dup5\n        /* \"#utility.yul\":1670:1699   */\n      tag_143\n      jump\t// in\n    tag_158:\n        /* \"#utility.yul\":1660:1699   */\n      swap3\n      pop\n        /* \"#utility.yul\":1718:1756   */\n      tag_159\n        /* \"#utility.yul\":1752:1754   */\n      0x20\n        /* \"#utility.yul\":1741:1750   */\n      dup6\n        /* \"#utility.yul\":1737:1755   */\n      add\n        /* \"#utility.yul\":1718:1756   */\n      tag_143\n      jump\t// in\n    tag_159:\n        /* \"#utility.yul\":1485:1859   */\n      swap3\n      swap6\n        /* \"#utility.yul\":1708:1756   */\n      swap3\n      swap5\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1825:1827   */\n      0x40\n        /* \"#utility.yul\":1810:1828   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":1797:1829   */\n      calldataload\n      swap1\n        /* \"#utility.yul\":1485:1859   */\n      jump\t// out\n        /* \"#utility.yul\":2053:2239   */\n    tag_46:\n        /* \"#utility.yul\":2112:2118   */\n      0x00\n        /* \"#utility.yul\":2165:2167   */\n      0x20\n        /* \"#utility.yul\":2153:2162   */\n      dup3\n        /* \"#utility.yul\":2144:2151   */\n      dup5\n        /* \"#utility.yul\":2140:2163   */\n      sub\n        /* \"#utility.yul\":2136:2168   */\n      slt\n        /* \"#utility.yul\":2133:2185   */\n      iszero\n      tag_162\n      jumpi\n        /* \"#utility.yul\":2181:2182   */\n      0x00\n        /* \"#utility.yul\":2178:2179   */\n      dup1\n        /* \"#utility.yul\":2171:2183   */\n      revert\n        /* \"#utility.yul\":2133:2185   */\n    tag_162:\n        /* \"#utility.yul\":2204:2233   */\n      tag_163\n        /* \"#utility.yul\":2223:2232   */\n      dup3\n        /* \"#utility.yul\":2204:2233   */\n      tag_143\n      jump\t// in\n    tag_163:\n        /* \"#utility.yul\":2194:2233   */\n      swap4\n        /* \"#utility.yul\":2053:2239   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2244:2504   */\n    tag_62:\n        /* \"#utility.yul\":2312:2318   */\n      0x00\n        /* \"#utility.yul\":2320:2326   */\n      dup1\n        /* \"#utility.yul\":2373:2375   */\n      0x40\n        /* \"#utility.yul\":2361:2370   */\n      dup4\n        /* \"#utility.yul\":2352:2359   */\n      dup6\n        /* \"#utility.yul\":2348:2371   */\n      sub\n        /* \"#utility.yul\":2344:2376   */\n      slt\n        /* \"#utility.yul\":2341:2393   */\n      iszero\n      tag_165\n      jumpi\n        /* \"#utility.yul\":2389:2390   */\n      0x00\n        /* \"#utility.yul\":2386:2387   */\n      dup1\n        /* \"#utility.yul\":2379:2391   */\n      revert\n        /* \"#utility.yul\":2341:2393   */\n    tag_165:\n        /* \"#utility.yul\":2412:2441   */\n      tag_166\n        /* \"#utility.yul\":2431:2440   */\n      dup4\n        /* \"#utility.yul\":2412:2441   */\n      tag_143\n      jump\t// in\n    tag_166:\n        /* \"#utility.yul\":2402:2441   */\n      swap2\n      pop\n        /* \"#utility.yul\":2460:2498   */\n      tag_167\n        /* \"#utility.yul\":2494:2496   */\n      0x20\n        /* \"#utility.yul\":2483:2492   */\n      dup5\n        /* \"#utility.yul\":2479:2497   */\n      add\n        /* \"#utility.yul\":2460:2498   */\n      tag_143\n      jump\t// in\n    tag_167:\n        /* \"#utility.yul\":2450:2498   */\n      swap1\n      pop\n        /* \"#utility.yul\":2244:2504   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2509:2946   */\n    tag_67:\n        /* \"#utility.yul\":2588:2589   */\n      0x01\n        /* \"#utility.yul\":2584:2596   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":2631:2643   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":2652:2713   */\n      tag_169\n      jumpi\n        /* \"#utility.yul\":2706:2710   */\n      0x7f\n        /* \"#utility.yul\":2698:2704   */\n      dup3\n        /* \"#utility.yul\":2694:2711   */\n      and\n        /* \"#utility.yul\":2684:2711   */\n      swap2\n      pop\n        /* \"#utility.yul\":2652:2713   */\n    tag_169:\n        /* \"#utility.yul\":2759:2761   */\n      0x20\n        /* \"#utility.yul\":2751:2757   */\n      dup3\n        /* \"#utility.yul\":2748:2762   */\n      lt\n        /* \"#utility.yul\":2728:2746   */\n      dup2\n        /* \"#utility.yul\":2725:2763   */\n      sub\n        /* \"#utility.yul\":2722:2940   */\n      tag_170\n      jumpi\n        /* \"#utility.yul\":2796:2873   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2793:2794   */\n      0x00\n        /* \"#utility.yul\":2786:2874   */\n      mstore\n        /* \"#utility.yul\":2897:2901   */\n      0x22\n        /* \"#utility.yul\":2894:2895   */\n      0x04\n        /* \"#utility.yul\":2887:2902   */\n      mstore\n        /* \"#utility.yul\":2925:2929   */\n      0x24\n        /* \"#utility.yul\":2922:2923   */\n      0x00\n        /* \"#utility.yul\":2915:2930   */\n      revert\n        /* \"#utility.yul\":2722:2940   */\n    tag_170:\n      pop\n        /* \"#utility.yul\":2509:2946   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2951:3230   */\n    tag_90:\n        /* \"#utility.yul\":3016:3025   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":3037:3047   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":3034:3224   */\n      iszero\n      tag_72\n      jumpi\n        /* \"#utility.yul\":3080:3157   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3077:3078   */\n      0x00\n        /* \"#utility.yul\":3070:3158   */\n      mstore\n        /* \"#utility.yul\":3181:3185   */\n      0x11\n        /* \"#utility.yul\":3178:3179   */\n      0x04\n        /* \"#utility.yul\":3171:3186   */\n      mstore\n        /* \"#utility.yul\":3209:3213   */\n      0x24\n        /* \"#utility.yul\":3206:3207   */\n      0x00\n        /* \"#utility.yul\":3199:3214   */\n      revert\n\n    auxdata: 0xa264697066735822122021197b2630561b2e04ce1b8ab43d8b18f5c661785e36d7abdfd6d2bc042f8d3764736f6c637828302e382e32382d6e696768746c792e323032342e31302e322b636f6d6d69742e32353665393532380059\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_26": {
									"entryPoint": null,
									"id": 26,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_72": {
									"entryPoint": null,
									"id": 72,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_afterTokenTransfer_612": {
									"entryPoint": null,
									"id": 612,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_601": {
									"entryPoint": 315,
									"id": 601,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_mint_430": {
									"entryPoint": 88,
									"id": 430,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_string_fromMemory": {
									"entryPoint": 342,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256_fromMemory": {
									"entryPoint": 505,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 945,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 677,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 755,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 619,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 320,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:4883:5",
										"nodeType": "YulBlock",
										"src": "0:4883:5",
										"statements": [
											{
												"nativeSrc": "6:3:5",
												"nodeType": "YulBlock",
												"src": "6:3:5",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "46:95:5",
													"nodeType": "YulBlock",
													"src": "46:95:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "63:1:5",
																		"nodeType": "YulLiteral",
																		"src": "63:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "70:3:5",
																				"nodeType": "YulLiteral",
																				"src": "70:3:5",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "75:10:5",
																				"nodeType": "YulLiteral",
																				"src": "75:10:5",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "66:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:5"
																		},
																		"nativeSrc": "66:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "56:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:5"
																},
																"nativeSrc": "56:31:5",
																"nodeType": "YulFunctionCall",
																"src": "56:31:5"
															},
															"nativeSrc": "56:31:5",
															"nodeType": "YulExpressionStatement",
															"src": "56:31:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "103:1:5",
																		"nodeType": "YulLiteral",
																		"src": "103:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "106:4:5",
																		"nodeType": "YulLiteral",
																		"src": "106:4:5",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "96:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:5"
																},
																"nativeSrc": "96:15:5",
																"nodeType": "YulFunctionCall",
																"src": "96:15:5"
															},
															"nativeSrc": "96:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "96:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "127:1:5",
																		"nodeType": "YulLiteral",
																		"src": "127:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "130:4:5",
																		"nodeType": "YulLiteral",
																		"src": "130:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "120:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:5"
																},
																"nativeSrc": "120:15:5",
																"nodeType": "YulFunctionCall",
																"src": "120:15:5"
															},
															"nativeSrc": "120:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "120:15:5"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "14:127:5",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:5"
											},
											{
												"body": {
													"nativeSrc": "210:770:5",
													"nodeType": "YulBlock",
													"src": "210:770:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "259:16:5",
																"nodeType": "YulBlock",
																"src": "259:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "268:1:5",
																					"nodeType": "YulLiteral",
																					"src": "268:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "271:1:5",
																					"nodeType": "YulLiteral",
																					"src": "271:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "261:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "261:6:5"
																			},
																			"nativeSrc": "261:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "261:12:5"
																		},
																		"nativeSrc": "261:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "261:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "238:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "238:6:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "246:4:5",
																						"nodeType": "YulLiteral",
																						"src": "246:4:5",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "234:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "234:3:5"
																				},
																				"nativeSrc": "234:17:5",
																				"nodeType": "YulFunctionCall",
																				"src": "234:17:5"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "253:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "253:3:5"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "230:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "230:3:5"
																		},
																		"nativeSrc": "230:27:5",
																		"nodeType": "YulFunctionCall",
																		"src": "230:27:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "223:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "223:6:5"
																},
																"nativeSrc": "223:35:5",
																"nodeType": "YulFunctionCall",
																"src": "223:35:5"
															},
															"nativeSrc": "220:55:5",
															"nodeType": "YulIf",
															"src": "220:55:5"
														},
														{
															"nativeSrc": "284:27:5",
															"nodeType": "YulVariableDeclaration",
															"src": "284:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "304:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "304:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "298:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "298:5:5"
																},
																"nativeSrc": "298:13:5",
																"nodeType": "YulFunctionCall",
																"src": "298:13:5"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "288:6:5",
																	"nodeType": "YulTypedName",
																	"src": "288:6:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "354:22:5",
																"nodeType": "YulBlock",
																"src": "354:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "356:16:5",
																				"nodeType": "YulIdentifier",
																				"src": "356:16:5"
																			},
																			"nativeSrc": "356:18:5",
																			"nodeType": "YulFunctionCall",
																			"src": "356:18:5"
																		},
																		"nativeSrc": "356:18:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "356:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "326:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "326:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "342:2:5",
																						"nodeType": "YulLiteral",
																						"src": "342:2:5",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "346:1:5",
																						"nodeType": "YulLiteral",
																						"src": "346:1:5",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "338:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "338:3:5"
																				},
																				"nativeSrc": "338:10:5",
																				"nodeType": "YulFunctionCall",
																				"src": "338:10:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "350:1:5",
																				"nodeType": "YulLiteral",
																				"src": "350:1:5",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "334:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "334:3:5"
																		},
																		"nativeSrc": "334:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "334:18:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "323:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "323:2:5"
																},
																"nativeSrc": "323:30:5",
																"nodeType": "YulFunctionCall",
																"src": "323:30:5"
															},
															"nativeSrc": "320:56:5",
															"nodeType": "YulIf",
															"src": "320:56:5"
														},
														{
															"nativeSrc": "385:23:5",
															"nodeType": "YulVariableDeclaration",
															"src": "385:23:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "405:2:5",
																		"nodeType": "YulLiteral",
																		"src": "405:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "399:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "399:5:5"
																},
																"nativeSrc": "399:9:5",
																"nodeType": "YulFunctionCall",
																"src": "399:9:5"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nativeSrc": "389:6:5",
																	"nodeType": "YulTypedName",
																	"src": "389:6:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "417:85:5",
															"nodeType": "YulVariableDeclaration",
															"src": "417:85:5",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "439:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "439:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "length",
																										"nativeSrc": "463:6:5",
																										"nodeType": "YulIdentifier",
																										"src": "463:6:5"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "471:4:5",
																										"nodeType": "YulLiteral",
																										"src": "471:4:5",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "459:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "459:3:5"
																								},
																								"nativeSrc": "459:17:5",
																								"nodeType": "YulFunctionCall",
																								"src": "459:17:5"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "482:2:5",
																										"nodeType": "YulLiteral",
																										"src": "482:2:5",
																										"type": "",
																										"value": "31"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "478:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "478:3:5"
																								},
																								"nativeSrc": "478:7:5",
																								"nodeType": "YulFunctionCall",
																								"src": "478:7:5"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nativeSrc": "455:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "455:3:5"
																						},
																						"nativeSrc": "455:31:5",
																						"nodeType": "YulFunctionCall",
																						"src": "455:31:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "488:2:5",
																						"nodeType": "YulLiteral",
																						"src": "488:2:5",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "451:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "451:3:5"
																				},
																				"nativeSrc": "451:40:5",
																				"nodeType": "YulFunctionCall",
																				"src": "451:40:5"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "497:2:5",
																						"nodeType": "YulLiteral",
																						"src": "497:2:5",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "493:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "493:3:5"
																				},
																				"nativeSrc": "493:7:5",
																				"nodeType": "YulFunctionCall",
																				"src": "493:7:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "447:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "447:3:5"
																		},
																		"nativeSrc": "447:54:5",
																		"nodeType": "YulFunctionCall",
																		"src": "447:54:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "435:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "435:3:5"
																},
																"nativeSrc": "435:67:5",
																"nodeType": "YulFunctionCall",
																"src": "435:67:5"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "421:10:5",
																	"nodeType": "YulTypedName",
																	"src": "421:10:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "577:22:5",
																"nodeType": "YulBlock",
																"src": "577:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "579:16:5",
																				"nodeType": "YulIdentifier",
																				"src": "579:16:5"
																			},
																			"nativeSrc": "579:18:5",
																			"nodeType": "YulFunctionCall",
																			"src": "579:18:5"
																		},
																		"nativeSrc": "579:18:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "579:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "520:10:5",
																				"nodeType": "YulIdentifier",
																				"src": "520:10:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "540:2:5",
																								"nodeType": "YulLiteral",
																								"src": "540:2:5",
																								"type": "",
																								"value": "64"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "544:1:5",
																								"nodeType": "YulLiteral",
																								"src": "544:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "536:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "536:3:5"
																						},
																						"nativeSrc": "536:10:5",
																						"nodeType": "YulFunctionCall",
																						"src": "536:10:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "548:1:5",
																						"nodeType": "YulLiteral",
																						"src": "548:1:5",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "532:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "532:3:5"
																				},
																				"nativeSrc": "532:18:5",
																				"nodeType": "YulFunctionCall",
																				"src": "532:18:5"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "517:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "517:2:5"
																		},
																		"nativeSrc": "517:34:5",
																		"nodeType": "YulFunctionCall",
																		"src": "517:34:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "556:10:5",
																				"nodeType": "YulIdentifier",
																				"src": "556:10:5"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "568:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "568:6:5"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "553:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "553:2:5"
																		},
																		"nativeSrc": "553:22:5",
																		"nodeType": "YulFunctionCall",
																		"src": "553:22:5"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "514:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "514:2:5"
																},
																"nativeSrc": "514:62:5",
																"nodeType": "YulFunctionCall",
																"src": "514:62:5"
															},
															"nativeSrc": "511:88:5",
															"nodeType": "YulIf",
															"src": "511:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "615:2:5",
																		"nodeType": "YulLiteral",
																		"src": "615:2:5",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "619:10:5",
																		"nodeType": "YulIdentifier",
																		"src": "619:10:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "608:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "608:6:5"
																},
																"nativeSrc": "608:22:5",
																"nodeType": "YulFunctionCall",
																"src": "608:22:5"
															},
															"nativeSrc": "608:22:5",
															"nodeType": "YulExpressionStatement",
															"src": "608:22:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "646:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "646:6:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "654:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "654:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "639:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "639:6:5"
																},
																"nativeSrc": "639:22:5",
																"nodeType": "YulFunctionCall",
																"src": "639:22:5"
															},
															"nativeSrc": "639:22:5",
															"nodeType": "YulExpressionStatement",
															"src": "639:22:5"
														},
														{
															"body": {
																"nativeSrc": "713:16:5",
																"nodeType": "YulBlock",
																"src": "713:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "722:1:5",
																					"nodeType": "YulLiteral",
																					"src": "722:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "725:1:5",
																					"nodeType": "YulLiteral",
																					"src": "725:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "715:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "715:6:5"
																			},
																			"nativeSrc": "715:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "715:12:5"
																		},
																		"nativeSrc": "715:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "715:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "684:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "684:6:5"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "692:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "692:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "680:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "680:3:5"
																				},
																				"nativeSrc": "680:19:5",
																				"nodeType": "YulFunctionCall",
																				"src": "680:19:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "701:4:5",
																				"nodeType": "YulLiteral",
																				"src": "701:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "676:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "676:3:5"
																		},
																		"nativeSrc": "676:30:5",
																		"nodeType": "YulFunctionCall",
																		"src": "676:30:5"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "708:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "708:3:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "673:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "673:2:5"
																},
																"nativeSrc": "673:39:5",
																"nodeType": "YulFunctionCall",
																"src": "673:39:5"
															},
															"nativeSrc": "670:59:5",
															"nodeType": "YulIf",
															"src": "670:59:5"
														},
														{
															"nativeSrc": "738:10:5",
															"nodeType": "YulVariableDeclaration",
															"src": "738:10:5",
															"value": {
																"kind": "number",
																"nativeSrc": "747:1:5",
																"nodeType": "YulLiteral",
																"src": "747:1:5",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "742:1:5",
																	"nodeType": "YulTypedName",
																	"src": "742:1:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "809:91:5",
																"nodeType": "YulBlock",
																"src": "809:91:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nativeSrc": "838:6:5",
																									"nodeType": "YulIdentifier",
																									"src": "838:6:5"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "846:1:5",
																									"nodeType": "YulIdentifier",
																									"src": "846:1:5"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "834:3:5",
																								"nodeType": "YulIdentifier",
																								"src": "834:3:5"
																							},
																							"nativeSrc": "834:14:5",
																							"nodeType": "YulFunctionCall",
																							"src": "834:14:5"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "850:4:5",
																							"nodeType": "YulLiteral",
																							"src": "850:4:5",
																							"type": "",
																							"value": "0x20"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "830:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "830:3:5"
																					},
																					"nativeSrc": "830:25:5",
																					"nodeType": "YulFunctionCall",
																					"src": "830:25:5"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "offset",
																											"nativeSrc": "871:6:5",
																											"nodeType": "YulIdentifier",
																											"src": "871:6:5"
																										},
																										{
																											"name": "i",
																											"nativeSrc": "879:1:5",
																											"nodeType": "YulIdentifier",
																											"src": "879:1:5"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nativeSrc": "867:3:5",
																										"nodeType": "YulIdentifier",
																										"src": "867:3:5"
																									},
																									"nativeSrc": "867:14:5",
																									"nodeType": "YulFunctionCall",
																									"src": "867:14:5"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "883:4:5",
																									"nodeType": "YulLiteral",
																									"src": "883:4:5",
																									"type": "",
																									"value": "0x20"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "863:3:5",
																								"nodeType": "YulIdentifier",
																								"src": "863:3:5"
																							},
																							"nativeSrc": "863:25:5",
																							"nodeType": "YulFunctionCall",
																							"src": "863:25:5"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "857:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "857:5:5"
																					},
																					"nativeSrc": "857:32:5",
																					"nodeType": "YulFunctionCall",
																					"src": "857:32:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "823:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "823:6:5"
																			},
																			"nativeSrc": "823:67:5",
																			"nodeType": "YulFunctionCall",
																			"src": "823:67:5"
																		},
																		"nativeSrc": "823:67:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "823:67:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "768:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "768:1:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "771:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "771:6:5"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "765:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "765:2:5"
																},
																"nativeSrc": "765:13:5",
																"nodeType": "YulFunctionCall",
																"src": "765:13:5"
															},
															"nativeSrc": "757:143:5",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "779:21:5",
																"nodeType": "YulBlock",
																"src": "779:21:5",
																"statements": [
																	{
																		"nativeSrc": "781:17:5",
																		"nodeType": "YulAssignment",
																		"src": "781:17:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "790:1:5",
																					"nodeType": "YulIdentifier",
																					"src": "790:1:5"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "793:4:5",
																					"nodeType": "YulLiteral",
																					"src": "793:4:5",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "786:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "786:3:5"
																			},
																			"nativeSrc": "786:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "786:12:5"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "781:1:5",
																				"nodeType": "YulIdentifier",
																				"src": "781:1:5"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "761:3:5",
																"nodeType": "YulBlock",
																"src": "761:3:5",
																"statements": []
															},
															"src": "757:143:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nativeSrc": "924:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "924:6:5"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "932:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "932:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "920:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "920:3:5"
																				},
																				"nativeSrc": "920:19:5",
																				"nodeType": "YulFunctionCall",
																				"src": "920:19:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "941:4:5",
																				"nodeType": "YulLiteral",
																				"src": "941:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "916:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "916:3:5"
																		},
																		"nativeSrc": "916:30:5",
																		"nodeType": "YulFunctionCall",
																		"src": "916:30:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "948:1:5",
																		"nodeType": "YulLiteral",
																		"src": "948:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "909:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "909:6:5"
																},
																"nativeSrc": "909:41:5",
																"nodeType": "YulFunctionCall",
																"src": "909:41:5"
															},
															"nativeSrc": "909:41:5",
															"nodeType": "YulExpressionStatement",
															"src": "909:41:5"
														},
														{
															"nativeSrc": "959:15:5",
															"nodeType": "YulAssignment",
															"src": "959:15:5",
															"value": {
																"name": "memPtr",
																"nativeSrc": "968:6:5",
																"nodeType": "YulIdentifier",
																"src": "968:6:5"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "959:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "959:5:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_string_fromMemory",
												"nativeSrc": "146:834:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "184:6:5",
														"nodeType": "YulTypedName",
														"src": "184:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "192:3:5",
														"nodeType": "YulTypedName",
														"src": "192:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "200:5:5",
														"nodeType": "YulTypedName",
														"src": "200:5:5",
														"type": ""
													}
												],
												"src": "146:834:5"
											},
											{
												"body": {
													"nativeSrc": "1120:483:5",
													"nodeType": "YulBlock",
													"src": "1120:483:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "1166:16:5",
																"nodeType": "YulBlock",
																"src": "1166:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1175:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1175:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1178:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1178:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1168:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1168:6:5"
																			},
																			"nativeSrc": "1168:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1168:12:5"
																		},
																		"nativeSrc": "1168:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1168:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1141:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "1141:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1150:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1150:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1137:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1137:3:5"
																		},
																		"nativeSrc": "1137:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1137:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1162:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1162:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1133:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1133:3:5"
																},
																"nativeSrc": "1133:32:5",
																"nodeType": "YulFunctionCall",
																"src": "1133:32:5"
															},
															"nativeSrc": "1130:52:5",
															"nodeType": "YulIf",
															"src": "1130:52:5"
														},
														{
															"nativeSrc": "1191:30:5",
															"nodeType": "YulVariableDeclaration",
															"src": "1191:30:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1211:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "1211:9:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1205:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "1205:5:5"
																},
																"nativeSrc": "1205:16:5",
																"nodeType": "YulFunctionCall",
																"src": "1205:16:5"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "1195:6:5",
																	"nodeType": "YulTypedName",
																	"src": "1195:6:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1264:16:5",
																"nodeType": "YulBlock",
																"src": "1264:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1273:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1273:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1276:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1276:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1266:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1266:6:5"
																			},
																			"nativeSrc": "1266:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1266:12:5"
																		},
																		"nativeSrc": "1266:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1266:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1236:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "1236:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "1252:2:5",
																						"nodeType": "YulLiteral",
																						"src": "1252:2:5",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1256:1:5",
																						"nodeType": "YulLiteral",
																						"src": "1256:1:5",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "1248:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "1248:3:5"
																				},
																				"nativeSrc": "1248:10:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1248:10:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1260:1:5",
																				"nodeType": "YulLiteral",
																				"src": "1260:1:5",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1244:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1244:3:5"
																		},
																		"nativeSrc": "1244:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1244:18:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1233:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "1233:2:5"
																},
																"nativeSrc": "1233:30:5",
																"nodeType": "YulFunctionCall",
																"src": "1233:30:5"
															},
															"nativeSrc": "1230:50:5",
															"nodeType": "YulIf",
															"src": "1230:50:5"
														},
														{
															"nativeSrc": "1289:71:5",
															"nodeType": "YulAssignment",
															"src": "1289:71:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1332:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1332:9:5"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "1343:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1343:6:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1328:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1328:3:5"
																		},
																		"nativeSrc": "1328:22:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1328:22:5"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "1352:7:5",
																		"nodeType": "YulIdentifier",
																		"src": "1352:7:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nativeSrc": "1299:28:5",
																	"nodeType": "YulIdentifier",
																	"src": "1299:28:5"
																},
																"nativeSrc": "1299:61:5",
																"nodeType": "YulFunctionCall",
																"src": "1299:61:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1289:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1289:6:5"
																}
															]
														},
														{
															"nativeSrc": "1369:41:5",
															"nodeType": "YulVariableDeclaration",
															"src": "1369:41:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1395:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1395:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1406:2:5",
																				"nodeType": "YulLiteral",
																				"src": "1406:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1391:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1391:3:5"
																		},
																		"nativeSrc": "1391:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1391:18:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1385:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "1385:5:5"
																},
																"nativeSrc": "1385:25:5",
																"nodeType": "YulFunctionCall",
																"src": "1385:25:5"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nativeSrc": "1373:8:5",
																	"nodeType": "YulTypedName",
																	"src": "1373:8:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1455:16:5",
																"nodeType": "YulBlock",
																"src": "1455:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1464:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1464:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1467:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1467:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1457:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1457:6:5"
																			},
																			"nativeSrc": "1457:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1457:12:5"
																		},
																		"nativeSrc": "1457:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1457:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nativeSrc": "1425:8:5",
																		"nodeType": "YulIdentifier",
																		"src": "1425:8:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "1443:2:5",
																						"nodeType": "YulLiteral",
																						"src": "1443:2:5",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1447:1:5",
																						"nodeType": "YulLiteral",
																						"src": "1447:1:5",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "1439:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "1439:3:5"
																				},
																				"nativeSrc": "1439:10:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1439:10:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1451:1:5",
																				"nodeType": "YulLiteral",
																				"src": "1451:1:5",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1435:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1435:3:5"
																		},
																		"nativeSrc": "1435:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1435:18:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1422:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "1422:2:5"
																},
																"nativeSrc": "1422:32:5",
																"nodeType": "YulFunctionCall",
																"src": "1422:32:5"
															},
															"nativeSrc": "1419:52:5",
															"nodeType": "YulIf",
															"src": "1419:52:5"
														},
														{
															"nativeSrc": "1480:73:5",
															"nodeType": "YulAssignment",
															"src": "1480:73:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1523:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1523:9:5"
																			},
																			{
																				"name": "offset_1",
																				"nativeSrc": "1534:8:5",
																				"nodeType": "YulIdentifier",
																				"src": "1534:8:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1519:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1519:3:5"
																		},
																		"nativeSrc": "1519:24:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1519:24:5"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "1545:7:5",
																		"nodeType": "YulIdentifier",
																		"src": "1545:7:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nativeSrc": "1490:28:5",
																	"nodeType": "YulIdentifier",
																	"src": "1490:28:5"
																},
																"nativeSrc": "1490:63:5",
																"nodeType": "YulFunctionCall",
																"src": "1490:63:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1480:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1480:6:5"
																}
															]
														},
														{
															"nativeSrc": "1562:35:5",
															"nodeType": "YulAssignment",
															"src": "1562:35:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1582:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1582:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1593:2:5",
																				"nodeType": "YulLiteral",
																				"src": "1593:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1578:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1578:3:5"
																		},
																		"nativeSrc": "1578:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1578:18:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1572:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "1572:5:5"
																},
																"nativeSrc": "1572:25:5",
																"nodeType": "YulFunctionCall",
																"src": "1572:25:5"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "1562:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1562:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256_fromMemory",
												"nativeSrc": "985:618:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1070:9:5",
														"nodeType": "YulTypedName",
														"src": "1070:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1081:7:5",
														"nodeType": "YulTypedName",
														"src": "1081:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1093:6:5",
														"nodeType": "YulTypedName",
														"src": "1093:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1101:6:5",
														"nodeType": "YulTypedName",
														"src": "1101:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1109:6:5",
														"nodeType": "YulTypedName",
														"src": "1109:6:5",
														"type": ""
													}
												],
												"src": "985:618:5"
											},
											{
												"body": {
													"nativeSrc": "1663:325:5",
													"nodeType": "YulBlock",
													"src": "1663:325:5",
													"statements": [
														{
															"nativeSrc": "1673:22:5",
															"nodeType": "YulAssignment",
															"src": "1673:22:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1687:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1687:1:5",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "1690:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "1690:4:5"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "1683:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1683:3:5"
																},
																"nativeSrc": "1683:12:5",
																"nodeType": "YulFunctionCall",
																"src": "1683:12:5"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1673:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1673:6:5"
																}
															]
														},
														{
															"nativeSrc": "1704:38:5",
															"nodeType": "YulVariableDeclaration",
															"src": "1704:38:5",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "1734:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "1734:4:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1740:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1740:1:5",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1730:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1730:3:5"
																},
																"nativeSrc": "1730:12:5",
																"nodeType": "YulFunctionCall",
																"src": "1730:12:5"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "1708:18:5",
																	"nodeType": "YulTypedName",
																	"src": "1708:18:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1781:31:5",
																"nodeType": "YulBlock",
																"src": "1781:31:5",
																"statements": [
																	{
																		"nativeSrc": "1783:27:5",
																		"nodeType": "YulAssignment",
																		"src": "1783:27:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "1797:6:5",
																					"nodeType": "YulIdentifier",
																					"src": "1797:6:5"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1805:4:5",
																					"nodeType": "YulLiteral",
																					"src": "1805:4:5",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "1793:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "1793:3:5"
																			},
																			"nativeSrc": "1793:17:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1793:17:5"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "1783:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1783:6:5"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1761:18:5",
																		"nodeType": "YulIdentifier",
																		"src": "1761:18:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1754:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1754:6:5"
																},
																"nativeSrc": "1754:26:5",
																"nodeType": "YulFunctionCall",
																"src": "1754:26:5"
															},
															"nativeSrc": "1751:61:5",
															"nodeType": "YulIf",
															"src": "1751:61:5"
														},
														{
															"body": {
																"nativeSrc": "1871:111:5",
																"nodeType": "YulBlock",
																"src": "1871:111:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1892:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1892:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1899:3:5",
																							"nodeType": "YulLiteral",
																							"src": "1899:3:5",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "1904:10:5",
																							"nodeType": "YulLiteral",
																							"src": "1904:10:5",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "1895:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "1895:3:5"
																					},
																					"nativeSrc": "1895:20:5",
																					"nodeType": "YulFunctionCall",
																					"src": "1895:20:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1885:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1885:6:5"
																			},
																			"nativeSrc": "1885:31:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1885:31:5"
																		},
																		"nativeSrc": "1885:31:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1885:31:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1936:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1936:1:5",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1939:4:5",
																					"nodeType": "YulLiteral",
																					"src": "1939:4:5",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1929:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1929:6:5"
																			},
																			"nativeSrc": "1929:15:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1929:15:5"
																		},
																		"nativeSrc": "1929:15:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1929:15:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1964:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1964:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1967:4:5",
																					"nodeType": "YulLiteral",
																					"src": "1967:4:5",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1957:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1957:6:5"
																			},
																			"nativeSrc": "1957:15:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1957:15:5"
																		},
																		"nativeSrc": "1957:15:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1957:15:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1827:18:5",
																		"nodeType": "YulIdentifier",
																		"src": "1827:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1850:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1850:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1858:2:5",
																				"nodeType": "YulLiteral",
																				"src": "1858:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1847:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "1847:2:5"
																		},
																		"nativeSrc": "1847:14:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1847:14:5"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "1824:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "1824:2:5"
																},
																"nativeSrc": "1824:38:5",
																"nodeType": "YulFunctionCall",
																"src": "1824:38:5"
															},
															"nativeSrc": "1821:161:5",
															"nodeType": "YulIf",
															"src": "1821:161:5"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "1608:380:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "1643:4:5",
														"nodeType": "YulTypedName",
														"src": "1643:4:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1652:6:5",
														"nodeType": "YulTypedName",
														"src": "1652:6:5",
														"type": ""
													}
												],
												"src": "1608:380:5"
											},
											{
												"body": {
													"nativeSrc": "2049:65:5",
													"nodeType": "YulBlock",
													"src": "2049:65:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2066:1:5",
																		"nodeType": "YulLiteral",
																		"src": "2066:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "2069:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "2069:3:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2059:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2059:6:5"
																},
																"nativeSrc": "2059:14:5",
																"nodeType": "YulFunctionCall",
																"src": "2059:14:5"
															},
															"nativeSrc": "2059:14:5",
															"nodeType": "YulExpressionStatement",
															"src": "2059:14:5"
														},
														{
															"nativeSrc": "2082:26:5",
															"nodeType": "YulAssignment",
															"src": "2082:26:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2100:1:5",
																		"nodeType": "YulLiteral",
																		"src": "2100:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2103:4:5",
																		"nodeType": "YulLiteral",
																		"src": "2103:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "2090:9:5",
																	"nodeType": "YulIdentifier",
																	"src": "2090:9:5"
																},
																"nativeSrc": "2090:18:5",
																"nodeType": "YulFunctionCall",
																"src": "2090:18:5"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2082:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "2082:4:5"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nativeSrc": "1993:121:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "2032:3:5",
														"nodeType": "YulTypedName",
														"src": "2032:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "2040:4:5",
														"nodeType": "YulTypedName",
														"src": "2040:4:5",
														"type": ""
													}
												],
												"src": "1993:121:5"
											},
											{
												"body": {
													"nativeSrc": "2200:437:5",
													"nodeType": "YulBlock",
													"src": "2200:437:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "2233:398:5",
																"nodeType": "YulBlock",
																"src": "2233:398:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2254:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2254:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"name": "array",
																					"nativeSrc": "2257:5:5",
																					"nodeType": "YulIdentifier",
																					"src": "2257:5:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2247:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "2247:6:5"
																			},
																			"nativeSrc": "2247:16:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2247:16:5"
																		},
																		"nativeSrc": "2247:16:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "2247:16:5"
																	},
																	{
																		"nativeSrc": "2276:30:5",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2276:30:5",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2298:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2298:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2301:4:5",
																					"nodeType": "YulLiteral",
																					"src": "2301:4:5",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nativeSrc": "2288:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "2288:9:5"
																			},
																			"nativeSrc": "2288:18:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2288:18:5"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nativeSrc": "2280:4:5",
																				"nodeType": "YulTypedName",
																				"src": "2280:4:5",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "2319:57:5",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2319:57:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "2342:4:5",
																					"nodeType": "YulIdentifier",
																					"src": "2342:4:5"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2352:1:5",
																							"nodeType": "YulLiteral",
																							"src": "2352:1:5",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nativeSrc": "2359:10:5",
																									"nodeType": "YulIdentifier",
																									"src": "2359:10:5"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2371:2:5",
																									"nodeType": "YulLiteral",
																									"src": "2371:2:5",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2355:3:5",
																								"nodeType": "YulIdentifier",
																								"src": "2355:3:5"
																							},
																							"nativeSrc": "2355:19:5",
																							"nodeType": "YulFunctionCall",
																							"src": "2355:19:5"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "2348:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "2348:3:5"
																					},
																					"nativeSrc": "2348:27:5",
																					"nodeType": "YulFunctionCall",
																					"src": "2348:27:5"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2338:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "2338:3:5"
																			},
																			"nativeSrc": "2338:38:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2338:38:5"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "2323:11:5",
																				"nodeType": "YulTypedName",
																				"src": "2323:11:5",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "2413:23:5",
																			"nodeType": "YulBlock",
																			"src": "2413:23:5",
																			"statements": [
																				{
																					"nativeSrc": "2415:19:5",
																					"nodeType": "YulAssignment",
																					"src": "2415:19:5",
																					"value": {
																						"name": "data",
																						"nativeSrc": "2430:4:5",
																						"nodeType": "YulIdentifier",
																						"src": "2430:4:5"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "2415:11:5",
																							"nodeType": "YulIdentifier",
																							"src": "2415:11:5"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "2395:10:5",
																					"nodeType": "YulIdentifier",
																					"src": "2395:10:5"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2407:4:5",
																					"nodeType": "YulLiteral",
																					"src": "2407:4:5",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "2392:2:5",
																				"nodeType": "YulIdentifier",
																				"src": "2392:2:5"
																			},
																			"nativeSrc": "2392:20:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2392:20:5"
																		},
																		"nativeSrc": "2389:47:5",
																		"nodeType": "YulIf",
																		"src": "2389:47:5"
																	},
																	{
																		"nativeSrc": "2449:41:5",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2449:41:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "2463:4:5",
																					"nodeType": "YulIdentifier",
																					"src": "2463:4:5"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2473:1:5",
																							"nodeType": "YulLiteral",
																							"src": "2473:1:5",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "2480:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "2480:3:5"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2485:2:5",
																									"nodeType": "YulLiteral",
																									"src": "2485:2:5",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2476:3:5",
																								"nodeType": "YulIdentifier",
																								"src": "2476:3:5"
																							},
																							"nativeSrc": "2476:12:5",
																							"nodeType": "YulFunctionCall",
																							"src": "2476:12:5"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "2469:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "2469:3:5"
																					},
																					"nativeSrc": "2469:20:5",
																					"nodeType": "YulFunctionCall",
																					"src": "2469:20:5"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2459:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "2459:3:5"
																			},
																			"nativeSrc": "2459:31:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2459:31:5"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nativeSrc": "2453:2:5",
																				"nodeType": "YulTypedName",
																				"src": "2453:2:5",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "2503:24:5",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2503:24:5",
																		"value": {
																			"name": "deleteStart",
																			"nativeSrc": "2516:11:5",
																			"nodeType": "YulIdentifier",
																			"src": "2516:11:5"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nativeSrc": "2507:5:5",
																				"nodeType": "YulTypedName",
																				"src": "2507:5:5",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "2601:20:5",
																			"nodeType": "YulBlock",
																			"src": "2601:20:5",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "2610:5:5",
																								"nodeType": "YulIdentifier",
																								"src": "2610:5:5"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2617:1:5",
																								"nodeType": "YulLiteral",
																								"src": "2617:1:5",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nativeSrc": "2603:6:5",
																							"nodeType": "YulIdentifier",
																							"src": "2603:6:5"
																						},
																						"nativeSrc": "2603:16:5",
																						"nodeType": "YulFunctionCall",
																						"src": "2603:16:5"
																					},
																					"nativeSrc": "2603:16:5",
																					"nodeType": "YulExpressionStatement",
																					"src": "2603:16:5"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2551:5:5",
																					"nodeType": "YulIdentifier",
																					"src": "2551:5:5"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "2558:2:5",
																					"nodeType": "YulIdentifier",
																					"src": "2558:2:5"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "2548:2:5",
																				"nodeType": "YulIdentifier",
																				"src": "2548:2:5"
																			},
																			"nativeSrc": "2548:13:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2548:13:5"
																		},
																		"nativeSrc": "2540:81:5",
																		"nodeType": "YulForLoop",
																		"post": {
																			"nativeSrc": "2562:26:5",
																			"nodeType": "YulBlock",
																			"src": "2562:26:5",
																			"statements": [
																				{
																					"nativeSrc": "2564:22:5",
																					"nodeType": "YulAssignment",
																					"src": "2564:22:5",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "2577:5:5",
																								"nodeType": "YulIdentifier",
																								"src": "2577:5:5"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2584:1:5",
																								"nodeType": "YulLiteral",
																								"src": "2584:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "2573:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "2573:3:5"
																						},
																						"nativeSrc": "2573:13:5",
																						"nodeType": "YulFunctionCall",
																						"src": "2573:13:5"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nativeSrc": "2564:5:5",
																							"nodeType": "YulIdentifier",
																							"src": "2564:5:5"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nativeSrc": "2544:3:5",
																			"nodeType": "YulBlock",
																			"src": "2544:3:5",
																			"statements": []
																		},
																		"src": "2540:81:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "2216:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "2216:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2221:2:5",
																		"nodeType": "YulLiteral",
																		"src": "2221:2:5",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2213:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "2213:2:5"
																},
																"nativeSrc": "2213:11:5",
																"nodeType": "YulFunctionCall",
																"src": "2213:11:5"
															},
															"nativeSrc": "2210:421:5",
															"nodeType": "YulIf",
															"src": "2210:421:5"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nativeSrc": "2119:518:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "2172:5:5",
														"nodeType": "YulTypedName",
														"src": "2172:5:5",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "2179:3:5",
														"nodeType": "YulTypedName",
														"src": "2179:3:5",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "2184:10:5",
														"nodeType": "YulTypedName",
														"src": "2184:10:5",
														"type": ""
													}
												],
												"src": "2119:518:5"
											},
											{
												"body": {
													"nativeSrc": "2727:81:5",
													"nodeType": "YulBlock",
													"src": "2727:81:5",
													"statements": [
														{
															"nativeSrc": "2737:65:5",
															"nodeType": "YulAssignment",
															"src": "2737:65:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "2752:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "2752:4:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "2770:1:5",
																										"nodeType": "YulLiteral",
																										"src": "2770:1:5",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nativeSrc": "2773:3:5",
																										"nodeType": "YulIdentifier",
																										"src": "2773:3:5"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "2766:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "2766:3:5"
																								},
																								"nativeSrc": "2766:11:5",
																								"nodeType": "YulFunctionCall",
																								"src": "2766:11:5"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "2783:1:5",
																										"nodeType": "YulLiteral",
																										"src": "2783:1:5",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "2779:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "2779:3:5"
																								},
																								"nativeSrc": "2779:6:5",
																								"nodeType": "YulFunctionCall",
																								"src": "2779:6:5"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nativeSrc": "2762:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "2762:3:5"
																						},
																						"nativeSrc": "2762:24:5",
																						"nodeType": "YulFunctionCall",
																						"src": "2762:24:5"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "2758:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "2758:3:5"
																				},
																				"nativeSrc": "2758:29:5",
																				"nodeType": "YulFunctionCall",
																				"src": "2758:29:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2748:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2748:3:5"
																		},
																		"nativeSrc": "2748:40:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2748:40:5"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2794:1:5",
																				"nodeType": "YulLiteral",
																				"src": "2794:1:5",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "2797:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "2797:3:5"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "2790:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2790:3:5"
																		},
																		"nativeSrc": "2790:11:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2790:11:5"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "2745:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "2745:2:5"
																},
																"nativeSrc": "2745:57:5",
																"nodeType": "YulFunctionCall",
																"src": "2745:57:5"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "2737:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "2737:4:5"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "2642:166:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "2704:4:5",
														"nodeType": "YulTypedName",
														"src": "2704:4:5",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "2710:3:5",
														"nodeType": "YulTypedName",
														"src": "2710:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "2718:4:5",
														"nodeType": "YulTypedName",
														"src": "2718:4:5",
														"type": ""
													}
												],
												"src": "2642:166:5"
											},
											{
												"body": {
													"nativeSrc": "2909:1203:5",
													"nodeType": "YulBlock",
													"src": "2909:1203:5",
													"statements": [
														{
															"nativeSrc": "2919:24:5",
															"nodeType": "YulVariableDeclaration",
															"src": "2919:24:5",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "2939:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "2939:3:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2933:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "2933:5:5"
																},
																"nativeSrc": "2933:10:5",
																"nodeType": "YulFunctionCall",
																"src": "2933:10:5"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "2923:6:5",
																	"nodeType": "YulTypedName",
																	"src": "2923:6:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2986:22:5",
																"nodeType": "YulBlock",
																"src": "2986:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "2988:16:5",
																				"nodeType": "YulIdentifier",
																				"src": "2988:16:5"
																			},
																			"nativeSrc": "2988:18:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2988:18:5"
																		},
																		"nativeSrc": "2988:18:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "2988:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "2958:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "2958:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "2974:2:5",
																						"nodeType": "YulLiteral",
																						"src": "2974:2:5",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2978:1:5",
																						"nodeType": "YulLiteral",
																						"src": "2978:1:5",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "2970:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "2970:3:5"
																				},
																				"nativeSrc": "2970:10:5",
																				"nodeType": "YulFunctionCall",
																				"src": "2970:10:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2982:1:5",
																				"nodeType": "YulLiteral",
																				"src": "2982:1:5",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2966:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2966:3:5"
																		},
																		"nativeSrc": "2966:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2966:18:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2955:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "2955:2:5"
																},
																"nativeSrc": "2955:30:5",
																"nodeType": "YulFunctionCall",
																"src": "2955:30:5"
															},
															"nativeSrc": "2952:56:5",
															"nodeType": "YulIf",
															"src": "2952:56:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3061:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "3061:4:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "3099:4:5",
																						"nodeType": "YulIdentifier",
																						"src": "3099:4:5"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "3093:5:5",
																					"nodeType": "YulIdentifier",
																					"src": "3093:5:5"
																				},
																				"nativeSrc": "3093:11:5",
																				"nodeType": "YulFunctionCall",
																				"src": "3093:11:5"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nativeSrc": "3067:25:5",
																			"nodeType": "YulIdentifier",
																			"src": "3067:25:5"
																		},
																		"nativeSrc": "3067:38:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3067:38:5"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "3107:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "3107:6:5"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nativeSrc": "3017:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "3017:43:5"
																},
																"nativeSrc": "3017:97:5",
																"nodeType": "YulFunctionCall",
																"src": "3017:97:5"
															},
															"nativeSrc": "3017:97:5",
															"nodeType": "YulExpressionStatement",
															"src": "3017:97:5"
														},
														{
															"nativeSrc": "3123:18:5",
															"nodeType": "YulVariableDeclaration",
															"src": "3123:18:5",
															"value": {
																"kind": "number",
																"nativeSrc": "3140:1:5",
																"nodeType": "YulLiteral",
																"src": "3140:1:5",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "3127:9:5",
																	"nodeType": "YulTypedName",
																	"src": "3127:9:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3150:17:5",
															"nodeType": "YulAssignment",
															"src": "3150:17:5",
															"value": {
																"kind": "number",
																"nativeSrc": "3163:4:5",
																"nodeType": "YulLiteral",
																"src": "3163:4:5",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "3150:9:5",
																	"nodeType": "YulIdentifier",
																	"src": "3150:9:5"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "3213:642:5",
																		"nodeType": "YulBlock",
																		"src": "3213:642:5",
																		"statements": [
																			{
																				"nativeSrc": "3227:35:5",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3227:35:5",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "3246:6:5",
																							"nodeType": "YulIdentifier",
																							"src": "3246:6:5"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "3258:2:5",
																									"nodeType": "YulLiteral",
																									"src": "3258:2:5",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "3254:3:5",
																								"nodeType": "YulIdentifier",
																								"src": "3254:3:5"
																							},
																							"nativeSrc": "3254:7:5",
																							"nodeType": "YulFunctionCall",
																							"src": "3254:7:5"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "3242:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "3242:3:5"
																					},
																					"nativeSrc": "3242:20:5",
																					"nodeType": "YulFunctionCall",
																					"src": "3242:20:5"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "3231:7:5",
																						"nodeType": "YulTypedName",
																						"src": "3231:7:5",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "3275:49:5",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3275:49:5",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "3319:4:5",
																							"nodeType": "YulIdentifier",
																							"src": "3319:4:5"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nativeSrc": "3289:29:5",
																						"nodeType": "YulIdentifier",
																						"src": "3289:29:5"
																					},
																					"nativeSrc": "3289:35:5",
																					"nodeType": "YulFunctionCall",
																					"src": "3289:35:5"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "3279:6:5",
																						"nodeType": "YulTypedName",
																						"src": "3279:6:5",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "3337:10:5",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3337:10:5",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "3346:1:5",
																					"nodeType": "YulLiteral",
																					"src": "3346:1:5",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "3341:1:5",
																						"nodeType": "YulTypedName",
																						"src": "3341:1:5",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "3417:165:5",
																					"nodeType": "YulBlock",
																					"src": "3417:165:5",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "3442:6:5",
																										"nodeType": "YulIdentifier",
																										"src": "3442:6:5"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "3460:3:5",
																														"nodeType": "YulIdentifier",
																														"src": "3460:3:5"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "3465:9:5",
																														"nodeType": "YulIdentifier",
																														"src": "3465:9:5"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "3456:3:5",
																													"nodeType": "YulIdentifier",
																													"src": "3456:3:5"
																												},
																												"nativeSrc": "3456:19:5",
																												"nodeType": "YulFunctionCall",
																												"src": "3456:19:5"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "3450:5:5",
																											"nodeType": "YulIdentifier",
																											"src": "3450:5:5"
																										},
																										"nativeSrc": "3450:26:5",
																										"nodeType": "YulFunctionCall",
																										"src": "3450:26:5"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "3435:6:5",
																									"nodeType": "YulIdentifier",
																									"src": "3435:6:5"
																								},
																								"nativeSrc": "3435:42:5",
																								"nodeType": "YulFunctionCall",
																								"src": "3435:42:5"
																							},
																							"nativeSrc": "3435:42:5",
																							"nodeType": "YulExpressionStatement",
																							"src": "3435:42:5"
																						},
																						{
																							"nativeSrc": "3494:24:5",
																							"nodeType": "YulAssignment",
																							"src": "3494:24:5",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "3508:6:5",
																										"nodeType": "YulIdentifier",
																										"src": "3508:6:5"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "3516:1:5",
																										"nodeType": "YulLiteral",
																										"src": "3516:1:5",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "3504:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "3504:3:5"
																								},
																								"nativeSrc": "3504:14:5",
																								"nodeType": "YulFunctionCall",
																								"src": "3504:14:5"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "3494:6:5",
																									"nodeType": "YulIdentifier",
																									"src": "3494:6:5"
																								}
																							]
																						},
																						{
																							"nativeSrc": "3535:33:5",
																							"nodeType": "YulAssignment",
																							"src": "3535:33:5",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "3552:9:5",
																										"nodeType": "YulIdentifier",
																										"src": "3552:9:5"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "3563:4:5",
																										"nodeType": "YulLiteral",
																										"src": "3563:4:5",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "3548:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "3548:3:5"
																								},
																								"nativeSrc": "3548:20:5",
																								"nodeType": "YulFunctionCall",
																								"src": "3548:20:5"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "3535:9:5",
																									"nodeType": "YulIdentifier",
																									"src": "3535:9:5"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "3371:1:5",
																							"nodeType": "YulIdentifier",
																							"src": "3371:1:5"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "3374:7:5",
																							"nodeType": "YulIdentifier",
																							"src": "3374:7:5"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "3368:2:5",
																						"nodeType": "YulIdentifier",
																						"src": "3368:2:5"
																					},
																					"nativeSrc": "3368:14:5",
																					"nodeType": "YulFunctionCall",
																					"src": "3368:14:5"
																				},
																				"nativeSrc": "3360:222:5",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "3383:21:5",
																					"nodeType": "YulBlock",
																					"src": "3383:21:5",
																					"statements": [
																						{
																							"nativeSrc": "3385:17:5",
																							"nodeType": "YulAssignment",
																							"src": "3385:17:5",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "3394:1:5",
																										"nodeType": "YulIdentifier",
																										"src": "3394:1:5"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "3397:4:5",
																										"nodeType": "YulLiteral",
																										"src": "3397:4:5",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "3390:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "3390:3:5"
																								},
																								"nativeSrc": "3390:12:5",
																								"nodeType": "YulFunctionCall",
																								"src": "3390:12:5"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "3385:1:5",
																									"nodeType": "YulIdentifier",
																									"src": "3385:1:5"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "3364:3:5",
																					"nodeType": "YulBlock",
																					"src": "3364:3:5",
																					"statements": []
																				},
																				"src": "3360:222:5"
																			},
																			{
																				"body": {
																					"nativeSrc": "3630:166:5",
																					"nodeType": "YulBlock",
																					"src": "3630:166:5",
																					"statements": [
																						{
																							"nativeSrc": "3648:43:5",
																							"nodeType": "YulVariableDeclaration",
																							"src": "3648:43:5",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "3675:3:5",
																												"nodeType": "YulIdentifier",
																												"src": "3675:3:5"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "3680:9:5",
																												"nodeType": "YulIdentifier",
																												"src": "3680:9:5"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "3671:3:5",
																											"nodeType": "YulIdentifier",
																											"src": "3671:3:5"
																										},
																										"nativeSrc": "3671:19:5",
																										"nodeType": "YulFunctionCall",
																										"src": "3671:19:5"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "3665:5:5",
																									"nodeType": "YulIdentifier",
																									"src": "3665:5:5"
																								},
																								"nativeSrc": "3665:26:5",
																								"nodeType": "YulFunctionCall",
																								"src": "3665:26:5"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "3652:9:5",
																									"nodeType": "YulTypedName",
																									"src": "3652:9:5",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "3715:6:5",
																										"nodeType": "YulIdentifier",
																										"src": "3715:6:5"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "3727:9:5",
																												"nodeType": "YulIdentifier",
																												"src": "3727:9:5"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nativeSrc": "3754:1:5",
																																				"nodeType": "YulLiteral",
																																				"src": "3754:1:5",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nativeSrc": "3757:6:5",
																																				"nodeType": "YulIdentifier",
																																				"src": "3757:6:5"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nativeSrc": "3750:3:5",
																																			"nodeType": "YulIdentifier",
																																			"src": "3750:3:5"
																																		},
																																		"nativeSrc": "3750:14:5",
																																		"nodeType": "YulFunctionCall",
																																		"src": "3750:14:5"
																																	},
																																	{
																																		"kind": "number",
																																		"nativeSrc": "3766:3:5",
																																		"nodeType": "YulLiteral",
																																		"src": "3766:3:5",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nativeSrc": "3746:3:5",
																																	"nodeType": "YulIdentifier",
																																	"src": "3746:3:5"
																																},
																																"nativeSrc": "3746:24:5",
																																"nodeType": "YulFunctionCall",
																																"src": "3746:24:5"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nativeSrc": "3776:1:5",
																																		"nodeType": "YulLiteral",
																																		"src": "3776:1:5",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nativeSrc": "3772:3:5",
																																	"nodeType": "YulIdentifier",
																																	"src": "3772:3:5"
																																},
																																"nativeSrc": "3772:6:5",
																																"nodeType": "YulFunctionCall",
																																"src": "3772:6:5"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nativeSrc": "3742:3:5",
																															"nodeType": "YulIdentifier",
																															"src": "3742:3:5"
																														},
																														"nativeSrc": "3742:37:5",
																														"nodeType": "YulFunctionCall",
																														"src": "3742:37:5"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nativeSrc": "3738:3:5",
																													"nodeType": "YulIdentifier",
																													"src": "3738:3:5"
																												},
																												"nativeSrc": "3738:42:5",
																												"nodeType": "YulFunctionCall",
																												"src": "3738:42:5"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nativeSrc": "3723:3:5",
																											"nodeType": "YulIdentifier",
																											"src": "3723:3:5"
																										},
																										"nativeSrc": "3723:58:5",
																										"nodeType": "YulFunctionCall",
																										"src": "3723:58:5"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "3708:6:5",
																									"nodeType": "YulIdentifier",
																									"src": "3708:6:5"
																								},
																								"nativeSrc": "3708:74:5",
																								"nodeType": "YulFunctionCall",
																								"src": "3708:74:5"
																							},
																							"nativeSrc": "3708:74:5",
																							"nodeType": "YulExpressionStatement",
																							"src": "3708:74:5"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "3601:7:5",
																							"nodeType": "YulIdentifier",
																							"src": "3601:7:5"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "3610:6:5",
																							"nodeType": "YulIdentifier",
																							"src": "3610:6:5"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "3598:2:5",
																						"nodeType": "YulIdentifier",
																						"src": "3598:2:5"
																					},
																					"nativeSrc": "3598:19:5",
																					"nodeType": "YulFunctionCall",
																					"src": "3598:19:5"
																				},
																				"nativeSrc": "3595:201:5",
																				"nodeType": "YulIf",
																				"src": "3595:201:5"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "3816:4:5",
																							"nodeType": "YulIdentifier",
																							"src": "3816:4:5"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "3830:1:5",
																											"nodeType": "YulLiteral",
																											"src": "3830:1:5",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nativeSrc": "3833:6:5",
																											"nodeType": "YulIdentifier",
																											"src": "3833:6:5"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "3826:3:5",
																										"nodeType": "YulIdentifier",
																										"src": "3826:3:5"
																									},
																									"nativeSrc": "3826:14:5",
																									"nodeType": "YulFunctionCall",
																									"src": "3826:14:5"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "3842:1:5",
																									"nodeType": "YulLiteral",
																									"src": "3842:1:5",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "3822:3:5",
																								"nodeType": "YulIdentifier",
																								"src": "3822:3:5"
																							},
																							"nativeSrc": "3822:22:5",
																							"nodeType": "YulFunctionCall",
																							"src": "3822:22:5"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "3809:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "3809:6:5"
																					},
																					"nativeSrc": "3809:36:5",
																					"nodeType": "YulFunctionCall",
																					"src": "3809:36:5"
																				},
																				"nativeSrc": "3809:36:5",
																				"nodeType": "YulExpressionStatement",
																				"src": "3809:36:5"
																			}
																		]
																	},
																	"nativeSrc": "3206:649:5",
																	"nodeType": "YulCase",
																	"src": "3206:649:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3211:1:5",
																		"nodeType": "YulLiteral",
																		"src": "3211:1:5",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "3872:234:5",
																		"nodeType": "YulBlock",
																		"src": "3872:234:5",
																		"statements": [
																			{
																				"nativeSrc": "3886:14:5",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3886:14:5",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "3899:1:5",
																					"nodeType": "YulLiteral",
																					"src": "3899:1:5",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "3890:5:5",
																						"nodeType": "YulTypedName",
																						"src": "3890:5:5",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "3935:67:5",
																					"nodeType": "YulBlock",
																					"src": "3935:67:5",
																					"statements": [
																						{
																							"nativeSrc": "3953:35:5",
																							"nodeType": "YulAssignment",
																							"src": "3953:35:5",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "3972:3:5",
																												"nodeType": "YulIdentifier",
																												"src": "3972:3:5"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "3977:9:5",
																												"nodeType": "YulIdentifier",
																												"src": "3977:9:5"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "3968:3:5",
																											"nodeType": "YulIdentifier",
																											"src": "3968:3:5"
																										},
																										"nativeSrc": "3968:19:5",
																										"nodeType": "YulFunctionCall",
																										"src": "3968:19:5"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "3962:5:5",
																									"nodeType": "YulIdentifier",
																									"src": "3962:5:5"
																								},
																								"nativeSrc": "3962:26:5",
																								"nodeType": "YulFunctionCall",
																								"src": "3962:26:5"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "3953:5:5",
																									"nodeType": "YulIdentifier",
																									"src": "3953:5:5"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "3916:6:5",
																					"nodeType": "YulIdentifier",
																					"src": "3916:6:5"
																				},
																				"nativeSrc": "3913:89:5",
																				"nodeType": "YulIf",
																				"src": "3913:89:5"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4022:4:5",
																							"nodeType": "YulIdentifier",
																							"src": "4022:4:5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "4081:5:5",
																									"nodeType": "YulIdentifier",
																									"src": "4081:5:5"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "4088:6:5",
																									"nodeType": "YulIdentifier",
																									"src": "4088:6:5"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "4028:52:5",
																								"nodeType": "YulIdentifier",
																								"src": "4028:52:5"
																							},
																							"nativeSrc": "4028:67:5",
																							"nodeType": "YulFunctionCall",
																							"src": "4028:67:5"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "4015:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "4015:6:5"
																					},
																					"nativeSrc": "4015:81:5",
																					"nodeType": "YulFunctionCall",
																					"src": "4015:81:5"
																				},
																				"nativeSrc": "4015:81:5",
																				"nodeType": "YulExpressionStatement",
																				"src": "4015:81:5"
																			}
																		]
																	},
																	"nativeSrc": "3864:242:5",
																	"nodeType": "YulCase",
																	"src": "3864:242:5",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "3186:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "3186:6:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3194:2:5",
																		"nodeType": "YulLiteral",
																		"src": "3194:2:5",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3183:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "3183:2:5"
																},
																"nativeSrc": "3183:14:5",
																"nodeType": "YulFunctionCall",
																"src": "3183:14:5"
															},
															"nativeSrc": "3176:930:5",
															"nodeType": "YulSwitch",
															"src": "3176:930:5"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "2813:1299:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "2894:4:5",
														"nodeType": "YulTypedName",
														"src": "2894:4:5",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "2900:3:5",
														"nodeType": "YulTypedName",
														"src": "2900:3:5",
														"type": ""
													}
												],
												"src": "2813:1299:5"
											},
											{
												"body": {
													"nativeSrc": "4291:181:5",
													"nodeType": "YulBlock",
													"src": "4291:181:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4308:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "4308:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4319:2:5",
																		"nodeType": "YulLiteral",
																		"src": "4319:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4301:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4301:6:5"
																},
																"nativeSrc": "4301:21:5",
																"nodeType": "YulFunctionCall",
																"src": "4301:21:5"
															},
															"nativeSrc": "4301:21:5",
															"nodeType": "YulExpressionStatement",
															"src": "4301:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4342:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "4342:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4353:2:5",
																				"nodeType": "YulLiteral",
																				"src": "4353:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4338:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4338:3:5"
																		},
																		"nativeSrc": "4338:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4338:18:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4358:2:5",
																		"nodeType": "YulLiteral",
																		"src": "4358:2:5",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4331:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4331:6:5"
																},
																"nativeSrc": "4331:30:5",
																"nodeType": "YulFunctionCall",
																"src": "4331:30:5"
															},
															"nativeSrc": "4331:30:5",
															"nodeType": "YulExpressionStatement",
															"src": "4331:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4381:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "4381:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4392:2:5",
																				"nodeType": "YulLiteral",
																				"src": "4392:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4377:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4377:3:5"
																		},
																		"nativeSrc": "4377:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4377:18:5"
																	},
																	{
																		"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
																		"kind": "string",
																		"nativeSrc": "4397:33:5",
																		"nodeType": "YulLiteral",
																		"src": "4397:33:5",
																		"type": "",
																		"value": "ERC20: mint to the zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4370:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4370:6:5"
																},
																"nativeSrc": "4370:61:5",
																"nodeType": "YulFunctionCall",
																"src": "4370:61:5"
															},
															"nativeSrc": "4370:61:5",
															"nodeType": "YulExpressionStatement",
															"src": "4370:61:5"
														},
														{
															"nativeSrc": "4440:26:5",
															"nodeType": "YulAssignment",
															"src": "4440:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4452:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "4452:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4463:2:5",
																		"nodeType": "YulLiteral",
																		"src": "4463:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4448:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4448:3:5"
																},
																"nativeSrc": "4448:18:5",
																"nodeType": "YulFunctionCall",
																"src": "4448:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4440:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "4440:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4117:355:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4268:9:5",
														"nodeType": "YulTypedName",
														"src": "4268:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4282:4:5",
														"nodeType": "YulTypedName",
														"src": "4282:4:5",
														"type": ""
													}
												],
												"src": "4117:355:5"
											},
											{
												"body": {
													"nativeSrc": "4525:174:5",
													"nodeType": "YulBlock",
													"src": "4525:174:5",
													"statements": [
														{
															"nativeSrc": "4535:16:5",
															"nodeType": "YulAssignment",
															"src": "4535:16:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4546:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "4546:1:5"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "4549:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "4549:1:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4542:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4542:3:5"
																},
																"nativeSrc": "4542:9:5",
																"nodeType": "YulFunctionCall",
																"src": "4542:9:5"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "4535:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4535:3:5"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4582:111:5",
																"nodeType": "YulBlock",
																"src": "4582:111:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4603:1:5",
																					"nodeType": "YulLiteral",
																					"src": "4603:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "4610:3:5",
																							"nodeType": "YulLiteral",
																							"src": "4610:3:5",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "4615:10:5",
																							"nodeType": "YulLiteral",
																							"src": "4615:10:5",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "4606:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "4606:3:5"
																					},
																					"nativeSrc": "4606:20:5",
																					"nodeType": "YulFunctionCall",
																					"src": "4606:20:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "4596:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "4596:6:5"
																			},
																			"nativeSrc": "4596:31:5",
																			"nodeType": "YulFunctionCall",
																			"src": "4596:31:5"
																		},
																		"nativeSrc": "4596:31:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "4596:31:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4647:1:5",
																					"nodeType": "YulLiteral",
																					"src": "4647:1:5",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4650:4:5",
																					"nodeType": "YulLiteral",
																					"src": "4650:4:5",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "4640:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "4640:6:5"
																			},
																			"nativeSrc": "4640:15:5",
																			"nodeType": "YulFunctionCall",
																			"src": "4640:15:5"
																		},
																		"nativeSrc": "4640:15:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "4640:15:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4675:1:5",
																					"nodeType": "YulLiteral",
																					"src": "4675:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4678:4:5",
																					"nodeType": "YulLiteral",
																					"src": "4678:4:5",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4668:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "4668:6:5"
																			},
																			"nativeSrc": "4668:15:5",
																			"nodeType": "YulFunctionCall",
																			"src": "4668:15:5"
																		},
																		"nativeSrc": "4668:15:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "4668:15:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4566:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "4566:1:5"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "4569:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "4569:3:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4563:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "4563:2:5"
																},
																"nativeSrc": "4563:10:5",
																"nodeType": "YulFunctionCall",
																"src": "4563:10:5"
															},
															"nativeSrc": "4560:133:5",
															"nodeType": "YulIf",
															"src": "4560:133:5"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "4477:222:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "4508:1:5",
														"nodeType": "YulTypedName",
														"src": "4508:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "4511:1:5",
														"nodeType": "YulTypedName",
														"src": "4511:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "4517:3:5",
														"nodeType": "YulTypedName",
														"src": "4517:3:5",
														"type": ""
													}
												],
												"src": "4477:222:5"
											},
											{
												"body": {
													"nativeSrc": "4805:76:5",
													"nodeType": "YulBlock",
													"src": "4805:76:5",
													"statements": [
														{
															"nativeSrc": "4815:26:5",
															"nodeType": "YulAssignment",
															"src": "4815:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4827:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "4827:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4838:2:5",
																		"nodeType": "YulLiteral",
																		"src": "4838:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4823:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4823:3:5"
																},
																"nativeSrc": "4823:18:5",
																"nodeType": "YulFunctionCall",
																"src": "4823:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4815:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "4815:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4857:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "4857:9:5"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "4868:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "4868:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4850:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4850:6:5"
																},
																"nativeSrc": "4850:25:5",
																"nodeType": "YulFunctionCall",
																"src": "4850:25:5"
															},
															"nativeSrc": "4850:25:5",
															"nodeType": "YulExpressionStatement",
															"src": "4850:25:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "4704:177:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4774:9:5",
														"nodeType": "YulTypedName",
														"src": "4774:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4785:6:5",
														"nodeType": "YulTypedName",
														"src": "4785:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4796:4:5",
														"nodeType": "YulTypedName",
														"src": "4796:4:5",
														"type": ""
													}
												],
												"src": "4704:177:5"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let length := mload(offset)\n        if gt(length, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(length, 0x1f), not(31)), 63), not(31)))\n        if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, length)\n        if gt(add(add(offset, length), 0x20), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            mstore(add(add(memPtr, i), 0x20), mload(add(add(offset, i), 0x20)))\n        }\n        mstore(add(add(memPtr, length), 0x20), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let offset := mload(headStart)\n        if gt(offset, sub(shl(64, 1), 1)) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, sub(shl(64, 1), 1)) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n        value2 := mload(add(headStart, 64))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 0x20)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ERC20: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n}",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "6080604052604051610f6d380380610f6d833981016040819052610022916101f9565b8282600361003083826102f3565b50600461003d82826102f3565b505050610050338261005860201b60201c565b5050506103d8565b6001600160a01b0382166100b25760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640160405180910390fd5b80600260008282546100c491906103b1565b90915550506001600160a01b038216600090815260208190526040812080548392906100f19084906103b1565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b505050565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261016757600080fd5b81516001600160401b0381111561018057610180610140565b604051601f8201601f19908116603f011681016001600160401b03811182821017156101ae576101ae610140565b6040528181528382016020018510156101c657600080fd5b60005b828110156101e5576020818601810151838301820152016101c9565b506000918101602001919091529392505050565b60008060006060848603121561020e57600080fd5b83516001600160401b0381111561022457600080fd5b61023086828701610156565b602086015190945090506001600160401b0381111561024e57600080fd5b61025a86828701610156565b925050604084015190509250925092565b600181811c9082168061027f57607f821691505b60208210810361029f57634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561013b57806000526020600020601f840160051c810160208510156102cc5750805b601f840160051c820191505b818110156102ec57600081556001016102d8565b5050505050565b81516001600160401b0381111561030c5761030c610140565b6103208161031a845461026b565b846102a5565b6020601f821160018114610354576000831561033c5750848201515b600019600385901b1c1916600184901b1784556102ec565b600084815260208120601f198516915b828110156103845787850151825560209485019460019092019101610364565b50848210156103a25786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b808201808211156103d257634e487b7160e01b600052601160045260246000fd5b92915050565b610b86806103e76000396000f3fe608060405234801561001057600080fd5b50600436106100c95760003560e01c80633950935111610081578063a457c2d71161005b578063a457c2d714610194578063a9059cbb146101a7578063dd62ed3e146101ba57600080fd5b8063395093511461014357806370a082311461015657806395d89b411461018c57600080fd5b806318160ddd116100b257806318160ddd1461010f57806323b872dd14610121578063313ce5671461013457600080fd5b806306fdde03146100ce578063095ea7b3146100ec575b600080fd5b6100d6610200565b6040516100e3919061094c565b60405180910390f35b6100ff6100fa3660046109e1565b610292565b60405190151581526020016100e3565b6002545b6040519081526020016100e3565b6100ff61012f366004610a0b565b6102ac565b604051601281526020016100e3565b6100ff6101513660046109e1565b6102d0565b610113610164366004610a48565b73ffffffffffffffffffffffffffffffffffffffff1660009081526020819052604090205490565b6100d661031c565b6100ff6101a23660046109e1565b61032b565b6100ff6101b53660046109e1565b610401565b6101136101c8366004610a6a565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260016020908152604080832093909416825291909152205490565b60606003805461020f90610a9d565b80601f016020809104026020016040519081016040528092919081815260200182805461023b90610a9d565b80156102885780601f1061025d57610100808354040283529160200191610288565b820191906000526020600020905b81548152906001019060200180831161026b57829003601f168201915b5050505050905090565b6000336102a081858561040f565b60019150505b92915050565b6000336102ba8582856105c2565b6102c5858585610699565b506001949350505050565b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff871684529091528120549091906102a09082908690610317908790610af0565b61040f565b60606004805461020f90610a9d565b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff87168452909152812054909190838110156103f4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f00000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b6102c5828686840361040f565b6000336102a0818585610699565b73ffffffffffffffffffffffffffffffffffffffff83166104b1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f726573730000000000000000000000000000000000000000000000000000000060648201526084016103eb565b73ffffffffffffffffffffffffffffffffffffffff8216610554576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f737300000000000000000000000000000000000000000000000000000000000060648201526084016103eb565b73ffffffffffffffffffffffffffffffffffffffff83811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b73ffffffffffffffffffffffffffffffffffffffff8381166000908152600160209081526040808320938616835292905220547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146106935781811015610686576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016103eb565b610693848484840361040f565b50505050565b73ffffffffffffffffffffffffffffffffffffffff831661073c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f647265737300000000000000000000000000000000000000000000000000000060648201526084016103eb565b73ffffffffffffffffffffffffffffffffffffffff82166107df576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f657373000000000000000000000000000000000000000000000000000000000060648201526084016103eb565b73ffffffffffffffffffffffffffffffffffffffff831660009081526020819052604090205481811015610895576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e6365000000000000000000000000000000000000000000000000000060648201526084016103eb565b73ffffffffffffffffffffffffffffffffffffffff8085166000908152602081905260408082208585039055918516815290812080548492906108d9908490610af0565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161093f91815260200190565b60405180910390a3610693565b602081526000825180602084015260005b8181101561097a576020818601810151604086840101520161095d565b5060006040828501015260407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011684010191505092915050565b803573ffffffffffffffffffffffffffffffffffffffff811681146109dc57600080fd5b919050565b600080604083850312156109f457600080fd5b6109fd836109b8565b946020939093013593505050565b600080600060608486031215610a2057600080fd5b610a29846109b8565b9250610a37602085016109b8565b929592945050506040919091013590565b600060208284031215610a5a57600080fd5b610a63826109b8565b9392505050565b60008060408385031215610a7d57600080fd5b610a86836109b8565b9150610a94602084016109b8565b90509250929050565b600181811c90821680610ab157607f821691505b602082108103610aea577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b808201808211156102a6577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fdfea264697066735822122021197b2630561b2e04ce1b8ab43d8b18f5c661785e36d7abdfd6d2bc042f8d3764736f6c637828302e382e32382d6e696768746c792e323032342e31302e322b636f6d6d69742e32353665393532380059",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0xF6D CODESIZE SUB DUP1 PUSH2 0xF6D DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x22 SWAP2 PUSH2 0x1F9 JUMP JUMPDEST DUP3 DUP3 PUSH1 0x3 PUSH2 0x30 DUP4 DUP3 PUSH2 0x2F3 JUMP JUMPDEST POP PUSH1 0x4 PUSH2 0x3D DUP3 DUP3 PUSH2 0x2F3 JUMP JUMPDEST POP POP POP PUSH2 0x50 CALLER DUP3 PUSH2 0x58 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP PUSH2 0x3D8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xB2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xC4 SWAP2 SWAP1 PUSH2 0x3B1 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0xF1 SWAP1 DUP5 SWAP1 PUSH2 0x3B1 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH1 0x0 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x167 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x180 JUMPI PUSH2 0x180 PUSH2 0x140 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1AE JUMPI PUSH2 0x1AE PUSH2 0x140 JUMP JUMPDEST PUSH1 0x40 MSTORE DUP2 DUP2 MSTORE DUP4 DUP3 ADD PUSH1 0x20 ADD DUP6 LT ISZERO PUSH2 0x1C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1E5 JUMPI PUSH1 0x20 DUP2 DUP7 ADD DUP2 ADD MLOAD DUP4 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x1C9 JUMP JUMPDEST POP PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x20E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x224 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x230 DUP7 DUP3 DUP8 ADD PUSH2 0x156 JUMP JUMPDEST PUSH1 0x20 DUP7 ADD MLOAD SWAP1 SWAP5 POP SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x24E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x25A DUP7 DUP3 DUP8 ADD PUSH2 0x156 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD MLOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x27F JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x29F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x13B JUMPI DUP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x2CC JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2EC JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x2D8 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x30C JUMPI PUSH2 0x30C PUSH2 0x140 JUMP JUMPDEST PUSH2 0x320 DUP2 PUSH2 0x31A DUP5 SLOAD PUSH2 0x26B JUMP JUMPDEST DUP5 PUSH2 0x2A5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 DUP2 EQ PUSH2 0x354 JUMPI PUSH1 0x0 DUP4 ISZERO PUSH2 0x33C JUMPI POP DUP5 DUP3 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP6 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP5 SWAP1 SHL OR DUP5 SSTORE PUSH2 0x2EC JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP6 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x384 JUMPI DUP8 DUP6 ADD MLOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x364 JUMP JUMPDEST POP DUP5 DUP3 LT ISZERO PUSH2 0x3A2 JUMPI DUP7 DUP5 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP8 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x3D2 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xB86 DUP1 PUSH2 0x3E7 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xC9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x81 JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x194 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1A7 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x1BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x39509351 EQ PUSH2 0x143 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x156 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x18C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0xB2 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x10F JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x121 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x134 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xCE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xEC JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD6 PUSH2 0x200 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE3 SWAP2 SWAP1 PUSH2 0x94C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xFF PUSH2 0xFA CALLDATASIZE PUSH1 0x4 PUSH2 0x9E1 JUMP JUMPDEST PUSH2 0x292 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE3 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE3 JUMP JUMPDEST PUSH2 0xFF PUSH2 0x12F CALLDATASIZE PUSH1 0x4 PUSH2 0xA0B JUMP JUMPDEST PUSH2 0x2AC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE3 JUMP JUMPDEST PUSH2 0xFF PUSH2 0x151 CALLDATASIZE PUSH1 0x4 PUSH2 0x9E1 JUMP JUMPDEST PUSH2 0x2D0 JUMP JUMPDEST PUSH2 0x113 PUSH2 0x164 CALLDATASIZE PUSH1 0x4 PUSH2 0xA48 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xD6 PUSH2 0x31C JUMP JUMPDEST PUSH2 0xFF PUSH2 0x1A2 CALLDATASIZE PUSH1 0x4 PUSH2 0x9E1 JUMP JUMPDEST PUSH2 0x32B JUMP JUMPDEST PUSH2 0xFF PUSH2 0x1B5 CALLDATASIZE PUSH1 0x4 PUSH2 0x9E1 JUMP JUMPDEST PUSH2 0x401 JUMP JUMPDEST PUSH2 0x113 PUSH2 0x1C8 CALLDATASIZE PUSH1 0x4 PUSH2 0xA6A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x20F SWAP1 PUSH2 0xA9D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x23B SWAP1 PUSH2 0xA9D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x288 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x25D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x288 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x26B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x2A0 DUP2 DUP6 DUP6 PUSH2 0x40F JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x2BA DUP6 DUP3 DUP6 PUSH2 0x5C2 JUMP JUMPDEST PUSH2 0x2C5 DUP6 DUP6 DUP6 PUSH2 0x699 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x2A0 SWAP1 DUP3 SWAP1 DUP7 SWAP1 PUSH2 0x317 SWAP1 DUP8 SWAP1 PUSH2 0xAF0 JUMP JUMPDEST PUSH2 0x40F JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x20F SWAP1 PUSH2 0xA9D JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 DUP4 DUP2 LT ISZERO PUSH2 0x3F4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2C5 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x40F JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x2A0 DUP2 DUP6 DUP6 PUSH2 0x699 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH2 0x4B1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3EB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH2 0x554 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3EB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x693 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x686 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3EB JUMP JUMPDEST PUSH2 0x693 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x40F JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH2 0x73C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3EB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH2 0x7DF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3EB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x895 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3EB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x8D9 SWAP1 DUP5 SWAP1 PUSH2 0xAF0 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x93F SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x693 JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x97A JUMPI PUSH1 0x20 DUP2 DUP7 ADD DUP2 ADD MLOAD PUSH1 0x40 DUP7 DUP5 ADD ADD MSTORE ADD PUSH2 0x95D JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x9DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x9F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9FD DUP4 PUSH2 0x9B8 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xA20 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA29 DUP5 PUSH2 0x9B8 JUMP JUMPDEST SWAP3 POP PUSH2 0xA37 PUSH1 0x20 DUP6 ADD PUSH2 0x9B8 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA5A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA63 DUP3 PUSH2 0x9B8 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xA7D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA86 DUP4 PUSH2 0x9B8 JUMP JUMPDEST SWAP2 POP PUSH2 0xA94 PUSH1 0x20 DUP5 ADD PUSH2 0x9B8 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xAB1 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xAEA JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x2A6 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x21 NOT PUSH28 0x2630561B2E04CE1B8AB43D8B18F5C661785E36D7ABDFD6D2BC042F8D CALLDATACOPY PUSH5 0x736F6C6378 0x28 ADDRESS 0x2E CODESIZE 0x2E ORIGIN CODESIZE 0x2D PUSH15 0x696768746C792E323032342E31302E ORIGIN 0x2B PUSH4 0x6F6D6D69 PUSH21 0x2E3235366539353238005900000000000000000000 ",
							"sourceMap": "1900:336:0:-:0;;;2054:180;;;;;;;;;;;;;;;;;;:::i;:::-;2173:4;2179:6;3317:5:1;:13;2173:4:0;3317:5:1;:13;:::i;:::-;-1:-1:-1;3340:7:1;:17;3350:7;3340;:17;:::i;:::-;;3251:113;;2197:30:0::1;2203:10;2215:11;2197:5;;;:30;;:::i;:::-;2054:180:::0;;;1900:336;;9675:389:1;-1:-1:-1;;;;;9758:21:1;;9750:65;;;;-1:-1:-1;;;9750:65:1;;4319:2:5;9750:65:1;;;4301:21:5;4358:2;4338:18;;;4331:30;4397:33;4377:18;;;4370:61;4448:18;;9750:65:1;;;;;;;;9902:6;9886:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;9918:18:1;;:9;:18;;;;;;;;;;:28;;9940:6;;9918:9;:28;;9940:6;;9918:28;:::i;:::-;;;;-1:-1:-1;;9961:37:1;;4850:25:5;;;-1:-1:-1;;;;;9961:37:1;;;9978:1;;9961:37;;4838:2:5;4823:18;9961:37:1;;;;;;;9675:389;;:::o;13059:121::-;;;;:::o;14:127:5:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:834;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;298:13;;-1:-1:-1;;;;;323:30:5;;320:56;;;356:18;;:::i;:::-;405:2;399:9;497:2;459:17;;-1:-1:-1;;455:31:5;;;488:2;451:40;447:54;435:67;;-1:-1:-1;;;;;517:34:5;;553:22;;;514:62;511:88;;;579:18;;:::i;:::-;615:2;608:22;639;;;680:19;;;701:4;676:30;673:39;-1:-1:-1;670:59:5;;;725:1;722;715:12;670:59;747:1;757:143;771:6;768:1;765:13;757:143;;;883:4;867:14;;;863:25;;857:32;834:14;;;830:25;;823:67;786:12;757:143;;;-1:-1:-1;948:1:5;920:19;;;941:4;916:30;909:41;;;;924:6;146:834;-1:-1:-1;;;146:834:5:o;985:618::-;1093:6;1101;1109;1162:2;1150:9;1141:7;1137:23;1133:32;1130:52;;;1178:1;1175;1168:12;1130:52;1205:16;;-1:-1:-1;;;;;1233:30:5;;1230:50;;;1276:1;1273;1266:12;1230:50;1299:61;1352:7;1343:6;1332:9;1328:22;1299:61;:::i;:::-;1406:2;1391:18;;1385:25;1289:71;;-1:-1:-1;1385:25:5;-1:-1:-1;;;;;;1422:32:5;;1419:52;;;1467:1;1464;1457:12;1419:52;1490:63;1545:7;1534:8;1523:9;1519:24;1490:63;:::i;:::-;1480:73;;;1593:2;1582:9;1578:18;1572:25;1562:35;;985:618;;;;;:::o;1608:380::-;1687:1;1683:12;;;;1730;;;1751:61;;1805:4;1797:6;1793:17;1783:27;;1751:61;1858:2;1850:6;1847:14;1827:18;1824:38;1821:161;;1904:10;1899:3;1895:20;1892:1;1885:31;1939:4;1936:1;1929:15;1967:4;1964:1;1957:15;1821:161;;1608:380;;;:::o;2119:518::-;2221:2;2216:3;2213:11;2210:421;;;2257:5;2254:1;2247:16;2301:4;2298:1;2288:18;2371:2;2359:10;2355:19;2352:1;2348:27;2342:4;2338:38;2407:4;2395:10;2392:20;2389:47;;;-1:-1:-1;2430:4:5;2389:47;2485:2;2480:3;2476:12;2473:1;2469:20;2463:4;2459:31;2449:41;;2540:81;2558:2;2551:5;2548:13;2540:81;;;2617:1;2603:16;;2584:1;2573:13;2540:81;;;2544:3;;2119:518;;;:::o;2813:1299::-;2933:10;;-1:-1:-1;;;;;2955:30:5;;2952:56;;;2988:18;;:::i;:::-;3017:97;3107:6;3067:38;3099:4;3093:11;3067:38;:::i;:::-;3061:4;3017:97;:::i;:::-;3163:4;3194:2;3183:14;;3211:1;3206:649;;;;3899:1;3916:6;3913:89;;;-1:-1:-1;3968:19:5;;;3962:26;3913:89;-1:-1:-1;;2770:1:5;2766:11;;;2762:24;2758:29;2748:40;2794:1;2790:11;;;2745:57;4015:81;;3176:930;;3206:649;2066:1;2059:14;;;2103:4;2090:18;;-1:-1:-1;;3242:20:5;;;3360:222;3374:7;3371:1;3368:14;3360:222;;;3456:19;;;3450:26;3435:42;;3563:4;3548:20;;;;3516:1;3504:14;;;;3390:12;3360:222;;;3364:3;3610:6;3601:7;3598:19;3595:201;;;3671:19;;;3665:26;-1:-1:-1;;3754:1:5;3750:14;;;3766:3;3746:24;3742:37;3738:42;3723:58;3708:74;;3595:201;-1:-1:-1;;;;3842:1:5;3826:14;;;3822:22;3809:36;;-1:-1:-1;2813:1299:5:o;4477:222::-;4542:9;;;4563:10;;;4560:133;;;4615:10;4610:3;4606:20;4603:1;4596:31;4650:4;4647:1;4640:15;4678:4;4675:1;4668:15;4560:133;4477:222;;;;:::o;4704:177::-;1900:336:0;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfer_612": {
									"entryPoint": null,
									"id": 612,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_547": {
									"entryPoint": 1039,
									"id": 547,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_601": {
									"entryPoint": null,
									"id": 601,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_msgSender_728": {
									"entryPoint": null,
									"id": 728,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_590": {
									"entryPoint": 1474,
									"id": 590,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_374": {
									"entryPoint": 1689,
									"id": 374,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_169": {
									"entryPoint": null,
									"id": 169,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_194": {
									"entryPoint": 658,
									"id": 194,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_126": {
									"entryPoint": null,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_102": {
									"entryPoint": null,
									"id": 102,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_297": {
									"entryPoint": 811,
									"id": 297,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@increaseAllowance_256": {
									"entryPoint": 720,
									"id": 256,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_82": {
									"entryPoint": 512,
									"id": 82,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@symbol_92": {
									"entryPoint": 796,
									"id": 92,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_112": {
									"entryPoint": null,
									"id": 112,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_227": {
									"entryPoint": 684,
									"id": 227,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_151": {
									"entryPoint": 1025,
									"id": 151,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 2488,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2632,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 2666,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 2571,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 2529,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2380,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2800,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 2717,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:6021:5",
										"nodeType": "YulBlock",
										"src": "0:6021:5",
										"statements": [
											{
												"nativeSrc": "6:3:5",
												"nodeType": "YulBlock",
												"src": "6:3:5",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "135:465:5",
													"nodeType": "YulBlock",
													"src": "135:465:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "152:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "152:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "163:2:5",
																		"nodeType": "YulLiteral",
																		"src": "163:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "145:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "145:6:5"
																},
																"nativeSrc": "145:21:5",
																"nodeType": "YulFunctionCall",
																"src": "145:21:5"
															},
															"nativeSrc": "145:21:5",
															"nodeType": "YulExpressionStatement",
															"src": "145:21:5"
														},
														{
															"nativeSrc": "175:27:5",
															"nodeType": "YulVariableDeclaration",
															"src": "175:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "195:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "195:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "189:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "189:5:5"
																},
																"nativeSrc": "189:13:5",
																"nodeType": "YulFunctionCall",
																"src": "189:13:5"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "179:6:5",
																	"nodeType": "YulTypedName",
																	"src": "179:6:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "222:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "222:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "233:2:5",
																				"nodeType": "YulLiteral",
																				"src": "233:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "218:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "218:3:5"
																		},
																		"nativeSrc": "218:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "218:18:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "238:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "238:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "211:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "211:6:5"
																},
																"nativeSrc": "211:34:5",
																"nodeType": "YulFunctionCall",
																"src": "211:34:5"
															},
															"nativeSrc": "211:34:5",
															"nodeType": "YulExpressionStatement",
															"src": "211:34:5"
														},
														{
															"nativeSrc": "254:10:5",
															"nodeType": "YulVariableDeclaration",
															"src": "254:10:5",
															"value": {
																"kind": "number",
																"nativeSrc": "263:1:5",
																"nodeType": "YulLiteral",
																"src": "263:1:5",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "258:1:5",
																	"nodeType": "YulTypedName",
																	"src": "258:1:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "323:90:5",
																"nodeType": "YulBlock",
																"src": "323:90:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nativeSrc": "352:9:5",
																									"nodeType": "YulIdentifier",
																									"src": "352:9:5"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "363:1:5",
																									"nodeType": "YulIdentifier",
																									"src": "363:1:5"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "348:3:5",
																								"nodeType": "YulIdentifier",
																								"src": "348:3:5"
																							},
																							"nativeSrc": "348:17:5",
																							"nodeType": "YulFunctionCall",
																							"src": "348:17:5"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "367:2:5",
																							"nodeType": "YulLiteral",
																							"src": "367:2:5",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "344:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "344:3:5"
																					},
																					"nativeSrc": "344:26:5",
																					"nodeType": "YulFunctionCall",
																					"src": "344:26:5"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nativeSrc": "386:6:5",
																											"nodeType": "YulIdentifier",
																											"src": "386:6:5"
																										},
																										{
																											"name": "i",
																											"nativeSrc": "394:1:5",
																											"nodeType": "YulIdentifier",
																											"src": "394:1:5"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nativeSrc": "382:3:5",
																										"nodeType": "YulIdentifier",
																										"src": "382:3:5"
																									},
																									"nativeSrc": "382:14:5",
																									"nodeType": "YulFunctionCall",
																									"src": "382:14:5"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "398:2:5",
																									"nodeType": "YulLiteral",
																									"src": "398:2:5",
																									"type": "",
																									"value": "32"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "378:3:5",
																								"nodeType": "YulIdentifier",
																								"src": "378:3:5"
																							},
																							"nativeSrc": "378:23:5",
																							"nodeType": "YulFunctionCall",
																							"src": "378:23:5"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "372:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "372:5:5"
																					},
																					"nativeSrc": "372:30:5",
																					"nodeType": "YulFunctionCall",
																					"src": "372:30:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "337:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "337:6:5"
																			},
																			"nativeSrc": "337:66:5",
																			"nodeType": "YulFunctionCall",
																			"src": "337:66:5"
																		},
																		"nativeSrc": "337:66:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "337:66:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "284:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "284:1:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "287:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "287:6:5"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "281:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "281:2:5"
																},
																"nativeSrc": "281:13:5",
																"nodeType": "YulFunctionCall",
																"src": "281:13:5"
															},
															"nativeSrc": "273:140:5",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "295:19:5",
																"nodeType": "YulBlock",
																"src": "295:19:5",
																"statements": [
																	{
																		"nativeSrc": "297:15:5",
																		"nodeType": "YulAssignment",
																		"src": "297:15:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "306:1:5",
																					"nodeType": "YulIdentifier",
																					"src": "306:1:5"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "309:2:5",
																					"nodeType": "YulLiteral",
																					"src": "309:2:5",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "302:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "302:3:5"
																			},
																			"nativeSrc": "302:10:5",
																			"nodeType": "YulFunctionCall",
																			"src": "302:10:5"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "297:1:5",
																				"nodeType": "YulIdentifier",
																				"src": "297:1:5"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "277:3:5",
																"nodeType": "YulBlock",
																"src": "277:3:5",
																"statements": []
															},
															"src": "273:140:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "437:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "437:9:5"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "448:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "448:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "433:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "433:3:5"
																				},
																				"nativeSrc": "433:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "433:22:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "457:2:5",
																				"nodeType": "YulLiteral",
																				"src": "457:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "429:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "429:3:5"
																		},
																		"nativeSrc": "429:31:5",
																		"nodeType": "YulFunctionCall",
																		"src": "429:31:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "462:1:5",
																		"nodeType": "YulLiteral",
																		"src": "462:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "422:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "422:6:5"
																},
																"nativeSrc": "422:42:5",
																"nodeType": "YulFunctionCall",
																"src": "422:42:5"
															},
															"nativeSrc": "422:42:5",
															"nodeType": "YulExpressionStatement",
															"src": "422:42:5"
														},
														{
															"nativeSrc": "473:121:5",
															"nodeType": "YulAssignment",
															"src": "473:121:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "489:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "489:9:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "508:6:5",
																								"nodeType": "YulIdentifier",
																								"src": "508:6:5"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "516:2:5",
																								"nodeType": "YulLiteral",
																								"src": "516:2:5",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "504:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "504:3:5"
																						},
																						"nativeSrc": "504:15:5",
																						"nodeType": "YulFunctionCall",
																						"src": "504:15:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "521:66:5",
																						"nodeType": "YulLiteral",
																						"src": "521:66:5",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "500:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "500:3:5"
																				},
																				"nativeSrc": "500:88:5",
																				"nodeType": "YulFunctionCall",
																				"src": "500:88:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "485:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "485:3:5"
																		},
																		"nativeSrc": "485:104:5",
																		"nodeType": "YulFunctionCall",
																		"src": "485:104:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "591:2:5",
																		"nodeType": "YulLiteral",
																		"src": "591:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "481:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "481:3:5"
																},
																"nativeSrc": "481:113:5",
																"nodeType": "YulFunctionCall",
																"src": "481:113:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "473:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "473:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14:586:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "104:9:5",
														"nodeType": "YulTypedName",
														"src": "104:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "115:6:5",
														"nodeType": "YulTypedName",
														"src": "115:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "126:4:5",
														"nodeType": "YulTypedName",
														"src": "126:4:5",
														"type": ""
													}
												],
												"src": "14:586:5"
											},
											{
												"body": {
													"nativeSrc": "654:147:5",
													"nodeType": "YulBlock",
													"src": "654:147:5",
													"statements": [
														{
															"nativeSrc": "664:29:5",
															"nodeType": "YulAssignment",
															"src": "664:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "686:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "686:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "673:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "673:12:5"
																},
																"nativeSrc": "673:20:5",
																"nodeType": "YulFunctionCall",
																"src": "673:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "664:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "664:5:5"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "779:16:5",
																"nodeType": "YulBlock",
																"src": "779:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "788:1:5",
																					"nodeType": "YulLiteral",
																					"src": "788:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "791:1:5",
																					"nodeType": "YulLiteral",
																					"src": "791:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "781:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "781:6:5"
																			},
																			"nativeSrc": "781:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "781:12:5"
																		},
																		"nativeSrc": "781:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "781:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "715:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "715:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "726:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "726:5:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "733:42:5",
																						"nodeType": "YulLiteral",
																						"src": "733:42:5",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "722:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "722:3:5"
																				},
																				"nativeSrc": "722:54:5",
																				"nodeType": "YulFunctionCall",
																				"src": "722:54:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "712:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "712:2:5"
																		},
																		"nativeSrc": "712:65:5",
																		"nodeType": "YulFunctionCall",
																		"src": "712:65:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "705:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "705:6:5"
																},
																"nativeSrc": "705:73:5",
																"nodeType": "YulFunctionCall",
																"src": "705:73:5"
															},
															"nativeSrc": "702:93:5",
															"nodeType": "YulIf",
															"src": "702:93:5"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "605:196:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "633:6:5",
														"nodeType": "YulTypedName",
														"src": "633:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "644:5:5",
														"nodeType": "YulTypedName",
														"src": "644:5:5",
														"type": ""
													}
												],
												"src": "605:196:5"
											},
											{
												"body": {
													"nativeSrc": "893:213:5",
													"nodeType": "YulBlock",
													"src": "893:213:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "939:16:5",
																"nodeType": "YulBlock",
																"src": "939:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "948:1:5",
																					"nodeType": "YulLiteral",
																					"src": "948:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "951:1:5",
																					"nodeType": "YulLiteral",
																					"src": "951:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "941:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "941:6:5"
																			},
																			"nativeSrc": "941:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "941:12:5"
																		},
																		"nativeSrc": "941:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "941:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "914:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "914:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "923:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "923:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "910:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "910:3:5"
																		},
																		"nativeSrc": "910:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "910:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "935:2:5",
																		"nodeType": "YulLiteral",
																		"src": "935:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "906:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "906:3:5"
																},
																"nativeSrc": "906:32:5",
																"nodeType": "YulFunctionCall",
																"src": "906:32:5"
															},
															"nativeSrc": "903:52:5",
															"nodeType": "YulIf",
															"src": "903:52:5"
														},
														{
															"nativeSrc": "964:39:5",
															"nodeType": "YulAssignment",
															"src": "964:39:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "993:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "993:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "974:18:5",
																	"nodeType": "YulIdentifier",
																	"src": "974:18:5"
																},
																"nativeSrc": "974:29:5",
																"nodeType": "YulFunctionCall",
																"src": "974:29:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "964:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "964:6:5"
																}
															]
														},
														{
															"nativeSrc": "1012:14:5",
															"nodeType": "YulVariableDeclaration",
															"src": "1012:14:5",
															"value": {
																"kind": "number",
																"nativeSrc": "1025:1:5",
																"nodeType": "YulLiteral",
																"src": "1025:1:5",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1016:5:5",
																	"nodeType": "YulTypedName",
																	"src": "1016:5:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1035:41:5",
															"nodeType": "YulAssignment",
															"src": "1035:41:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1061:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1061:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1072:2:5",
																				"nodeType": "YulLiteral",
																				"src": "1072:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1057:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1057:3:5"
																		},
																		"nativeSrc": "1057:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1057:18:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1044:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "1044:12:5"
																},
																"nativeSrc": "1044:32:5",
																"nodeType": "YulFunctionCall",
																"src": "1044:32:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1035:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "1035:5:5"
																}
															]
														},
														{
															"nativeSrc": "1085:15:5",
															"nodeType": "YulAssignment",
															"src": "1085:15:5",
															"value": {
																"name": "value",
																"nativeSrc": "1095:5:5",
																"nodeType": "YulIdentifier",
																"src": "1095:5:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1085:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1085:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "806:300:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "851:9:5",
														"nodeType": "YulTypedName",
														"src": "851:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "862:7:5",
														"nodeType": "YulTypedName",
														"src": "862:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "874:6:5",
														"nodeType": "YulTypedName",
														"src": "874:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "882:6:5",
														"nodeType": "YulTypedName",
														"src": "882:6:5",
														"type": ""
													}
												],
												"src": "806:300:5"
											},
											{
												"body": {
													"nativeSrc": "1206:92:5",
													"nodeType": "YulBlock",
													"src": "1206:92:5",
													"statements": [
														{
															"nativeSrc": "1216:26:5",
															"nodeType": "YulAssignment",
															"src": "1216:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1228:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "1228:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1239:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1239:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1224:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1224:3:5"
																},
																"nativeSrc": "1224:18:5",
																"nodeType": "YulFunctionCall",
																"src": "1224:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1216:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "1216:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1258:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "1258:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "1283:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "1283:6:5"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "1276:6:5",
																					"nodeType": "YulIdentifier",
																					"src": "1276:6:5"
																				},
																				"nativeSrc": "1276:14:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1276:14:5"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1269:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "1269:6:5"
																		},
																		"nativeSrc": "1269:22:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1269:22:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1251:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1251:6:5"
																},
																"nativeSrc": "1251:41:5",
																"nodeType": "YulFunctionCall",
																"src": "1251:41:5"
															},
															"nativeSrc": "1251:41:5",
															"nodeType": "YulExpressionStatement",
															"src": "1251:41:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1111:187:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1175:9:5",
														"nodeType": "YulTypedName",
														"src": "1175:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1186:6:5",
														"nodeType": "YulTypedName",
														"src": "1186:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1197:4:5",
														"nodeType": "YulTypedName",
														"src": "1197:4:5",
														"type": ""
													}
												],
												"src": "1111:187:5"
											},
											{
												"body": {
													"nativeSrc": "1404:76:5",
													"nodeType": "YulBlock",
													"src": "1404:76:5",
													"statements": [
														{
															"nativeSrc": "1414:26:5",
															"nodeType": "YulAssignment",
															"src": "1414:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1426:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "1426:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1437:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1437:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1422:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1422:3:5"
																},
																"nativeSrc": "1422:18:5",
																"nodeType": "YulFunctionCall",
																"src": "1422:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1414:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "1414:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1456:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "1456:9:5"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "1467:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "1467:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1449:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1449:6:5"
																},
																"nativeSrc": "1449:25:5",
																"nodeType": "YulFunctionCall",
																"src": "1449:25:5"
															},
															"nativeSrc": "1449:25:5",
															"nodeType": "YulExpressionStatement",
															"src": "1449:25:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1303:177:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1373:9:5",
														"nodeType": "YulTypedName",
														"src": "1373:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1384:6:5",
														"nodeType": "YulTypedName",
														"src": "1384:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1395:4:5",
														"nodeType": "YulTypedName",
														"src": "1395:4:5",
														"type": ""
													}
												],
												"src": "1303:177:5"
											},
											{
												"body": {
													"nativeSrc": "1589:270:5",
													"nodeType": "YulBlock",
													"src": "1589:270:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "1635:16:5",
																"nodeType": "YulBlock",
																"src": "1635:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1644:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1644:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1647:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1647:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1637:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1637:6:5"
																			},
																			"nativeSrc": "1637:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1637:12:5"
																		},
																		"nativeSrc": "1637:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1637:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1610:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "1610:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1619:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1619:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1606:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1606:3:5"
																		},
																		"nativeSrc": "1606:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1606:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1631:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1631:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1602:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1602:3:5"
																},
																"nativeSrc": "1602:32:5",
																"nodeType": "YulFunctionCall",
																"src": "1602:32:5"
															},
															"nativeSrc": "1599:52:5",
															"nodeType": "YulIf",
															"src": "1599:52:5"
														},
														{
															"nativeSrc": "1660:39:5",
															"nodeType": "YulAssignment",
															"src": "1660:39:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1689:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "1689:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1670:18:5",
																	"nodeType": "YulIdentifier",
																	"src": "1670:18:5"
																},
																"nativeSrc": "1670:29:5",
																"nodeType": "YulFunctionCall",
																"src": "1670:29:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1660:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1660:6:5"
																}
															]
														},
														{
															"nativeSrc": "1708:48:5",
															"nodeType": "YulAssignment",
															"src": "1708:48:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1741:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1741:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1752:2:5",
																				"nodeType": "YulLiteral",
																				"src": "1752:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1737:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1737:3:5"
																		},
																		"nativeSrc": "1737:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1737:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1718:18:5",
																	"nodeType": "YulIdentifier",
																	"src": "1718:18:5"
																},
																"nativeSrc": "1718:38:5",
																"nodeType": "YulFunctionCall",
																"src": "1718:38:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1708:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1708:6:5"
																}
															]
														},
														{
															"nativeSrc": "1765:14:5",
															"nodeType": "YulVariableDeclaration",
															"src": "1765:14:5",
															"value": {
																"kind": "number",
																"nativeSrc": "1778:1:5",
																"nodeType": "YulLiteral",
																"src": "1778:1:5",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1769:5:5",
																	"nodeType": "YulTypedName",
																	"src": "1769:5:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1788:41:5",
															"nodeType": "YulAssignment",
															"src": "1788:41:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1814:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1814:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1825:2:5",
																				"nodeType": "YulLiteral",
																				"src": "1825:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1810:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1810:3:5"
																		},
																		"nativeSrc": "1810:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1810:18:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1797:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "1797:12:5"
																},
																"nativeSrc": "1797:32:5",
																"nodeType": "YulFunctionCall",
																"src": "1797:32:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1788:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "1788:5:5"
																}
															]
														},
														{
															"nativeSrc": "1838:15:5",
															"nodeType": "YulAssignment",
															"src": "1838:15:5",
															"value": {
																"name": "value",
																"nativeSrc": "1848:5:5",
																"nodeType": "YulIdentifier",
																"src": "1848:5:5"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "1838:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1838:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "1485:374:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1539:9:5",
														"nodeType": "YulTypedName",
														"src": "1539:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1550:7:5",
														"nodeType": "YulTypedName",
														"src": "1550:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1562:6:5",
														"nodeType": "YulTypedName",
														"src": "1562:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1570:6:5",
														"nodeType": "YulTypedName",
														"src": "1570:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1578:6:5",
														"nodeType": "YulTypedName",
														"src": "1578:6:5",
														"type": ""
													}
												],
												"src": "1485:374:5"
											},
											{
												"body": {
													"nativeSrc": "1961:87:5",
													"nodeType": "YulBlock",
													"src": "1961:87:5",
													"statements": [
														{
															"nativeSrc": "1971:26:5",
															"nodeType": "YulAssignment",
															"src": "1971:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1983:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "1983:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1994:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1994:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1979:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1979:3:5"
																},
																"nativeSrc": "1979:18:5",
																"nodeType": "YulFunctionCall",
																"src": "1979:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1971:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "1971:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2013:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "2013:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2028:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "2028:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2036:4:5",
																				"nodeType": "YulLiteral",
																				"src": "2036:4:5",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2024:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2024:3:5"
																		},
																		"nativeSrc": "2024:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2024:17:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2006:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2006:6:5"
																},
																"nativeSrc": "2006:36:5",
																"nodeType": "YulFunctionCall",
																"src": "2006:36:5"
															},
															"nativeSrc": "2006:36:5",
															"nodeType": "YulExpressionStatement",
															"src": "2006:36:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "1864:184:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1930:9:5",
														"nodeType": "YulTypedName",
														"src": "1930:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1941:6:5",
														"nodeType": "YulTypedName",
														"src": "1941:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1952:4:5",
														"nodeType": "YulTypedName",
														"src": "1952:4:5",
														"type": ""
													}
												],
												"src": "1864:184:5"
											},
											{
												"body": {
													"nativeSrc": "2123:116:5",
													"nodeType": "YulBlock",
													"src": "2123:116:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "2169:16:5",
																"nodeType": "YulBlock",
																"src": "2169:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2178:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2178:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2181:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2181:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2171:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "2171:6:5"
																			},
																			"nativeSrc": "2171:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2171:12:5"
																		},
																		"nativeSrc": "2171:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "2171:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2144:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "2144:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2153:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "2153:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2140:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2140:3:5"
																		},
																		"nativeSrc": "2140:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2140:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2165:2:5",
																		"nodeType": "YulLiteral",
																		"src": "2165:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2136:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2136:3:5"
																},
																"nativeSrc": "2136:32:5",
																"nodeType": "YulFunctionCall",
																"src": "2136:32:5"
															},
															"nativeSrc": "2133:52:5",
															"nodeType": "YulIf",
															"src": "2133:52:5"
														},
														{
															"nativeSrc": "2194:39:5",
															"nodeType": "YulAssignment",
															"src": "2194:39:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2223:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "2223:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2204:18:5",
																	"nodeType": "YulIdentifier",
																	"src": "2204:18:5"
																},
																"nativeSrc": "2204:29:5",
																"nodeType": "YulFunctionCall",
																"src": "2204:29:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2194:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2194:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "2053:186:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2089:9:5",
														"nodeType": "YulTypedName",
														"src": "2089:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2100:7:5",
														"nodeType": "YulTypedName",
														"src": "2100:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2112:6:5",
														"nodeType": "YulTypedName",
														"src": "2112:6:5",
														"type": ""
													}
												],
												"src": "2053:186:5"
											},
											{
												"body": {
													"nativeSrc": "2331:173:5",
													"nodeType": "YulBlock",
													"src": "2331:173:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "2377:16:5",
																"nodeType": "YulBlock",
																"src": "2377:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2386:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2386:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2389:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2389:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2379:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "2379:6:5"
																			},
																			"nativeSrc": "2379:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2379:12:5"
																		},
																		"nativeSrc": "2379:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "2379:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2352:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "2352:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2361:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "2361:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2348:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2348:3:5"
																		},
																		"nativeSrc": "2348:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2348:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2373:2:5",
																		"nodeType": "YulLiteral",
																		"src": "2373:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2344:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2344:3:5"
																},
																"nativeSrc": "2344:32:5",
																"nodeType": "YulFunctionCall",
																"src": "2344:32:5"
															},
															"nativeSrc": "2341:52:5",
															"nodeType": "YulIf",
															"src": "2341:52:5"
														},
														{
															"nativeSrc": "2402:39:5",
															"nodeType": "YulAssignment",
															"src": "2402:39:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2431:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "2431:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2412:18:5",
																	"nodeType": "YulIdentifier",
																	"src": "2412:18:5"
																},
																"nativeSrc": "2412:29:5",
																"nodeType": "YulFunctionCall",
																"src": "2412:29:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2402:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2402:6:5"
																}
															]
														},
														{
															"nativeSrc": "2450:48:5",
															"nodeType": "YulAssignment",
															"src": "2450:48:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2483:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "2483:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2494:2:5",
																				"nodeType": "YulLiteral",
																				"src": "2494:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2479:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2479:3:5"
																		},
																		"nativeSrc": "2479:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2479:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2460:18:5",
																	"nodeType": "YulIdentifier",
																	"src": "2460:18:5"
																},
																"nativeSrc": "2460:38:5",
																"nodeType": "YulFunctionCall",
																"src": "2460:38:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2450:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2450:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "2244:260:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2289:9:5",
														"nodeType": "YulTypedName",
														"src": "2289:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2300:7:5",
														"nodeType": "YulTypedName",
														"src": "2300:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2312:6:5",
														"nodeType": "YulTypedName",
														"src": "2312:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2320:6:5",
														"nodeType": "YulTypedName",
														"src": "2320:6:5",
														"type": ""
													}
												],
												"src": "2244:260:5"
											},
											{
												"body": {
													"nativeSrc": "2564:382:5",
													"nodeType": "YulBlock",
													"src": "2564:382:5",
													"statements": [
														{
															"nativeSrc": "2574:22:5",
															"nodeType": "YulAssignment",
															"src": "2574:22:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2588:1:5",
																		"nodeType": "YulLiteral",
																		"src": "2588:1:5",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "2591:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "2591:4:5"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "2584:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2584:3:5"
																},
																"nativeSrc": "2584:12:5",
																"nodeType": "YulFunctionCall",
																"src": "2584:12:5"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "2574:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2574:6:5"
																}
															]
														},
														{
															"nativeSrc": "2605:38:5",
															"nodeType": "YulVariableDeclaration",
															"src": "2605:38:5",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "2635:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "2635:4:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2641:1:5",
																		"nodeType": "YulLiteral",
																		"src": "2641:1:5",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2631:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2631:3:5"
																},
																"nativeSrc": "2631:12:5",
																"nodeType": "YulFunctionCall",
																"src": "2631:12:5"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "2609:18:5",
																	"nodeType": "YulTypedName",
																	"src": "2609:18:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2682:31:5",
																"nodeType": "YulBlock",
																"src": "2682:31:5",
																"statements": [
																	{
																		"nativeSrc": "2684:27:5",
																		"nodeType": "YulAssignment",
																		"src": "2684:27:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "2698:6:5",
																					"nodeType": "YulIdentifier",
																					"src": "2698:6:5"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2706:4:5",
																					"nodeType": "YulLiteral",
																					"src": "2706:4:5",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "2694:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "2694:3:5"
																			},
																			"nativeSrc": "2694:17:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2694:17:5"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "2684:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "2684:6:5"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2662:18:5",
																		"nodeType": "YulIdentifier",
																		"src": "2662:18:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2655:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2655:6:5"
																},
																"nativeSrc": "2655:26:5",
																"nodeType": "YulFunctionCall",
																"src": "2655:26:5"
															},
															"nativeSrc": "2652:61:5",
															"nodeType": "YulIf",
															"src": "2652:61:5"
														},
														{
															"body": {
																"nativeSrc": "2772:168:5",
																"nodeType": "YulBlock",
																"src": "2772:168:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2793:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2793:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2796:77:5",
																					"nodeType": "YulLiteral",
																					"src": "2796:77:5",
																					"type": "",
																					"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2786:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "2786:6:5"
																			},
																			"nativeSrc": "2786:88:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2786:88:5"
																		},
																		"nativeSrc": "2786:88:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "2786:88:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2894:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2894:1:5",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2897:4:5",
																					"nodeType": "YulLiteral",
																					"src": "2897:4:5",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2887:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "2887:6:5"
																			},
																			"nativeSrc": "2887:15:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2887:15:5"
																		},
																		"nativeSrc": "2887:15:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "2887:15:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2922:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2922:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2925:4:5",
																					"nodeType": "YulLiteral",
																					"src": "2925:4:5",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2915:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "2915:6:5"
																			},
																			"nativeSrc": "2915:15:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2915:15:5"
																		},
																		"nativeSrc": "2915:15:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "2915:15:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2728:18:5",
																		"nodeType": "YulIdentifier",
																		"src": "2728:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2751:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "2751:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2759:2:5",
																				"nodeType": "YulLiteral",
																				"src": "2759:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "2748:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "2748:2:5"
																		},
																		"nativeSrc": "2748:14:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2748:14:5"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "2725:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "2725:2:5"
																},
																"nativeSrc": "2725:38:5",
																"nodeType": "YulFunctionCall",
																"src": "2725:38:5"
															},
															"nativeSrc": "2722:218:5",
															"nodeType": "YulIf",
															"src": "2722:218:5"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "2509:437:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "2544:4:5",
														"nodeType": "YulTypedName",
														"src": "2544:4:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "2553:6:5",
														"nodeType": "YulTypedName",
														"src": "2553:6:5",
														"type": ""
													}
												],
												"src": "2509:437:5"
											},
											{
												"body": {
													"nativeSrc": "2999:231:5",
													"nodeType": "YulBlock",
													"src": "2999:231:5",
													"statements": [
														{
															"nativeSrc": "3009:16:5",
															"nodeType": "YulAssignment",
															"src": "3009:16:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3020:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "3020:1:5"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "3023:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "3023:1:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3016:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3016:3:5"
																},
																"nativeSrc": "3016:9:5",
																"nodeType": "YulFunctionCall",
																"src": "3016:9:5"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "3009:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3009:3:5"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3056:168:5",
																"nodeType": "YulBlock",
																"src": "3056:168:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3077:1:5",
																					"nodeType": "YulLiteral",
																					"src": "3077:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3080:77:5",
																					"nodeType": "YulLiteral",
																					"src": "3080:77:5",
																					"type": "",
																					"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3070:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "3070:6:5"
																			},
																			"nativeSrc": "3070:88:5",
																			"nodeType": "YulFunctionCall",
																			"src": "3070:88:5"
																		},
																		"nativeSrc": "3070:88:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "3070:88:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3178:1:5",
																					"nodeType": "YulLiteral",
																					"src": "3178:1:5",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3181:4:5",
																					"nodeType": "YulLiteral",
																					"src": "3181:4:5",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3171:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "3171:6:5"
																			},
																			"nativeSrc": "3171:15:5",
																			"nodeType": "YulFunctionCall",
																			"src": "3171:15:5"
																		},
																		"nativeSrc": "3171:15:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "3171:15:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3206:1:5",
																					"nodeType": "YulLiteral",
																					"src": "3206:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3209:4:5",
																					"nodeType": "YulLiteral",
																					"src": "3209:4:5",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3199:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "3199:6:5"
																			},
																			"nativeSrc": "3199:15:5",
																			"nodeType": "YulFunctionCall",
																			"src": "3199:15:5"
																		},
																		"nativeSrc": "3199:15:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "3199:15:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3040:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "3040:1:5"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "3043:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "3043:3:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3037:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "3037:2:5"
																},
																"nativeSrc": "3037:10:5",
																"nodeType": "YulFunctionCall",
																"src": "3037:10:5"
															},
															"nativeSrc": "3034:190:5",
															"nodeType": "YulIf",
															"src": "3034:190:5"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "2951:279:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "2982:1:5",
														"nodeType": "YulTypedName",
														"src": "2982:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "2985:1:5",
														"nodeType": "YulTypedName",
														"src": "2985:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "2991:3:5",
														"nodeType": "YulTypedName",
														"src": "2991:3:5",
														"type": ""
													}
												],
												"src": "2951:279:5"
											},
											{
												"body": {
													"nativeSrc": "3409:227:5",
													"nodeType": "YulBlock",
													"src": "3409:227:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3426:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "3426:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3437:2:5",
																		"nodeType": "YulLiteral",
																		"src": "3437:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3419:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3419:6:5"
																},
																"nativeSrc": "3419:21:5",
																"nodeType": "YulFunctionCall",
																"src": "3419:21:5"
															},
															"nativeSrc": "3419:21:5",
															"nodeType": "YulExpressionStatement",
															"src": "3419:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3460:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3460:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3471:2:5",
																				"nodeType": "YulLiteral",
																				"src": "3471:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3456:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3456:3:5"
																		},
																		"nativeSrc": "3456:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3456:18:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3476:2:5",
																		"nodeType": "YulLiteral",
																		"src": "3476:2:5",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3449:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3449:6:5"
																},
																"nativeSrc": "3449:30:5",
																"nodeType": "YulFunctionCall",
																"src": "3449:30:5"
															},
															"nativeSrc": "3449:30:5",
															"nodeType": "YulExpressionStatement",
															"src": "3449:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3499:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3499:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3510:2:5",
																				"nodeType": "YulLiteral",
																				"src": "3510:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3495:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3495:3:5"
																		},
																		"nativeSrc": "3495:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3495:18:5"
																	},
																	{
																		"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77",
																		"kind": "string",
																		"nativeSrc": "3515:34:5",
																		"nodeType": "YulLiteral",
																		"src": "3515:34:5",
																		"type": "",
																		"value": "ERC20: decreased allowance below"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3488:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3488:6:5"
																},
																"nativeSrc": "3488:62:5",
																"nodeType": "YulFunctionCall",
																"src": "3488:62:5"
															},
															"nativeSrc": "3488:62:5",
															"nodeType": "YulExpressionStatement",
															"src": "3488:62:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3570:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3570:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3581:2:5",
																				"nodeType": "YulLiteral",
																				"src": "3581:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3566:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3566:3:5"
																		},
																		"nativeSrc": "3566:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3566:18:5"
																	},
																	{
																		"hexValue": "207a65726f",
																		"kind": "string",
																		"nativeSrc": "3586:7:5",
																		"nodeType": "YulLiteral",
																		"src": "3586:7:5",
																		"type": "",
																		"value": " zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3559:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3559:6:5"
																},
																"nativeSrc": "3559:35:5",
																"nodeType": "YulFunctionCall",
																"src": "3559:35:5"
															},
															"nativeSrc": "3559:35:5",
															"nodeType": "YulExpressionStatement",
															"src": "3559:35:5"
														},
														{
															"nativeSrc": "3603:27:5",
															"nodeType": "YulAssignment",
															"src": "3603:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3615:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "3615:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3626:3:5",
																		"nodeType": "YulLiteral",
																		"src": "3626:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3611:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3611:3:5"
																},
																"nativeSrc": "3611:19:5",
																"nodeType": "YulFunctionCall",
																"src": "3611:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3603:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "3603:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3235:401:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3386:9:5",
														"nodeType": "YulTypedName",
														"src": "3386:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3400:4:5",
														"nodeType": "YulTypedName",
														"src": "3400:4:5",
														"type": ""
													}
												],
												"src": "3235:401:5"
											},
											{
												"body": {
													"nativeSrc": "3815:226:5",
													"nodeType": "YulBlock",
													"src": "3815:226:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3832:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "3832:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3843:2:5",
																		"nodeType": "YulLiteral",
																		"src": "3843:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3825:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3825:6:5"
																},
																"nativeSrc": "3825:21:5",
																"nodeType": "YulFunctionCall",
																"src": "3825:21:5"
															},
															"nativeSrc": "3825:21:5",
															"nodeType": "YulExpressionStatement",
															"src": "3825:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3866:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3866:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3877:2:5",
																				"nodeType": "YulLiteral",
																				"src": "3877:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3862:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3862:3:5"
																		},
																		"nativeSrc": "3862:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3862:18:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3882:2:5",
																		"nodeType": "YulLiteral",
																		"src": "3882:2:5",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3855:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3855:6:5"
																},
																"nativeSrc": "3855:30:5",
																"nodeType": "YulFunctionCall",
																"src": "3855:30:5"
															},
															"nativeSrc": "3855:30:5",
															"nodeType": "YulExpressionStatement",
															"src": "3855:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3905:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3905:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3916:2:5",
																				"nodeType": "YulLiteral",
																				"src": "3916:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3901:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3901:3:5"
																		},
																		"nativeSrc": "3901:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3901:18:5"
																	},
																	{
																		"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
																		"kind": "string",
																		"nativeSrc": "3921:34:5",
																		"nodeType": "YulLiteral",
																		"src": "3921:34:5",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3894:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3894:6:5"
																},
																"nativeSrc": "3894:62:5",
																"nodeType": "YulFunctionCall",
																"src": "3894:62:5"
															},
															"nativeSrc": "3894:62:5",
															"nodeType": "YulExpressionStatement",
															"src": "3894:62:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3976:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3976:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3987:2:5",
																				"nodeType": "YulLiteral",
																				"src": "3987:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3972:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3972:3:5"
																		},
																		"nativeSrc": "3972:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3972:18:5"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nativeSrc": "3992:6:5",
																		"nodeType": "YulLiteral",
																		"src": "3992:6:5",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3965:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3965:6:5"
																},
																"nativeSrc": "3965:34:5",
																"nodeType": "YulFunctionCall",
																"src": "3965:34:5"
															},
															"nativeSrc": "3965:34:5",
															"nodeType": "YulExpressionStatement",
															"src": "3965:34:5"
														},
														{
															"nativeSrc": "4008:27:5",
															"nodeType": "YulAssignment",
															"src": "4008:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4020:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "4020:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4031:3:5",
																		"nodeType": "YulLiteral",
																		"src": "4031:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4016:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4016:3:5"
																},
																"nativeSrc": "4016:19:5",
																"nodeType": "YulFunctionCall",
																"src": "4016:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4008:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "4008:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3641:400:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3792:9:5",
														"nodeType": "YulTypedName",
														"src": "3792:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3806:4:5",
														"nodeType": "YulTypedName",
														"src": "3806:4:5",
														"type": ""
													}
												],
												"src": "3641:400:5"
											},
											{
												"body": {
													"nativeSrc": "4220:224:5",
													"nodeType": "YulBlock",
													"src": "4220:224:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4237:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "4237:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4248:2:5",
																		"nodeType": "YulLiteral",
																		"src": "4248:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4230:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4230:6:5"
																},
																"nativeSrc": "4230:21:5",
																"nodeType": "YulFunctionCall",
																"src": "4230:21:5"
															},
															"nativeSrc": "4230:21:5",
															"nodeType": "YulExpressionStatement",
															"src": "4230:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4271:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "4271:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4282:2:5",
																				"nodeType": "YulLiteral",
																				"src": "4282:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4267:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4267:3:5"
																		},
																		"nativeSrc": "4267:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4267:18:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4287:2:5",
																		"nodeType": "YulLiteral",
																		"src": "4287:2:5",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4260:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4260:6:5"
																},
																"nativeSrc": "4260:30:5",
																"nodeType": "YulFunctionCall",
																"src": "4260:30:5"
															},
															"nativeSrc": "4260:30:5",
															"nodeType": "YulExpressionStatement",
															"src": "4260:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4310:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "4310:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4321:2:5",
																				"nodeType": "YulLiteral",
																				"src": "4321:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4306:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4306:3:5"
																		},
																		"nativeSrc": "4306:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4306:18:5"
																	},
																	{
																		"hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
																		"kind": "string",
																		"nativeSrc": "4326:34:5",
																		"nodeType": "YulLiteral",
																		"src": "4326:34:5",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4299:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4299:6:5"
																},
																"nativeSrc": "4299:62:5",
																"nodeType": "YulFunctionCall",
																"src": "4299:62:5"
															},
															"nativeSrc": "4299:62:5",
															"nodeType": "YulExpressionStatement",
															"src": "4299:62:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4381:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "4381:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4392:2:5",
																				"nodeType": "YulLiteral",
																				"src": "4392:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4377:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4377:3:5"
																		},
																		"nativeSrc": "4377:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4377:18:5"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nativeSrc": "4397:4:5",
																		"nodeType": "YulLiteral",
																		"src": "4397:4:5",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4370:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4370:6:5"
																},
																"nativeSrc": "4370:32:5",
																"nodeType": "YulFunctionCall",
																"src": "4370:32:5"
															},
															"nativeSrc": "4370:32:5",
															"nodeType": "YulExpressionStatement",
															"src": "4370:32:5"
														},
														{
															"nativeSrc": "4411:27:5",
															"nodeType": "YulAssignment",
															"src": "4411:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4423:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "4423:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4434:3:5",
																		"nodeType": "YulLiteral",
																		"src": "4434:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4419:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4419:3:5"
																},
																"nativeSrc": "4419:19:5",
																"nodeType": "YulFunctionCall",
																"src": "4419:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4411:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "4411:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4046:398:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4197:9:5",
														"nodeType": "YulTypedName",
														"src": "4197:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4211:4:5",
														"nodeType": "YulTypedName",
														"src": "4211:4:5",
														"type": ""
													}
												],
												"src": "4046:398:5"
											},
											{
												"body": {
													"nativeSrc": "4623:179:5",
													"nodeType": "YulBlock",
													"src": "4623:179:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4640:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "4640:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4651:2:5",
																		"nodeType": "YulLiteral",
																		"src": "4651:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4633:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4633:6:5"
																},
																"nativeSrc": "4633:21:5",
																"nodeType": "YulFunctionCall",
																"src": "4633:21:5"
															},
															"nativeSrc": "4633:21:5",
															"nodeType": "YulExpressionStatement",
															"src": "4633:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4674:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "4674:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4685:2:5",
																				"nodeType": "YulLiteral",
																				"src": "4685:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4670:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4670:3:5"
																		},
																		"nativeSrc": "4670:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4670:18:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4690:2:5",
																		"nodeType": "YulLiteral",
																		"src": "4690:2:5",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4663:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4663:6:5"
																},
																"nativeSrc": "4663:30:5",
																"nodeType": "YulFunctionCall",
																"src": "4663:30:5"
															},
															"nativeSrc": "4663:30:5",
															"nodeType": "YulExpressionStatement",
															"src": "4663:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4713:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "4713:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4724:2:5",
																				"nodeType": "YulLiteral",
																				"src": "4724:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4709:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4709:3:5"
																		},
																		"nativeSrc": "4709:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4709:18:5"
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"kind": "string",
																		"nativeSrc": "4729:31:5",
																		"nodeType": "YulLiteral",
																		"src": "4729:31:5",
																		"type": "",
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4702:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4702:6:5"
																},
																"nativeSrc": "4702:59:5",
																"nodeType": "YulFunctionCall",
																"src": "4702:59:5"
															},
															"nativeSrc": "4702:59:5",
															"nodeType": "YulExpressionStatement",
															"src": "4702:59:5"
														},
														{
															"nativeSrc": "4770:26:5",
															"nodeType": "YulAssignment",
															"src": "4770:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4782:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "4782:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4793:2:5",
																		"nodeType": "YulLiteral",
																		"src": "4793:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4778:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4778:3:5"
																},
																"nativeSrc": "4778:18:5",
																"nodeType": "YulFunctionCall",
																"src": "4778:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4770:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "4770:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4449:353:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4600:9:5",
														"nodeType": "YulTypedName",
														"src": "4600:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4614:4:5",
														"nodeType": "YulTypedName",
														"src": "4614:4:5",
														"type": ""
													}
												],
												"src": "4449:353:5"
											},
											{
												"body": {
													"nativeSrc": "4981:227:5",
													"nodeType": "YulBlock",
													"src": "4981:227:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4998:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "4998:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5009:2:5",
																		"nodeType": "YulLiteral",
																		"src": "5009:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4991:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4991:6:5"
																},
																"nativeSrc": "4991:21:5",
																"nodeType": "YulFunctionCall",
																"src": "4991:21:5"
															},
															"nativeSrc": "4991:21:5",
															"nodeType": "YulExpressionStatement",
															"src": "4991:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5032:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "5032:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5043:2:5",
																				"nodeType": "YulLiteral",
																				"src": "5043:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5028:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5028:3:5"
																		},
																		"nativeSrc": "5028:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5028:18:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5048:2:5",
																		"nodeType": "YulLiteral",
																		"src": "5048:2:5",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5021:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5021:6:5"
																},
																"nativeSrc": "5021:30:5",
																"nodeType": "YulFunctionCall",
																"src": "5021:30:5"
															},
															"nativeSrc": "5021:30:5",
															"nodeType": "YulExpressionStatement",
															"src": "5021:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5071:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "5071:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5082:2:5",
																				"nodeType": "YulLiteral",
																				"src": "5082:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5067:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5067:3:5"
																		},
																		"nativeSrc": "5067:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5067:18:5"
																	},
																	{
																		"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nativeSrc": "5087:34:5",
																		"nodeType": "YulLiteral",
																		"src": "5087:34:5",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5060:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5060:6:5"
																},
																"nativeSrc": "5060:62:5",
																"nodeType": "YulFunctionCall",
																"src": "5060:62:5"
															},
															"nativeSrc": "5060:62:5",
															"nodeType": "YulExpressionStatement",
															"src": "5060:62:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5142:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "5142:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5153:2:5",
																				"nodeType": "YulLiteral",
																				"src": "5153:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5138:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5138:3:5"
																		},
																		"nativeSrc": "5138:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5138:18:5"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nativeSrc": "5158:7:5",
																		"nodeType": "YulLiteral",
																		"src": "5158:7:5",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5131:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5131:6:5"
																},
																"nativeSrc": "5131:35:5",
																"nodeType": "YulFunctionCall",
																"src": "5131:35:5"
															},
															"nativeSrc": "5131:35:5",
															"nodeType": "YulExpressionStatement",
															"src": "5131:35:5"
														},
														{
															"nativeSrc": "5175:27:5",
															"nodeType": "YulAssignment",
															"src": "5175:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5187:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "5187:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5198:3:5",
																		"nodeType": "YulLiteral",
																		"src": "5198:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5183:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5183:3:5"
																},
																"nativeSrc": "5183:19:5",
																"nodeType": "YulFunctionCall",
																"src": "5183:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5175:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "5175:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4807:401:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4958:9:5",
														"nodeType": "YulTypedName",
														"src": "4958:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4972:4:5",
														"nodeType": "YulTypedName",
														"src": "4972:4:5",
														"type": ""
													}
												],
												"src": "4807:401:5"
											},
											{
												"body": {
													"nativeSrc": "5387:225:5",
													"nodeType": "YulBlock",
													"src": "5387:225:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5404:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "5404:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5415:2:5",
																		"nodeType": "YulLiteral",
																		"src": "5415:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5397:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5397:6:5"
																},
																"nativeSrc": "5397:21:5",
																"nodeType": "YulFunctionCall",
																"src": "5397:21:5"
															},
															"nativeSrc": "5397:21:5",
															"nodeType": "YulExpressionStatement",
															"src": "5397:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5438:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "5438:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5449:2:5",
																				"nodeType": "YulLiteral",
																				"src": "5449:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5434:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5434:3:5"
																		},
																		"nativeSrc": "5434:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5434:18:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5454:2:5",
																		"nodeType": "YulLiteral",
																		"src": "5454:2:5",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5427:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5427:6:5"
																},
																"nativeSrc": "5427:30:5",
																"nodeType": "YulFunctionCall",
																"src": "5427:30:5"
															},
															"nativeSrc": "5427:30:5",
															"nodeType": "YulExpressionStatement",
															"src": "5427:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5477:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "5477:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5488:2:5",
																				"nodeType": "YulLiteral",
																				"src": "5488:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5473:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5473:3:5"
																		},
																		"nativeSrc": "5473:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5473:18:5"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nativeSrc": "5493:34:5",
																		"nodeType": "YulLiteral",
																		"src": "5493:34:5",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5466:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5466:6:5"
																},
																"nativeSrc": "5466:62:5",
																"nodeType": "YulFunctionCall",
																"src": "5466:62:5"
															},
															"nativeSrc": "5466:62:5",
															"nodeType": "YulExpressionStatement",
															"src": "5466:62:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5548:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "5548:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5559:2:5",
																				"nodeType": "YulLiteral",
																				"src": "5559:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5544:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5544:3:5"
																		},
																		"nativeSrc": "5544:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5544:18:5"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nativeSrc": "5564:5:5",
																		"nodeType": "YulLiteral",
																		"src": "5564:5:5",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5537:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5537:6:5"
																},
																"nativeSrc": "5537:33:5",
																"nodeType": "YulFunctionCall",
																"src": "5537:33:5"
															},
															"nativeSrc": "5537:33:5",
															"nodeType": "YulExpressionStatement",
															"src": "5537:33:5"
														},
														{
															"nativeSrc": "5579:27:5",
															"nodeType": "YulAssignment",
															"src": "5579:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5591:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "5591:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5602:3:5",
																		"nodeType": "YulLiteral",
																		"src": "5602:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5587:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5587:3:5"
																},
																"nativeSrc": "5587:19:5",
																"nodeType": "YulFunctionCall",
																"src": "5587:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5579:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "5579:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5213:399:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5364:9:5",
														"nodeType": "YulTypedName",
														"src": "5364:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5378:4:5",
														"nodeType": "YulTypedName",
														"src": "5378:4:5",
														"type": ""
													}
												],
												"src": "5213:399:5"
											},
											{
												"body": {
													"nativeSrc": "5791:228:5",
													"nodeType": "YulBlock",
													"src": "5791:228:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5808:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "5808:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5819:2:5",
																		"nodeType": "YulLiteral",
																		"src": "5819:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5801:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5801:6:5"
																},
																"nativeSrc": "5801:21:5",
																"nodeType": "YulFunctionCall",
																"src": "5801:21:5"
															},
															"nativeSrc": "5801:21:5",
															"nodeType": "YulExpressionStatement",
															"src": "5801:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5842:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "5842:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5853:2:5",
																				"nodeType": "YulLiteral",
																				"src": "5853:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5838:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5838:3:5"
																		},
																		"nativeSrc": "5838:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5838:18:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5858:2:5",
																		"nodeType": "YulLiteral",
																		"src": "5858:2:5",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5831:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5831:6:5"
																},
																"nativeSrc": "5831:30:5",
																"nodeType": "YulFunctionCall",
																"src": "5831:30:5"
															},
															"nativeSrc": "5831:30:5",
															"nodeType": "YulExpressionStatement",
															"src": "5831:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5881:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "5881:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5892:2:5",
																				"nodeType": "YulLiteral",
																				"src": "5892:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5877:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5877:3:5"
																		},
																		"nativeSrc": "5877:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5877:18:5"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
																		"kind": "string",
																		"nativeSrc": "5897:34:5",
																		"nodeType": "YulLiteral",
																		"src": "5897:34:5",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5870:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5870:6:5"
																},
																"nativeSrc": "5870:62:5",
																"nodeType": "YulFunctionCall",
																"src": "5870:62:5"
															},
															"nativeSrc": "5870:62:5",
															"nodeType": "YulExpressionStatement",
															"src": "5870:62:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5952:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "5952:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5963:2:5",
																				"nodeType": "YulLiteral",
																				"src": "5963:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5948:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5948:3:5"
																		},
																		"nativeSrc": "5948:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5948:18:5"
																	},
																	{
																		"hexValue": "616c616e6365",
																		"kind": "string",
																		"nativeSrc": "5968:8:5",
																		"nodeType": "YulLiteral",
																		"src": "5968:8:5",
																		"type": "",
																		"value": "alance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5941:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5941:6:5"
																},
																"nativeSrc": "5941:36:5",
																"nodeType": "YulFunctionCall",
																"src": "5941:36:5"
															},
															"nativeSrc": "5941:36:5",
															"nodeType": "YulExpressionStatement",
															"src": "5941:36:5"
														},
														{
															"nativeSrc": "5986:27:5",
															"nodeType": "YulAssignment",
															"src": "5986:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5998:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "5998:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6009:3:5",
																		"nodeType": "YulLiteral",
																		"src": "6009:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5994:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5994:3:5"
																},
																"nativeSrc": "5994:19:5",
																"nodeType": "YulFunctionCall",
																"src": "5994:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5986:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "5986:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5617:402:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5768:9:5",
														"nodeType": "YulTypedName",
														"src": "5768:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5782:4:5",
														"nodeType": "YulTypedName",
														"src": "5782:4:5",
														"type": ""
													}
												],
												"src": "5617:402:5"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), 32)))\n        }\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := 0\n        value := calldataload(add(headStart, 32))\n        value1 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let value := 0\n        value := calldataload(add(headStart, 64))\n        value2 := value\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20: insufficient allowance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n}",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100c95760003560e01c80633950935111610081578063a457c2d71161005b578063a457c2d714610194578063a9059cbb146101a7578063dd62ed3e146101ba57600080fd5b8063395093511461014357806370a082311461015657806395d89b411461018c57600080fd5b806318160ddd116100b257806318160ddd1461010f57806323b872dd14610121578063313ce5671461013457600080fd5b806306fdde03146100ce578063095ea7b3146100ec575b600080fd5b6100d6610200565b6040516100e3919061094c565b60405180910390f35b6100ff6100fa3660046109e1565b610292565b60405190151581526020016100e3565b6002545b6040519081526020016100e3565b6100ff61012f366004610a0b565b6102ac565b604051601281526020016100e3565b6100ff6101513660046109e1565b6102d0565b610113610164366004610a48565b73ffffffffffffffffffffffffffffffffffffffff1660009081526020819052604090205490565b6100d661031c565b6100ff6101a23660046109e1565b61032b565b6100ff6101b53660046109e1565b610401565b6101136101c8366004610a6a565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260016020908152604080832093909416825291909152205490565b60606003805461020f90610a9d565b80601f016020809104026020016040519081016040528092919081815260200182805461023b90610a9d565b80156102885780601f1061025d57610100808354040283529160200191610288565b820191906000526020600020905b81548152906001019060200180831161026b57829003601f168201915b5050505050905090565b6000336102a081858561040f565b60019150505b92915050565b6000336102ba8582856105c2565b6102c5858585610699565b506001949350505050565b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff871684529091528120549091906102a09082908690610317908790610af0565b61040f565b60606004805461020f90610a9d565b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff87168452909152812054909190838110156103f4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f00000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b6102c5828686840361040f565b6000336102a0818585610699565b73ffffffffffffffffffffffffffffffffffffffff83166104b1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f726573730000000000000000000000000000000000000000000000000000000060648201526084016103eb565b73ffffffffffffffffffffffffffffffffffffffff8216610554576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f737300000000000000000000000000000000000000000000000000000000000060648201526084016103eb565b73ffffffffffffffffffffffffffffffffffffffff83811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b73ffffffffffffffffffffffffffffffffffffffff8381166000908152600160209081526040808320938616835292905220547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146106935781811015610686576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016103eb565b610693848484840361040f565b50505050565b73ffffffffffffffffffffffffffffffffffffffff831661073c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f647265737300000000000000000000000000000000000000000000000000000060648201526084016103eb565b73ffffffffffffffffffffffffffffffffffffffff82166107df576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f657373000000000000000000000000000000000000000000000000000000000060648201526084016103eb565b73ffffffffffffffffffffffffffffffffffffffff831660009081526020819052604090205481811015610895576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e6365000000000000000000000000000000000000000000000000000060648201526084016103eb565b73ffffffffffffffffffffffffffffffffffffffff8085166000908152602081905260408082208585039055918516815290812080548492906108d9908490610af0565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161093f91815260200190565b60405180910390a3610693565b602081526000825180602084015260005b8181101561097a576020818601810151604086840101520161095d565b5060006040828501015260407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011684010191505092915050565b803573ffffffffffffffffffffffffffffffffffffffff811681146109dc57600080fd5b919050565b600080604083850312156109f457600080fd5b6109fd836109b8565b946020939093013593505050565b600080600060608486031215610a2057600080fd5b610a29846109b8565b9250610a37602085016109b8565b929592945050506040919091013590565b600060208284031215610a5a57600080fd5b610a63826109b8565b9392505050565b60008060408385031215610a7d57600080fd5b610a86836109b8565b9150610a94602084016109b8565b90509250929050565b600181811c90821680610ab157607f821691505b602082108103610aea577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b808201808211156102a6577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fdfea264697066735822122021197b2630561b2e04ce1b8ab43d8b18f5c661785e36d7abdfd6d2bc042f8d3764736f6c637828302e382e32382d6e696768746c792e323032342e31302e322b636f6d6d69742e32353665393532380059",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xC9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x81 JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x194 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1A7 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x1BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x39509351 EQ PUSH2 0x143 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x156 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x18C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0xB2 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x10F JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x121 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x134 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xCE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xEC JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD6 PUSH2 0x200 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE3 SWAP2 SWAP1 PUSH2 0x94C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xFF PUSH2 0xFA CALLDATASIZE PUSH1 0x4 PUSH2 0x9E1 JUMP JUMPDEST PUSH2 0x292 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE3 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE3 JUMP JUMPDEST PUSH2 0xFF PUSH2 0x12F CALLDATASIZE PUSH1 0x4 PUSH2 0xA0B JUMP JUMPDEST PUSH2 0x2AC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE3 JUMP JUMPDEST PUSH2 0xFF PUSH2 0x151 CALLDATASIZE PUSH1 0x4 PUSH2 0x9E1 JUMP JUMPDEST PUSH2 0x2D0 JUMP JUMPDEST PUSH2 0x113 PUSH2 0x164 CALLDATASIZE PUSH1 0x4 PUSH2 0xA48 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xD6 PUSH2 0x31C JUMP JUMPDEST PUSH2 0xFF PUSH2 0x1A2 CALLDATASIZE PUSH1 0x4 PUSH2 0x9E1 JUMP JUMPDEST PUSH2 0x32B JUMP JUMPDEST PUSH2 0xFF PUSH2 0x1B5 CALLDATASIZE PUSH1 0x4 PUSH2 0x9E1 JUMP JUMPDEST PUSH2 0x401 JUMP JUMPDEST PUSH2 0x113 PUSH2 0x1C8 CALLDATASIZE PUSH1 0x4 PUSH2 0xA6A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x20F SWAP1 PUSH2 0xA9D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x23B SWAP1 PUSH2 0xA9D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x288 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x25D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x288 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x26B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x2A0 DUP2 DUP6 DUP6 PUSH2 0x40F JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x2BA DUP6 DUP3 DUP6 PUSH2 0x5C2 JUMP JUMPDEST PUSH2 0x2C5 DUP6 DUP6 DUP6 PUSH2 0x699 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x2A0 SWAP1 DUP3 SWAP1 DUP7 SWAP1 PUSH2 0x317 SWAP1 DUP8 SWAP1 PUSH2 0xAF0 JUMP JUMPDEST PUSH2 0x40F JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x20F SWAP1 PUSH2 0xA9D JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 DUP4 DUP2 LT ISZERO PUSH2 0x3F4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2C5 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x40F JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x2A0 DUP2 DUP6 DUP6 PUSH2 0x699 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH2 0x4B1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3EB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH2 0x554 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3EB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x693 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x686 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3EB JUMP JUMPDEST PUSH2 0x693 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x40F JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH2 0x73C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3EB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH2 0x7DF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3EB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x895 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3EB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x8D9 SWAP1 DUP5 SWAP1 PUSH2 0xAF0 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x93F SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x693 JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x97A JUMPI PUSH1 0x20 DUP2 DUP7 ADD DUP2 ADD MLOAD PUSH1 0x40 DUP7 DUP5 ADD ADD MSTORE ADD PUSH2 0x95D JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x9DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x9F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9FD DUP4 PUSH2 0x9B8 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xA20 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA29 DUP5 PUSH2 0x9B8 JUMP JUMPDEST SWAP3 POP PUSH2 0xA37 PUSH1 0x20 DUP6 ADD PUSH2 0x9B8 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA5A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA63 DUP3 PUSH2 0x9B8 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xA7D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA86 DUP4 PUSH2 0x9B8 JUMP JUMPDEST SWAP2 POP PUSH2 0xA94 PUSH1 0x20 DUP5 ADD PUSH2 0x9B8 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xAB1 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xAEA JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x2A6 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x21 NOT PUSH28 0x2630561B2E04CE1B8AB43D8B18F5C661785E36D7ABDFD6D2BC042F8D CALLDATACOPY PUSH5 0x736F6C6378 0x28 ADDRESS 0x2E CODESIZE 0x2E ORIGIN CODESIZE 0x2D PUSH15 0x696768746C792E323032342E31302E ORIGIN 0x2B PUSH4 0x6F6D6D69 PUSH21 0x2E3235366539353238005900000000000000000000 ",
							"sourceMap": "1900:336:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3429:98:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5706:197;;;;;;:::i;:::-;;:::i;:::-;;;1276:14:5;;1269:22;1251:41;;1239:2;1224:18;5706:197:1;1111:187:5;4517:106:1;4604:12;;4517:106;;;1449:25:5;;;1437:2;1422:18;4517:106:1;1303:177:5;6465:286:1;;;;;;:::i;:::-;;:::i;4366:91::-;;;4448:2;2006:36:5;;1994:2;1979:18;4366:91:1;1864:184:5;7146:234:1;;;;;;:::i;:::-;;:::i;4681:125::-;;;;;;:::i;:::-;4781:18;;4755:7;4781:18;;;;;;;;;;;;4681:125;3640:102;;;:::i;7867:427::-;;;;;;:::i;:::-;;:::i;5002:189::-;;;;;;:::i;:::-;;:::i;5249:149::-;;;;;;:::i;:::-;5364:18;;;;5338:7;5364:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;5249:149;3429:98;3483:13;3515:5;3508:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3429:98;:::o;5706:197::-;5789:4;1992:10:4;5843:32:1;1992:10:4;5859:7:1;5868:6;5843:8;:32::i;:::-;5892:4;5885:11;;;5706:197;;;;;:::o;6465:286::-;6592:4;1992:10:4;6648:38:1;6664:4;1992:10:4;6679:6:1;6648:15;:38::i;:::-;6696:27;6706:4;6712:2;6716:6;6696:9;:27::i;:::-;-1:-1:-1;6740:4:1;;6465:286;-1:-1:-1;;;;6465:286:1:o;7146:234::-;1992:10:4;7234:4:1;5364:18;;;:11;:18;;;;;;;;;:27;;;;;;;;;;7234:4;;1992:10:4;7288:64:1;;1992:10:4;;5364:27:1;;7313:38;;7341:10;;7313:38;:::i;:::-;7288:8;:64::i;3640:102::-;3696:13;3728:7;3721:14;;;;;:::i;7867:427::-;1992:10:4;7960:4:1;5364:18;;;:11;:18;;;;;;;;;:27;;;;;;;;;;7960:4;;1992:10:4;8104:15:1;8084:16;:35;;8076:85;;;;;;;3437:2:5;8076:85:1;;;3419:21:5;3476:2;3456:18;;;3449:30;3515:34;3495:18;;;3488:62;3586:7;3566:18;;;3559:35;3611:19;;8076:85:1;;;;;;;;;8195:60;8204:5;8211:7;8239:15;8220:16;:34;8195:8;:60::i;5002:189::-;5081:4;1992:10:4;5135:28:1;1992:10:4;5152:2:1;5156:6;5135:9;:28::i;11383:370::-;11514:19;;;11506:68;;;;;;;3843:2:5;11506:68:1;;;3825:21:5;3882:2;3862:18;;;3855:30;3921:34;3901:18;;;3894:62;3992:6;3972:18;;;3965:34;4016:19;;11506:68:1;3641:400:5;11506:68:1;11592:21;;;11584:68;;;;;;;4248:2:5;11584:68:1;;;4230:21:5;4287:2;4267:18;;;4260:30;4326:34;4306:18;;;4299:62;4397:4;4377:18;;;4370:32;4419:19;;11584:68:1;4046:398:5;11584:68:1;11663:18;;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;11714:32;;1449:25:5;;;11714:32:1;;1422:18:5;11714:32:1;;;;;;;11383:370;;;:::o;12034:441::-;5364:18;;;;12164:24;5364:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;12250:17;12230:37;;12226:243;;12311:6;12291:16;:26;;12283:68;;;;;;;4651:2:5;12283:68:1;;;4633:21:5;4690:2;4670:18;;;4663:30;4729:31;4709:18;;;4702:59;4778:18;;12283:68:1;4449:353:5;12283:68:1;12393:51;12402:5;12409:7;12437:6;12418:16;:25;12393:8;:51::i;:::-;12154:321;12034:441;;;:::o;8748:651::-;8874:18;;;8866:68;;;;;;;5009:2:5;8866:68:1;;;4991:21:5;5048:2;5028:18;;;5021:30;5087:34;5067:18;;;5060:62;5158:7;5138:18;;;5131:35;5183:19;;8866:68:1;4807:401:5;8866:68:1;8952:16;;;8944:64;;;;;;;5415:2:5;8944:64:1;;;5397:21:5;5454:2;5434:18;;;5427:30;5493:34;5473:18;;;5466:62;5564:5;5544:18;;;5537:33;5587:19;;8944:64:1;5213:399:5;8944:64:1;9090:15;;;9068:19;9090:15;;;;;;;;;;;9123:21;;;;9115:72;;;;;;;5819:2:5;9115:72:1;;;5801:21:5;5858:2;5838:18;;;5831:30;5897:34;5877:18;;;5870:62;5968:8;5948:18;;;5941:36;5994:19;;9115:72:1;5617:402:5;9115:72:1;9221:15;;;;:9;:15;;;;;;;;;;;9239:20;;;9221:38;;9279:13;;;;;;;;:23;;9253:6;;9221:9;9279:23;;9253:6;;9279:23;:::i;:::-;;;;;;;;9333:2;9318:26;;9327:4;9318:26;;;9337:6;9318:26;;;;1449:25:5;;1437:2;1422:18;;1303:177;9318:26:1;;;;;;;;9355:37;13059:121;14:586:5;163:2;152:9;145:21;126:4;195:6;189:13;238:6;233:2;222:9;218:18;211:34;263:1;273:140;287:6;284:1;281:13;273:140;;;398:2;382:14;;;378:23;;372:30;367:2;348:17;;;344:26;337:66;302:10;273:140;;;277:3;462:1;457:2;448:6;437:9;433:22;429:31;422:42;591:2;521:66;516:2;508:6;504:15;500:88;489:9;485:104;481:113;473:121;;;14:586;;;;:::o;605:196::-;673:20;;733:42;722:54;;712:65;;702:93;;791:1;788;781:12;702:93;605:196;;;:::o;806:300::-;874:6;882;935:2;923:9;914:7;910:23;906:32;903:52;;;951:1;948;941:12;903:52;974:29;993:9;974:29;:::i;:::-;964:39;1072:2;1057:18;;;;1044:32;;-1:-1:-1;;;806:300:5:o;1485:374::-;1562:6;1570;1578;1631:2;1619:9;1610:7;1606:23;1602:32;1599:52;;;1647:1;1644;1637:12;1599:52;1670:29;1689:9;1670:29;:::i;:::-;1660:39;;1718:38;1752:2;1741:9;1737:18;1718:38;:::i;:::-;1485:374;;1708:48;;-1:-1:-1;;;1825:2:5;1810:18;;;;1797:32;;1485:374::o;2053:186::-;2112:6;2165:2;2153:9;2144:7;2140:23;2136:32;2133:52;;;2181:1;2178;2171:12;2133:52;2204:29;2223:9;2204:29;:::i;:::-;2194:39;2053:186;-1:-1:-1;;;2053:186:5:o;2244:260::-;2312:6;2320;2373:2;2361:9;2352:7;2348:23;2344:32;2341:52;;;2389:1;2386;2379:12;2341:52;2412:29;2431:9;2412:29;:::i;:::-;2402:39;;2460:38;2494:2;2483:9;2479:18;2460:38;:::i;:::-;2450:48;;2244:260;;;;;:::o;2509:437::-;2588:1;2584:12;;;;2631;;;2652:61;;2706:4;2698:6;2694:17;2684:27;;2652:61;2759:2;2751:6;2748:14;2728:18;2725:38;2722:218;;2796:77;2793:1;2786:88;2897:4;2894:1;2887:15;2925:4;2922:1;2915:15;2722:218;;2509:437;;;:::o;2951:279::-;3016:9;;;3037:10;;;3034:190;;;3080:77;3077:1;3070:88;3181:4;3178:1;3171:15;3209:4;3206:1;3199:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "590000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "22503",
								"balanceOf(address)": "1261",
								"decimals()": "244",
								"decreaseAllowance(address,uint256)": "23462",
								"increaseAllowance(address,uint256)": "infinite",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "1004",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1900,
									"end": 2236,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 1900,
									"end": 2236,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1900,
									"end": 2236,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2054,
									"end": 2234,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2054,
									"end": 2234,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2054,
									"end": 2234,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 2054,
									"end": 2234,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 2054,
									"end": 2234,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 2054,
									"end": 2234,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2054,
									"end": 2234,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 2054,
									"end": 2234,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2054,
									"end": 2234,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 2054,
									"end": 2234,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2054,
									"end": 2234,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2054,
									"end": 2234,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2054,
									"end": 2234,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2054,
									"end": 2234,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2054,
									"end": 2234,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2054,
									"end": 2234,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 2054,
									"end": 2234,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2054,
									"end": 2234,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 2054,
									"end": 2234,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 2054,
									"end": 2234,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 2054,
									"end": 2234,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2173,
									"end": 2177,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 2179,
									"end": 2185,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3317,
									"end": 3322,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 3317,
									"end": 3330,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 2173,
									"end": 2177,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3317,
									"end": 3322,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3317,
									"end": 3330,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 3317,
									"end": 3330,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3317,
									"end": 3330,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 3317,
									"end": 3330,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3340,
									"end": 3347,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 3340,
									"end": 3357,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 3350,
									"end": 3357,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3340,
									"end": 3347,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3340,
									"end": 3357,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 3340,
									"end": 3357,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3340,
									"end": 3357,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 3340,
									"end": 3357,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3340,
									"end": 3357,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3251,
									"end": 3364,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3251,
									"end": 3364,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2197,
									"end": 2227,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 2203,
									"end": 2213,
									"modifierDepth": 1,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 2215,
									"end": 2226,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 2197,
									"end": 2202,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 2197,
									"end": 2202,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2197,
									"end": 2202,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 2197,
									"end": 2227,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2197,
									"end": 2227,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 2197,
									"end": 2227,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 2197,
									"end": 2227,
									"modifierDepth": 1,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 2197,
									"end": 2227,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2054,
									"end": 2234,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2054,
									"end": 2234,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2054,
									"end": 2234,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1900,
									"end": 2236,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "34"
								},
								{
									"begin": 1900,
									"end": 2236,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 9675,
									"end": 10064,
									"name": "tag",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 9675,
									"end": 10064,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 9758,
									"end": 9779,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 9758,
									"end": 9779,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 9750,
									"end": 9815,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 9750,
									"end": 9815,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 9750,
									"end": 9815,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 9750,
									"end": 9815,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 9750,
									"end": 9815,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 9750,
									"end": 9815,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 4319,
									"end": 4321,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 9750,
									"end": 9815,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 9750,
									"end": 9815,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 9750,
									"end": 9815,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4301,
									"end": 4322,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 4358,
									"end": 4360,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 4338,
									"end": 4356,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 4338,
									"end": 4356,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 4338,
									"end": 4356,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 4331,
									"end": 4361,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 4397,
									"end": 4430,
									"name": "PUSH",
									"source": 5,
									"value": "45524332303A206D696E7420746F20746865207A65726F206164647265737300"
								},
								{
									"begin": 4377,
									"end": 4395,
									"name": "PUSH",
									"source": 5,
									"value": "44"
								},
								{
									"begin": 4377,
									"end": 4395,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 4377,
									"end": 4395,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 4370,
									"end": 4431,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 4448,
									"end": 4466,
									"name": "PUSH",
									"source": 5,
									"value": "64"
								},
								{
									"begin": 4448,
									"end": 4466,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 9750,
									"end": 9815,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 9750,
									"end": 9815,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 9750,
									"end": 9815,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 9750,
									"end": 9815,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 9750,
									"end": 9815,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 9750,
									"end": 9815,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 9750,
									"end": 9815,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 9750,
									"end": 9815,
									"name": "tag",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 9750,
									"end": 9815,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 9902,
									"end": 9908,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 9886,
									"end": 9898,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 9886,
									"end": 9898,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 9886,
									"end": 9908,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 9886,
									"end": 9908,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 9886,
									"end": 9908,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 9886,
									"end": 9908,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 9886,
									"end": 9908,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 9886,
									"end": 9908,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 9886,
									"end": 9908,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 9886,
									"end": 9908,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 9886,
									"end": 9908,
									"name": "tag",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 9886,
									"end": 9908,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 9886,
									"end": 9908,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 9886,
									"end": 9908,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 9886,
									"end": 9908,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 9918,
									"end": 9936,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 9918,
									"end": 9936,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 9918,
									"end": 9927,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 9918,
									"end": 9936,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 9918,
									"end": 9936,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 9918,
									"end": 9936,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 9918,
									"end": 9936,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 9918,
									"end": 9936,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 9918,
									"end": 9936,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 9918,
									"end": 9936,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 9918,
									"end": 9936,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 9918,
									"end": 9936,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 9918,
									"end": 9936,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 9918,
									"end": 9946,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 9918,
									"end": 9946,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 9940,
									"end": 9946,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 9940,
									"end": 9946,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 9918,
									"end": 9927,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 9918,
									"end": 9946,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 9918,
									"end": 9946,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 9940,
									"end": 9946,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 9940,
									"end": 9946,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 9918,
									"end": 9946,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 9918,
									"end": 9946,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 9918,
									"end": 9946,
									"name": "tag",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 9918,
									"end": 9946,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 9918,
									"end": 9946,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 9918,
									"end": 9946,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 9918,
									"end": 9946,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 9961,
									"end": 9998,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 9961,
									"end": 9998,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 4850,
									"end": 4875,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 4850,
									"end": 4875,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 4850,
									"end": 4875,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 9961,
									"end": 9998,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 9961,
									"end": 9998,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 9961,
									"end": 9998,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 9978,
									"end": 9979,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 9978,
									"end": 9979,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 9961,
									"end": 9998,
									"name": "PUSH",
									"source": 1,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 9961,
									"end": 9998,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4838,
									"end": 4840,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 4823,
									"end": 4841,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 9961,
									"end": 9998,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 9961,
									"end": 9998,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 9961,
									"end": 9998,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 9961,
									"end": 9998,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 9961,
									"end": 9998,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 9961,
									"end": 9998,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 9961,
									"end": 9998,
									"name": "LOG3",
									"source": 1
								},
								{
									"begin": 9675,
									"end": 10064,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9675,
									"end": 10064,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9675,
									"end": 10064,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 13059,
									"end": 13180,
									"name": "tag",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 13059,
									"end": 13180,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 13059,
									"end": 13180,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 13059,
									"end": 13180,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 13059,
									"end": 13180,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 13059,
									"end": 13180,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 5,
									"value": "28"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 5,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 5,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 146,
									"end": 980,
									"name": "tag",
									"source": 5,
									"value": "29"
								},
								{
									"begin": 146,
									"end": 980,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 200,
									"end": 205,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 253,
									"end": 256,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 246,
									"end": 250,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 238,
									"end": 244,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 234,
									"end": 251,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 230,
									"end": 257,
									"name": "SLT",
									"source": 5
								},
								{
									"begin": 220,
									"end": 275,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "37"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 271,
									"end": 272,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 268,
									"end": 269,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 261,
									"end": 273,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 220,
									"end": 275,
									"name": "tag",
									"source": 5,
									"value": "37"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 298,
									"end": 311,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 298,
									"end": 311,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 323,
									"end": 353,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 323,
									"end": 353,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 320,
									"end": 376,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 320,
									"end": 376,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "39"
								},
								{
									"begin": 320,
									"end": 376,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 356,
									"end": 374,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "39"
								},
								{
									"begin": 356,
									"end": 374,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "28"
								},
								{
									"begin": 356,
									"end": 374,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 356,
									"end": 374,
									"name": "tag",
									"source": 5,
									"value": "39"
								},
								{
									"begin": 356,
									"end": 374,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 405,
									"end": 407,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 399,
									"end": 408,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 497,
									"end": 499,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 459,
									"end": 476,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 459,
									"end": 476,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 455,
									"end": 486,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 455,
									"end": 486,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 455,
									"end": 486,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 488,
									"end": 490,
									"name": "PUSH",
									"source": 5,
									"value": "3F"
								},
								{
									"begin": 451,
									"end": 491,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 447,
									"end": 501,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 435,
									"end": 502,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 435,
									"end": 502,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 517,
									"end": 551,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 517,
									"end": 551,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 553,
									"end": 575,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 553,
									"end": 575,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 553,
									"end": 575,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 514,
									"end": 576,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 511,
									"end": 599,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 511,
									"end": 599,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "41"
								},
								{
									"begin": 511,
									"end": 599,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 579,
									"end": 597,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "41"
								},
								{
									"begin": 579,
									"end": 597,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "28"
								},
								{
									"begin": 579,
									"end": 597,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 579,
									"end": 597,
									"name": "tag",
									"source": 5,
									"value": "41"
								},
								{
									"begin": 579,
									"end": 597,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 615,
									"end": 617,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 608,
									"end": 630,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 639,
									"end": 661,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 639,
									"end": 661,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 639,
									"end": 661,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 680,
									"end": 699,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 680,
									"end": 699,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 680,
									"end": 699,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 701,
									"end": 705,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 676,
									"end": 706,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 673,
									"end": 712,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "LT",
									"source": -1
								},
								{
									"begin": 670,
									"end": 729,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 670,
									"end": 729,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "42"
								},
								{
									"begin": 670,
									"end": 729,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 725,
									"end": 726,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 722,
									"end": 723,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 715,
									"end": 727,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 670,
									"end": 729,
									"name": "tag",
									"source": 5,
									"value": "42"
								},
								{
									"begin": 670,
									"end": 729,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 747,
									"end": 748,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 757,
									"end": 900,
									"name": "tag",
									"source": 5,
									"value": "43"
								},
								{
									"begin": 757,
									"end": 900,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 771,
									"end": 777,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 768,
									"end": 769,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 765,
									"end": 778,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 757,
									"end": 900,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 757,
									"end": 900,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "45"
								},
								{
									"begin": 757,
									"end": 900,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 883,
									"end": 887,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 867,
									"end": 881,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 867,
									"end": 881,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 867,
									"end": 881,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 863,
									"end": 888,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 863,
									"end": 888,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 857,
									"end": 889,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 834,
									"end": 848,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 834,
									"end": 848,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 834,
									"end": 848,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 830,
									"end": 855,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 830,
									"end": 855,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 823,
									"end": 890,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 786,
									"end": 798,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 757,
									"end": 900,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "43"
								},
								{
									"begin": 757,
									"end": 900,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 757,
									"end": 900,
									"name": "tag",
									"source": 5,
									"value": "45"
								},
								{
									"begin": 757,
									"end": 900,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 948,
									"end": 949,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 920,
									"end": 939,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 920,
									"end": 939,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 920,
									"end": 939,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 941,
									"end": 945,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 916,
									"end": 946,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 909,
									"end": 950,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 909,
									"end": 950,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 909,
									"end": 950,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 909,
									"end": 950,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 924,
									"end": 930,
									"name": "SWAP4",
									"source": 5
								},
								{
									"begin": 146,
									"end": 980,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 146,
									"end": 980,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 985,
									"end": 1603,
									"name": "tag",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 985,
									"end": 1603,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1093,
									"end": 1099,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1101,
									"end": 1107,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1109,
									"end": 1115,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1162,
									"end": 1164,
									"name": "PUSH",
									"source": 5,
									"value": "60"
								},
								{
									"begin": 1150,
									"end": 1159,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 1141,
									"end": 1148,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 1137,
									"end": 1160,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 1133,
									"end": 1165,
									"name": "SLT",
									"source": 5
								},
								{
									"begin": 1130,
									"end": 1182,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1130,
									"end": 1182,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "47"
								},
								{
									"begin": 1130,
									"end": 1182,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1178,
									"end": 1179,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1175,
									"end": 1176,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1168,
									"end": 1180,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1130,
									"end": 1182,
									"name": "tag",
									"source": 5,
									"value": "47"
								},
								{
									"begin": 1130,
									"end": 1182,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1205,
									"end": 1221,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1205,
									"end": 1221,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1233,
									"end": 1263,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1233,
									"end": 1263,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 1230,
									"end": 1280,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1230,
									"end": 1280,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "48"
								},
								{
									"begin": 1230,
									"end": 1280,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1276,
									"end": 1277,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1274,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1266,
									"end": 1278,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1230,
									"end": 1280,
									"name": "tag",
									"source": 5,
									"value": "48"
								},
								{
									"begin": 1230,
									"end": 1280,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1299,
									"end": 1360,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "49"
								},
								{
									"begin": 1352,
									"end": 1359,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 1343,
									"end": 1349,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1332,
									"end": 1341,
									"name": "DUP8",
									"source": 5
								},
								{
									"begin": 1328,
									"end": 1350,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1299,
									"end": 1360,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "29"
								},
								{
									"begin": 1299,
									"end": 1360,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1299,
									"end": 1360,
									"name": "tag",
									"source": 5,
									"value": "49"
								},
								{
									"begin": 1299,
									"end": 1360,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1406,
									"end": 1408,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1391,
									"end": 1409,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 1391,
									"end": 1409,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1385,
									"end": 1410,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1289,
									"end": 1360,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1289,
									"end": 1360,
									"name": "SWAP5",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1385,
									"end": 1410,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1422,
									"end": 1454,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1422,
									"end": 1454,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 1419,
									"end": 1471,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1419,
									"end": 1471,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "50"
								},
								{
									"begin": 1419,
									"end": 1471,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1467,
									"end": 1468,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1464,
									"end": 1465,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1457,
									"end": 1469,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1419,
									"end": 1471,
									"name": "tag",
									"source": 5,
									"value": "50"
								},
								{
									"begin": 1419,
									"end": 1471,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1490,
									"end": 1553,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "51"
								},
								{
									"begin": 1545,
									"end": 1552,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 1534,
									"end": 1542,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1523,
									"end": 1532,
									"name": "DUP8",
									"source": 5
								},
								{
									"begin": 1519,
									"end": 1543,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1490,
									"end": 1553,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "29"
								},
								{
									"begin": 1490,
									"end": 1553,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1490,
									"end": 1553,
									"name": "tag",
									"source": 5,
									"value": "51"
								},
								{
									"begin": 1490,
									"end": 1553,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1480,
									"end": 1553,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 1480,
									"end": 1553,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1480,
									"end": 1553,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1593,
									"end": 1595,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1591,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 1578,
									"end": 1596,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1572,
									"end": 1597,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1562,
									"end": 1597,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1562,
									"end": 1597,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 985,
									"end": 1603,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 985,
									"end": 1603,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 985,
									"end": 1603,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 985,
									"end": 1603,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 985,
									"end": 1603,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 985,
									"end": 1603,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1608,
									"end": 1988,
									"name": "tag",
									"source": 5,
									"value": "30"
								},
								{
									"begin": 1608,
									"end": 1988,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1687,
									"end": 1688,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1683,
									"end": 1695,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1683,
									"end": 1695,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1683,
									"end": 1695,
									"name": "SHR",
									"source": 5
								},
								{
									"begin": 1683,
									"end": 1695,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1730,
									"end": 1742,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1730,
									"end": 1742,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1730,
									"end": 1742,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1751,
									"end": 1812,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "53"
								},
								{
									"begin": 1751,
									"end": 1812,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1805,
									"end": 1809,
									"name": "PUSH",
									"source": 5,
									"value": "7F"
								},
								{
									"begin": 1797,
									"end": 1803,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1793,
									"end": 1810,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1783,
									"end": 1810,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1783,
									"end": 1810,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1751,
									"end": 1812,
									"name": "tag",
									"source": 5,
									"value": "53"
								},
								{
									"begin": 1751,
									"end": 1812,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1858,
									"end": 1860,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1850,
									"end": 1856,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1847,
									"end": 1861,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 1827,
									"end": 1845,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1824,
									"end": 1862,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 1821,
									"end": 1982,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "54"
								},
								{
									"begin": 1821,
									"end": 1982,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1904,
									"end": 1914,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B71"
								},
								{
									"begin": 1899,
									"end": 1902,
									"name": "PUSH",
									"source": 5,
									"value": "E0"
								},
								{
									"begin": 1895,
									"end": 1915,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 1892,
									"end": 1893,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1885,
									"end": 1916,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1939,
									"end": 1943,
									"name": "PUSH",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 1936,
									"end": 1937,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 1929,
									"end": 1944,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1967,
									"end": 1971,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 1964,
									"end": 1965,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1957,
									"end": 1972,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1821,
									"end": 1982,
									"name": "tag",
									"source": 5,
									"value": "54"
								},
								{
									"begin": 1821,
									"end": 1982,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1821,
									"end": 1982,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1608,
									"end": 1988,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1608,
									"end": 1988,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1608,
									"end": 1988,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1608,
									"end": 1988,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2119,
									"end": 2637,
									"name": "tag",
									"source": 5,
									"value": "32"
								},
								{
									"begin": 2119,
									"end": 2637,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2221,
									"end": 2223,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 2216,
									"end": 2219,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2213,
									"end": 2224,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 2210,
									"end": 2631,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 2210,
									"end": 2631,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "18"
								},
								{
									"begin": 2210,
									"end": 2631,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 2257,
									"end": 2262,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 2254,
									"end": 2255,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2247,
									"end": 2263,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 2301,
									"end": 2305,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 2298,
									"end": 2299,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2288,
									"end": 2306,
									"name": "KECCAK256",
									"source": 5
								},
								{
									"begin": 2371,
									"end": 2373,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 2359,
									"end": 2369,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 2355,
									"end": 2374,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2352,
									"end": 2353,
									"name": "PUSH",
									"source": 5,
									"value": "5"
								},
								{
									"begin": 2348,
									"end": 2375,
									"name": "SHR",
									"source": 5
								},
								{
									"begin": 2342,
									"end": 2346,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2338,
									"end": 2376,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2407,
									"end": 2411,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 2395,
									"end": 2405,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 2392,
									"end": 2412,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 2389,
									"end": 2436,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 2389,
									"end": 2436,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "58"
								},
								{
									"begin": 2389,
									"end": 2436,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2430,
									"end": 2434,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 2389,
									"end": 2436,
									"name": "tag",
									"source": 5,
									"value": "58"
								},
								{
									"begin": 2389,
									"end": 2436,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2485,
									"end": 2487,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 2480,
									"end": 2483,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 2476,
									"end": 2488,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2473,
									"end": 2474,
									"name": "PUSH",
									"source": 5,
									"value": "5"
								},
								{
									"begin": 2469,
									"end": 2489,
									"name": "SHR",
									"source": 5
								},
								{
									"begin": 2463,
									"end": 2467,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2459,
									"end": 2490,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2449,
									"end": 2490,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 2449,
									"end": 2490,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2540,
									"end": 2621,
									"name": "tag",
									"source": 5,
									"value": "59"
								},
								{
									"begin": 2540,
									"end": 2621,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2558,
									"end": 2560,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2551,
									"end": 2556,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2548,
									"end": 2561,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 2540,
									"end": 2621,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 2540,
									"end": 2621,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "61"
								},
								{
									"begin": 2540,
									"end": 2621,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 2617,
									"end": 2618,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2603,
									"end": 2619,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2603,
									"end": 2619,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 2584,
									"end": 2585,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 2573,
									"end": 2586,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2540,
									"end": 2621,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "59"
								},
								{
									"begin": 2540,
									"end": 2621,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2540,
									"end": 2621,
									"name": "tag",
									"source": 5,
									"value": "61"
								},
								{
									"begin": 2540,
									"end": 2621,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2544,
									"end": 2547,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2544,
									"end": 2547,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2119,
									"end": 2637,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2119,
									"end": 2637,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2119,
									"end": 2637,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2119,
									"end": 2637,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2813,
									"end": 4112,
									"name": "tag",
									"source": 5,
									"value": "7"
								},
								{
									"begin": 2813,
									"end": 4112,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2933,
									"end": 2943,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2933,
									"end": 2943,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2955,
									"end": 2985,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2955,
									"end": 2985,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 2952,
									"end": 3008,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 2952,
									"end": 3008,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "65"
								},
								{
									"begin": 2952,
									"end": 3008,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 2988,
									"end": 3006,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "65"
								},
								{
									"begin": 2988,
									"end": 3006,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "28"
								},
								{
									"begin": 2988,
									"end": 3006,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2988,
									"end": 3006,
									"name": "tag",
									"source": 5,
									"value": "65"
								},
								{
									"begin": 2988,
									"end": 3006,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3017,
									"end": 3114,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "66"
								},
								{
									"begin": 3107,
									"end": 3113,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 3067,
									"end": 3105,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "67"
								},
								{
									"begin": 3099,
									"end": 3103,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 3093,
									"end": 3104,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 3067,
									"end": 3105,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "30"
								},
								{
									"begin": 3067,
									"end": 3105,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 3067,
									"end": 3105,
									"name": "tag",
									"source": 5,
									"value": "67"
								},
								{
									"begin": 3067,
									"end": 3105,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3061,
									"end": 3065,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 3017,
									"end": 3114,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "32"
								},
								{
									"begin": 3017,
									"end": 3114,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 3017,
									"end": 3114,
									"name": "tag",
									"source": 5,
									"value": "66"
								},
								{
									"begin": 3017,
									"end": 3114,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3163,
									"end": 3167,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 3194,
									"end": 3196,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 3183,
									"end": 3197,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 3183,
									"end": 3197,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 3211,
									"end": 3212,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 3206,
									"end": 3855,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 3206,
									"end": 3855,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 3206,
									"end": 3855,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "69"
								},
								{
									"begin": 3206,
									"end": 3855,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 3899,
									"end": 3900,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 3916,
									"end": 3922,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 3913,
									"end": 4002,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 3913,
									"end": 4002,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "70"
								},
								{
									"begin": 3913,
									"end": 4002,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3968,
									"end": 3987,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 3968,
									"end": 3987,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 3968,
									"end": 3987,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 3962,
									"end": 3988,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 3913,
									"end": 4002,
									"name": "tag",
									"source": 5,
									"value": "70"
								},
								{
									"begin": 3913,
									"end": 4002,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2770,
									"end": 2771,
									"name": "PUSH",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 2766,
									"end": 2777,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 2766,
									"end": 2777,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2766,
									"end": 2777,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 2762,
									"end": 2786,
									"name": "SHR",
									"source": 5
								},
								{
									"begin": 2758,
									"end": 2787,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 2748,
									"end": 2788,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 2794,
									"end": 2795,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 2790,
									"end": 2801,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 2790,
									"end": 2801,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2790,
									"end": 2801,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 2745,
									"end": 2802,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 4015,
									"end": 4096,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 4015,
									"end": 4096,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 3176,
									"end": 4106,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "61"
								},
								{
									"begin": 3176,
									"end": 4106,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 3206,
									"end": 3855,
									"name": "tag",
									"source": 5,
									"value": "69"
								},
								{
									"begin": 3206,
									"end": 3855,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2066,
									"end": 2067,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2059,
									"end": 2073,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 2059,
									"end": 2073,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2059,
									"end": 2073,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 2103,
									"end": 2107,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 2090,
									"end": 2108,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2090,
									"end": 2108,
									"name": "KECCAK256",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3242,
									"end": 3262,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 3242,
									"end": 3262,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 3242,
									"end": 3262,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 3360,
									"end": 3582,
									"name": "tag",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 3360,
									"end": 3582,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3374,
									"end": 3381,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 3371,
									"end": 3372,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 3368,
									"end": 3382,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 3360,
									"end": 3582,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 3360,
									"end": 3582,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "75"
								},
								{
									"begin": 3360,
									"end": 3582,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 3456,
									"end": 3475,
									"name": "DUP8",
									"source": 5
								},
								{
									"begin": 3456,
									"end": 3475,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 3456,
									"end": 3475,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 3450,
									"end": 3476,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 3435,
									"end": 3477,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 3435,
									"end": 3477,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 3563,
									"end": 3567,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 3548,
									"end": 3568,
									"name": "SWAP5",
									"source": 5
								},
								{
									"begin": 3548,
									"end": 3568,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 3548,
									"end": 3568,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 3548,
									"end": 3568,
									"name": "SWAP5",
									"source": 5
								},
								{
									"begin": 3516,
									"end": 3517,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 3504,
									"end": 3518,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 3504,
									"end": 3518,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 3504,
									"end": 3518,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 3504,
									"end": 3518,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 3390,
									"end": 3402,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 3360,
									"end": 3582,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 3360,
									"end": 3582,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 3360,
									"end": 3582,
									"name": "tag",
									"source": 5,
									"value": "75"
								},
								{
									"begin": 3360,
									"end": 3582,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3364,
									"end": 3367,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3610,
									"end": 3616,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 3601,
									"end": 3608,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 3598,
									"end": 3617,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 3595,
									"end": 3796,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 3595,
									"end": 3796,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "76"
								},
								{
									"begin": 3595,
									"end": 3796,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 3671,
									"end": 3690,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 3671,
									"end": 3690,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 3671,
									"end": 3690,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 3665,
									"end": 3691,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3754,
									"end": 3755,
									"name": "PUSH",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 3750,
									"end": 3764,
									"name": "DUP8",
									"source": 5
								},
								{
									"begin": 3750,
									"end": 3764,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 3750,
									"end": 3764,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 3766,
									"end": 3769,
									"name": "PUSH",
									"source": 5,
									"value": "F8"
								},
								{
									"begin": 3746,
									"end": 3770,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 3742,
									"end": 3779,
									"name": "SHR",
									"source": 5
								},
								{
									"begin": 3738,
									"end": 3780,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 3723,
									"end": 3781,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 3708,
									"end": 3782,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 3708,
									"end": 3782,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 3595,
									"end": 3796,
									"name": "tag",
									"source": 5,
									"value": "76"
								},
								{
									"begin": 3595,
									"end": 3796,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3842,
									"end": 3843,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 3826,
									"end": 3840,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 3826,
									"end": 3840,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 3826,
									"end": 3840,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 3822,
									"end": 3844,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 3809,
									"end": 3845,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 3809,
									"end": 3845,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2813,
									"end": 4112,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 4477,
									"end": 4699,
									"name": "tag",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 4477,
									"end": 4699,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 4542,
									"end": 4551,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 4542,
									"end": 4551,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 4542,
									"end": 4551,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 4563,
									"end": 4573,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 4563,
									"end": 4573,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 4563,
									"end": 4573,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 4560,
									"end": 4693,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 4560,
									"end": 4693,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "79"
								},
								{
									"begin": 4560,
									"end": 4693,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 4615,
									"end": 4625,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B71"
								},
								{
									"begin": 4610,
									"end": 4613,
									"name": "PUSH",
									"source": 5,
									"value": "E0"
								},
								{
									"begin": 4606,
									"end": 4626,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 4603,
									"end": 4604,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 4596,
									"end": 4627,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 4650,
									"end": 4654,
									"name": "PUSH",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 4647,
									"end": 4648,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 4640,
									"end": 4655,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 4678,
									"end": 4682,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 4675,
									"end": 4676,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 4668,
									"end": 4683,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 4560,
									"end": 4693,
									"name": "tag",
									"source": 5,
									"value": "79"
								},
								{
									"begin": 4560,
									"end": 4693,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 4477,
									"end": 4699,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 4477,
									"end": 4699,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 4477,
									"end": 4699,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 4477,
									"end": 4699,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 4477,
									"end": 4699,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 4704,
									"end": 4881,
									"name": "tag",
									"source": 5,
									"value": "34"
								},
								{
									"begin": 4704,
									"end": 4881,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1900,
									"end": 2236,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1900,
									"end": 2236,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1900,
									"end": 2236,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1900,
									"end": 2236,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1900,
									"end": 2236,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 1900,
									"end": 2236,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1900,
									"end": 2236,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122021197b2630561b2e04ce1b8ab43d8b18f5c661785e36d7abdfd6d2bc042f8d3764736f6c637828302e382e32382d6e696768746c792e323032342e31302e322b636f6d6d69742e32353665393532380059",
									".code": [
										{
											"begin": 1900,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "39509351"
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "A457C2D7"
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "A457C2D7"
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "39509351"
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3429,
											"end": 3527,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 3429,
											"end": 3527,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3429,
											"end": 3527,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 3429,
											"end": 3527,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 3429,
											"end": 3527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3429,
											"end": 3527,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 3429,
											"end": 3527,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3429,
											"end": 3527,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3429,
											"end": 3527,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3429,
											"end": 3527,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 3429,
											"end": 3527,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3429,
											"end": 3527,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3429,
											"end": 3527,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3429,
											"end": 3527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3429,
											"end": 3527,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 3429,
											"end": 3527,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3429,
											"end": 3527,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3429,
											"end": 3527,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3429,
											"end": 3527,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3429,
											"end": 3527,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3429,
											"end": 3527,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3429,
											"end": 3527,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3429,
											"end": 3527,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 5706,
											"end": 5903,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5706,
											"end": 5903,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5706,
											"end": 5903,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 5706,
											"end": 5903,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 5706,
											"end": 5903,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5706,
											"end": 5903,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5706,
											"end": 5903,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 5706,
											"end": 5903,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5706,
											"end": 5903,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 5706,
											"end": 5903,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5706,
											"end": 5903,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5706,
											"end": 5903,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5706,
											"end": 5903,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 5706,
											"end": 5903,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5706,
											"end": 5903,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5706,
											"end": 5903,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1290,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1276,
											"end": 1290,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1269,
											"end": 1291,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1251,
											"end": 1292,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1251,
											"end": 1292,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1239,
											"end": 1241,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1224,
											"end": 1242,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5706,
											"end": 5903,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 1111,
											"end": 1298,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4517,
											"end": 4623,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 4517,
											"end": 4623,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4604,
											"end": 4616,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 4604,
											"end": 4616,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4517,
											"end": 4623,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 4517,
											"end": 4623,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4517,
											"end": 4623,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4517,
											"end": 4623,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1449,
											"end": 1474,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1449,
											"end": 1474,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1449,
											"end": 1474,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1437,
											"end": 1439,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1422,
											"end": 1440,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4517,
											"end": 4623,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 1303,
											"end": 1480,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6465,
											"end": 6751,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 6465,
											"end": 6751,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6465,
											"end": 6751,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 6465,
											"end": 6751,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 6465,
											"end": 6751,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 6465,
											"end": 6751,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6465,
											"end": 6751,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 6465,
											"end": 6751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6465,
											"end": 6751,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 6465,
											"end": 6751,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6465,
											"end": 6751,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 6465,
											"end": 6751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4366,
											"end": 4457,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 4366,
											"end": 4457,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4366,
											"end": 4457,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4366,
											"end": 4457,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4448,
											"end": 4450,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 2006,
											"end": 2042,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2006,
											"end": 2042,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1994,
											"end": 1996,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1979,
											"end": 1997,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4366,
											"end": 4457,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 1864,
											"end": 2048,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7146,
											"end": 7380,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 7146,
											"end": 7380,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7146,
											"end": 7380,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 7146,
											"end": 7380,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 7146,
											"end": 7380,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 7146,
											"end": 7380,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7146,
											"end": 7380,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 7146,
											"end": 7380,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7146,
											"end": 7380,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 7146,
											"end": 7380,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7146,
											"end": 7380,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 7146,
											"end": 7380,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4681,
											"end": 4806,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 4681,
											"end": 4806,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4681,
											"end": 4806,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 4681,
											"end": 4806,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 4681,
											"end": 4806,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4681,
											"end": 4806,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4681,
											"end": 4806,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 4681,
											"end": 4806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4681,
											"end": 4806,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 4681,
											"end": 4806,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4781,
											"end": 4799,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4781,
											"end": 4799,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4755,
											"end": 4762,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4781,
											"end": 4799,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4781,
											"end": 4799,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4781,
											"end": 4799,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4781,
											"end": 4799,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4781,
											"end": 4799,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4781,
											"end": 4799,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4781,
											"end": 4799,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4781,
											"end": 4799,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4781,
											"end": 4799,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4781,
											"end": 4799,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4781,
											"end": 4799,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4781,
											"end": 4799,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4681,
											"end": 4806,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3640,
											"end": 3742,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 3640,
											"end": 3742,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3640,
											"end": 3742,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 3640,
											"end": 3742,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 3640,
											"end": 3742,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7867,
											"end": 8294,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 7867,
											"end": 8294,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7867,
											"end": 8294,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 7867,
											"end": 8294,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 7867,
											"end": 8294,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 7867,
											"end": 8294,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7867,
											"end": 8294,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 7867,
											"end": 8294,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7867,
											"end": 8294,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 7867,
											"end": 8294,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7867,
											"end": 8294,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 7867,
											"end": 8294,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5002,
											"end": 5191,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 5002,
											"end": 5191,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5002,
											"end": 5191,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 5002,
											"end": 5191,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 5002,
											"end": 5191,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5002,
											"end": 5191,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5002,
											"end": 5191,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 5002,
											"end": 5191,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5002,
											"end": 5191,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 5002,
											"end": 5191,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5002,
											"end": 5191,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 5002,
											"end": 5191,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5249,
											"end": 5398,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 5249,
											"end": 5398,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5249,
											"end": 5398,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 5249,
											"end": 5398,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 5249,
											"end": 5398,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5249,
											"end": 5398,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5249,
											"end": 5398,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 5249,
											"end": 5398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5249,
											"end": 5398,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 5249,
											"end": 5398,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5382,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5364,
											"end": 5382,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5382,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5382,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5338,
											"end": 5345,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5364,
											"end": 5382,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5382,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5382,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5375,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5364,
											"end": 5382,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5364,
											"end": 5382,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5382,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5382,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5382,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5364,
											"end": 5382,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5382,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5382,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5391,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5391,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5391,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5391,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5391,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5391,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5391,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5391,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5391,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5391,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5391,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5391,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5391,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5249,
											"end": 5398,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3429,
											"end": 3527,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 3429,
											"end": 3527,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3483,
											"end": 3496,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3515,
											"end": 3520,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 3508,
											"end": 3520,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 3508,
											"end": 3520,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3429,
											"end": 3527,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3429,
											"end": 3527,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5706,
											"end": 5903,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5706,
											"end": 5903,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5789,
											"end": 5793,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1992,
											"end": 2002,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 5843,
											"end": 5875,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 1992,
											"end": 2002,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5859,
											"end": 5866,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5868,
											"end": 5874,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5843,
											"end": 5851,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 5843,
											"end": 5875,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5843,
											"end": 5875,
											"name": "tag",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 5843,
											"end": 5875,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5892,
											"end": 5896,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5885,
											"end": 5896,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5885,
											"end": 5896,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5885,
											"end": 5896,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5706,
											"end": 5903,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 5706,
											"end": 5903,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5706,
											"end": 5903,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5706,
											"end": 5903,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5706,
											"end": 5903,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5706,
											"end": 5903,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5706,
											"end": 5903,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6465,
											"end": 6751,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 6465,
											"end": 6751,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6592,
											"end": 6596,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1992,
											"end": 2002,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 6648,
											"end": 6686,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 6664,
											"end": 6668,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1992,
											"end": 2002,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6679,
											"end": 6685,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6648,
											"end": 6663,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 6648,
											"end": 6686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6648,
											"end": 6686,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 6648,
											"end": 6686,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6696,
											"end": 6723,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 6706,
											"end": 6710,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6712,
											"end": 6714,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6716,
											"end": 6722,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6696,
											"end": 6705,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 6696,
											"end": 6723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6696,
											"end": 6723,
											"name": "tag",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 6696,
											"end": 6723,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6740,
											"end": 6744,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6740,
											"end": 6744,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 6465,
											"end": 6751,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6465,
											"end": 6751,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7146,
											"end": 7380,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 7146,
											"end": 7380,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1992,
											"end": 2002,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 7234,
											"end": 7238,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5364,
											"end": 5382,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5382,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5382,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5375,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5364,
											"end": 5382,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5364,
											"end": 5382,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5382,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5382,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5382,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5364,
											"end": 5382,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5382,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5382,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5382,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5364,
											"end": 5391,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5391,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5391,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5391,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5391,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5391,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5391,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5391,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5391,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5391,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7234,
											"end": 7238,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7234,
											"end": 7238,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1992,
											"end": 2002,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7288,
											"end": 7352,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 7288,
											"end": 7352,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1992,
											"end": 2002,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1992,
											"end": 2002,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5364,
											"end": 5391,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5391,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7313,
											"end": 7351,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 7313,
											"end": 7351,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7341,
											"end": 7351,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7341,
											"end": 7351,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7313,
											"end": 7351,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 7313,
											"end": 7351,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7313,
											"end": 7351,
											"name": "tag",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 7313,
											"end": 7351,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7288,
											"end": 7296,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 7288,
											"end": 7352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3640,
											"end": 3742,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 3640,
											"end": 3742,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3696,
											"end": 3709,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3728,
											"end": 3735,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 3721,
											"end": 3735,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7867,
											"end": 8294,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 7867,
											"end": 8294,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1992,
											"end": 2002,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 7960,
											"end": 7964,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5364,
											"end": 5382,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5382,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5382,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5375,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5364,
											"end": 5382,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5364,
											"end": 5382,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5382,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5382,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5382,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5364,
											"end": 5382,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5382,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5382,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5382,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5364,
											"end": 5391,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5391,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5391,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5391,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5391,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5391,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5391,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5391,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5391,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5391,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7960,
											"end": 7964,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7960,
											"end": 7964,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1992,
											"end": 2002,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8104,
											"end": 8119,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8084,
											"end": 8100,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8084,
											"end": 8119,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 8084,
											"end": 8119,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8076,
											"end": 8161,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 8076,
											"end": 8161,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8076,
											"end": 8161,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8076,
											"end": 8161,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8076,
											"end": 8161,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8076,
											"end": 8161,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8076,
											"end": 8161,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3437,
											"end": 3439,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8076,
											"end": 8161,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 8076,
											"end": 8161,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8076,
											"end": 8161,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3419,
											"end": 3440,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3476,
											"end": 3478,
											"name": "PUSH",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 3456,
											"end": 3474,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 3456,
											"end": 3474,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3456,
											"end": 3474,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3449,
											"end": 3479,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3515,
											"end": 3549,
											"name": "PUSH",
											"source": 5,
											"value": "45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
										},
										{
											"begin": 3495,
											"end": 3513,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 3495,
											"end": 3513,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3495,
											"end": 3513,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3488,
											"end": 3550,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3586,
											"end": 3593,
											"name": "PUSH",
											"source": 5,
											"value": "207A65726F000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3566,
											"end": 3584,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 3566,
											"end": 3584,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3566,
											"end": 3584,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3559,
											"end": 3594,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3611,
											"end": 3630,
											"name": "PUSH",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 3611,
											"end": 3630,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8076,
											"end": 8161,
											"name": "tag",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 8076,
											"end": 8161,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8076,
											"end": 8161,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8076,
											"end": 8161,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8076,
											"end": 8161,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8076,
											"end": 8161,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8076,
											"end": 8161,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8076,
											"end": 8161,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8076,
											"end": 8161,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 8076,
											"end": 8161,
											"name": "tag",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 8076,
											"end": 8161,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8195,
											"end": 8255,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 8204,
											"end": 8209,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8211,
											"end": 8218,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 8239,
											"end": 8254,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 8220,
											"end": 8236,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8220,
											"end": 8254,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8195,
											"end": 8203,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 8195,
											"end": 8255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5002,
											"end": 5191,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 5002,
											"end": 5191,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5081,
											"end": 5085,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1992,
											"end": 2002,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 5135,
											"end": 5163,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 1992,
											"end": 2002,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5152,
											"end": 5154,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5156,
											"end": 5162,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5135,
											"end": 5144,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 5135,
											"end": 5163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11383,
											"end": 11753,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 11383,
											"end": 11753,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11514,
											"end": 11533,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11514,
											"end": 11533,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11514,
											"end": 11533,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11506,
											"end": 11574,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 11506,
											"end": 11574,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11506,
											"end": 11574,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11506,
											"end": 11574,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11506,
											"end": 11574,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11506,
											"end": 11574,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11506,
											"end": 11574,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3843,
											"end": 3845,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 11506,
											"end": 11574,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 11506,
											"end": 11574,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11506,
											"end": 11574,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3825,
											"end": 3846,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3882,
											"end": 3884,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 3862,
											"end": 3880,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3862,
											"end": 3880,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3862,
											"end": 3880,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3855,
											"end": 3885,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3921,
											"end": 3955,
											"name": "PUSH",
											"source": 5,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 3901,
											"end": 3919,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 3901,
											"end": 3919,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3901,
											"end": 3919,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3894,
											"end": 3956,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3992,
											"end": 3998,
											"name": "PUSH",
											"source": 5,
											"value": "7265737300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3972,
											"end": 3990,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 3972,
											"end": 3990,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3972,
											"end": 3990,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3965,
											"end": 3999,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4016,
											"end": 4035,
											"name": "PUSH",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 4016,
											"end": 4035,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11506,
											"end": 11574,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 3641,
											"end": 4041,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11506,
											"end": 11574,
											"name": "tag",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 11506,
											"end": 11574,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11592,
											"end": 11613,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11592,
											"end": 11613,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11592,
											"end": 11613,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11584,
											"end": 11652,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 11584,
											"end": 11652,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11584,
											"end": 11652,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11584,
											"end": 11652,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11584,
											"end": 11652,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11584,
											"end": 11652,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11584,
											"end": 11652,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4248,
											"end": 4250,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 11584,
											"end": 11652,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 11584,
											"end": 11652,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11584,
											"end": 11652,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4230,
											"end": 4251,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4287,
											"end": 4289,
											"name": "PUSH",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 4267,
											"end": 4285,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 4267,
											"end": 4285,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4267,
											"end": 4285,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4260,
											"end": 4290,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4326,
											"end": 4360,
											"name": "PUSH",
											"source": 5,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 4306,
											"end": 4324,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 4306,
											"end": 4324,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4306,
											"end": 4324,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4299,
											"end": 4361,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4397,
											"end": 4401,
											"name": "PUSH",
											"source": 5,
											"value": "7373000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4377,
											"end": 4395,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 4377,
											"end": 4395,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4377,
											"end": 4395,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4370,
											"end": 4402,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4419,
											"end": 4438,
											"name": "PUSH",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 4419,
											"end": 4438,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11584,
											"end": 11652,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 4046,
											"end": 4444,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11584,
											"end": 11652,
											"name": "tag",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 11584,
											"end": 11652,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11663,
											"end": 11681,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11663,
											"end": 11681,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11663,
											"end": 11681,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11663,
											"end": 11681,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11663,
											"end": 11681,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11663,
											"end": 11681,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11663,
											"end": 11681,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11663,
											"end": 11681,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11663,
											"end": 11674,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 11663,
											"end": 11681,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11663,
											"end": 11681,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11663,
											"end": 11681,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11663,
											"end": 11681,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11663,
											"end": 11681,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11663,
											"end": 11681,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11663,
											"end": 11681,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11663,
											"end": 11681,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 11663,
											"end": 11690,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 11663,
											"end": 11690,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 11663,
											"end": 11690,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11663,
											"end": 11690,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11663,
											"end": 11690,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11663,
											"end": 11690,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11663,
											"end": 11690,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 11663,
											"end": 11690,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11663,
											"end": 11690,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11663,
											"end": 11690,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11663,
											"end": 11690,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11663,
											"end": 11690,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11663,
											"end": 11690,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 11663,
											"end": 11699,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 11663,
											"end": 11699,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11663,
											"end": 11699,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 11714,
											"end": 11746,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11714,
											"end": 11746,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1449,
											"end": 1474,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1449,
											"end": 1474,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1449,
											"end": 1474,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 11714,
											"end": 11746,
											"name": "PUSH",
											"source": 1,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 11714,
											"end": 11746,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1422,
											"end": 1440,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11714,
											"end": 11746,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11714,
											"end": 11746,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11714,
											"end": 11746,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11714,
											"end": 11746,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11714,
											"end": 11746,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11714,
											"end": 11746,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11714,
											"end": 11746,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 11383,
											"end": 11753,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11383,
											"end": 11753,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11383,
											"end": 11753,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11383,
											"end": 11753,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12034,
											"end": 12475,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 12034,
											"end": 12475,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5382,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5364,
											"end": 5382,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5382,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5382,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12164,
											"end": 12188,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5364,
											"end": 5382,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5382,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5382,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5375,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5364,
											"end": 5382,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5364,
											"end": 5382,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5382,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5382,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5382,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5364,
											"end": 5382,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5382,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5382,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5391,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5391,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5391,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5391,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5391,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5391,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5391,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5391,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5391,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5391,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 12250,
											"end": 12267,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12230,
											"end": 12267,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12230,
											"end": 12267,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 12226,
											"end": 12469,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 12226,
											"end": 12469,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12311,
											"end": 12317,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12291,
											"end": 12307,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12291,
											"end": 12317,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 12291,
											"end": 12317,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 12283,
											"end": 12351,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 12283,
											"end": 12351,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12283,
											"end": 12351,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12283,
											"end": 12351,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 12283,
											"end": 12351,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12283,
											"end": 12351,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12283,
											"end": 12351,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4651,
											"end": 4653,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 12283,
											"end": 12351,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 12283,
											"end": 12351,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12283,
											"end": 12351,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4633,
											"end": 4654,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4690,
											"end": 4692,
											"name": "PUSH",
											"source": 5,
											"value": "1D"
										},
										{
											"begin": 4670,
											"end": 4688,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 4670,
											"end": 4688,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4670,
											"end": 4688,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4663,
											"end": 4693,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4729,
											"end": 4760,
											"name": "PUSH",
											"source": 5,
											"value": "45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000"
										},
										{
											"begin": 4709,
											"end": 4727,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 4709,
											"end": 4727,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4709,
											"end": 4727,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4702,
											"end": 4761,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4778,
											"end": 4796,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 4778,
											"end": 4796,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12283,
											"end": 12351,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 4449,
											"end": 4802,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12283,
											"end": 12351,
											"name": "tag",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 12283,
											"end": 12351,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12393,
											"end": 12444,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 12402,
											"end": 12407,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 12409,
											"end": 12416,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 12437,
											"end": 12443,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 12418,
											"end": 12434,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 12418,
											"end": 12443,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 12393,
											"end": 12401,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 12393,
											"end": 12444,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12393,
											"end": 12444,
											"name": "tag",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 12393,
											"end": 12444,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12154,
											"end": 12475,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12034,
											"end": 12475,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12034,
											"end": 12475,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12034,
											"end": 12475,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12034,
											"end": 12475,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8748,
											"end": 9399,
											"name": "tag",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 8748,
											"end": 9399,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8874,
											"end": 8892,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8874,
											"end": 8892,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8874,
											"end": 8892,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8866,
											"end": 8934,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 8866,
											"end": 8934,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8866,
											"end": 8934,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8866,
											"end": 8934,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8866,
											"end": 8934,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8866,
											"end": 8934,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8866,
											"end": 8934,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5009,
											"end": 5011,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8866,
											"end": 8934,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 8866,
											"end": 8934,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8866,
											"end": 8934,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4991,
											"end": 5012,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5048,
											"end": 5050,
											"name": "PUSH",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 5028,
											"end": 5046,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 5028,
											"end": 5046,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5028,
											"end": 5046,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5021,
											"end": 5051,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5087,
											"end": 5121,
											"name": "PUSH",
											"source": 5,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 5067,
											"end": 5085,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 5067,
											"end": 5085,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5067,
											"end": 5085,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5060,
											"end": 5122,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5158,
											"end": 5165,
											"name": "PUSH",
											"source": 5,
											"value": "6472657373000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5138,
											"end": 5156,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 5138,
											"end": 5156,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5138,
											"end": 5156,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5131,
											"end": 5166,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5183,
											"end": 5202,
											"name": "PUSH",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 5183,
											"end": 5202,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8866,
											"end": 8934,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 4807,
											"end": 5208,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8866,
											"end": 8934,
											"name": "tag",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 8866,
											"end": 8934,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8952,
											"end": 8968,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8952,
											"end": 8968,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8952,
											"end": 8968,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8944,
											"end": 9008,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 8944,
											"end": 9008,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8944,
											"end": 9008,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8944,
											"end": 9008,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8944,
											"end": 9008,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8944,
											"end": 9008,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8944,
											"end": 9008,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5415,
											"end": 5417,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8944,
											"end": 9008,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 8944,
											"end": 9008,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8944,
											"end": 9008,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5397,
											"end": 5418,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5454,
											"end": 5456,
											"name": "PUSH",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 5434,
											"end": 5452,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 5434,
											"end": 5452,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5434,
											"end": 5452,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5427,
											"end": 5457,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5493,
											"end": 5527,
											"name": "PUSH",
											"source": 5,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 5473,
											"end": 5491,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 5473,
											"end": 5491,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5473,
											"end": 5491,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5466,
											"end": 5528,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5564,
											"end": 5569,
											"name": "PUSH",
											"source": 5,
											"value": "6573730000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5544,
											"end": 5562,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 5544,
											"end": 5562,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5544,
											"end": 5562,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5537,
											"end": 5570,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5587,
											"end": 5606,
											"name": "PUSH",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 5587,
											"end": 5606,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8944,
											"end": 9008,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 5213,
											"end": 5612,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8944,
											"end": 9008,
											"name": "tag",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 8944,
											"end": 9008,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9090,
											"end": 9105,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9090,
											"end": 9105,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9090,
											"end": 9105,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9068,
											"end": 9087,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9090,
											"end": 9105,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9090,
											"end": 9105,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9090,
											"end": 9105,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9090,
											"end": 9105,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9090,
											"end": 9105,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9090,
											"end": 9105,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9090,
											"end": 9105,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9090,
											"end": 9105,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9090,
											"end": 9105,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9090,
											"end": 9105,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 9090,
											"end": 9105,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 9123,
											"end": 9144,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9123,
											"end": 9144,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9123,
											"end": 9144,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 9123,
											"end": 9144,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 9115,
											"end": 9187,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 9115,
											"end": 9187,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9115,
											"end": 9187,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9115,
											"end": 9187,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9115,
											"end": 9187,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9115,
											"end": 9187,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9115,
											"end": 9187,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5819,
											"end": 5821,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9115,
											"end": 9187,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9115,
											"end": 9187,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9115,
											"end": 9187,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5801,
											"end": 5822,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5858,
											"end": 5860,
											"name": "PUSH",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 5838,
											"end": 5856,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 5838,
											"end": 5856,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5838,
											"end": 5856,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5831,
											"end": 5861,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5897,
											"end": 5931,
											"name": "PUSH",
											"source": 5,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732062"
										},
										{
											"begin": 5877,
											"end": 5895,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 5877,
											"end": 5895,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5877,
											"end": 5895,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5870,
											"end": 5932,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5968,
											"end": 5976,
											"name": "PUSH",
											"source": 5,
											"value": "616C616E63650000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5948,
											"end": 5966,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 5948,
											"end": 5966,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5948,
											"end": 5966,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5941,
											"end": 5977,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5994,
											"end": 6013,
											"name": "PUSH",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 5994,
											"end": 6013,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9115,
											"end": 9187,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 5617,
											"end": 6019,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9115,
											"end": 9187,
											"name": "tag",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 9115,
											"end": 9187,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9221,
											"end": 9236,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9221,
											"end": 9236,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9221,
											"end": 9236,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9221,
											"end": 9236,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9221,
											"end": 9230,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9221,
											"end": 9236,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9221,
											"end": 9236,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9221,
											"end": 9236,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9221,
											"end": 9236,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9221,
											"end": 9236,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9221,
											"end": 9236,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9221,
											"end": 9236,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9221,
											"end": 9236,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9221,
											"end": 9236,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9221,
											"end": 9236,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9221,
											"end": 9236,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 9239,
											"end": 9259,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9239,
											"end": 9259,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9239,
											"end": 9259,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9221,
											"end": 9259,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9221,
											"end": 9259,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 9279,
											"end": 9292,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9279,
											"end": 9292,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9279,
											"end": 9292,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9279,
											"end": 9292,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9279,
											"end": 9292,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9279,
											"end": 9292,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9279,
											"end": 9292,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9279,
											"end": 9292,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 9279,
											"end": 9302,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9279,
											"end": 9302,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 9253,
											"end": 9259,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9253,
											"end": 9259,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9221,
											"end": 9230,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9279,
											"end": 9302,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 9279,
											"end": 9302,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9253,
											"end": 9259,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9253,
											"end": 9259,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9279,
											"end": 9302,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 9279,
											"end": 9302,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9279,
											"end": 9302,
											"name": "tag",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 9279,
											"end": 9302,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9279,
											"end": 9302,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9279,
											"end": 9302,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9279,
											"end": 9302,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9279,
											"end": 9302,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9279,
											"end": 9302,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9279,
											"end": 9302,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 9279,
											"end": 9302,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9333,
											"end": 9335,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9318,
											"end": 9344,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9318,
											"end": 9344,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9327,
											"end": 9331,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9318,
											"end": 9344,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9318,
											"end": 9344,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9318,
											"end": 9344,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 9337,
											"end": 9343,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9318,
											"end": 9344,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9318,
											"end": 9344,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9318,
											"end": 9344,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 9318,
											"end": 9344,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1449,
											"end": 1474,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1449,
											"end": 1474,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1437,
											"end": 1439,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1422,
											"end": 1440,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1422,
											"end": 1440,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1303,
											"end": 1480,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9318,
											"end": 9344,
											"name": "tag",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 9318,
											"end": 9344,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9318,
											"end": 9344,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9318,
											"end": 9344,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9318,
											"end": 9344,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9318,
											"end": 9344,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9318,
											"end": 9344,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9318,
											"end": 9344,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9318,
											"end": 9344,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 9355,
											"end": 9392,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 13059,
											"end": 13180,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 600,
											"name": "tag",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 14,
											"end": 600,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 163,
											"end": 165,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 152,
											"end": 161,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 145,
											"end": 166,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 195,
											"end": 201,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 189,
											"end": 202,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 238,
											"end": 244,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 233,
											"end": 235,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 222,
											"end": 231,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 218,
											"end": 236,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 211,
											"end": 245,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 263,
											"end": 264,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 273,
											"end": 413,
											"name": "tag",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 273,
											"end": 413,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 287,
											"end": 293,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 284,
											"end": 285,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 281,
											"end": 294,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 273,
											"end": 413,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 273,
											"end": 413,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 273,
											"end": 413,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 398,
											"end": 400,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 382,
											"end": 396,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 382,
											"end": 396,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 382,
											"end": 396,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 378,
											"end": 401,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 378,
											"end": 401,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 372,
											"end": 402,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 367,
											"end": 369,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 348,
											"end": 365,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 348,
											"end": 365,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 348,
											"end": 365,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 344,
											"end": 370,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 337,
											"end": 403,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 302,
											"end": 312,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 273,
											"end": 413,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 273,
											"end": 413,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 273,
											"end": 413,
											"name": "tag",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 273,
											"end": 413,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 277,
											"end": 280,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 462,
											"end": 463,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 457,
											"end": 459,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 448,
											"end": 454,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 437,
											"end": 446,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 433,
											"end": 455,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 429,
											"end": 460,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 422,
											"end": 464,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 591,
											"end": 593,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 521,
											"end": 587,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0"
										},
										{
											"begin": 516,
											"end": 518,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 508,
											"end": 514,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 504,
											"end": 519,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 500,
											"end": 588,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 489,
											"end": 498,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 485,
											"end": 589,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 481,
											"end": 594,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 473,
											"end": 594,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 473,
											"end": 594,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 473,
											"end": 594,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14,
											"end": 600,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 14,
											"end": 600,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 14,
											"end": 600,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14,
											"end": 600,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14,
											"end": 600,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 605,
											"end": 801,
											"name": "tag",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 605,
											"end": 801,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 673,
											"end": 693,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 673,
											"end": 693,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 733,
											"end": 775,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 722,
											"end": 776,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 722,
											"end": 776,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 712,
											"end": 777,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 712,
											"end": 777,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 702,
											"end": 795,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 702,
											"end": 795,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 791,
											"end": 792,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 788,
											"end": 789,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 781,
											"end": 793,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 702,
											"end": 795,
											"name": "tag",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 702,
											"end": 795,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 605,
											"end": 801,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 605,
											"end": 801,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 605,
											"end": 801,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 605,
											"end": 801,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 806,
											"end": 1106,
											"name": "tag",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 806,
											"end": 1106,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 874,
											"end": 880,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 882,
											"end": 888,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 935,
											"end": 937,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 923,
											"end": 932,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 914,
											"end": 921,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 910,
											"end": 933,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 906,
											"end": 938,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 903,
											"end": 955,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 903,
											"end": 955,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 903,
											"end": 955,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 951,
											"end": 952,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 948,
											"end": 949,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 941,
											"end": 953,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 903,
											"end": 955,
											"name": "tag",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 903,
											"end": 955,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 974,
											"end": 1003,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 993,
											"end": 1002,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 974,
											"end": 1003,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 974,
											"end": 1003,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 974,
											"end": 1003,
											"name": "tag",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 974,
											"end": 1003,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 964,
											"end": 1003,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 1072,
											"end": 1074,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1057,
											"end": 1075,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1057,
											"end": 1075,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1057,
											"end": 1075,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1057,
											"end": 1075,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1044,
											"end": 1076,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 1044,
											"end": 1076,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 806,
											"end": 1106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1485,
											"end": 1859,
											"name": "tag",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 1485,
											"end": 1859,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1562,
											"end": 1568,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1570,
											"end": 1576,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1578,
											"end": 1584,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1631,
											"end": 1633,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 1619,
											"end": 1628,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1610,
											"end": 1617,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1606,
											"end": 1629,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1602,
											"end": 1634,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1599,
											"end": 1651,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1599,
											"end": 1651,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 1599,
											"end": 1651,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1647,
											"end": 1648,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1644,
											"end": 1645,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1637,
											"end": 1649,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1599,
											"end": 1651,
											"name": "tag",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 1599,
											"end": 1651,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1670,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 1689,
											"end": 1698,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1670,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 1670,
											"end": 1699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1670,
											"end": 1699,
											"name": "tag",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 1670,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1660,
											"end": 1699,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1660,
											"end": 1699,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1718,
											"end": 1756,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 1752,
											"end": 1754,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1741,
											"end": 1750,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1737,
											"end": 1755,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1718,
											"end": 1756,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 1718,
											"end": 1756,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1718,
											"end": 1756,
											"name": "tag",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 1718,
											"end": 1756,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1485,
											"end": 1859,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1485,
											"end": 1859,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 1708,
											"end": 1756,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1708,
											"end": 1756,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1825,
											"end": 1827,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1810,
											"end": 1828,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1810,
											"end": 1828,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1810,
											"end": 1828,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1810,
											"end": 1828,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1797,
											"end": 1829,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 1797,
											"end": 1829,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1485,
											"end": 1859,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2239,
											"name": "tag",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 2053,
											"end": 2239,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2112,
											"end": 2118,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2165,
											"end": 2167,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2153,
											"end": 2162,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2144,
											"end": 2151,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2140,
											"end": 2163,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2136,
											"end": 2168,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 2133,
											"end": 2185,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2133,
											"end": 2185,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 2133,
											"end": 2185,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2181,
											"end": 2182,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2178,
											"end": 2179,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2171,
											"end": 2183,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2133,
											"end": 2185,
											"name": "tag",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 2133,
											"end": 2185,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2204,
											"end": 2233,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 2223,
											"end": 2232,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2204,
											"end": 2233,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 2204,
											"end": 2233,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2204,
											"end": 2233,
											"name": "tag",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 2204,
											"end": 2233,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2194,
											"end": 2233,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2239,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2053,
											"end": 2239,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2244,
											"end": 2504,
											"name": "tag",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 2244,
											"end": 2504,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2312,
											"end": 2318,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2320,
											"end": 2326,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2373,
											"end": 2375,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2361,
											"end": 2370,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2352,
											"end": 2359,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2348,
											"end": 2371,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2344,
											"end": 2376,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 2341,
											"end": 2393,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2341,
											"end": 2393,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 2341,
											"end": 2393,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2389,
											"end": 2390,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2386,
											"end": 2387,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2379,
											"end": 2391,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2341,
											"end": 2393,
											"name": "tag",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 2341,
											"end": 2393,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2412,
											"end": 2441,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 2431,
											"end": 2440,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2412,
											"end": 2441,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 2412,
											"end": 2441,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2412,
											"end": 2441,
											"name": "tag",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 2412,
											"end": 2441,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2402,
											"end": 2441,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2402,
											"end": 2441,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2460,
											"end": 2498,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 2494,
											"end": 2496,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2483,
											"end": 2492,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2479,
											"end": 2497,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2460,
											"end": 2498,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 2460,
											"end": 2498,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2460,
											"end": 2498,
											"name": "tag",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 2460,
											"end": 2498,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2450,
											"end": 2498,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2450,
											"end": 2498,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2244,
											"end": 2504,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2244,
											"end": 2504,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2244,
											"end": 2504,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2244,
											"end": 2504,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2244,
											"end": 2504,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2244,
											"end": 2504,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2509,
											"end": 2946,
											"name": "tag",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 2509,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2588,
											"end": 2589,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2584,
											"end": 2596,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2584,
											"end": 2596,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2584,
											"end": 2596,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 2584,
											"end": 2596,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2631,
											"end": 2643,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2631,
											"end": 2643,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2631,
											"end": 2643,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2652,
											"end": 2713,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 2652,
											"end": 2713,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2706,
											"end": 2710,
											"name": "PUSH",
											"source": 5,
											"value": "7F"
										},
										{
											"begin": 2698,
											"end": 2704,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2694,
											"end": 2711,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2684,
											"end": 2711,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2684,
											"end": 2711,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2652,
											"end": 2713,
											"name": "tag",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 2652,
											"end": 2713,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2759,
											"end": 2761,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2751,
											"end": 2757,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2748,
											"end": 2762,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 2728,
											"end": 2746,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2725,
											"end": 2763,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2722,
											"end": 2940,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 2722,
											"end": 2940,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2796,
											"end": 2873,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2793,
											"end": 2794,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2786,
											"end": 2874,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2897,
											"end": 2901,
											"name": "PUSH",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 2894,
											"end": 2895,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2887,
											"end": 2902,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2925,
											"end": 2929,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 2922,
											"end": 2923,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2915,
											"end": 2930,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2722,
											"end": 2940,
											"name": "tag",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 2722,
											"end": 2940,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2722,
											"end": 2940,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2509,
											"end": 2946,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2509,
											"end": 2946,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2509,
											"end": 2946,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2509,
											"end": 2946,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2951,
											"end": 3230,
											"name": "tag",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 2951,
											"end": 3230,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3016,
											"end": 3025,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3016,
											"end": 3025,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3016,
											"end": 3025,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3037,
											"end": 3047,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3037,
											"end": 3047,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3037,
											"end": 3047,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 3034,
											"end": 3224,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3034,
											"end": 3224,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 3034,
											"end": 3224,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3080,
											"end": 3157,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3077,
											"end": 3078,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3070,
											"end": 3158,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3181,
											"end": 3185,
											"name": "PUSH",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 3178,
											"end": 3179,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3171,
											"end": 3186,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3209,
											"end": 3213,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 3206,
											"end": 3207,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3199,
											"end": 3214,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"simple-token(copy)(copy)/simple-token.sol",
								"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"simple-token/@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"simple-token/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"simple-token/@openzeppelin/contracts/utils/Context.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28-nightly.2024.10.2+commit.256e9528\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Breakthrough Labs Inc.\",\"custom:address\":\"4\",\"custom:default-precision\":\"18\",\"custom:simple-description\":\"Simple Token. A fixed supply is minted on deployment, and new tokens can never be created.\",\"custom:version\":\"1.0.7\",\"details\":\"ERC20 token with the following features:  - Premint your total supply.  - No minting function. This allows users to comfortably know the future supply of the token.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"params\":{\"name\":\"Token Name\",\"symbol\":\"Token Symbol\",\"totalSupply\":\"Token Supply\"}},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"title\":\"Simple Token\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Token, ERC20, Fixed Supply\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"simple-token(copy)(copy)/simple-token.sol\":\"FixedToken\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":5000000},\"remappings\":[]},\"sources\":{\"simple-token(copy)(copy)/simple-token.sol\":{\"keccak256\":\"0x2c6c431911f479d017a69e2d01cab0c6ae930e246ed33db40a2940a35006dc09\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://77d9ab54ff9dcafdbc33f31def4fa31e0e3ba972e85e501261a8e5ae926b1703\",\"dweb:/ipfs/QmYck78tGgQdee1CcdY7P6tFnJEks3cxZXts9dM1KzBxrx\"]},\"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xd313527bf68e0ee9c175a30d7e8cd5fd7def33e6e8e496468f9df112c2c76514\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c341254272e3693e1c255983dede9908224d58b42b573ffdf3a6bcd646553bec\",\"dweb:/ipfs/QmbE7JTjZCvazLeVYJPjY2FKs6b27YGMkYKaSTsNBPbdBk\"]},\"simple-token/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc61f8ffb10277281595872a49be00f4c58f55080c5a2ed9c2eb57a99a4c43d86\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://686de33d3059962bf83f3480b635402d68369297837b98733ecb7f6603e00dcd\",\"dweb:/ipfs/QmbdGx98jVXUSxwzbLpV3cQRzS7Pxbm4esxYP8kvtPfEc8\"]},\"simple-token/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x2016abf3d4656313ca73fc34f567844028899002129a23941fb59e05f79520c7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://109c16cd3ad0c3ff47c9d4f094d63072d45d34c6e40bb24936441ba7b2724d70\",\"dweb:/ipfs/QmYwbc5Kno1zWwDWVppDNgFgJeUavSF8H3zaHXr2hyahJs\"]},\"simple-token/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x9fbdf4b7a61bf731d34121173466348ea5448932facf54b0ffa3cbcb171e7f40\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f9efc8dd1bf3d406de0485d3eb249263c8d87b7c74f6eef13d0fb0889808792e\",\"dweb:/ipfs/QmaonHVxmrnDSkBQayhNS2A6XeX32pG8fHVEPLQZYwTh8U\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 43,
								"contract": "simple-token(copy)(copy)/simple-token.sol:FixedToken",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 49,
								"contract": "simple-token(copy)(copy)/simple-token.sol:FixedToken",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 51,
								"contract": "simple-token(copy)(copy)/simple-token.sol:FixedToken",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 53,
								"contract": "simple-token(copy)(copy)/simple-token.sol:FixedToken",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 55,
								"contract": "simple-token(copy)(copy)/simple-token.sol:FixedToken",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Token, ERC20, Fixed Supply",
						"version": 1
					}
				}
			},
			"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":2676:13890  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  mstore(0x40, 0x80)\n    /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3251:3364  constructor(string memory name_, string memory symbol_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3317:3322  _name */\n  0x03\n    /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3317:3330  _name = name_ */\n  tag_6\n    /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3325:3330  name_ */\n  dup4\n    /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3317:3322  _name */\n  dup3\n    /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3317:3330  _name = name_ */\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3340:3347  _symbol */\n  0x04\n    /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3340:3357  _symbol = symbol_ */\n  tag_8\n    /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3350:3357  symbol_ */\n  dup3\n    /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3340:3347  _symbol */\n  dup3\n    /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3340:3357  _symbol = symbol_ */\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n    /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3251:3364  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":2676:13890  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  jump(tag_16)\n    /* \"#utility.yul\":14:141   */\ntag_10:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:980   */\ntag_11:\n    /* \"#utility.yul\":200:205   */\n  0x00\n    /* \"#utility.yul\":253:256   */\n  dup3\n    /* \"#utility.yul\":246:250   */\n  0x1f\n    /* \"#utility.yul\":238:244   */\n  dup4\n    /* \"#utility.yul\":234:251   */\n  add\n    /* \"#utility.yul\":230:257   */\n  slt\n    /* \"#utility.yul\":220:275   */\n  tag_19\n  jumpi\n    /* \"#utility.yul\":271:272   */\n  0x00\n    /* \"#utility.yul\":268:269   */\n  dup1\n    /* \"#utility.yul\":261:273   */\n  revert\n    /* \"#utility.yul\":220:275   */\ntag_19:\n    /* \"#utility.yul\":298:311   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":323:353   */\n  dup2\n  gt\n    /* \"#utility.yul\":320:376   */\n  iszero\n  tag_21\n  jumpi\n    /* \"#utility.yul\":356:374   */\n  tag_21\n  tag_10\n  jump\t// in\ntag_21:\n    /* \"#utility.yul\":405:407   */\n  0x40\n    /* \"#utility.yul\":399:408   */\n  mload\n    /* \"#utility.yul\":497:499   */\n  0x1f\n    /* \"#utility.yul\":459:476   */\n  dup3\n  add\n  not(0x1f)\n    /* \"#utility.yul\":455:486   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":488:490   */\n  0x3f\n    /* \"#utility.yul\":451:491   */\n  add\n    /* \"#utility.yul\":447:501   */\n  and\n    /* \"#utility.yul\":435:502   */\n  dup2\n  add\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":517:551   */\n  dup2\n  gt\n    /* \"#utility.yul\":553:575   */\n  dup3\n  dup3\n  lt\n    /* \"#utility.yul\":514:576   */\n  or\n    /* \"#utility.yul\":511:599   */\n  iszero\n  tag_23\n  jumpi\n    /* \"#utility.yul\":579:597   */\n  tag_23\n  tag_10\n  jump\t// in\ntag_23:\n    /* \"#utility.yul\":615:617   */\n  0x40\n    /* \"#utility.yul\":608:630   */\n  mstore\n    /* \"#utility.yul\":639:661   */\n  dup2\n  dup2\n  mstore\n    /* \"#utility.yul\":680:699   */\n  dup4\n  dup3\n  add\n    /* \"#utility.yul\":701:705   */\n  0x20\n    /* \"#utility.yul\":676:706   */\n  add\n    /* \"#utility.yul\":673:712   */\n  dup6\n  lt\n    /* \"#utility.yul\":670:729   */\n  iszero\n  tag_24\n  jumpi\n    /* \"#utility.yul\":725:726   */\n  0x00\n    /* \"#utility.yul\":722:723   */\n  dup1\n    /* \"#utility.yul\":715:727   */\n  revert\n    /* \"#utility.yul\":670:729   */\ntag_24:\n    /* \"#utility.yul\":747:748   */\n  0x00\n    /* \"#utility.yul\":757:900   */\ntag_25:\n    /* \"#utility.yul\":771:777   */\n  dup3\n    /* \"#utility.yul\":768:769   */\n  dup2\n    /* \"#utility.yul\":765:778   */\n  lt\n    /* \"#utility.yul\":757:900   */\n  iszero\n  tag_27\n  jumpi\n    /* \"#utility.yul\":883:887   */\n  0x20\n    /* \"#utility.yul\":867:881   */\n  dup2\n  dup7\n  add\n    /* \"#utility.yul\":863:888   */\n  dup2\n  add\n    /* \"#utility.yul\":857:889   */\n  mload\n    /* \"#utility.yul\":834:848   */\n  dup4\n  dup4\n  add\n    /* \"#utility.yul\":830:855   */\n  dup3\n  add\n    /* \"#utility.yul\":823:890   */\n  mstore\n    /* \"#utility.yul\":786:798   */\n  add\n    /* \"#utility.yul\":757:900   */\n  jump(tag_25)\ntag_27:\n  pop\n    /* \"#utility.yul\":948:949   */\n  0x00\n    /* \"#utility.yul\":920:939   */\n  swap2\n  dup2\n  add\n    /* \"#utility.yul\":941:945   */\n  0x20\n    /* \"#utility.yul\":916:946   */\n  add\n    /* \"#utility.yul\":909:950   */\n  swap2\n  swap1\n  swap2\n  mstore\n    /* \"#utility.yul\":924:930   */\n  swap4\n    /* \"#utility.yul\":146:980   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":985:1542   */\ntag_3:\n    /* \"#utility.yul\":1084:1090   */\n  0x00\n    /* \"#utility.yul\":1092:1098   */\n  dup1\n    /* \"#utility.yul\":1145:1147   */\n  0x40\n    /* \"#utility.yul\":1133:1142   */\n  dup4\n    /* \"#utility.yul\":1124:1131   */\n  dup6\n    /* \"#utility.yul\":1120:1143   */\n  sub\n    /* \"#utility.yul\":1116:1148   */\n  slt\n    /* \"#utility.yul\":1113:1165   */\n  iszero\n  tag_29\n  jumpi\n    /* \"#utility.yul\":1161:1162   */\n  0x00\n    /* \"#utility.yul\":1158:1159   */\n  dup1\n    /* \"#utility.yul\":1151:1163   */\n  revert\n    /* \"#utility.yul\":1113:1165   */\ntag_29:\n    /* \"#utility.yul\":1188:1204   */\n  dup3\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1216:1246   */\n  dup2\n  gt\n    /* \"#utility.yul\":1213:1263   */\n  iszero\n  tag_30\n  jumpi\n    /* \"#utility.yul\":1259:1260   */\n  0x00\n    /* \"#utility.yul\":1256:1257   */\n  dup1\n    /* \"#utility.yul\":1249:1261   */\n  revert\n    /* \"#utility.yul\":1213:1263   */\ntag_30:\n    /* \"#utility.yul\":1282:1343   */\n  tag_31\n    /* \"#utility.yul\":1335:1342   */\n  dup6\n    /* \"#utility.yul\":1326:1332   */\n  dup3\n    /* \"#utility.yul\":1315:1324   */\n  dup7\n    /* \"#utility.yul\":1311:1333   */\n  add\n    /* \"#utility.yul\":1282:1343   */\n  tag_11\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":1389:1391   */\n  0x20\n    /* \"#utility.yul\":1374:1392   */\n  dup6\n  add\n    /* \"#utility.yul\":1368:1393   */\n  mload\n    /* \"#utility.yul\":1272:1343   */\n  swap1\n  swap4\n  pop\n    /* \"#utility.yul\":1368:1393   */\n  swap1\n  pop\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1405:1437   */\n  dup2\n  gt\n    /* \"#utility.yul\":1402:1454   */\n  iszero\n  tag_32\n  jumpi\n    /* \"#utility.yul\":1450:1451   */\n  0x00\n    /* \"#utility.yul\":1447:1448   */\n  dup1\n    /* \"#utility.yul\":1440:1452   */\n  revert\n    /* \"#utility.yul\":1402:1454   */\ntag_32:\n    /* \"#utility.yul\":1473:1536   */\n  tag_33\n    /* \"#utility.yul\":1528:1535   */\n  dup6\n    /* \"#utility.yul\":1517:1525   */\n  dup3\n    /* \"#utility.yul\":1506:1515   */\n  dup7\n    /* \"#utility.yul\":1502:1526   */\n  add\n    /* \"#utility.yul\":1473:1536   */\n  tag_11\n  jump\t// in\ntag_33:\n    /* \"#utility.yul\":1463:1536   */\n  swap2\n  pop\n  pop\n    /* \"#utility.yul\":985:1542   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1547:1927   */\ntag_12:\n    /* \"#utility.yul\":1626:1627   */\n  0x01\n    /* \"#utility.yul\":1622:1634   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":1669:1681   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":1690:1751   */\n  tag_35\n  jumpi\n    /* \"#utility.yul\":1744:1748   */\n  0x7f\n    /* \"#utility.yul\":1736:1742   */\n  dup3\n    /* \"#utility.yul\":1732:1749   */\n  and\n    /* \"#utility.yul\":1722:1749   */\n  swap2\n  pop\n    /* \"#utility.yul\":1690:1751   */\ntag_35:\n    /* \"#utility.yul\":1797:1799   */\n  0x20\n    /* \"#utility.yul\":1789:1795   */\n  dup3\n    /* \"#utility.yul\":1786:1800   */\n  lt\n    /* \"#utility.yul\":1766:1784   */\n  dup2\n    /* \"#utility.yul\":1763:1801   */\n  sub\n    /* \"#utility.yul\":1760:1921   */\n  tag_36\n  jumpi\n    /* \"#utility.yul\":1843:1853   */\n  0x4e487b71\n    /* \"#utility.yul\":1838:1841   */\n  0xe0\n    /* \"#utility.yul\":1834:1854   */\n  shl\n    /* \"#utility.yul\":1831:1832   */\n  0x00\n    /* \"#utility.yul\":1824:1855   */\n  mstore\n    /* \"#utility.yul\":1878:1882   */\n  0x22\n    /* \"#utility.yul\":1875:1876   */\n  0x04\n    /* \"#utility.yul\":1868:1883   */\n  mstore\n    /* \"#utility.yul\":1906:1910   */\n  0x24\n    /* \"#utility.yul\":1903:1904   */\n  0x00\n    /* \"#utility.yul\":1896:1911   */\n  revert\n    /* \"#utility.yul\":1760:1921   */\ntag_36:\n  pop\n    /* \"#utility.yul\":1547:1927   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2058:2576   */\ntag_14:\n    /* \"#utility.yul\":2160:2162   */\n  0x1f\n    /* \"#utility.yul\":2155:2158   */\n  dup3\n    /* \"#utility.yul\":2152:2163   */\n  gt\n    /* \"#utility.yul\":2149:2570   */\n  iszero\n  tag_39\n  jumpi\n    /* \"#utility.yul\":2196:2201   */\n  dup1\n    /* \"#utility.yul\":2193:2194   */\n  0x00\n    /* \"#utility.yul\":2186:2202   */\n  mstore\n    /* \"#utility.yul\":2240:2244   */\n  0x20\n    /* \"#utility.yul\":2237:2238   */\n  0x00\n    /* \"#utility.yul\":2227:2245   */\n  keccak256\n    /* \"#utility.yul\":2310:2312   */\n  0x1f\n    /* \"#utility.yul\":2298:2308   */\n  dup5\n    /* \"#utility.yul\":2294:2313   */\n  add\n    /* \"#utility.yul\":2291:2292   */\n  0x05\n    /* \"#utility.yul\":2287:2314   */\n  shr\n    /* \"#utility.yul\":2281:2285   */\n  dup2\n    /* \"#utility.yul\":2277:2315   */\n  add\n    /* \"#utility.yul\":2346:2350   */\n  0x20\n    /* \"#utility.yul\":2334:2344   */\n  dup6\n    /* \"#utility.yul\":2331:2351   */\n  lt\n    /* \"#utility.yul\":2328:2375   */\n  iszero\n  tag_40\n  jumpi\n  pop\n    /* \"#utility.yul\":2369:2373   */\n  dup1\n    /* \"#utility.yul\":2328:2375   */\ntag_40:\n    /* \"#utility.yul\":2424:2426   */\n  0x1f\n    /* \"#utility.yul\":2419:2422   */\n  dup5\n    /* \"#utility.yul\":2415:2427   */\n  add\n    /* \"#utility.yul\":2412:2413   */\n  0x05\n    /* \"#utility.yul\":2408:2428   */\n  shr\n    /* \"#utility.yul\":2402:2406   */\n  dup3\n    /* \"#utility.yul\":2398:2429   */\n  add\n    /* \"#utility.yul\":2388:2429   */\n  swap2\n  pop\n    /* \"#utility.yul\":2479:2560   */\ntag_41:\n    /* \"#utility.yul\":2497:2499   */\n  dup2\n    /* \"#utility.yul\":2490:2495   */\n  dup2\n    /* \"#utility.yul\":2487:2500   */\n  lt\n    /* \"#utility.yul\":2479:2560   */\n  iszero\n  tag_43\n  jumpi\n    /* \"#utility.yul\":2556:2557   */\n  0x00\n    /* \"#utility.yul\":2542:2558   */\n  dup2\n  sstore\n    /* \"#utility.yul\":2523:2524   */\n  0x01\n    /* \"#utility.yul\":2512:2525   */\n  add\n    /* \"#utility.yul\":2479:2560   */\n  jump(tag_41)\ntag_43:\n    /* \"#utility.yul\":2483:2486   */\n  pop\n  pop\n    /* \"#utility.yul\":2149:2570   */\ntag_39:\n    /* \"#utility.yul\":2058:2576   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2752:4051   */\ntag_7:\n    /* \"#utility.yul\":2872:2882   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":2894:2924   */\n  dup2\n  gt\n    /* \"#utility.yul\":2891:2947   */\n  iszero\n  tag_47\n  jumpi\n    /* \"#utility.yul\":2927:2945   */\n  tag_47\n  tag_10\n  jump\t// in\ntag_47:\n    /* \"#utility.yul\":2956:3053   */\n  tag_48\n    /* \"#utility.yul\":3046:3052   */\n  dup2\n    /* \"#utility.yul\":3006:3044   */\n  tag_49\n    /* \"#utility.yul\":3038:3042   */\n  dup5\n    /* \"#utility.yul\":3032:3043   */\n  sload\n    /* \"#utility.yul\":3006:3044   */\n  tag_12\n  jump\t// in\ntag_49:\n    /* \"#utility.yul\":3000:3004   */\n  dup5\n    /* \"#utility.yul\":2956:3053   */\n  tag_14\n  jump\t// in\ntag_48:\n    /* \"#utility.yul\":3102:3106   */\n  0x20\n    /* \"#utility.yul\":3133:3135   */\n  0x1f\n    /* \"#utility.yul\":3122:3136   */\n  dup3\n  gt\n    /* \"#utility.yul\":3150:3151   */\n  0x01\n    /* \"#utility.yul\":3145:3794   */\n  dup2\n  eq\n  tag_51\n  jumpi\n    /* \"#utility.yul\":3838:3839   */\n  0x00\n    /* \"#utility.yul\":3855:3861   */\n  dup4\n    /* \"#utility.yul\":3852:3941   */\n  iszero\n  tag_52\n  jumpi\n  pop\n    /* \"#utility.yul\":3907:3926   */\n  dup5\n  dup3\n  add\n    /* \"#utility.yul\":3901:3927   */\n  mload\n    /* \"#utility.yul\":3852:3941   */\ntag_52:\n  not(0x00)\n    /* \"#utility.yul\":2709:2710   */\n  0x03\n    /* \"#utility.yul\":2705:2716   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":2701:2725   */\n  shr\n    /* \"#utility.yul\":2697:2726   */\n  not\n    /* \"#utility.yul\":2687:2727   */\n  and\n    /* \"#utility.yul\":2733:2734   */\n  0x01\n    /* \"#utility.yul\":2729:2740   */\n  dup5\n  swap1\n  shl\n    /* \"#utility.yul\":2684:2741   */\n  or\n    /* \"#utility.yul\":3954:4035   */\n  dup5\n  sstore\n    /* \"#utility.yul\":3115:4045   */\n  jump(tag_43)\n    /* \"#utility.yul\":3145:3794   */\ntag_51:\n    /* \"#utility.yul\":2005:2006   */\n  0x00\n    /* \"#utility.yul\":1998:2012   */\n  dup5\n  dup2\n  mstore\n    /* \"#utility.yul\":2042:2046   */\n  0x20\n    /* \"#utility.yul\":2029:2047   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":3181:3201   */\n  dup6\n  and\n  swap2\n    /* \"#utility.yul\":3299:3521   */\ntag_55:\n    /* \"#utility.yul\":3313:3320   */\n  dup3\n    /* \"#utility.yul\":3310:3311   */\n  dup2\n    /* \"#utility.yul\":3307:3321   */\n  lt\n    /* \"#utility.yul\":3299:3521   */\n  iszero\n  tag_57\n  jumpi\n    /* \"#utility.yul\":3395:3414   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":3389:3415   */\n  mload\n    /* \"#utility.yul\":3374:3416   */\n  dup3\n  sstore\n    /* \"#utility.yul\":3502:3506   */\n  0x20\n    /* \"#utility.yul\":3487:3507   */\n  swap5\n  dup6\n  add\n  swap5\n    /* \"#utility.yul\":3455:3456   */\n  0x01\n    /* \"#utility.yul\":3443:3457   */\n  swap1\n  swap3\n  add\n  swap2\n    /* \"#utility.yul\":3329:3341   */\n  add\n    /* \"#utility.yul\":3299:3521   */\n  jump(tag_55)\ntag_57:\n    /* \"#utility.yul\":3303:3306   */\n  pop\n    /* \"#utility.yul\":3549:3555   */\n  dup5\n    /* \"#utility.yul\":3540:3547   */\n  dup3\n    /* \"#utility.yul\":3537:3556   */\n  lt\n    /* \"#utility.yul\":3534:3735   */\n  iszero\n  tag_58\n  jumpi\n    /* \"#utility.yul\":3610:3629   */\n  dup7\n  dup5\n  add\n    /* \"#utility.yul\":3604:3630   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":3693:3694   */\n  0x03\n    /* \"#utility.yul\":3689:3703   */\n  dup8\n  swap1\n  shl\n    /* \"#utility.yul\":3705:3708   */\n  0xf8\n    /* \"#utility.yul\":3685:3709   */\n  and\n    /* \"#utility.yul\":3681:3718   */\n  shr\n    /* \"#utility.yul\":3677:3719   */\n  not\n    /* \"#utility.yul\":3662:3720   */\n  and\n    /* \"#utility.yul\":3647:3721   */\n  dup2\n  sstore\n    /* \"#utility.yul\":3534:3735   */\ntag_58:\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":3781:3782   */\n  0x01\n    /* \"#utility.yul\":3765:3779   */\n  swap1\n  dup2\n  shl\n    /* \"#utility.yul\":3761:3783   */\n  add\n    /* \"#utility.yul\":3748:3784   */\n  swap1\n  sstore\n  pop\n    /* \"#utility.yul\":2752:4051   */\n  jump\t// out\ntag_16:\n    /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":2676:13890  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":2676:13890  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x39509351\n      gt\n      tag_14\n      jumpi\n      dup1\n      0xa457c2d7\n      gt\n      tag_15\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_15:\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_10\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_14:\n      dup1\n      0x18160ddd\n      gt\n      tag_16\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_16:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3429:3527  function name() public view virtual override returns (string memory) {... */\n    tag_3:\n      tag_17\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5706:5903  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_4:\n      tag_21\n      tag_22\n      calldatasize\n      0x04\n      tag_23\n      jump\t// in\n    tag_22:\n      tag_24\n      jump\t// in\n    tag_21:\n      mload(0x40)\n        /* \"#utility.yul\":1276:1290   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1269:1291   */\n      iszero\n        /* \"#utility.yul\":1251:1292   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1239:1241   */\n      0x20\n        /* \"#utility.yul\":1224:1242   */\n      add\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5706:5903  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      tag_19\n        /* \"#utility.yul\":1111:1298   */\n      jump\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4517:4623  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_5:\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4604:4616  _totalSupply */\n      sload(0x02)\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4517:4623  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_27:\n      mload(0x40)\n        /* \"#utility.yul\":1449:1474   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1437:1439   */\n      0x20\n        /* \"#utility.yul\":1422:1440   */\n      add\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4517:4623  function totalSupply() public view virtual override returns (uint256) {... */\n      tag_19\n        /* \"#utility.yul\":1303:1480   */\n      jump\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6465:6751  function transferFrom(... */\n    tag_6:\n      tag_21\n      tag_32\n      calldatasize\n      0x04\n      tag_33\n      jump\t// in\n    tag_32:\n      tag_34\n      jump\t// in\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4366:4457  function decimals() public view virtual override returns (uint8) {... */\n    tag_7:\n      mload(0x40)\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4448:4450  18 */\n      0x12\n        /* \"#utility.yul\":2006:2042   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1994:1996   */\n      0x20\n        /* \"#utility.yul\":1979:1997   */\n      add\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4366:4457  function decimals() public view virtual override returns (uint8) {... */\n      tag_19\n        /* \"#utility.yul\":1864:2048   */\n      jump\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7146:7380  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_8:\n      tag_21\n      tag_41\n      calldatasize\n      0x04\n      tag_23\n      jump\t// in\n    tag_41:\n      tag_42\n      jump\t// in\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4681:4806  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_9:\n      tag_27\n      tag_45\n      calldatasize\n      0x04\n      tag_46\n      jump\t// in\n    tag_45:\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4781:4799  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4755:4762  uint256 */\n      0x00\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4781:4799  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4681:4806  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      jump\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3640:3742  function symbol() public view virtual override returns (string memory) {... */\n    tag_10:\n      tag_17\n      tag_50\n      jump\t// in\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7867:8294  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_11:\n      tag_21\n      tag_53\n      calldatasize\n      0x04\n      tag_23\n      jump\t// in\n    tag_53:\n      tag_54\n      jump\t// in\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5002:5191  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_12:\n      tag_21\n      tag_57\n      calldatasize\n      0x04\n      tag_23\n      jump\t// in\n    tag_57:\n      tag_58\n      jump\t// in\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5249:5398  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_13:\n      tag_27\n      tag_61\n      calldatasize\n      0x04\n      tag_62\n      jump\t// in\n    tag_61:\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5364:5382  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      swap2\n      dup3\n      and\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5338:5345  uint256 */\n      0x00\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5364:5382  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5364:5375  _allowances */\n      0x01\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5364:5382  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5364:5391  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5249:5398  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      jump\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3429:3527  function name() public view virtual override returns (string memory) {... */\n    tag_18:\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3483:3496  string memory */\n      0x60\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3515:3520  _name */\n      0x03\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3508:3520  return _name */\n      dup1\n      sload\n      tag_66\n      swap1\n      tag_67\n      jump\t// in\n    tag_66:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_68\n      swap1\n      tag_67\n      jump\t// in\n    tag_68:\n      dup1\n      iszero\n      tag_69\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_70\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_69)\n    tag_70:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_71:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_71\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_69:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3429:3527  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5706:5903  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_24:\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5789:5793  bool */\n      0x00\n        /* \"simple-token/@openzeppelin/contracts/utils/Context.sol\":1992:2002  msg.sender */\n      caller\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5843:5875  _approve(owner, spender, amount) */\n      tag_75\n        /* \"simple-token/@openzeppelin/contracts/utils/Context.sol\":1992:2002  msg.sender */\n      dup2\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5859:5866  spender */\n      dup6\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5868:5874  amount */\n      dup6\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5843:5851  _approve */\n      tag_76\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5843:5875  _approve(owner, spender, amount) */\n      jump\t// in\n    tag_75:\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5892:5896  true */\n      0x01\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5885:5896  return true */\n      swap2\n      pop\n      pop\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5706:5903  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_72:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6465:6751  function transferFrom(... */\n    tag_34:\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6592:6596  bool */\n      0x00\n        /* \"simple-token/@openzeppelin/contracts/utils/Context.sol\":1992:2002  msg.sender */\n      caller\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6648:6686  _spendAllowance(from, spender, amount) */\n      tag_80\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6664:6668  from */\n      dup6\n        /* \"simple-token/@openzeppelin/contracts/utils/Context.sol\":1992:2002  msg.sender */\n      dup3\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6679:6685  amount */\n      dup6\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6648:6663  _spendAllowance */\n      tag_81\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6648:6686  _spendAllowance(from, spender, amount) */\n      jump\t// in\n    tag_80:\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6696:6723  _transfer(from, to, amount) */\n      tag_82\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6706:6710  from */\n      dup6\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6712:6714  to */\n      dup6\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6716:6722  amount */\n      dup6\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6696:6705  _transfer */\n      tag_83\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6696:6723  _transfer(from, to, amount) */\n      jump\t// in\n    tag_82:\n      pop\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6740:6744  true */\n      0x01\n      swap5\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6465:6751  function transferFrom(... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7146:7380  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_42:\n        /* \"simple-token/@openzeppelin/contracts/utils/Context.sol\":1992:2002  msg.sender */\n      caller\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7234:7238  bool */\n      0x00\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5364:5382  _allowances[owner] */\n      dup2\n      dup2\n      mstore\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5364:5375  _allowances */\n      0x01\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5364:5382  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5364:5391  _allowances[owner][spender] */\n      dup8\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      sload\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7234:7238  bool */\n      swap1\n      swap2\n        /* \"simple-token/@openzeppelin/contracts/utils/Context.sol\":1992:2002  msg.sender */\n      swap1\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7288:7352  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      tag_75\n      swap1\n        /* \"simple-token/@openzeppelin/contracts/utils/Context.sol\":1992:2002  msg.sender */\n      dup3\n      swap1\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5364:5391  _allowances[owner][spender] */\n      dup7\n      swap1\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7313:7351  allowance(owner, spender) + addedValue */\n      tag_89\n      swap1\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7341:7351  addedValue */\n      dup8\n      swap1\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7313:7351  allowance(owner, spender) + addedValue */\n      tag_90\n      jump\t// in\n    tag_89:\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7288:7296  _approve */\n      tag_76\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7288:7352  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      jump\t// in\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3640:3742  function symbol() public view virtual override returns (string memory) {... */\n    tag_50:\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3696:3709  string memory */\n      0x60\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3728:3735  _symbol */\n      0x04\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3721:3735  return _symbol */\n      dup1\n      sload\n      tag_66\n      swap1\n      tag_67\n      jump\t// in\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7867:8294  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_54:\n        /* \"simple-token/@openzeppelin/contracts/utils/Context.sol\":1992:2002  msg.sender */\n      caller\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7960:7964  bool */\n      0x00\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5364:5382  _allowances[owner] */\n      dup2\n      dup2\n      mstore\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5364:5375  _allowances */\n      0x01\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5364:5382  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5364:5391  _allowances[owner][spender] */\n      dup8\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      sload\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7960:7964  bool */\n      swap1\n      swap2\n        /* \"simple-token/@openzeppelin/contracts/utils/Context.sol\":1992:2002  msg.sender */\n      swap1\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8104:8119  subtractedValue */\n      dup4\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8084:8100  currentAllowance */\n      dup2\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8084:8119  currentAllowance >= subtractedValue */\n      lt\n      iszero\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8076:8161  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_101\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":3437:3439   */\n      0x20\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8076:8161  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3419:3440   */\n      mstore\n        /* \"#utility.yul\":3476:3478   */\n      0x25\n        /* \"#utility.yul\":3456:3474   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3449:3479   */\n      mstore\n        /* \"#utility.yul\":3515:3549   */\n      0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77\n        /* \"#utility.yul\":3495:3513   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3488:3550   */\n      mstore\n        /* \"#utility.yul\":3586:3593   */\n      0x207a65726f000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3566:3584   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3559:3594   */\n      mstore\n        /* \"#utility.yul\":3611:3630   */\n      0x84\n      add\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8076:8161  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n    tag_102:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_101:\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8195:8255  _approve(owner, spender, currentAllowance - subtractedValue) */\n      tag_82\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8204:8209  owner */\n      dup3\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8211:8218  spender */\n      dup7\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8239:8254  subtractedValue */\n      dup7\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8220:8236  currentAllowance */\n      dup5\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8220:8254  currentAllowance - subtractedValue */\n      sub\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8195:8203  _approve */\n      tag_76\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8195:8255  _approve(owner, spender, currentAllowance - subtractedValue) */\n      jump\t// in\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5002:5191  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_58:\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5081:5085  bool */\n      0x00\n        /* \"simple-token/@openzeppelin/contracts/utils/Context.sol\":1992:2002  msg.sender */\n      caller\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5135:5163  _transfer(owner, to, amount) */\n      tag_75\n        /* \"simple-token/@openzeppelin/contracts/utils/Context.sol\":1992:2002  msg.sender */\n      dup2\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5152:5154  to */\n      dup6\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5156:5162  amount */\n      dup6\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5135:5144  _transfer */\n      tag_83\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5135:5163  _transfer(owner, to, amount) */\n      jump\t// in\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":11383:11753  function _approve(... */\n    tag_76:\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":11514:11533  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup4\n      and\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":11506:11574  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_111\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":3843:3845   */\n      0x20\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":11506:11574  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3825:3846   */\n      mstore\n        /* \"#utility.yul\":3882:3884   */\n      0x24\n        /* \"#utility.yul\":3862:3880   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":3855:3885   */\n      mstore\n        /* \"#utility.yul\":3921:3955   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":3901:3919   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3894:3956   */\n      mstore\n        /* \"#utility.yul\":3992:3998   */\n      0x7265737300000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3972:3990   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3965:3999   */\n      mstore\n        /* \"#utility.yul\":4016:4035   */\n      0x84\n      add\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":11506:11574  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_102\n        /* \"#utility.yul\":3641:4041   */\n      jump\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":11506:11574  require(owner != address(0), \"ERC20: approve from the zero address\") */\n    tag_111:\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":11592:11613  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup3\n      and\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":11584:11652  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_114\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":4248:4250   */\n      0x20\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":11584:11652  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4230:4251   */\n      mstore\n        /* \"#utility.yul\":4287:4289   */\n      0x22\n        /* \"#utility.yul\":4267:4285   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4260:4290   */\n      mstore\n        /* \"#utility.yul\":4326:4360   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":4306:4324   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4299:4361   */\n      mstore\n        /* \"#utility.yul\":4397:4401   */\n      0x7373000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4377:4395   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4370:4402   */\n      mstore\n        /* \"#utility.yul\":4419:4438   */\n      0x84\n      add\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":11584:11652  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_102\n        /* \"#utility.yul\":4046:4444   */\n      jump\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":11584:11652  require(spender != address(0), \"ERC20: approve to the zero address\") */\n    tag_114:\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":11663:11681  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":11663:11674  _allowances */\n      0x01\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":11663:11681  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":11663:11690  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":11663:11699  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":11714:11746  Approval(owner, spender, amount) */\n      swap1\n      mload\n        /* \"#utility.yul\":1449:1474   */\n      dup5\n      dup2\n      mstore\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":11714:11746  Approval(owner, spender, amount) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n        /* \"#utility.yul\":1422:1440   */\n      add\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":11714:11746  Approval(owner, spender, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":11383:11753  function _approve(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12034:12475  function _spendAllowance(... */\n    tag_81:\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5364:5382  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      and\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12164:12188  uint256 currentAllowance */\n      0x00\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5364:5382  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5364:5375  _allowances */\n      0x01\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5364:5382  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5364:5391  _allowances[owner][spender] */\n      swap4\n      dup7\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n      sload\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12250:12267  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12230:12267  currentAllowance != type(uint256).max */\n      dup2\n      eq\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12226:12469  if (currentAllowance != type(uint256).max) {... */\n      tag_124\n      jumpi\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12311:12317  amount */\n      dup2\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12291:12307  currentAllowance */\n      dup2\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12291:12317  currentAllowance >= amount */\n      lt\n      iszero\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12283:12351  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_121\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":4651:4653   */\n      0x20\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12283:12351  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4633:4654   */\n      mstore\n        /* \"#utility.yul\":4690:4692   */\n      0x1d\n        /* \"#utility.yul\":4670:4688   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4663:4693   */\n      mstore\n        /* \"#utility.yul\":4729:4760   */\n      0x45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000\n        /* \"#utility.yul\":4709:4727   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4702:4761   */\n      mstore\n        /* \"#utility.yul\":4778:4796   */\n      0x64\n      add\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12283:12351  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_102\n        /* \"#utility.yul\":4449:4802   */\n      jump\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12283:12351  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n    tag_121:\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12393:12444  _approve(owner, spender, currentAllowance - amount) */\n      tag_124\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12402:12407  owner */\n      dup5\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12409:12416  spender */\n      dup5\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12437:12443  amount */\n      dup5\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12418:12434  currentAllowance */\n      dup5\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12418:12443  currentAllowance - amount */\n      sub\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12393:12401  _approve */\n      tag_76\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12393:12444  _approve(owner, spender, currentAllowance - amount) */\n      jump\t// in\n    tag_124:\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12154:12475  {... */\n      pop\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12034:12475  function _spendAllowance(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8748:9399  function _transfer(... */\n    tag_83:\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8874:8892  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup4\n      and\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8866:8934  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_126\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":5009:5011   */\n      0x20\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8866:8934  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4991:5012   */\n      mstore\n        /* \"#utility.yul\":5048:5050   */\n      0x25\n        /* \"#utility.yul\":5028:5046   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5021:5051   */\n      mstore\n        /* \"#utility.yul\":5087:5121   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":5067:5085   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5060:5122   */\n      mstore\n        /* \"#utility.yul\":5158:5165   */\n      0x6472657373000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5138:5156   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5131:5166   */\n      mstore\n        /* \"#utility.yul\":5183:5202   */\n      0x84\n      add\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8866:8934  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_102\n        /* \"#utility.yul\":4807:5208   */\n      jump\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8866:8934  require(from != address(0), \"ERC20: transfer from the zero address\") */\n    tag_126:\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8952:8968  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup3\n      and\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8944:9008  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_129\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":5415:5417   */\n      0x20\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8944:9008  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5397:5418   */\n      mstore\n        /* \"#utility.yul\":5454:5456   */\n      0x23\n        /* \"#utility.yul\":5434:5452   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5427:5457   */\n      mstore\n        /* \"#utility.yul\":5493:5527   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":5473:5491   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5466:5528   */\n      mstore\n        /* \"#utility.yul\":5564:5569   */\n      0x6573730000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5544:5562   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5537:5570   */\n      mstore\n        /* \"#utility.yul\":5587:5606   */\n      0x84\n      add\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8944:9008  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_102\n        /* \"#utility.yul\":5213:5612   */\n      jump\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8944:9008  require(to != address(0), \"ERC20: transfer to the zero address\") */\n    tag_129:\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9090:9105  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup4\n      and\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9068:9087  uint256 fromBalance */\n      0x00\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9090:9105  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9123:9144  fromBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9115:9187  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_134\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":5819:5821   */\n      0x20\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9115:9187  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5801:5822   */\n      mstore\n        /* \"#utility.yul\":5858:5860   */\n      0x26\n        /* \"#utility.yul\":5838:5856   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5831:5861   */\n      mstore\n        /* \"#utility.yul\":5897:5931   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732062\n        /* \"#utility.yul\":5877:5895   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5870:5932   */\n      mstore\n        /* \"#utility.yul\":5968:5976   */\n      0x616c616e63650000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5948:5966   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5941:5977   */\n      mstore\n        /* \"#utility.yul\":5994:6013   */\n      0x84\n      add\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9115:9187  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_102\n        /* \"#utility.yul\":5617:6019   */\n      jump\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9115:9187  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n    tag_134:\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9221:9236  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup1\n      dup6\n      and\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9221:9230  _balances */\n      0x00\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9221:9236  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9239:9259  fromBalance - amount */\n      dup6\n      dup6\n      sub\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9221:9259  _balances[from] = fromBalance - amount */\n      swap1\n      sstore\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9279:9292  _balances[to] */\n      swap2\n      dup6\n      and\n      dup2\n      mstore\n      swap1\n      dup2\n      keccak256\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9279:9302  _balances[to] += amount */\n      dup1\n      sload\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9253:9259  amount */\n      dup5\n      swap3\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9221:9230  _balances */\n      swap1\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9279:9302  _balances[to] += amount */\n      tag_137\n      swap1\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9253:9259  amount */\n      dup5\n      swap1\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9279:9302  _balances[to] += amount */\n      tag_90\n      jump\t// in\n    tag_137:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9333:9335  to */\n      dup3\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9318:9344  Transfer(from, to, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9327:9331  from */\n      dup5\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9318:9344  Transfer(from, to, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9337:9343  amount */\n      dup5\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9318:9344  Transfer(from, to, amount) */\n      mload(0x40)\n      tag_138\n      swap2\n        /* \"#utility.yul\":1449:1474   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1437:1439   */\n      0x20\n        /* \"#utility.yul\":1422:1440   */\n      add\n      swap1\n        /* \"#utility.yul\":1303:1480   */\n      jump\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9318:9344  Transfer(from, to, amount) */\n    tag_138:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9355:9392  _afterTokenTransfer(from, to, amount) */\n      tag_124\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":13059:13180  function _beforeTokenTransfer(... */\n      jump\n        /* \"#utility.yul\":14:600   */\n    tag_20:\n        /* \"#utility.yul\":163:165   */\n      0x20\n        /* \"#utility.yul\":152:161   */\n      dup2\n        /* \"#utility.yul\":145:166   */\n      mstore\n        /* \"#utility.yul\":126:130   */\n      0x00\n        /* \"#utility.yul\":195:201   */\n      dup3\n        /* \"#utility.yul\":189:202   */\n      mload\n        /* \"#utility.yul\":238:244   */\n      dup1\n        /* \"#utility.yul\":233:235   */\n      0x20\n        /* \"#utility.yul\":222:231   */\n      dup5\n        /* \"#utility.yul\":218:236   */\n      add\n        /* \"#utility.yul\":211:245   */\n      mstore\n        /* \"#utility.yul\":263:264   */\n      0x00\n        /* \"#utility.yul\":273:413   */\n    tag_146:\n        /* \"#utility.yul\":287:293   */\n      dup2\n        /* \"#utility.yul\":284:285   */\n      dup2\n        /* \"#utility.yul\":281:294   */\n      lt\n        /* \"#utility.yul\":273:413   */\n      iszero\n      tag_148\n      jumpi\n        /* \"#utility.yul\":398:400   */\n      0x20\n        /* \"#utility.yul\":382:396   */\n      dup2\n      dup7\n      add\n        /* \"#utility.yul\":378:401   */\n      dup2\n      add\n        /* \"#utility.yul\":372:402   */\n      mload\n        /* \"#utility.yul\":367:369   */\n      0x40\n        /* \"#utility.yul\":348:365   */\n      dup7\n      dup5\n      add\n        /* \"#utility.yul\":344:370   */\n      add\n        /* \"#utility.yul\":337:403   */\n      mstore\n        /* \"#utility.yul\":302:312   */\n      add\n        /* \"#utility.yul\":273:413   */\n      jump(tag_146)\n    tag_148:\n        /* \"#utility.yul\":277:280   */\n      pop\n        /* \"#utility.yul\":462:463   */\n      0x00\n        /* \"#utility.yul\":457:459   */\n      0x40\n        /* \"#utility.yul\":448:454   */\n      dup3\n        /* \"#utility.yul\":437:446   */\n      dup6\n        /* \"#utility.yul\":433:455   */\n      add\n        /* \"#utility.yul\":429:460   */\n      add\n        /* \"#utility.yul\":422:464   */\n      mstore\n        /* \"#utility.yul\":591:593   */\n      0x40\n        /* \"#utility.yul\":521:587   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\n        /* \"#utility.yul\":516:518   */\n      0x1f\n        /* \"#utility.yul\":508:514   */\n      dup4\n        /* \"#utility.yul\":504:519   */\n      add\n        /* \"#utility.yul\":500:588   */\n      and\n        /* \"#utility.yul\":489:498   */\n      dup5\n        /* \"#utility.yul\":485:589   */\n      add\n        /* \"#utility.yul\":481:594   */\n      add\n        /* \"#utility.yul\":473:594   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":14:600   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":605:801   */\n    tag_143:\n        /* \"#utility.yul\":673:693   */\n      dup1\n      calldataload\n        /* \"#utility.yul\":733:775   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":722:776   */\n      dup2\n      and\n        /* \"#utility.yul\":712:777   */\n      dup2\n      eq\n        /* \"#utility.yul\":702:795   */\n      tag_150\n      jumpi\n        /* \"#utility.yul\":791:792   */\n      0x00\n        /* \"#utility.yul\":788:789   */\n      dup1\n        /* \"#utility.yul\":781:793   */\n      revert\n        /* \"#utility.yul\":702:795   */\n    tag_150:\n        /* \"#utility.yul\":605:801   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":806:1106   */\n    tag_23:\n        /* \"#utility.yul\":874:880   */\n      0x00\n        /* \"#utility.yul\":882:888   */\n      dup1\n        /* \"#utility.yul\":935:937   */\n      0x40\n        /* \"#utility.yul\":923:932   */\n      dup4\n        /* \"#utility.yul\":914:921   */\n      dup6\n        /* \"#utility.yul\":910:933   */\n      sub\n        /* \"#utility.yul\":906:938   */\n      slt\n        /* \"#utility.yul\":903:955   */\n      iszero\n      tag_152\n      jumpi\n        /* \"#utility.yul\":951:952   */\n      0x00\n        /* \"#utility.yul\":948:949   */\n      dup1\n        /* \"#utility.yul\":941:953   */\n      revert\n        /* \"#utility.yul\":903:955   */\n    tag_152:\n        /* \"#utility.yul\":974:1003   */\n      tag_153\n        /* \"#utility.yul\":993:1002   */\n      dup4\n        /* \"#utility.yul\":974:1003   */\n      tag_143\n      jump\t// in\n    tag_153:\n        /* \"#utility.yul\":964:1003   */\n      swap5\n        /* \"#utility.yul\":1072:1074   */\n      0x20\n        /* \"#utility.yul\":1057:1075   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1044:1076   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":806:1106   */\n      jump\t// out\n        /* \"#utility.yul\":1485:1859   */\n    tag_33:\n        /* \"#utility.yul\":1562:1568   */\n      0x00\n        /* \"#utility.yul\":1570:1576   */\n      dup1\n        /* \"#utility.yul\":1578:1584   */\n      0x00\n        /* \"#utility.yul\":1631:1633   */\n      0x60\n        /* \"#utility.yul\":1619:1628   */\n      dup5\n        /* \"#utility.yul\":1610:1617   */\n      dup7\n        /* \"#utility.yul\":1606:1629   */\n      sub\n        /* \"#utility.yul\":1602:1634   */\n      slt\n        /* \"#utility.yul\":1599:1651   */\n      iszero\n      tag_157\n      jumpi\n        /* \"#utility.yul\":1647:1648   */\n      0x00\n        /* \"#utility.yul\":1644:1645   */\n      dup1\n        /* \"#utility.yul\":1637:1649   */\n      revert\n        /* \"#utility.yul\":1599:1651   */\n    tag_157:\n        /* \"#utility.yul\":1670:1699   */\n      tag_158\n        /* \"#utility.yul\":1689:1698   */\n      dup5\n        /* \"#utility.yul\":1670:1699   */\n      tag_143\n      jump\t// in\n    tag_158:\n        /* \"#utility.yul\":1660:1699   */\n      swap3\n      pop\n        /* \"#utility.yul\":1718:1756   */\n      tag_159\n        /* \"#utility.yul\":1752:1754   */\n      0x20\n        /* \"#utility.yul\":1741:1750   */\n      dup6\n        /* \"#utility.yul\":1737:1755   */\n      add\n        /* \"#utility.yul\":1718:1756   */\n      tag_143\n      jump\t// in\n    tag_159:\n        /* \"#utility.yul\":1485:1859   */\n      swap3\n      swap6\n        /* \"#utility.yul\":1708:1756   */\n      swap3\n      swap5\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1825:1827   */\n      0x40\n        /* \"#utility.yul\":1810:1828   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":1797:1829   */\n      calldataload\n      swap1\n        /* \"#utility.yul\":1485:1859   */\n      jump\t// out\n        /* \"#utility.yul\":2053:2239   */\n    tag_46:\n        /* \"#utility.yul\":2112:2118   */\n      0x00\n        /* \"#utility.yul\":2165:2167   */\n      0x20\n        /* \"#utility.yul\":2153:2162   */\n      dup3\n        /* \"#utility.yul\":2144:2151   */\n      dup5\n        /* \"#utility.yul\":2140:2163   */\n      sub\n        /* \"#utility.yul\":2136:2168   */\n      slt\n        /* \"#utility.yul\":2133:2185   */\n      iszero\n      tag_162\n      jumpi\n        /* \"#utility.yul\":2181:2182   */\n      0x00\n        /* \"#utility.yul\":2178:2179   */\n      dup1\n        /* \"#utility.yul\":2171:2183   */\n      revert\n        /* \"#utility.yul\":2133:2185   */\n    tag_162:\n        /* \"#utility.yul\":2204:2233   */\n      tag_163\n        /* \"#utility.yul\":2223:2232   */\n      dup3\n        /* \"#utility.yul\":2204:2233   */\n      tag_143\n      jump\t// in\n    tag_163:\n        /* \"#utility.yul\":2194:2233   */\n      swap4\n        /* \"#utility.yul\":2053:2239   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2244:2504   */\n    tag_62:\n        /* \"#utility.yul\":2312:2318   */\n      0x00\n        /* \"#utility.yul\":2320:2326   */\n      dup1\n        /* \"#utility.yul\":2373:2375   */\n      0x40\n        /* \"#utility.yul\":2361:2370   */\n      dup4\n        /* \"#utility.yul\":2352:2359   */\n      dup6\n        /* \"#utility.yul\":2348:2371   */\n      sub\n        /* \"#utility.yul\":2344:2376   */\n      slt\n        /* \"#utility.yul\":2341:2393   */\n      iszero\n      tag_165\n      jumpi\n        /* \"#utility.yul\":2389:2390   */\n      0x00\n        /* \"#utility.yul\":2386:2387   */\n      dup1\n        /* \"#utility.yul\":2379:2391   */\n      revert\n        /* \"#utility.yul\":2341:2393   */\n    tag_165:\n        /* \"#utility.yul\":2412:2441   */\n      tag_166\n        /* \"#utility.yul\":2431:2440   */\n      dup4\n        /* \"#utility.yul\":2412:2441   */\n      tag_143\n      jump\t// in\n    tag_166:\n        /* \"#utility.yul\":2402:2441   */\n      swap2\n      pop\n        /* \"#utility.yul\":2460:2498   */\n      tag_167\n        /* \"#utility.yul\":2494:2496   */\n      0x20\n        /* \"#utility.yul\":2483:2492   */\n      dup5\n        /* \"#utility.yul\":2479:2497   */\n      add\n        /* \"#utility.yul\":2460:2498   */\n      tag_143\n      jump\t// in\n    tag_167:\n        /* \"#utility.yul\":2450:2498   */\n      swap1\n      pop\n        /* \"#utility.yul\":2244:2504   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2509:2946   */\n    tag_67:\n        /* \"#utility.yul\":2588:2589   */\n      0x01\n        /* \"#utility.yul\":2584:2596   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":2631:2643   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":2652:2713   */\n      tag_169\n      jumpi\n        /* \"#utility.yul\":2706:2710   */\n      0x7f\n        /* \"#utility.yul\":2698:2704   */\n      dup3\n        /* \"#utility.yul\":2694:2711   */\n      and\n        /* \"#utility.yul\":2684:2711   */\n      swap2\n      pop\n        /* \"#utility.yul\":2652:2713   */\n    tag_169:\n        /* \"#utility.yul\":2759:2761   */\n      0x20\n        /* \"#utility.yul\":2751:2757   */\n      dup3\n        /* \"#utility.yul\":2748:2762   */\n      lt\n        /* \"#utility.yul\":2728:2746   */\n      dup2\n        /* \"#utility.yul\":2725:2763   */\n      sub\n        /* \"#utility.yul\":2722:2940   */\n      tag_170\n      jumpi\n        /* \"#utility.yul\":2796:2873   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2793:2794   */\n      0x00\n        /* \"#utility.yul\":2786:2874   */\n      mstore\n        /* \"#utility.yul\":2897:2901   */\n      0x22\n        /* \"#utility.yul\":2894:2895   */\n      0x04\n        /* \"#utility.yul\":2887:2902   */\n      mstore\n        /* \"#utility.yul\":2925:2929   */\n      0x24\n        /* \"#utility.yul\":2922:2923   */\n      0x00\n        /* \"#utility.yul\":2915:2930   */\n      revert\n        /* \"#utility.yul\":2722:2940   */\n    tag_170:\n      pop\n        /* \"#utility.yul\":2509:2946   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2951:3230   */\n    tag_90:\n        /* \"#utility.yul\":3016:3025   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":3037:3047   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":3034:3224   */\n      iszero\n      tag_72\n      jumpi\n        /* \"#utility.yul\":3080:3157   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3077:3078   */\n      0x00\n        /* \"#utility.yul\":3070:3158   */\n      mstore\n        /* \"#utility.yul\":3181:3185   */\n      0x11\n        /* \"#utility.yul\":3178:3179   */\n      0x04\n        /* \"#utility.yul\":3171:3186   */\n      mstore\n        /* \"#utility.yul\":3209:3213   */\n      0x24\n        /* \"#utility.yul\":3206:3207   */\n      0x00\n        /* \"#utility.yul\":3199:3214   */\n      revert\n\n    auxdata: 0xa2646970667358221220aa3b9267ed20783115df50bfd1de91a30918741df1dd59094868d15e41f4992764736f6c637828302e382e32382d6e696768746c792e323032342e31302e322b636f6d6d69742e32353665393532380059\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_72": {
									"entryPoint": null,
									"id": 72,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_string_fromMemory": {
									"entryPoint": 102,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 265,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 428,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 507,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 370,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 80,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:4053:5",
										"nodeType": "YulBlock",
										"src": "0:4053:5",
										"statements": [
											{
												"nativeSrc": "6:3:5",
												"nodeType": "YulBlock",
												"src": "6:3:5",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "46:95:5",
													"nodeType": "YulBlock",
													"src": "46:95:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "63:1:5",
																		"nodeType": "YulLiteral",
																		"src": "63:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "70:3:5",
																				"nodeType": "YulLiteral",
																				"src": "70:3:5",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "75:10:5",
																				"nodeType": "YulLiteral",
																				"src": "75:10:5",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "66:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:5"
																		},
																		"nativeSrc": "66:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "56:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:5"
																},
																"nativeSrc": "56:31:5",
																"nodeType": "YulFunctionCall",
																"src": "56:31:5"
															},
															"nativeSrc": "56:31:5",
															"nodeType": "YulExpressionStatement",
															"src": "56:31:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "103:1:5",
																		"nodeType": "YulLiteral",
																		"src": "103:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "106:4:5",
																		"nodeType": "YulLiteral",
																		"src": "106:4:5",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "96:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:5"
																},
																"nativeSrc": "96:15:5",
																"nodeType": "YulFunctionCall",
																"src": "96:15:5"
															},
															"nativeSrc": "96:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "96:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "127:1:5",
																		"nodeType": "YulLiteral",
																		"src": "127:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "130:4:5",
																		"nodeType": "YulLiteral",
																		"src": "130:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "120:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:5"
																},
																"nativeSrc": "120:15:5",
																"nodeType": "YulFunctionCall",
																"src": "120:15:5"
															},
															"nativeSrc": "120:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "120:15:5"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "14:127:5",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:5"
											},
											{
												"body": {
													"nativeSrc": "210:770:5",
													"nodeType": "YulBlock",
													"src": "210:770:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "259:16:5",
																"nodeType": "YulBlock",
																"src": "259:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "268:1:5",
																					"nodeType": "YulLiteral",
																					"src": "268:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "271:1:5",
																					"nodeType": "YulLiteral",
																					"src": "271:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "261:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "261:6:5"
																			},
																			"nativeSrc": "261:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "261:12:5"
																		},
																		"nativeSrc": "261:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "261:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "238:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "238:6:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "246:4:5",
																						"nodeType": "YulLiteral",
																						"src": "246:4:5",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "234:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "234:3:5"
																				},
																				"nativeSrc": "234:17:5",
																				"nodeType": "YulFunctionCall",
																				"src": "234:17:5"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "253:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "253:3:5"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "230:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "230:3:5"
																		},
																		"nativeSrc": "230:27:5",
																		"nodeType": "YulFunctionCall",
																		"src": "230:27:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "223:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "223:6:5"
																},
																"nativeSrc": "223:35:5",
																"nodeType": "YulFunctionCall",
																"src": "223:35:5"
															},
															"nativeSrc": "220:55:5",
															"nodeType": "YulIf",
															"src": "220:55:5"
														},
														{
															"nativeSrc": "284:27:5",
															"nodeType": "YulVariableDeclaration",
															"src": "284:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "304:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "304:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "298:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "298:5:5"
																},
																"nativeSrc": "298:13:5",
																"nodeType": "YulFunctionCall",
																"src": "298:13:5"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "288:6:5",
																	"nodeType": "YulTypedName",
																	"src": "288:6:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "354:22:5",
																"nodeType": "YulBlock",
																"src": "354:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "356:16:5",
																				"nodeType": "YulIdentifier",
																				"src": "356:16:5"
																			},
																			"nativeSrc": "356:18:5",
																			"nodeType": "YulFunctionCall",
																			"src": "356:18:5"
																		},
																		"nativeSrc": "356:18:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "356:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "326:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "326:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "342:2:5",
																						"nodeType": "YulLiteral",
																						"src": "342:2:5",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "346:1:5",
																						"nodeType": "YulLiteral",
																						"src": "346:1:5",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "338:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "338:3:5"
																				},
																				"nativeSrc": "338:10:5",
																				"nodeType": "YulFunctionCall",
																				"src": "338:10:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "350:1:5",
																				"nodeType": "YulLiteral",
																				"src": "350:1:5",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "334:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "334:3:5"
																		},
																		"nativeSrc": "334:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "334:18:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "323:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "323:2:5"
																},
																"nativeSrc": "323:30:5",
																"nodeType": "YulFunctionCall",
																"src": "323:30:5"
															},
															"nativeSrc": "320:56:5",
															"nodeType": "YulIf",
															"src": "320:56:5"
														},
														{
															"nativeSrc": "385:23:5",
															"nodeType": "YulVariableDeclaration",
															"src": "385:23:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "405:2:5",
																		"nodeType": "YulLiteral",
																		"src": "405:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "399:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "399:5:5"
																},
																"nativeSrc": "399:9:5",
																"nodeType": "YulFunctionCall",
																"src": "399:9:5"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nativeSrc": "389:6:5",
																	"nodeType": "YulTypedName",
																	"src": "389:6:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "417:85:5",
															"nodeType": "YulVariableDeclaration",
															"src": "417:85:5",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "439:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "439:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "length",
																										"nativeSrc": "463:6:5",
																										"nodeType": "YulIdentifier",
																										"src": "463:6:5"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "471:4:5",
																										"nodeType": "YulLiteral",
																										"src": "471:4:5",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "459:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "459:3:5"
																								},
																								"nativeSrc": "459:17:5",
																								"nodeType": "YulFunctionCall",
																								"src": "459:17:5"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "482:2:5",
																										"nodeType": "YulLiteral",
																										"src": "482:2:5",
																										"type": "",
																										"value": "31"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "478:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "478:3:5"
																								},
																								"nativeSrc": "478:7:5",
																								"nodeType": "YulFunctionCall",
																								"src": "478:7:5"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nativeSrc": "455:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "455:3:5"
																						},
																						"nativeSrc": "455:31:5",
																						"nodeType": "YulFunctionCall",
																						"src": "455:31:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "488:2:5",
																						"nodeType": "YulLiteral",
																						"src": "488:2:5",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "451:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "451:3:5"
																				},
																				"nativeSrc": "451:40:5",
																				"nodeType": "YulFunctionCall",
																				"src": "451:40:5"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "497:2:5",
																						"nodeType": "YulLiteral",
																						"src": "497:2:5",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "493:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "493:3:5"
																				},
																				"nativeSrc": "493:7:5",
																				"nodeType": "YulFunctionCall",
																				"src": "493:7:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "447:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "447:3:5"
																		},
																		"nativeSrc": "447:54:5",
																		"nodeType": "YulFunctionCall",
																		"src": "447:54:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "435:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "435:3:5"
																},
																"nativeSrc": "435:67:5",
																"nodeType": "YulFunctionCall",
																"src": "435:67:5"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "421:10:5",
																	"nodeType": "YulTypedName",
																	"src": "421:10:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "577:22:5",
																"nodeType": "YulBlock",
																"src": "577:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "579:16:5",
																				"nodeType": "YulIdentifier",
																				"src": "579:16:5"
																			},
																			"nativeSrc": "579:18:5",
																			"nodeType": "YulFunctionCall",
																			"src": "579:18:5"
																		},
																		"nativeSrc": "579:18:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "579:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "520:10:5",
																				"nodeType": "YulIdentifier",
																				"src": "520:10:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "540:2:5",
																								"nodeType": "YulLiteral",
																								"src": "540:2:5",
																								"type": "",
																								"value": "64"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "544:1:5",
																								"nodeType": "YulLiteral",
																								"src": "544:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "536:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "536:3:5"
																						},
																						"nativeSrc": "536:10:5",
																						"nodeType": "YulFunctionCall",
																						"src": "536:10:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "548:1:5",
																						"nodeType": "YulLiteral",
																						"src": "548:1:5",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "532:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "532:3:5"
																				},
																				"nativeSrc": "532:18:5",
																				"nodeType": "YulFunctionCall",
																				"src": "532:18:5"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "517:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "517:2:5"
																		},
																		"nativeSrc": "517:34:5",
																		"nodeType": "YulFunctionCall",
																		"src": "517:34:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "556:10:5",
																				"nodeType": "YulIdentifier",
																				"src": "556:10:5"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "568:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "568:6:5"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "553:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "553:2:5"
																		},
																		"nativeSrc": "553:22:5",
																		"nodeType": "YulFunctionCall",
																		"src": "553:22:5"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "514:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "514:2:5"
																},
																"nativeSrc": "514:62:5",
																"nodeType": "YulFunctionCall",
																"src": "514:62:5"
															},
															"nativeSrc": "511:88:5",
															"nodeType": "YulIf",
															"src": "511:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "615:2:5",
																		"nodeType": "YulLiteral",
																		"src": "615:2:5",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "619:10:5",
																		"nodeType": "YulIdentifier",
																		"src": "619:10:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "608:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "608:6:5"
																},
																"nativeSrc": "608:22:5",
																"nodeType": "YulFunctionCall",
																"src": "608:22:5"
															},
															"nativeSrc": "608:22:5",
															"nodeType": "YulExpressionStatement",
															"src": "608:22:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "646:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "646:6:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "654:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "654:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "639:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "639:6:5"
																},
																"nativeSrc": "639:22:5",
																"nodeType": "YulFunctionCall",
																"src": "639:22:5"
															},
															"nativeSrc": "639:22:5",
															"nodeType": "YulExpressionStatement",
															"src": "639:22:5"
														},
														{
															"body": {
																"nativeSrc": "713:16:5",
																"nodeType": "YulBlock",
																"src": "713:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "722:1:5",
																					"nodeType": "YulLiteral",
																					"src": "722:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "725:1:5",
																					"nodeType": "YulLiteral",
																					"src": "725:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "715:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "715:6:5"
																			},
																			"nativeSrc": "715:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "715:12:5"
																		},
																		"nativeSrc": "715:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "715:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "684:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "684:6:5"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "692:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "692:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "680:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "680:3:5"
																				},
																				"nativeSrc": "680:19:5",
																				"nodeType": "YulFunctionCall",
																				"src": "680:19:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "701:4:5",
																				"nodeType": "YulLiteral",
																				"src": "701:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "676:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "676:3:5"
																		},
																		"nativeSrc": "676:30:5",
																		"nodeType": "YulFunctionCall",
																		"src": "676:30:5"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "708:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "708:3:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "673:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "673:2:5"
																},
																"nativeSrc": "673:39:5",
																"nodeType": "YulFunctionCall",
																"src": "673:39:5"
															},
															"nativeSrc": "670:59:5",
															"nodeType": "YulIf",
															"src": "670:59:5"
														},
														{
															"nativeSrc": "738:10:5",
															"nodeType": "YulVariableDeclaration",
															"src": "738:10:5",
															"value": {
																"kind": "number",
																"nativeSrc": "747:1:5",
																"nodeType": "YulLiteral",
																"src": "747:1:5",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "742:1:5",
																	"nodeType": "YulTypedName",
																	"src": "742:1:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "809:91:5",
																"nodeType": "YulBlock",
																"src": "809:91:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nativeSrc": "838:6:5",
																									"nodeType": "YulIdentifier",
																									"src": "838:6:5"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "846:1:5",
																									"nodeType": "YulIdentifier",
																									"src": "846:1:5"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "834:3:5",
																								"nodeType": "YulIdentifier",
																								"src": "834:3:5"
																							},
																							"nativeSrc": "834:14:5",
																							"nodeType": "YulFunctionCall",
																							"src": "834:14:5"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "850:4:5",
																							"nodeType": "YulLiteral",
																							"src": "850:4:5",
																							"type": "",
																							"value": "0x20"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "830:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "830:3:5"
																					},
																					"nativeSrc": "830:25:5",
																					"nodeType": "YulFunctionCall",
																					"src": "830:25:5"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "offset",
																											"nativeSrc": "871:6:5",
																											"nodeType": "YulIdentifier",
																											"src": "871:6:5"
																										},
																										{
																											"name": "i",
																											"nativeSrc": "879:1:5",
																											"nodeType": "YulIdentifier",
																											"src": "879:1:5"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nativeSrc": "867:3:5",
																										"nodeType": "YulIdentifier",
																										"src": "867:3:5"
																									},
																									"nativeSrc": "867:14:5",
																									"nodeType": "YulFunctionCall",
																									"src": "867:14:5"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "883:4:5",
																									"nodeType": "YulLiteral",
																									"src": "883:4:5",
																									"type": "",
																									"value": "0x20"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "863:3:5",
																								"nodeType": "YulIdentifier",
																								"src": "863:3:5"
																							},
																							"nativeSrc": "863:25:5",
																							"nodeType": "YulFunctionCall",
																							"src": "863:25:5"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "857:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "857:5:5"
																					},
																					"nativeSrc": "857:32:5",
																					"nodeType": "YulFunctionCall",
																					"src": "857:32:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "823:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "823:6:5"
																			},
																			"nativeSrc": "823:67:5",
																			"nodeType": "YulFunctionCall",
																			"src": "823:67:5"
																		},
																		"nativeSrc": "823:67:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "823:67:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "768:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "768:1:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "771:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "771:6:5"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "765:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "765:2:5"
																},
																"nativeSrc": "765:13:5",
																"nodeType": "YulFunctionCall",
																"src": "765:13:5"
															},
															"nativeSrc": "757:143:5",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "779:21:5",
																"nodeType": "YulBlock",
																"src": "779:21:5",
																"statements": [
																	{
																		"nativeSrc": "781:17:5",
																		"nodeType": "YulAssignment",
																		"src": "781:17:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "790:1:5",
																					"nodeType": "YulIdentifier",
																					"src": "790:1:5"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "793:4:5",
																					"nodeType": "YulLiteral",
																					"src": "793:4:5",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "786:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "786:3:5"
																			},
																			"nativeSrc": "786:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "786:12:5"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "781:1:5",
																				"nodeType": "YulIdentifier",
																				"src": "781:1:5"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "761:3:5",
																"nodeType": "YulBlock",
																"src": "761:3:5",
																"statements": []
															},
															"src": "757:143:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nativeSrc": "924:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "924:6:5"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "932:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "932:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "920:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "920:3:5"
																				},
																				"nativeSrc": "920:19:5",
																				"nodeType": "YulFunctionCall",
																				"src": "920:19:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "941:4:5",
																				"nodeType": "YulLiteral",
																				"src": "941:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "916:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "916:3:5"
																		},
																		"nativeSrc": "916:30:5",
																		"nodeType": "YulFunctionCall",
																		"src": "916:30:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "948:1:5",
																		"nodeType": "YulLiteral",
																		"src": "948:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "909:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "909:6:5"
																},
																"nativeSrc": "909:41:5",
																"nodeType": "YulFunctionCall",
																"src": "909:41:5"
															},
															"nativeSrc": "909:41:5",
															"nodeType": "YulExpressionStatement",
															"src": "909:41:5"
														},
														{
															"nativeSrc": "959:15:5",
															"nodeType": "YulAssignment",
															"src": "959:15:5",
															"value": {
																"name": "memPtr",
																"nativeSrc": "968:6:5",
																"nodeType": "YulIdentifier",
																"src": "968:6:5"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "959:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "959:5:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_string_fromMemory",
												"nativeSrc": "146:834:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "184:6:5",
														"nodeType": "YulTypedName",
														"src": "184:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "192:3:5",
														"nodeType": "YulTypedName",
														"src": "192:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "200:5:5",
														"nodeType": "YulTypedName",
														"src": "200:5:5",
														"type": ""
													}
												],
												"src": "146:834:5"
											},
											{
												"body": {
													"nativeSrc": "1103:439:5",
													"nodeType": "YulBlock",
													"src": "1103:439:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "1149:16:5",
																"nodeType": "YulBlock",
																"src": "1149:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1158:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1158:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1161:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1161:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1151:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1151:6:5"
																			},
																			"nativeSrc": "1151:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1151:12:5"
																		},
																		"nativeSrc": "1151:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1151:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1124:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "1124:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1133:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1133:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1120:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1120:3:5"
																		},
																		"nativeSrc": "1120:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1120:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1145:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1145:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1116:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1116:3:5"
																},
																"nativeSrc": "1116:32:5",
																"nodeType": "YulFunctionCall",
																"src": "1116:32:5"
															},
															"nativeSrc": "1113:52:5",
															"nodeType": "YulIf",
															"src": "1113:52:5"
														},
														{
															"nativeSrc": "1174:30:5",
															"nodeType": "YulVariableDeclaration",
															"src": "1174:30:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1194:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "1194:9:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1188:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "1188:5:5"
																},
																"nativeSrc": "1188:16:5",
																"nodeType": "YulFunctionCall",
																"src": "1188:16:5"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "1178:6:5",
																	"nodeType": "YulTypedName",
																	"src": "1178:6:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1247:16:5",
																"nodeType": "YulBlock",
																"src": "1247:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1256:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1256:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1259:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1259:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1249:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1249:6:5"
																			},
																			"nativeSrc": "1249:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1249:12:5"
																		},
																		"nativeSrc": "1249:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1249:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1219:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "1219:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "1235:2:5",
																						"nodeType": "YulLiteral",
																						"src": "1235:2:5",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1239:1:5",
																						"nodeType": "YulLiteral",
																						"src": "1239:1:5",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "1231:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "1231:3:5"
																				},
																				"nativeSrc": "1231:10:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1231:10:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1243:1:5",
																				"nodeType": "YulLiteral",
																				"src": "1243:1:5",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1227:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1227:3:5"
																		},
																		"nativeSrc": "1227:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1227:18:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1216:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "1216:2:5"
																},
																"nativeSrc": "1216:30:5",
																"nodeType": "YulFunctionCall",
																"src": "1216:30:5"
															},
															"nativeSrc": "1213:50:5",
															"nodeType": "YulIf",
															"src": "1213:50:5"
														},
														{
															"nativeSrc": "1272:71:5",
															"nodeType": "YulAssignment",
															"src": "1272:71:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1315:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1315:9:5"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "1326:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1326:6:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1311:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1311:3:5"
																		},
																		"nativeSrc": "1311:22:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1311:22:5"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "1335:7:5",
																		"nodeType": "YulIdentifier",
																		"src": "1335:7:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nativeSrc": "1282:28:5",
																	"nodeType": "YulIdentifier",
																	"src": "1282:28:5"
																},
																"nativeSrc": "1282:61:5",
																"nodeType": "YulFunctionCall",
																"src": "1282:61:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1272:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1272:6:5"
																}
															]
														},
														{
															"nativeSrc": "1352:41:5",
															"nodeType": "YulVariableDeclaration",
															"src": "1352:41:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1378:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1378:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1389:2:5",
																				"nodeType": "YulLiteral",
																				"src": "1389:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1374:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1374:3:5"
																		},
																		"nativeSrc": "1374:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1374:18:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1368:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "1368:5:5"
																},
																"nativeSrc": "1368:25:5",
																"nodeType": "YulFunctionCall",
																"src": "1368:25:5"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nativeSrc": "1356:8:5",
																	"nodeType": "YulTypedName",
																	"src": "1356:8:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1438:16:5",
																"nodeType": "YulBlock",
																"src": "1438:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1447:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1447:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1450:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1450:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1440:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1440:6:5"
																			},
																			"nativeSrc": "1440:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1440:12:5"
																		},
																		"nativeSrc": "1440:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1440:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nativeSrc": "1408:8:5",
																		"nodeType": "YulIdentifier",
																		"src": "1408:8:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "1426:2:5",
																						"nodeType": "YulLiteral",
																						"src": "1426:2:5",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1430:1:5",
																						"nodeType": "YulLiteral",
																						"src": "1430:1:5",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "1422:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "1422:3:5"
																				},
																				"nativeSrc": "1422:10:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1422:10:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1434:1:5",
																				"nodeType": "YulLiteral",
																				"src": "1434:1:5",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1418:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1418:3:5"
																		},
																		"nativeSrc": "1418:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1418:18:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1405:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "1405:2:5"
																},
																"nativeSrc": "1405:32:5",
																"nodeType": "YulFunctionCall",
																"src": "1405:32:5"
															},
															"nativeSrc": "1402:52:5",
															"nodeType": "YulIf",
															"src": "1402:52:5"
														},
														{
															"nativeSrc": "1463:73:5",
															"nodeType": "YulAssignment",
															"src": "1463:73:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1506:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1506:9:5"
																			},
																			{
																				"name": "offset_1",
																				"nativeSrc": "1517:8:5",
																				"nodeType": "YulIdentifier",
																				"src": "1517:8:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1502:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1502:3:5"
																		},
																		"nativeSrc": "1502:24:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1502:24:5"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "1528:7:5",
																		"nodeType": "YulIdentifier",
																		"src": "1528:7:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nativeSrc": "1473:28:5",
																	"nodeType": "YulIdentifier",
																	"src": "1473:28:5"
																},
																"nativeSrc": "1473:63:5",
																"nodeType": "YulFunctionCall",
																"src": "1473:63:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1463:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1463:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nativeSrc": "985:557:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1061:9:5",
														"nodeType": "YulTypedName",
														"src": "1061:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1072:7:5",
														"nodeType": "YulTypedName",
														"src": "1072:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1084:6:5",
														"nodeType": "YulTypedName",
														"src": "1084:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1092:6:5",
														"nodeType": "YulTypedName",
														"src": "1092:6:5",
														"type": ""
													}
												],
												"src": "985:557:5"
											},
											{
												"body": {
													"nativeSrc": "1602:325:5",
													"nodeType": "YulBlock",
													"src": "1602:325:5",
													"statements": [
														{
															"nativeSrc": "1612:22:5",
															"nodeType": "YulAssignment",
															"src": "1612:22:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1626:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1626:1:5",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "1629:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "1629:4:5"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "1622:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1622:3:5"
																},
																"nativeSrc": "1622:12:5",
																"nodeType": "YulFunctionCall",
																"src": "1622:12:5"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1612:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1612:6:5"
																}
															]
														},
														{
															"nativeSrc": "1643:38:5",
															"nodeType": "YulVariableDeclaration",
															"src": "1643:38:5",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "1673:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "1673:4:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1679:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1679:1:5",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1669:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1669:3:5"
																},
																"nativeSrc": "1669:12:5",
																"nodeType": "YulFunctionCall",
																"src": "1669:12:5"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "1647:18:5",
																	"nodeType": "YulTypedName",
																	"src": "1647:18:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1720:31:5",
																"nodeType": "YulBlock",
																"src": "1720:31:5",
																"statements": [
																	{
																		"nativeSrc": "1722:27:5",
																		"nodeType": "YulAssignment",
																		"src": "1722:27:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "1736:6:5",
																					"nodeType": "YulIdentifier",
																					"src": "1736:6:5"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1744:4:5",
																					"nodeType": "YulLiteral",
																					"src": "1744:4:5",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "1732:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "1732:3:5"
																			},
																			"nativeSrc": "1732:17:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1732:17:5"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "1722:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1722:6:5"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1700:18:5",
																		"nodeType": "YulIdentifier",
																		"src": "1700:18:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1693:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1693:6:5"
																},
																"nativeSrc": "1693:26:5",
																"nodeType": "YulFunctionCall",
																"src": "1693:26:5"
															},
															"nativeSrc": "1690:61:5",
															"nodeType": "YulIf",
															"src": "1690:61:5"
														},
														{
															"body": {
																"nativeSrc": "1810:111:5",
																"nodeType": "YulBlock",
																"src": "1810:111:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1831:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1831:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1838:3:5",
																							"nodeType": "YulLiteral",
																							"src": "1838:3:5",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "1843:10:5",
																							"nodeType": "YulLiteral",
																							"src": "1843:10:5",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "1834:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "1834:3:5"
																					},
																					"nativeSrc": "1834:20:5",
																					"nodeType": "YulFunctionCall",
																					"src": "1834:20:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1824:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1824:6:5"
																			},
																			"nativeSrc": "1824:31:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1824:31:5"
																		},
																		"nativeSrc": "1824:31:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1824:31:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1875:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1875:1:5",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1878:4:5",
																					"nodeType": "YulLiteral",
																					"src": "1878:4:5",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1868:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1868:6:5"
																			},
																			"nativeSrc": "1868:15:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1868:15:5"
																		},
																		"nativeSrc": "1868:15:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1868:15:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1903:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1903:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1906:4:5",
																					"nodeType": "YulLiteral",
																					"src": "1906:4:5",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1896:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1896:6:5"
																			},
																			"nativeSrc": "1896:15:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1896:15:5"
																		},
																		"nativeSrc": "1896:15:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1896:15:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1766:18:5",
																		"nodeType": "YulIdentifier",
																		"src": "1766:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1789:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1789:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1797:2:5",
																				"nodeType": "YulLiteral",
																				"src": "1797:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1786:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "1786:2:5"
																		},
																		"nativeSrc": "1786:14:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1786:14:5"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "1763:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "1763:2:5"
																},
																"nativeSrc": "1763:38:5",
																"nodeType": "YulFunctionCall",
																"src": "1763:38:5"
															},
															"nativeSrc": "1760:161:5",
															"nodeType": "YulIf",
															"src": "1760:161:5"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "1547:380:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "1582:4:5",
														"nodeType": "YulTypedName",
														"src": "1582:4:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1591:6:5",
														"nodeType": "YulTypedName",
														"src": "1591:6:5",
														"type": ""
													}
												],
												"src": "1547:380:5"
											},
											{
												"body": {
													"nativeSrc": "1988:65:5",
													"nodeType": "YulBlock",
													"src": "1988:65:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2005:1:5",
																		"nodeType": "YulLiteral",
																		"src": "2005:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "2008:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "2008:3:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1998:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1998:6:5"
																},
																"nativeSrc": "1998:14:5",
																"nodeType": "YulFunctionCall",
																"src": "1998:14:5"
															},
															"nativeSrc": "1998:14:5",
															"nodeType": "YulExpressionStatement",
															"src": "1998:14:5"
														},
														{
															"nativeSrc": "2021:26:5",
															"nodeType": "YulAssignment",
															"src": "2021:26:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2039:1:5",
																		"nodeType": "YulLiteral",
																		"src": "2039:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2042:4:5",
																		"nodeType": "YulLiteral",
																		"src": "2042:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "2029:9:5",
																	"nodeType": "YulIdentifier",
																	"src": "2029:9:5"
																},
																"nativeSrc": "2029:18:5",
																"nodeType": "YulFunctionCall",
																"src": "2029:18:5"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2021:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "2021:4:5"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nativeSrc": "1932:121:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "1971:3:5",
														"nodeType": "YulTypedName",
														"src": "1971:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "1979:4:5",
														"nodeType": "YulTypedName",
														"src": "1979:4:5",
														"type": ""
													}
												],
												"src": "1932:121:5"
											},
											{
												"body": {
													"nativeSrc": "2139:437:5",
													"nodeType": "YulBlock",
													"src": "2139:437:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "2172:398:5",
																"nodeType": "YulBlock",
																"src": "2172:398:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2193:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2193:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"name": "array",
																					"nativeSrc": "2196:5:5",
																					"nodeType": "YulIdentifier",
																					"src": "2196:5:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2186:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "2186:6:5"
																			},
																			"nativeSrc": "2186:16:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2186:16:5"
																		},
																		"nativeSrc": "2186:16:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "2186:16:5"
																	},
																	{
																		"nativeSrc": "2215:30:5",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2215:30:5",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2237:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2237:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2240:4:5",
																					"nodeType": "YulLiteral",
																					"src": "2240:4:5",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nativeSrc": "2227:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "2227:9:5"
																			},
																			"nativeSrc": "2227:18:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2227:18:5"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nativeSrc": "2219:4:5",
																				"nodeType": "YulTypedName",
																				"src": "2219:4:5",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "2258:57:5",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2258:57:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "2281:4:5",
																					"nodeType": "YulIdentifier",
																					"src": "2281:4:5"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2291:1:5",
																							"nodeType": "YulLiteral",
																							"src": "2291:1:5",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nativeSrc": "2298:10:5",
																									"nodeType": "YulIdentifier",
																									"src": "2298:10:5"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2310:2:5",
																									"nodeType": "YulLiteral",
																									"src": "2310:2:5",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2294:3:5",
																								"nodeType": "YulIdentifier",
																								"src": "2294:3:5"
																							},
																							"nativeSrc": "2294:19:5",
																							"nodeType": "YulFunctionCall",
																							"src": "2294:19:5"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "2287:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "2287:3:5"
																					},
																					"nativeSrc": "2287:27:5",
																					"nodeType": "YulFunctionCall",
																					"src": "2287:27:5"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2277:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "2277:3:5"
																			},
																			"nativeSrc": "2277:38:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2277:38:5"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "2262:11:5",
																				"nodeType": "YulTypedName",
																				"src": "2262:11:5",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "2352:23:5",
																			"nodeType": "YulBlock",
																			"src": "2352:23:5",
																			"statements": [
																				{
																					"nativeSrc": "2354:19:5",
																					"nodeType": "YulAssignment",
																					"src": "2354:19:5",
																					"value": {
																						"name": "data",
																						"nativeSrc": "2369:4:5",
																						"nodeType": "YulIdentifier",
																						"src": "2369:4:5"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "2354:11:5",
																							"nodeType": "YulIdentifier",
																							"src": "2354:11:5"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "2334:10:5",
																					"nodeType": "YulIdentifier",
																					"src": "2334:10:5"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2346:4:5",
																					"nodeType": "YulLiteral",
																					"src": "2346:4:5",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "2331:2:5",
																				"nodeType": "YulIdentifier",
																				"src": "2331:2:5"
																			},
																			"nativeSrc": "2331:20:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2331:20:5"
																		},
																		"nativeSrc": "2328:47:5",
																		"nodeType": "YulIf",
																		"src": "2328:47:5"
																	},
																	{
																		"nativeSrc": "2388:41:5",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2388:41:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "2402:4:5",
																					"nodeType": "YulIdentifier",
																					"src": "2402:4:5"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2412:1:5",
																							"nodeType": "YulLiteral",
																							"src": "2412:1:5",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "2419:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "2419:3:5"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2424:2:5",
																									"nodeType": "YulLiteral",
																									"src": "2424:2:5",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2415:3:5",
																								"nodeType": "YulIdentifier",
																								"src": "2415:3:5"
																							},
																							"nativeSrc": "2415:12:5",
																							"nodeType": "YulFunctionCall",
																							"src": "2415:12:5"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "2408:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "2408:3:5"
																					},
																					"nativeSrc": "2408:20:5",
																					"nodeType": "YulFunctionCall",
																					"src": "2408:20:5"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2398:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "2398:3:5"
																			},
																			"nativeSrc": "2398:31:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2398:31:5"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nativeSrc": "2392:2:5",
																				"nodeType": "YulTypedName",
																				"src": "2392:2:5",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "2442:24:5",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2442:24:5",
																		"value": {
																			"name": "deleteStart",
																			"nativeSrc": "2455:11:5",
																			"nodeType": "YulIdentifier",
																			"src": "2455:11:5"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nativeSrc": "2446:5:5",
																				"nodeType": "YulTypedName",
																				"src": "2446:5:5",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "2540:20:5",
																			"nodeType": "YulBlock",
																			"src": "2540:20:5",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "2549:5:5",
																								"nodeType": "YulIdentifier",
																								"src": "2549:5:5"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2556:1:5",
																								"nodeType": "YulLiteral",
																								"src": "2556:1:5",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nativeSrc": "2542:6:5",
																							"nodeType": "YulIdentifier",
																							"src": "2542:6:5"
																						},
																						"nativeSrc": "2542:16:5",
																						"nodeType": "YulFunctionCall",
																						"src": "2542:16:5"
																					},
																					"nativeSrc": "2542:16:5",
																					"nodeType": "YulExpressionStatement",
																					"src": "2542:16:5"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2490:5:5",
																					"nodeType": "YulIdentifier",
																					"src": "2490:5:5"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "2497:2:5",
																					"nodeType": "YulIdentifier",
																					"src": "2497:2:5"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "2487:2:5",
																				"nodeType": "YulIdentifier",
																				"src": "2487:2:5"
																			},
																			"nativeSrc": "2487:13:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2487:13:5"
																		},
																		"nativeSrc": "2479:81:5",
																		"nodeType": "YulForLoop",
																		"post": {
																			"nativeSrc": "2501:26:5",
																			"nodeType": "YulBlock",
																			"src": "2501:26:5",
																			"statements": [
																				{
																					"nativeSrc": "2503:22:5",
																					"nodeType": "YulAssignment",
																					"src": "2503:22:5",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "2516:5:5",
																								"nodeType": "YulIdentifier",
																								"src": "2516:5:5"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2523:1:5",
																								"nodeType": "YulLiteral",
																								"src": "2523:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "2512:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "2512:3:5"
																						},
																						"nativeSrc": "2512:13:5",
																						"nodeType": "YulFunctionCall",
																						"src": "2512:13:5"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nativeSrc": "2503:5:5",
																							"nodeType": "YulIdentifier",
																							"src": "2503:5:5"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nativeSrc": "2483:3:5",
																			"nodeType": "YulBlock",
																			"src": "2483:3:5",
																			"statements": []
																		},
																		"src": "2479:81:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "2155:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "2155:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2160:2:5",
																		"nodeType": "YulLiteral",
																		"src": "2160:2:5",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2152:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "2152:2:5"
																},
																"nativeSrc": "2152:11:5",
																"nodeType": "YulFunctionCall",
																"src": "2152:11:5"
															},
															"nativeSrc": "2149:421:5",
															"nodeType": "YulIf",
															"src": "2149:421:5"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nativeSrc": "2058:518:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "2111:5:5",
														"nodeType": "YulTypedName",
														"src": "2111:5:5",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "2118:3:5",
														"nodeType": "YulTypedName",
														"src": "2118:3:5",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "2123:10:5",
														"nodeType": "YulTypedName",
														"src": "2123:10:5",
														"type": ""
													}
												],
												"src": "2058:518:5"
											},
											{
												"body": {
													"nativeSrc": "2666:81:5",
													"nodeType": "YulBlock",
													"src": "2666:81:5",
													"statements": [
														{
															"nativeSrc": "2676:65:5",
															"nodeType": "YulAssignment",
															"src": "2676:65:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "2691:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "2691:4:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "2709:1:5",
																										"nodeType": "YulLiteral",
																										"src": "2709:1:5",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nativeSrc": "2712:3:5",
																										"nodeType": "YulIdentifier",
																										"src": "2712:3:5"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "2705:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "2705:3:5"
																								},
																								"nativeSrc": "2705:11:5",
																								"nodeType": "YulFunctionCall",
																								"src": "2705:11:5"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "2722:1:5",
																										"nodeType": "YulLiteral",
																										"src": "2722:1:5",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "2718:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "2718:3:5"
																								},
																								"nativeSrc": "2718:6:5",
																								"nodeType": "YulFunctionCall",
																								"src": "2718:6:5"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nativeSrc": "2701:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "2701:3:5"
																						},
																						"nativeSrc": "2701:24:5",
																						"nodeType": "YulFunctionCall",
																						"src": "2701:24:5"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "2697:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "2697:3:5"
																				},
																				"nativeSrc": "2697:29:5",
																				"nodeType": "YulFunctionCall",
																				"src": "2697:29:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2687:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2687:3:5"
																		},
																		"nativeSrc": "2687:40:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2687:40:5"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2733:1:5",
																				"nodeType": "YulLiteral",
																				"src": "2733:1:5",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "2736:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "2736:3:5"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "2729:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2729:3:5"
																		},
																		"nativeSrc": "2729:11:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2729:11:5"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "2684:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "2684:2:5"
																},
																"nativeSrc": "2684:57:5",
																"nodeType": "YulFunctionCall",
																"src": "2684:57:5"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "2676:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "2676:4:5"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "2581:166:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "2643:4:5",
														"nodeType": "YulTypedName",
														"src": "2643:4:5",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "2649:3:5",
														"nodeType": "YulTypedName",
														"src": "2649:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "2657:4:5",
														"nodeType": "YulTypedName",
														"src": "2657:4:5",
														"type": ""
													}
												],
												"src": "2581:166:5"
											},
											{
												"body": {
													"nativeSrc": "2848:1203:5",
													"nodeType": "YulBlock",
													"src": "2848:1203:5",
													"statements": [
														{
															"nativeSrc": "2858:24:5",
															"nodeType": "YulVariableDeclaration",
															"src": "2858:24:5",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "2878:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "2878:3:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2872:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "2872:5:5"
																},
																"nativeSrc": "2872:10:5",
																"nodeType": "YulFunctionCall",
																"src": "2872:10:5"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "2862:6:5",
																	"nodeType": "YulTypedName",
																	"src": "2862:6:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2925:22:5",
																"nodeType": "YulBlock",
																"src": "2925:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "2927:16:5",
																				"nodeType": "YulIdentifier",
																				"src": "2927:16:5"
																			},
																			"nativeSrc": "2927:18:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2927:18:5"
																		},
																		"nativeSrc": "2927:18:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "2927:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "2897:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "2897:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "2913:2:5",
																						"nodeType": "YulLiteral",
																						"src": "2913:2:5",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2917:1:5",
																						"nodeType": "YulLiteral",
																						"src": "2917:1:5",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "2909:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "2909:3:5"
																				},
																				"nativeSrc": "2909:10:5",
																				"nodeType": "YulFunctionCall",
																				"src": "2909:10:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2921:1:5",
																				"nodeType": "YulLiteral",
																				"src": "2921:1:5",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2905:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2905:3:5"
																		},
																		"nativeSrc": "2905:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2905:18:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2894:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "2894:2:5"
																},
																"nativeSrc": "2894:30:5",
																"nodeType": "YulFunctionCall",
																"src": "2894:30:5"
															},
															"nativeSrc": "2891:56:5",
															"nodeType": "YulIf",
															"src": "2891:56:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3000:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "3000:4:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "3038:4:5",
																						"nodeType": "YulIdentifier",
																						"src": "3038:4:5"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "3032:5:5",
																					"nodeType": "YulIdentifier",
																					"src": "3032:5:5"
																				},
																				"nativeSrc": "3032:11:5",
																				"nodeType": "YulFunctionCall",
																				"src": "3032:11:5"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nativeSrc": "3006:25:5",
																			"nodeType": "YulIdentifier",
																			"src": "3006:25:5"
																		},
																		"nativeSrc": "3006:38:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3006:38:5"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "3046:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "3046:6:5"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nativeSrc": "2956:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "2956:43:5"
																},
																"nativeSrc": "2956:97:5",
																"nodeType": "YulFunctionCall",
																"src": "2956:97:5"
															},
															"nativeSrc": "2956:97:5",
															"nodeType": "YulExpressionStatement",
															"src": "2956:97:5"
														},
														{
															"nativeSrc": "3062:18:5",
															"nodeType": "YulVariableDeclaration",
															"src": "3062:18:5",
															"value": {
																"kind": "number",
																"nativeSrc": "3079:1:5",
																"nodeType": "YulLiteral",
																"src": "3079:1:5",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "3066:9:5",
																	"nodeType": "YulTypedName",
																	"src": "3066:9:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3089:17:5",
															"nodeType": "YulAssignment",
															"src": "3089:17:5",
															"value": {
																"kind": "number",
																"nativeSrc": "3102:4:5",
																"nodeType": "YulLiteral",
																"src": "3102:4:5",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "3089:9:5",
																	"nodeType": "YulIdentifier",
																	"src": "3089:9:5"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "3152:642:5",
																		"nodeType": "YulBlock",
																		"src": "3152:642:5",
																		"statements": [
																			{
																				"nativeSrc": "3166:35:5",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3166:35:5",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "3185:6:5",
																							"nodeType": "YulIdentifier",
																							"src": "3185:6:5"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "3197:2:5",
																									"nodeType": "YulLiteral",
																									"src": "3197:2:5",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "3193:3:5",
																								"nodeType": "YulIdentifier",
																								"src": "3193:3:5"
																							},
																							"nativeSrc": "3193:7:5",
																							"nodeType": "YulFunctionCall",
																							"src": "3193:7:5"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "3181:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "3181:3:5"
																					},
																					"nativeSrc": "3181:20:5",
																					"nodeType": "YulFunctionCall",
																					"src": "3181:20:5"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "3170:7:5",
																						"nodeType": "YulTypedName",
																						"src": "3170:7:5",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "3214:49:5",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3214:49:5",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "3258:4:5",
																							"nodeType": "YulIdentifier",
																							"src": "3258:4:5"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nativeSrc": "3228:29:5",
																						"nodeType": "YulIdentifier",
																						"src": "3228:29:5"
																					},
																					"nativeSrc": "3228:35:5",
																					"nodeType": "YulFunctionCall",
																					"src": "3228:35:5"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "3218:6:5",
																						"nodeType": "YulTypedName",
																						"src": "3218:6:5",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "3276:10:5",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3276:10:5",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "3285:1:5",
																					"nodeType": "YulLiteral",
																					"src": "3285:1:5",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "3280:1:5",
																						"nodeType": "YulTypedName",
																						"src": "3280:1:5",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "3356:165:5",
																					"nodeType": "YulBlock",
																					"src": "3356:165:5",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "3381:6:5",
																										"nodeType": "YulIdentifier",
																										"src": "3381:6:5"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "3399:3:5",
																														"nodeType": "YulIdentifier",
																														"src": "3399:3:5"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "3404:9:5",
																														"nodeType": "YulIdentifier",
																														"src": "3404:9:5"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "3395:3:5",
																													"nodeType": "YulIdentifier",
																													"src": "3395:3:5"
																												},
																												"nativeSrc": "3395:19:5",
																												"nodeType": "YulFunctionCall",
																												"src": "3395:19:5"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "3389:5:5",
																											"nodeType": "YulIdentifier",
																											"src": "3389:5:5"
																										},
																										"nativeSrc": "3389:26:5",
																										"nodeType": "YulFunctionCall",
																										"src": "3389:26:5"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "3374:6:5",
																									"nodeType": "YulIdentifier",
																									"src": "3374:6:5"
																								},
																								"nativeSrc": "3374:42:5",
																								"nodeType": "YulFunctionCall",
																								"src": "3374:42:5"
																							},
																							"nativeSrc": "3374:42:5",
																							"nodeType": "YulExpressionStatement",
																							"src": "3374:42:5"
																						},
																						{
																							"nativeSrc": "3433:24:5",
																							"nodeType": "YulAssignment",
																							"src": "3433:24:5",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "3447:6:5",
																										"nodeType": "YulIdentifier",
																										"src": "3447:6:5"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "3455:1:5",
																										"nodeType": "YulLiteral",
																										"src": "3455:1:5",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "3443:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "3443:3:5"
																								},
																								"nativeSrc": "3443:14:5",
																								"nodeType": "YulFunctionCall",
																								"src": "3443:14:5"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "3433:6:5",
																									"nodeType": "YulIdentifier",
																									"src": "3433:6:5"
																								}
																							]
																						},
																						{
																							"nativeSrc": "3474:33:5",
																							"nodeType": "YulAssignment",
																							"src": "3474:33:5",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "3491:9:5",
																										"nodeType": "YulIdentifier",
																										"src": "3491:9:5"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "3502:4:5",
																										"nodeType": "YulLiteral",
																										"src": "3502:4:5",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "3487:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "3487:3:5"
																								},
																								"nativeSrc": "3487:20:5",
																								"nodeType": "YulFunctionCall",
																								"src": "3487:20:5"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "3474:9:5",
																									"nodeType": "YulIdentifier",
																									"src": "3474:9:5"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "3310:1:5",
																							"nodeType": "YulIdentifier",
																							"src": "3310:1:5"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "3313:7:5",
																							"nodeType": "YulIdentifier",
																							"src": "3313:7:5"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "3307:2:5",
																						"nodeType": "YulIdentifier",
																						"src": "3307:2:5"
																					},
																					"nativeSrc": "3307:14:5",
																					"nodeType": "YulFunctionCall",
																					"src": "3307:14:5"
																				},
																				"nativeSrc": "3299:222:5",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "3322:21:5",
																					"nodeType": "YulBlock",
																					"src": "3322:21:5",
																					"statements": [
																						{
																							"nativeSrc": "3324:17:5",
																							"nodeType": "YulAssignment",
																							"src": "3324:17:5",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "3333:1:5",
																										"nodeType": "YulIdentifier",
																										"src": "3333:1:5"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "3336:4:5",
																										"nodeType": "YulLiteral",
																										"src": "3336:4:5",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "3329:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "3329:3:5"
																								},
																								"nativeSrc": "3329:12:5",
																								"nodeType": "YulFunctionCall",
																								"src": "3329:12:5"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "3324:1:5",
																									"nodeType": "YulIdentifier",
																									"src": "3324:1:5"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "3303:3:5",
																					"nodeType": "YulBlock",
																					"src": "3303:3:5",
																					"statements": []
																				},
																				"src": "3299:222:5"
																			},
																			{
																				"body": {
																					"nativeSrc": "3569:166:5",
																					"nodeType": "YulBlock",
																					"src": "3569:166:5",
																					"statements": [
																						{
																							"nativeSrc": "3587:43:5",
																							"nodeType": "YulVariableDeclaration",
																							"src": "3587:43:5",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "3614:3:5",
																												"nodeType": "YulIdentifier",
																												"src": "3614:3:5"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "3619:9:5",
																												"nodeType": "YulIdentifier",
																												"src": "3619:9:5"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "3610:3:5",
																											"nodeType": "YulIdentifier",
																											"src": "3610:3:5"
																										},
																										"nativeSrc": "3610:19:5",
																										"nodeType": "YulFunctionCall",
																										"src": "3610:19:5"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "3604:5:5",
																									"nodeType": "YulIdentifier",
																									"src": "3604:5:5"
																								},
																								"nativeSrc": "3604:26:5",
																								"nodeType": "YulFunctionCall",
																								"src": "3604:26:5"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "3591:9:5",
																									"nodeType": "YulTypedName",
																									"src": "3591:9:5",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "3654:6:5",
																										"nodeType": "YulIdentifier",
																										"src": "3654:6:5"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "3666:9:5",
																												"nodeType": "YulIdentifier",
																												"src": "3666:9:5"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nativeSrc": "3693:1:5",
																																				"nodeType": "YulLiteral",
																																				"src": "3693:1:5",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nativeSrc": "3696:6:5",
																																				"nodeType": "YulIdentifier",
																																				"src": "3696:6:5"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nativeSrc": "3689:3:5",
																																			"nodeType": "YulIdentifier",
																																			"src": "3689:3:5"
																																		},
																																		"nativeSrc": "3689:14:5",
																																		"nodeType": "YulFunctionCall",
																																		"src": "3689:14:5"
																																	},
																																	{
																																		"kind": "number",
																																		"nativeSrc": "3705:3:5",
																																		"nodeType": "YulLiteral",
																																		"src": "3705:3:5",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nativeSrc": "3685:3:5",
																																	"nodeType": "YulIdentifier",
																																	"src": "3685:3:5"
																																},
																																"nativeSrc": "3685:24:5",
																																"nodeType": "YulFunctionCall",
																																"src": "3685:24:5"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nativeSrc": "3715:1:5",
																																		"nodeType": "YulLiteral",
																																		"src": "3715:1:5",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nativeSrc": "3711:3:5",
																																	"nodeType": "YulIdentifier",
																																	"src": "3711:3:5"
																																},
																																"nativeSrc": "3711:6:5",
																																"nodeType": "YulFunctionCall",
																																"src": "3711:6:5"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nativeSrc": "3681:3:5",
																															"nodeType": "YulIdentifier",
																															"src": "3681:3:5"
																														},
																														"nativeSrc": "3681:37:5",
																														"nodeType": "YulFunctionCall",
																														"src": "3681:37:5"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nativeSrc": "3677:3:5",
																													"nodeType": "YulIdentifier",
																													"src": "3677:3:5"
																												},
																												"nativeSrc": "3677:42:5",
																												"nodeType": "YulFunctionCall",
																												"src": "3677:42:5"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nativeSrc": "3662:3:5",
																											"nodeType": "YulIdentifier",
																											"src": "3662:3:5"
																										},
																										"nativeSrc": "3662:58:5",
																										"nodeType": "YulFunctionCall",
																										"src": "3662:58:5"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "3647:6:5",
																									"nodeType": "YulIdentifier",
																									"src": "3647:6:5"
																								},
																								"nativeSrc": "3647:74:5",
																								"nodeType": "YulFunctionCall",
																								"src": "3647:74:5"
																							},
																							"nativeSrc": "3647:74:5",
																							"nodeType": "YulExpressionStatement",
																							"src": "3647:74:5"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "3540:7:5",
																							"nodeType": "YulIdentifier",
																							"src": "3540:7:5"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "3549:6:5",
																							"nodeType": "YulIdentifier",
																							"src": "3549:6:5"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "3537:2:5",
																						"nodeType": "YulIdentifier",
																						"src": "3537:2:5"
																					},
																					"nativeSrc": "3537:19:5",
																					"nodeType": "YulFunctionCall",
																					"src": "3537:19:5"
																				},
																				"nativeSrc": "3534:201:5",
																				"nodeType": "YulIf",
																				"src": "3534:201:5"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "3755:4:5",
																							"nodeType": "YulIdentifier",
																							"src": "3755:4:5"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "3769:1:5",
																											"nodeType": "YulLiteral",
																											"src": "3769:1:5",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nativeSrc": "3772:6:5",
																											"nodeType": "YulIdentifier",
																											"src": "3772:6:5"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "3765:3:5",
																										"nodeType": "YulIdentifier",
																										"src": "3765:3:5"
																									},
																									"nativeSrc": "3765:14:5",
																									"nodeType": "YulFunctionCall",
																									"src": "3765:14:5"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "3781:1:5",
																									"nodeType": "YulLiteral",
																									"src": "3781:1:5",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "3761:3:5",
																								"nodeType": "YulIdentifier",
																								"src": "3761:3:5"
																							},
																							"nativeSrc": "3761:22:5",
																							"nodeType": "YulFunctionCall",
																							"src": "3761:22:5"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "3748:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "3748:6:5"
																					},
																					"nativeSrc": "3748:36:5",
																					"nodeType": "YulFunctionCall",
																					"src": "3748:36:5"
																				},
																				"nativeSrc": "3748:36:5",
																				"nodeType": "YulExpressionStatement",
																				"src": "3748:36:5"
																			}
																		]
																	},
																	"nativeSrc": "3145:649:5",
																	"nodeType": "YulCase",
																	"src": "3145:649:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3150:1:5",
																		"nodeType": "YulLiteral",
																		"src": "3150:1:5",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "3811:234:5",
																		"nodeType": "YulBlock",
																		"src": "3811:234:5",
																		"statements": [
																			{
																				"nativeSrc": "3825:14:5",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3825:14:5",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "3838:1:5",
																					"nodeType": "YulLiteral",
																					"src": "3838:1:5",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "3829:5:5",
																						"nodeType": "YulTypedName",
																						"src": "3829:5:5",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "3874:67:5",
																					"nodeType": "YulBlock",
																					"src": "3874:67:5",
																					"statements": [
																						{
																							"nativeSrc": "3892:35:5",
																							"nodeType": "YulAssignment",
																							"src": "3892:35:5",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "3911:3:5",
																												"nodeType": "YulIdentifier",
																												"src": "3911:3:5"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "3916:9:5",
																												"nodeType": "YulIdentifier",
																												"src": "3916:9:5"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "3907:3:5",
																											"nodeType": "YulIdentifier",
																											"src": "3907:3:5"
																										},
																										"nativeSrc": "3907:19:5",
																										"nodeType": "YulFunctionCall",
																										"src": "3907:19:5"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "3901:5:5",
																									"nodeType": "YulIdentifier",
																									"src": "3901:5:5"
																								},
																								"nativeSrc": "3901:26:5",
																								"nodeType": "YulFunctionCall",
																								"src": "3901:26:5"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "3892:5:5",
																									"nodeType": "YulIdentifier",
																									"src": "3892:5:5"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "3855:6:5",
																					"nodeType": "YulIdentifier",
																					"src": "3855:6:5"
																				},
																				"nativeSrc": "3852:89:5",
																				"nodeType": "YulIf",
																				"src": "3852:89:5"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "3961:4:5",
																							"nodeType": "YulIdentifier",
																							"src": "3961:4:5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "4020:5:5",
																									"nodeType": "YulIdentifier",
																									"src": "4020:5:5"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "4027:6:5",
																									"nodeType": "YulIdentifier",
																									"src": "4027:6:5"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "3967:52:5",
																								"nodeType": "YulIdentifier",
																								"src": "3967:52:5"
																							},
																							"nativeSrc": "3967:67:5",
																							"nodeType": "YulFunctionCall",
																							"src": "3967:67:5"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "3954:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "3954:6:5"
																					},
																					"nativeSrc": "3954:81:5",
																					"nodeType": "YulFunctionCall",
																					"src": "3954:81:5"
																				},
																				"nativeSrc": "3954:81:5",
																				"nodeType": "YulExpressionStatement",
																				"src": "3954:81:5"
																			}
																		]
																	},
																	"nativeSrc": "3803:242:5",
																	"nodeType": "YulCase",
																	"src": "3803:242:5",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "3125:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "3125:6:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3133:2:5",
																		"nodeType": "YulLiteral",
																		"src": "3133:2:5",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3122:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "3122:2:5"
																},
																"nativeSrc": "3122:14:5",
																"nodeType": "YulFunctionCall",
																"src": "3122:14:5"
															},
															"nativeSrc": "3115:930:5",
															"nodeType": "YulSwitch",
															"src": "3115:930:5"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "2752:1299:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "2833:4:5",
														"nodeType": "YulTypedName",
														"src": "2833:4:5",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "2839:3:5",
														"nodeType": "YulTypedName",
														"src": "2839:3:5",
														"type": ""
													}
												],
												"src": "2752:1299:5"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let length := mload(offset)\n        if gt(length, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(length, 0x1f), not(31)), 63), not(31)))\n        if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, length)\n        if gt(add(add(offset, length), 0x20), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            mstore(add(add(memPtr, i), 0x20), mload(add(add(offset, i), 0x20)))\n        }\n        mstore(add(add(memPtr, length), 0x20), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := mload(headStart)\n        if gt(offset, sub(shl(64, 1), 1)) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, sub(shl(64, 1), 1)) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 0x20)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n}",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50604051610e4e380380610e4e83398101604081905261002f91610109565b600361003b83826101fb565b50600461004882826101fb565b5050506102b9565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261007757600080fd5b81516001600160401b0381111561009057610090610050565b604051601f8201601f19908116603f011681016001600160401b03811182821017156100be576100be610050565b6040528181528382016020018510156100d657600080fd5b60005b828110156100f5576020818601810151838301820152016100d9565b506000918101602001919091529392505050565b6000806040838503121561011c57600080fd5b82516001600160401b0381111561013257600080fd5b61013e85828601610066565b602085015190935090506001600160401b0381111561015c57600080fd5b61016885828601610066565b9150509250929050565b600181811c9082168061018657607f821691505b6020821081036101a657634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156101f657806000526020600020601f840160051c810160208510156101d35750805b601f840160051c820191505b818110156101f357600081556001016101df565b50505b505050565b81516001600160401b0381111561021457610214610050565b610228816102228454610172565b846101ac565b6020601f82116001811461025c57600083156102445750848201515b600019600385901b1c1916600184901b1784556101f3565b600084815260208120601f198516915b8281101561028c578785015182556020948501946001909201910161026c565b50848210156102aa5786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b610b86806102c86000396000f3fe608060405234801561001057600080fd5b50600436106100c95760003560e01c80633950935111610081578063a457c2d71161005b578063a457c2d714610194578063a9059cbb146101a7578063dd62ed3e146101ba57600080fd5b8063395093511461014357806370a082311461015657806395d89b411461018c57600080fd5b806318160ddd116100b257806318160ddd1461010f57806323b872dd14610121578063313ce5671461013457600080fd5b806306fdde03146100ce578063095ea7b3146100ec575b600080fd5b6100d6610200565b6040516100e3919061094c565b60405180910390f35b6100ff6100fa3660046109e1565b610292565b60405190151581526020016100e3565b6002545b6040519081526020016100e3565b6100ff61012f366004610a0b565b6102ac565b604051601281526020016100e3565b6100ff6101513660046109e1565b6102d0565b610113610164366004610a48565b73ffffffffffffffffffffffffffffffffffffffff1660009081526020819052604090205490565b6100d661031c565b6100ff6101a23660046109e1565b61032b565b6100ff6101b53660046109e1565b610401565b6101136101c8366004610a6a565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260016020908152604080832093909416825291909152205490565b60606003805461020f90610a9d565b80601f016020809104026020016040519081016040528092919081815260200182805461023b90610a9d565b80156102885780601f1061025d57610100808354040283529160200191610288565b820191906000526020600020905b81548152906001019060200180831161026b57829003601f168201915b5050505050905090565b6000336102a081858561040f565b60019150505b92915050565b6000336102ba8582856105c2565b6102c5858585610699565b506001949350505050565b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff871684529091528120549091906102a09082908690610317908790610af0565b61040f565b60606004805461020f90610a9d565b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff87168452909152812054909190838110156103f4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f00000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b6102c5828686840361040f565b6000336102a0818585610699565b73ffffffffffffffffffffffffffffffffffffffff83166104b1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f726573730000000000000000000000000000000000000000000000000000000060648201526084016103eb565b73ffffffffffffffffffffffffffffffffffffffff8216610554576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f737300000000000000000000000000000000000000000000000000000000000060648201526084016103eb565b73ffffffffffffffffffffffffffffffffffffffff83811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b73ffffffffffffffffffffffffffffffffffffffff8381166000908152600160209081526040808320938616835292905220547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146106935781811015610686576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016103eb565b610693848484840361040f565b50505050565b73ffffffffffffffffffffffffffffffffffffffff831661073c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f647265737300000000000000000000000000000000000000000000000000000060648201526084016103eb565b73ffffffffffffffffffffffffffffffffffffffff82166107df576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f657373000000000000000000000000000000000000000000000000000000000060648201526084016103eb565b73ffffffffffffffffffffffffffffffffffffffff831660009081526020819052604090205481811015610895576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e6365000000000000000000000000000000000000000000000000000060648201526084016103eb565b73ffffffffffffffffffffffffffffffffffffffff8085166000908152602081905260408082208585039055918516815290812080548492906108d9908490610af0565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161093f91815260200190565b60405180910390a3610693565b602081526000825180602084015260005b8181101561097a576020818601810151604086840101520161095d565b5060006040828501015260407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011684010191505092915050565b803573ffffffffffffffffffffffffffffffffffffffff811681146109dc57600080fd5b919050565b600080604083850312156109f457600080fd5b6109fd836109b8565b946020939093013593505050565b600080600060608486031215610a2057600080fd5b610a29846109b8565b9250610a37602085016109b8565b929592945050506040919091013590565b600060208284031215610a5a57600080fd5b610a63826109b8565b9392505050565b60008060408385031215610a7d57600080fd5b610a86836109b8565b9150610a94602084016109b8565b90509250929050565b600181811c90821680610ab157607f821691505b602082108103610aea577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b808201808211156102a6577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fdfea2646970667358221220aa3b9267ed20783115df50bfd1de91a30918741df1dd59094868d15e41f4992764736f6c637828302e382e32382d6e696768746c792e323032342e31302e322b636f6d6d69742e32353665393532380059",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xE4E CODESIZE SUB DUP1 PUSH2 0xE4E DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0x109 JUMP JUMPDEST PUSH1 0x3 PUSH2 0x3B DUP4 DUP3 PUSH2 0x1FB JUMP JUMPDEST POP PUSH1 0x4 PUSH2 0x48 DUP3 DUP3 PUSH2 0x1FB JUMP JUMPDEST POP POP POP PUSH2 0x2B9 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x77 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x90 JUMPI PUSH2 0x90 PUSH2 0x50 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xBE JUMPI PUSH2 0xBE PUSH2 0x50 JUMP JUMPDEST PUSH1 0x40 MSTORE DUP2 DUP2 MSTORE DUP4 DUP3 ADD PUSH1 0x20 ADD DUP6 LT ISZERO PUSH2 0xD6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xF5 JUMPI PUSH1 0x20 DUP2 DUP7 ADD DUP2 ADD MLOAD DUP4 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0xD9 JUMP JUMPDEST POP PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x11C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x132 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x13E DUP6 DUP3 DUP7 ADD PUSH2 0x66 JUMP JUMPDEST PUSH1 0x20 DUP6 ADD MLOAD SWAP1 SWAP4 POP SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x15C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x168 DUP6 DUP3 DUP7 ADD PUSH2 0x66 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x186 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1A6 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x1F6 JUMPI DUP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x1D3 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1F3 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1DF JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x214 JUMPI PUSH2 0x214 PUSH2 0x50 JUMP JUMPDEST PUSH2 0x228 DUP2 PUSH2 0x222 DUP5 SLOAD PUSH2 0x172 JUMP JUMPDEST DUP5 PUSH2 0x1AC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 DUP2 EQ PUSH2 0x25C JUMPI PUSH1 0x0 DUP4 ISZERO PUSH2 0x244 JUMPI POP DUP5 DUP3 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP6 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP5 SWAP1 SHL OR DUP5 SSTORE PUSH2 0x1F3 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP6 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x28C JUMPI DUP8 DUP6 ADD MLOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x26C JUMP JUMPDEST POP DUP5 DUP3 LT ISZERO PUSH2 0x2AA JUMPI DUP7 DUP5 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP8 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0xB86 DUP1 PUSH2 0x2C8 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xC9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x81 JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x194 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1A7 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x1BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x39509351 EQ PUSH2 0x143 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x156 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x18C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0xB2 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x10F JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x121 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x134 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xCE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xEC JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD6 PUSH2 0x200 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE3 SWAP2 SWAP1 PUSH2 0x94C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xFF PUSH2 0xFA CALLDATASIZE PUSH1 0x4 PUSH2 0x9E1 JUMP JUMPDEST PUSH2 0x292 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE3 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE3 JUMP JUMPDEST PUSH2 0xFF PUSH2 0x12F CALLDATASIZE PUSH1 0x4 PUSH2 0xA0B JUMP JUMPDEST PUSH2 0x2AC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE3 JUMP JUMPDEST PUSH2 0xFF PUSH2 0x151 CALLDATASIZE PUSH1 0x4 PUSH2 0x9E1 JUMP JUMPDEST PUSH2 0x2D0 JUMP JUMPDEST PUSH2 0x113 PUSH2 0x164 CALLDATASIZE PUSH1 0x4 PUSH2 0xA48 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xD6 PUSH2 0x31C JUMP JUMPDEST PUSH2 0xFF PUSH2 0x1A2 CALLDATASIZE PUSH1 0x4 PUSH2 0x9E1 JUMP JUMPDEST PUSH2 0x32B JUMP JUMPDEST PUSH2 0xFF PUSH2 0x1B5 CALLDATASIZE PUSH1 0x4 PUSH2 0x9E1 JUMP JUMPDEST PUSH2 0x401 JUMP JUMPDEST PUSH2 0x113 PUSH2 0x1C8 CALLDATASIZE PUSH1 0x4 PUSH2 0xA6A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x20F SWAP1 PUSH2 0xA9D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x23B SWAP1 PUSH2 0xA9D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x288 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x25D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x288 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x26B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x2A0 DUP2 DUP6 DUP6 PUSH2 0x40F JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x2BA DUP6 DUP3 DUP6 PUSH2 0x5C2 JUMP JUMPDEST PUSH2 0x2C5 DUP6 DUP6 DUP6 PUSH2 0x699 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x2A0 SWAP1 DUP3 SWAP1 DUP7 SWAP1 PUSH2 0x317 SWAP1 DUP8 SWAP1 PUSH2 0xAF0 JUMP JUMPDEST PUSH2 0x40F JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x20F SWAP1 PUSH2 0xA9D JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 DUP4 DUP2 LT ISZERO PUSH2 0x3F4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2C5 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x40F JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x2A0 DUP2 DUP6 DUP6 PUSH2 0x699 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH2 0x4B1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3EB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH2 0x554 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3EB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x693 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x686 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3EB JUMP JUMPDEST PUSH2 0x693 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x40F JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH2 0x73C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3EB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH2 0x7DF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3EB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x895 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3EB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x8D9 SWAP1 DUP5 SWAP1 PUSH2 0xAF0 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x93F SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x693 JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x97A JUMPI PUSH1 0x20 DUP2 DUP7 ADD DUP2 ADD MLOAD PUSH1 0x40 DUP7 DUP5 ADD ADD MSTORE ADD PUSH2 0x95D JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x9DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x9F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9FD DUP4 PUSH2 0x9B8 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xA20 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA29 DUP5 PUSH2 0x9B8 JUMP JUMPDEST SWAP3 POP PUSH2 0xA37 PUSH1 0x20 DUP6 ADD PUSH2 0x9B8 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA5A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA63 DUP3 PUSH2 0x9B8 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xA7D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA86 DUP4 PUSH2 0x9B8 JUMP JUMPDEST SWAP2 POP PUSH2 0xA94 PUSH1 0x20 DUP5 ADD PUSH2 0x9B8 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xAB1 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xAEA JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x2A6 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAA EXTCODESIZE SWAP3 PUSH8 0xED20783115DF50BF 0xD1 0xDE SWAP2 LOG3 MULMOD XOR PUSH21 0x1DF1DD59094868D15E41F4992764736F6C63782830 0x2E CODESIZE 0x2E ORIGIN CODESIZE 0x2D PUSH15 0x696768746C792E323032342E31302E ORIGIN 0x2B PUSH4 0x6F6D6D69 PUSH21 0x2E3235366539353238005900000000000000000000 ",
							"sourceMap": "2676:11214:1:-:0;;;3251:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3317:5;:13;3325:5;3317;:13;:::i;:::-;-1:-1:-1;3340:7:1;:17;3350:7;3340;:17;:::i;:::-;;3251:113;;2676:11214;;14:127:5;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:834;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;298:13;;-1:-1:-1;;;;;323:30:5;;320:56;;;356:18;;:::i;:::-;405:2;399:9;497:2;459:17;;-1:-1:-1;;455:31:5;;;488:2;451:40;447:54;435:67;;-1:-1:-1;;;;;517:34:5;;553:22;;;514:62;511:88;;;579:18;;:::i;:::-;615:2;608:22;639;;;680:19;;;701:4;676:30;673:39;-1:-1:-1;670:59:5;;;725:1;722;715:12;670:59;747:1;757:143;771:6;768:1;765:13;757:143;;;883:4;867:14;;;863:25;;857:32;834:14;;;830:25;;823:67;786:12;757:143;;;-1:-1:-1;948:1:5;920:19;;;941:4;916:30;909:41;;;;924:6;146:834;-1:-1:-1;;;146:834:5:o;985:557::-;1084:6;1092;1145:2;1133:9;1124:7;1120:23;1116:32;1113:52;;;1161:1;1158;1151:12;1113:52;1188:16;;-1:-1:-1;;;;;1216:30:5;;1213:50;;;1259:1;1256;1249:12;1213:50;1282:61;1335:7;1326:6;1315:9;1311:22;1282:61;:::i;:::-;1389:2;1374:18;;1368:25;1272:71;;-1:-1:-1;1368:25:5;-1:-1:-1;;;;;;1405:32:5;;1402:52;;;1450:1;1447;1440:12;1402:52;1473:63;1528:7;1517:8;1506:9;1502:24;1473:63;:::i;:::-;1463:73;;;985:557;;;;;:::o;1547:380::-;1626:1;1622:12;;;;1669;;;1690:61;;1744:4;1736:6;1732:17;1722:27;;1690:61;1797:2;1789:6;1786:14;1766:18;1763:38;1760:161;;1843:10;1838:3;1834:20;1831:1;1824:31;1878:4;1875:1;1868:15;1906:4;1903:1;1896:15;1760:161;;1547:380;;;:::o;2058:518::-;2160:2;2155:3;2152:11;2149:421;;;2196:5;2193:1;2186:16;2240:4;2237:1;2227:18;2310:2;2298:10;2294:19;2291:1;2287:27;2281:4;2277:38;2346:4;2334:10;2331:20;2328:47;;;-1:-1:-1;2369:4:5;2328:47;2424:2;2419:3;2415:12;2412:1;2408:20;2402:4;2398:31;2388:41;;2479:81;2497:2;2490:5;2487:13;2479:81;;;2556:1;2542:16;;2523:1;2512:13;2479:81;;;2483:3;;2149:421;2058:518;;;:::o;2752:1299::-;2872:10;;-1:-1:-1;;;;;2894:30:5;;2891:56;;;2927:18;;:::i;:::-;2956:97;3046:6;3006:38;3038:4;3032:11;3006:38;:::i;:::-;3000:4;2956:97;:::i;:::-;3102:4;3133:2;3122:14;;3150:1;3145:649;;;;3838:1;3855:6;3852:89;;;-1:-1:-1;3907:19:5;;;3901:26;3852:89;-1:-1:-1;;2709:1:5;2705:11;;;2701:24;2697:29;2687:40;2733:1;2729:11;;;2684:57;3954:81;;3115:930;;3145:649;2005:1;1998:14;;;2042:4;2029:18;;-1:-1:-1;;3181:20:5;;;3299:222;3313:7;3310:1;3307:14;3299:222;;;3395:19;;;3389:26;3374:42;;3502:4;3487:20;;;;3455:1;3443:14;;;;3329:12;3299:222;;;3303:3;3549:6;3540:7;3537:19;3534:201;;;3610:19;;;3604:26;-1:-1:-1;;3693:1:5;3689:14;;;3705:3;3685:24;3681:37;3677:42;3662:58;3647:74;;3534:201;-1:-1:-1;;;;3781:1:5;3765:14;;;3761:22;3748:36;;-1:-1:-1;2752:1299:5:o;:::-;2676:11214:1;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfer_612": {
									"entryPoint": null,
									"id": 612,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_547": {
									"entryPoint": 1039,
									"id": 547,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_601": {
									"entryPoint": null,
									"id": 601,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_msgSender_728": {
									"entryPoint": null,
									"id": 728,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_590": {
									"entryPoint": 1474,
									"id": 590,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_374": {
									"entryPoint": 1689,
									"id": 374,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_169": {
									"entryPoint": null,
									"id": 169,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_194": {
									"entryPoint": 658,
									"id": 194,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_126": {
									"entryPoint": null,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_102": {
									"entryPoint": null,
									"id": 102,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_297": {
									"entryPoint": 811,
									"id": 297,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@increaseAllowance_256": {
									"entryPoint": 720,
									"id": 256,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_82": {
									"entryPoint": 512,
									"id": 82,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@symbol_92": {
									"entryPoint": 796,
									"id": 92,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_112": {
									"entryPoint": null,
									"id": 112,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_227": {
									"entryPoint": 684,
									"id": 227,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_151": {
									"entryPoint": 1025,
									"id": 151,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 2488,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2632,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 2666,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 2571,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 2529,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2380,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2800,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 2717,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:6021:5",
										"nodeType": "YulBlock",
										"src": "0:6021:5",
										"statements": [
											{
												"nativeSrc": "6:3:5",
												"nodeType": "YulBlock",
												"src": "6:3:5",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "135:465:5",
													"nodeType": "YulBlock",
													"src": "135:465:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "152:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "152:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "163:2:5",
																		"nodeType": "YulLiteral",
																		"src": "163:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "145:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "145:6:5"
																},
																"nativeSrc": "145:21:5",
																"nodeType": "YulFunctionCall",
																"src": "145:21:5"
															},
															"nativeSrc": "145:21:5",
															"nodeType": "YulExpressionStatement",
															"src": "145:21:5"
														},
														{
															"nativeSrc": "175:27:5",
															"nodeType": "YulVariableDeclaration",
															"src": "175:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "195:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "195:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "189:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "189:5:5"
																},
																"nativeSrc": "189:13:5",
																"nodeType": "YulFunctionCall",
																"src": "189:13:5"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "179:6:5",
																	"nodeType": "YulTypedName",
																	"src": "179:6:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "222:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "222:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "233:2:5",
																				"nodeType": "YulLiteral",
																				"src": "233:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "218:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "218:3:5"
																		},
																		"nativeSrc": "218:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "218:18:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "238:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "238:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "211:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "211:6:5"
																},
																"nativeSrc": "211:34:5",
																"nodeType": "YulFunctionCall",
																"src": "211:34:5"
															},
															"nativeSrc": "211:34:5",
															"nodeType": "YulExpressionStatement",
															"src": "211:34:5"
														},
														{
															"nativeSrc": "254:10:5",
															"nodeType": "YulVariableDeclaration",
															"src": "254:10:5",
															"value": {
																"kind": "number",
																"nativeSrc": "263:1:5",
																"nodeType": "YulLiteral",
																"src": "263:1:5",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "258:1:5",
																	"nodeType": "YulTypedName",
																	"src": "258:1:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "323:90:5",
																"nodeType": "YulBlock",
																"src": "323:90:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nativeSrc": "352:9:5",
																									"nodeType": "YulIdentifier",
																									"src": "352:9:5"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "363:1:5",
																									"nodeType": "YulIdentifier",
																									"src": "363:1:5"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "348:3:5",
																								"nodeType": "YulIdentifier",
																								"src": "348:3:5"
																							},
																							"nativeSrc": "348:17:5",
																							"nodeType": "YulFunctionCall",
																							"src": "348:17:5"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "367:2:5",
																							"nodeType": "YulLiteral",
																							"src": "367:2:5",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "344:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "344:3:5"
																					},
																					"nativeSrc": "344:26:5",
																					"nodeType": "YulFunctionCall",
																					"src": "344:26:5"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nativeSrc": "386:6:5",
																											"nodeType": "YulIdentifier",
																											"src": "386:6:5"
																										},
																										{
																											"name": "i",
																											"nativeSrc": "394:1:5",
																											"nodeType": "YulIdentifier",
																											"src": "394:1:5"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nativeSrc": "382:3:5",
																										"nodeType": "YulIdentifier",
																										"src": "382:3:5"
																									},
																									"nativeSrc": "382:14:5",
																									"nodeType": "YulFunctionCall",
																									"src": "382:14:5"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "398:2:5",
																									"nodeType": "YulLiteral",
																									"src": "398:2:5",
																									"type": "",
																									"value": "32"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "378:3:5",
																								"nodeType": "YulIdentifier",
																								"src": "378:3:5"
																							},
																							"nativeSrc": "378:23:5",
																							"nodeType": "YulFunctionCall",
																							"src": "378:23:5"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "372:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "372:5:5"
																					},
																					"nativeSrc": "372:30:5",
																					"nodeType": "YulFunctionCall",
																					"src": "372:30:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "337:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "337:6:5"
																			},
																			"nativeSrc": "337:66:5",
																			"nodeType": "YulFunctionCall",
																			"src": "337:66:5"
																		},
																		"nativeSrc": "337:66:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "337:66:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "284:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "284:1:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "287:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "287:6:5"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "281:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "281:2:5"
																},
																"nativeSrc": "281:13:5",
																"nodeType": "YulFunctionCall",
																"src": "281:13:5"
															},
															"nativeSrc": "273:140:5",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "295:19:5",
																"nodeType": "YulBlock",
																"src": "295:19:5",
																"statements": [
																	{
																		"nativeSrc": "297:15:5",
																		"nodeType": "YulAssignment",
																		"src": "297:15:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "306:1:5",
																					"nodeType": "YulIdentifier",
																					"src": "306:1:5"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "309:2:5",
																					"nodeType": "YulLiteral",
																					"src": "309:2:5",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "302:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "302:3:5"
																			},
																			"nativeSrc": "302:10:5",
																			"nodeType": "YulFunctionCall",
																			"src": "302:10:5"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "297:1:5",
																				"nodeType": "YulIdentifier",
																				"src": "297:1:5"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "277:3:5",
																"nodeType": "YulBlock",
																"src": "277:3:5",
																"statements": []
															},
															"src": "273:140:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "437:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "437:9:5"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "448:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "448:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "433:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "433:3:5"
																				},
																				"nativeSrc": "433:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "433:22:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "457:2:5",
																				"nodeType": "YulLiteral",
																				"src": "457:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "429:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "429:3:5"
																		},
																		"nativeSrc": "429:31:5",
																		"nodeType": "YulFunctionCall",
																		"src": "429:31:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "462:1:5",
																		"nodeType": "YulLiteral",
																		"src": "462:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "422:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "422:6:5"
																},
																"nativeSrc": "422:42:5",
																"nodeType": "YulFunctionCall",
																"src": "422:42:5"
															},
															"nativeSrc": "422:42:5",
															"nodeType": "YulExpressionStatement",
															"src": "422:42:5"
														},
														{
															"nativeSrc": "473:121:5",
															"nodeType": "YulAssignment",
															"src": "473:121:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "489:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "489:9:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "508:6:5",
																								"nodeType": "YulIdentifier",
																								"src": "508:6:5"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "516:2:5",
																								"nodeType": "YulLiteral",
																								"src": "516:2:5",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "504:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "504:3:5"
																						},
																						"nativeSrc": "504:15:5",
																						"nodeType": "YulFunctionCall",
																						"src": "504:15:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "521:66:5",
																						"nodeType": "YulLiteral",
																						"src": "521:66:5",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "500:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "500:3:5"
																				},
																				"nativeSrc": "500:88:5",
																				"nodeType": "YulFunctionCall",
																				"src": "500:88:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "485:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "485:3:5"
																		},
																		"nativeSrc": "485:104:5",
																		"nodeType": "YulFunctionCall",
																		"src": "485:104:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "591:2:5",
																		"nodeType": "YulLiteral",
																		"src": "591:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "481:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "481:3:5"
																},
																"nativeSrc": "481:113:5",
																"nodeType": "YulFunctionCall",
																"src": "481:113:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "473:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "473:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14:586:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "104:9:5",
														"nodeType": "YulTypedName",
														"src": "104:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "115:6:5",
														"nodeType": "YulTypedName",
														"src": "115:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "126:4:5",
														"nodeType": "YulTypedName",
														"src": "126:4:5",
														"type": ""
													}
												],
												"src": "14:586:5"
											},
											{
												"body": {
													"nativeSrc": "654:147:5",
													"nodeType": "YulBlock",
													"src": "654:147:5",
													"statements": [
														{
															"nativeSrc": "664:29:5",
															"nodeType": "YulAssignment",
															"src": "664:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "686:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "686:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "673:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "673:12:5"
																},
																"nativeSrc": "673:20:5",
																"nodeType": "YulFunctionCall",
																"src": "673:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "664:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "664:5:5"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "779:16:5",
																"nodeType": "YulBlock",
																"src": "779:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "788:1:5",
																					"nodeType": "YulLiteral",
																					"src": "788:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "791:1:5",
																					"nodeType": "YulLiteral",
																					"src": "791:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "781:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "781:6:5"
																			},
																			"nativeSrc": "781:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "781:12:5"
																		},
																		"nativeSrc": "781:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "781:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "715:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "715:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "726:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "726:5:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "733:42:5",
																						"nodeType": "YulLiteral",
																						"src": "733:42:5",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "722:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "722:3:5"
																				},
																				"nativeSrc": "722:54:5",
																				"nodeType": "YulFunctionCall",
																				"src": "722:54:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "712:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "712:2:5"
																		},
																		"nativeSrc": "712:65:5",
																		"nodeType": "YulFunctionCall",
																		"src": "712:65:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "705:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "705:6:5"
																},
																"nativeSrc": "705:73:5",
																"nodeType": "YulFunctionCall",
																"src": "705:73:5"
															},
															"nativeSrc": "702:93:5",
															"nodeType": "YulIf",
															"src": "702:93:5"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "605:196:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "633:6:5",
														"nodeType": "YulTypedName",
														"src": "633:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "644:5:5",
														"nodeType": "YulTypedName",
														"src": "644:5:5",
														"type": ""
													}
												],
												"src": "605:196:5"
											},
											{
												"body": {
													"nativeSrc": "893:213:5",
													"nodeType": "YulBlock",
													"src": "893:213:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "939:16:5",
																"nodeType": "YulBlock",
																"src": "939:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "948:1:5",
																					"nodeType": "YulLiteral",
																					"src": "948:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "951:1:5",
																					"nodeType": "YulLiteral",
																					"src": "951:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "941:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "941:6:5"
																			},
																			"nativeSrc": "941:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "941:12:5"
																		},
																		"nativeSrc": "941:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "941:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "914:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "914:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "923:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "923:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "910:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "910:3:5"
																		},
																		"nativeSrc": "910:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "910:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "935:2:5",
																		"nodeType": "YulLiteral",
																		"src": "935:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "906:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "906:3:5"
																},
																"nativeSrc": "906:32:5",
																"nodeType": "YulFunctionCall",
																"src": "906:32:5"
															},
															"nativeSrc": "903:52:5",
															"nodeType": "YulIf",
															"src": "903:52:5"
														},
														{
															"nativeSrc": "964:39:5",
															"nodeType": "YulAssignment",
															"src": "964:39:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "993:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "993:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "974:18:5",
																	"nodeType": "YulIdentifier",
																	"src": "974:18:5"
																},
																"nativeSrc": "974:29:5",
																"nodeType": "YulFunctionCall",
																"src": "974:29:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "964:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "964:6:5"
																}
															]
														},
														{
															"nativeSrc": "1012:14:5",
															"nodeType": "YulVariableDeclaration",
															"src": "1012:14:5",
															"value": {
																"kind": "number",
																"nativeSrc": "1025:1:5",
																"nodeType": "YulLiteral",
																"src": "1025:1:5",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1016:5:5",
																	"nodeType": "YulTypedName",
																	"src": "1016:5:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1035:41:5",
															"nodeType": "YulAssignment",
															"src": "1035:41:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1061:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1061:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1072:2:5",
																				"nodeType": "YulLiteral",
																				"src": "1072:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1057:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1057:3:5"
																		},
																		"nativeSrc": "1057:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1057:18:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1044:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "1044:12:5"
																},
																"nativeSrc": "1044:32:5",
																"nodeType": "YulFunctionCall",
																"src": "1044:32:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1035:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "1035:5:5"
																}
															]
														},
														{
															"nativeSrc": "1085:15:5",
															"nodeType": "YulAssignment",
															"src": "1085:15:5",
															"value": {
																"name": "value",
																"nativeSrc": "1095:5:5",
																"nodeType": "YulIdentifier",
																"src": "1095:5:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1085:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1085:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "806:300:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "851:9:5",
														"nodeType": "YulTypedName",
														"src": "851:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "862:7:5",
														"nodeType": "YulTypedName",
														"src": "862:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "874:6:5",
														"nodeType": "YulTypedName",
														"src": "874:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "882:6:5",
														"nodeType": "YulTypedName",
														"src": "882:6:5",
														"type": ""
													}
												],
												"src": "806:300:5"
											},
											{
												"body": {
													"nativeSrc": "1206:92:5",
													"nodeType": "YulBlock",
													"src": "1206:92:5",
													"statements": [
														{
															"nativeSrc": "1216:26:5",
															"nodeType": "YulAssignment",
															"src": "1216:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1228:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "1228:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1239:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1239:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1224:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1224:3:5"
																},
																"nativeSrc": "1224:18:5",
																"nodeType": "YulFunctionCall",
																"src": "1224:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1216:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "1216:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1258:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "1258:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "1283:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "1283:6:5"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "1276:6:5",
																					"nodeType": "YulIdentifier",
																					"src": "1276:6:5"
																				},
																				"nativeSrc": "1276:14:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1276:14:5"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1269:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "1269:6:5"
																		},
																		"nativeSrc": "1269:22:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1269:22:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1251:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1251:6:5"
																},
																"nativeSrc": "1251:41:5",
																"nodeType": "YulFunctionCall",
																"src": "1251:41:5"
															},
															"nativeSrc": "1251:41:5",
															"nodeType": "YulExpressionStatement",
															"src": "1251:41:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1111:187:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1175:9:5",
														"nodeType": "YulTypedName",
														"src": "1175:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1186:6:5",
														"nodeType": "YulTypedName",
														"src": "1186:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1197:4:5",
														"nodeType": "YulTypedName",
														"src": "1197:4:5",
														"type": ""
													}
												],
												"src": "1111:187:5"
											},
											{
												"body": {
													"nativeSrc": "1404:76:5",
													"nodeType": "YulBlock",
													"src": "1404:76:5",
													"statements": [
														{
															"nativeSrc": "1414:26:5",
															"nodeType": "YulAssignment",
															"src": "1414:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1426:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "1426:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1437:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1437:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1422:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1422:3:5"
																},
																"nativeSrc": "1422:18:5",
																"nodeType": "YulFunctionCall",
																"src": "1422:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1414:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "1414:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1456:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "1456:9:5"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "1467:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "1467:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1449:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1449:6:5"
																},
																"nativeSrc": "1449:25:5",
																"nodeType": "YulFunctionCall",
																"src": "1449:25:5"
															},
															"nativeSrc": "1449:25:5",
															"nodeType": "YulExpressionStatement",
															"src": "1449:25:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1303:177:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1373:9:5",
														"nodeType": "YulTypedName",
														"src": "1373:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1384:6:5",
														"nodeType": "YulTypedName",
														"src": "1384:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1395:4:5",
														"nodeType": "YulTypedName",
														"src": "1395:4:5",
														"type": ""
													}
												],
												"src": "1303:177:5"
											},
											{
												"body": {
													"nativeSrc": "1589:270:5",
													"nodeType": "YulBlock",
													"src": "1589:270:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "1635:16:5",
																"nodeType": "YulBlock",
																"src": "1635:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1644:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1644:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1647:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1647:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1637:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1637:6:5"
																			},
																			"nativeSrc": "1637:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1637:12:5"
																		},
																		"nativeSrc": "1637:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1637:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1610:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "1610:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1619:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1619:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1606:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1606:3:5"
																		},
																		"nativeSrc": "1606:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1606:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1631:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1631:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1602:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1602:3:5"
																},
																"nativeSrc": "1602:32:5",
																"nodeType": "YulFunctionCall",
																"src": "1602:32:5"
															},
															"nativeSrc": "1599:52:5",
															"nodeType": "YulIf",
															"src": "1599:52:5"
														},
														{
															"nativeSrc": "1660:39:5",
															"nodeType": "YulAssignment",
															"src": "1660:39:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1689:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "1689:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1670:18:5",
																	"nodeType": "YulIdentifier",
																	"src": "1670:18:5"
																},
																"nativeSrc": "1670:29:5",
																"nodeType": "YulFunctionCall",
																"src": "1670:29:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1660:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1660:6:5"
																}
															]
														},
														{
															"nativeSrc": "1708:48:5",
															"nodeType": "YulAssignment",
															"src": "1708:48:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1741:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1741:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1752:2:5",
																				"nodeType": "YulLiteral",
																				"src": "1752:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1737:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1737:3:5"
																		},
																		"nativeSrc": "1737:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1737:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1718:18:5",
																	"nodeType": "YulIdentifier",
																	"src": "1718:18:5"
																},
																"nativeSrc": "1718:38:5",
																"nodeType": "YulFunctionCall",
																"src": "1718:38:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1708:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1708:6:5"
																}
															]
														},
														{
															"nativeSrc": "1765:14:5",
															"nodeType": "YulVariableDeclaration",
															"src": "1765:14:5",
															"value": {
																"kind": "number",
																"nativeSrc": "1778:1:5",
																"nodeType": "YulLiteral",
																"src": "1778:1:5",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1769:5:5",
																	"nodeType": "YulTypedName",
																	"src": "1769:5:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1788:41:5",
															"nodeType": "YulAssignment",
															"src": "1788:41:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1814:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1814:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1825:2:5",
																				"nodeType": "YulLiteral",
																				"src": "1825:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1810:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1810:3:5"
																		},
																		"nativeSrc": "1810:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1810:18:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1797:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "1797:12:5"
																},
																"nativeSrc": "1797:32:5",
																"nodeType": "YulFunctionCall",
																"src": "1797:32:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1788:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "1788:5:5"
																}
															]
														},
														{
															"nativeSrc": "1838:15:5",
															"nodeType": "YulAssignment",
															"src": "1838:15:5",
															"value": {
																"name": "value",
																"nativeSrc": "1848:5:5",
																"nodeType": "YulIdentifier",
																"src": "1848:5:5"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "1838:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1838:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "1485:374:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1539:9:5",
														"nodeType": "YulTypedName",
														"src": "1539:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1550:7:5",
														"nodeType": "YulTypedName",
														"src": "1550:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1562:6:5",
														"nodeType": "YulTypedName",
														"src": "1562:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1570:6:5",
														"nodeType": "YulTypedName",
														"src": "1570:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1578:6:5",
														"nodeType": "YulTypedName",
														"src": "1578:6:5",
														"type": ""
													}
												],
												"src": "1485:374:5"
											},
											{
												"body": {
													"nativeSrc": "1961:87:5",
													"nodeType": "YulBlock",
													"src": "1961:87:5",
													"statements": [
														{
															"nativeSrc": "1971:26:5",
															"nodeType": "YulAssignment",
															"src": "1971:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1983:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "1983:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1994:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1994:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1979:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1979:3:5"
																},
																"nativeSrc": "1979:18:5",
																"nodeType": "YulFunctionCall",
																"src": "1979:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1971:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "1971:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2013:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "2013:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2028:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "2028:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2036:4:5",
																				"nodeType": "YulLiteral",
																				"src": "2036:4:5",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2024:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2024:3:5"
																		},
																		"nativeSrc": "2024:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2024:17:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2006:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2006:6:5"
																},
																"nativeSrc": "2006:36:5",
																"nodeType": "YulFunctionCall",
																"src": "2006:36:5"
															},
															"nativeSrc": "2006:36:5",
															"nodeType": "YulExpressionStatement",
															"src": "2006:36:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "1864:184:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1930:9:5",
														"nodeType": "YulTypedName",
														"src": "1930:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1941:6:5",
														"nodeType": "YulTypedName",
														"src": "1941:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1952:4:5",
														"nodeType": "YulTypedName",
														"src": "1952:4:5",
														"type": ""
													}
												],
												"src": "1864:184:5"
											},
											{
												"body": {
													"nativeSrc": "2123:116:5",
													"nodeType": "YulBlock",
													"src": "2123:116:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "2169:16:5",
																"nodeType": "YulBlock",
																"src": "2169:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2178:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2178:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2181:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2181:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2171:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "2171:6:5"
																			},
																			"nativeSrc": "2171:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2171:12:5"
																		},
																		"nativeSrc": "2171:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "2171:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2144:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "2144:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2153:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "2153:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2140:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2140:3:5"
																		},
																		"nativeSrc": "2140:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2140:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2165:2:5",
																		"nodeType": "YulLiteral",
																		"src": "2165:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2136:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2136:3:5"
																},
																"nativeSrc": "2136:32:5",
																"nodeType": "YulFunctionCall",
																"src": "2136:32:5"
															},
															"nativeSrc": "2133:52:5",
															"nodeType": "YulIf",
															"src": "2133:52:5"
														},
														{
															"nativeSrc": "2194:39:5",
															"nodeType": "YulAssignment",
															"src": "2194:39:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2223:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "2223:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2204:18:5",
																	"nodeType": "YulIdentifier",
																	"src": "2204:18:5"
																},
																"nativeSrc": "2204:29:5",
																"nodeType": "YulFunctionCall",
																"src": "2204:29:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2194:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2194:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "2053:186:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2089:9:5",
														"nodeType": "YulTypedName",
														"src": "2089:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2100:7:5",
														"nodeType": "YulTypedName",
														"src": "2100:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2112:6:5",
														"nodeType": "YulTypedName",
														"src": "2112:6:5",
														"type": ""
													}
												],
												"src": "2053:186:5"
											},
											{
												"body": {
													"nativeSrc": "2331:173:5",
													"nodeType": "YulBlock",
													"src": "2331:173:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "2377:16:5",
																"nodeType": "YulBlock",
																"src": "2377:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2386:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2386:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2389:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2389:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2379:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "2379:6:5"
																			},
																			"nativeSrc": "2379:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2379:12:5"
																		},
																		"nativeSrc": "2379:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "2379:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2352:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "2352:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2361:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "2361:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2348:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2348:3:5"
																		},
																		"nativeSrc": "2348:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2348:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2373:2:5",
																		"nodeType": "YulLiteral",
																		"src": "2373:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2344:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2344:3:5"
																},
																"nativeSrc": "2344:32:5",
																"nodeType": "YulFunctionCall",
																"src": "2344:32:5"
															},
															"nativeSrc": "2341:52:5",
															"nodeType": "YulIf",
															"src": "2341:52:5"
														},
														{
															"nativeSrc": "2402:39:5",
															"nodeType": "YulAssignment",
															"src": "2402:39:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2431:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "2431:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2412:18:5",
																	"nodeType": "YulIdentifier",
																	"src": "2412:18:5"
																},
																"nativeSrc": "2412:29:5",
																"nodeType": "YulFunctionCall",
																"src": "2412:29:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2402:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2402:6:5"
																}
															]
														},
														{
															"nativeSrc": "2450:48:5",
															"nodeType": "YulAssignment",
															"src": "2450:48:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2483:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "2483:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2494:2:5",
																				"nodeType": "YulLiteral",
																				"src": "2494:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2479:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2479:3:5"
																		},
																		"nativeSrc": "2479:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2479:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2460:18:5",
																	"nodeType": "YulIdentifier",
																	"src": "2460:18:5"
																},
																"nativeSrc": "2460:38:5",
																"nodeType": "YulFunctionCall",
																"src": "2460:38:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2450:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2450:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "2244:260:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2289:9:5",
														"nodeType": "YulTypedName",
														"src": "2289:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2300:7:5",
														"nodeType": "YulTypedName",
														"src": "2300:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2312:6:5",
														"nodeType": "YulTypedName",
														"src": "2312:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2320:6:5",
														"nodeType": "YulTypedName",
														"src": "2320:6:5",
														"type": ""
													}
												],
												"src": "2244:260:5"
											},
											{
												"body": {
													"nativeSrc": "2564:382:5",
													"nodeType": "YulBlock",
													"src": "2564:382:5",
													"statements": [
														{
															"nativeSrc": "2574:22:5",
															"nodeType": "YulAssignment",
															"src": "2574:22:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2588:1:5",
																		"nodeType": "YulLiteral",
																		"src": "2588:1:5",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "2591:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "2591:4:5"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "2584:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2584:3:5"
																},
																"nativeSrc": "2584:12:5",
																"nodeType": "YulFunctionCall",
																"src": "2584:12:5"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "2574:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2574:6:5"
																}
															]
														},
														{
															"nativeSrc": "2605:38:5",
															"nodeType": "YulVariableDeclaration",
															"src": "2605:38:5",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "2635:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "2635:4:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2641:1:5",
																		"nodeType": "YulLiteral",
																		"src": "2641:1:5",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2631:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2631:3:5"
																},
																"nativeSrc": "2631:12:5",
																"nodeType": "YulFunctionCall",
																"src": "2631:12:5"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "2609:18:5",
																	"nodeType": "YulTypedName",
																	"src": "2609:18:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2682:31:5",
																"nodeType": "YulBlock",
																"src": "2682:31:5",
																"statements": [
																	{
																		"nativeSrc": "2684:27:5",
																		"nodeType": "YulAssignment",
																		"src": "2684:27:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "2698:6:5",
																					"nodeType": "YulIdentifier",
																					"src": "2698:6:5"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2706:4:5",
																					"nodeType": "YulLiteral",
																					"src": "2706:4:5",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "2694:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "2694:3:5"
																			},
																			"nativeSrc": "2694:17:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2694:17:5"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "2684:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "2684:6:5"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2662:18:5",
																		"nodeType": "YulIdentifier",
																		"src": "2662:18:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2655:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2655:6:5"
																},
																"nativeSrc": "2655:26:5",
																"nodeType": "YulFunctionCall",
																"src": "2655:26:5"
															},
															"nativeSrc": "2652:61:5",
															"nodeType": "YulIf",
															"src": "2652:61:5"
														},
														{
															"body": {
																"nativeSrc": "2772:168:5",
																"nodeType": "YulBlock",
																"src": "2772:168:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2793:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2793:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2796:77:5",
																					"nodeType": "YulLiteral",
																					"src": "2796:77:5",
																					"type": "",
																					"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2786:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "2786:6:5"
																			},
																			"nativeSrc": "2786:88:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2786:88:5"
																		},
																		"nativeSrc": "2786:88:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "2786:88:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2894:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2894:1:5",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2897:4:5",
																					"nodeType": "YulLiteral",
																					"src": "2897:4:5",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2887:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "2887:6:5"
																			},
																			"nativeSrc": "2887:15:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2887:15:5"
																		},
																		"nativeSrc": "2887:15:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "2887:15:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2922:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2922:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2925:4:5",
																					"nodeType": "YulLiteral",
																					"src": "2925:4:5",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2915:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "2915:6:5"
																			},
																			"nativeSrc": "2915:15:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2915:15:5"
																		},
																		"nativeSrc": "2915:15:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "2915:15:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2728:18:5",
																		"nodeType": "YulIdentifier",
																		"src": "2728:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2751:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "2751:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2759:2:5",
																				"nodeType": "YulLiteral",
																				"src": "2759:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "2748:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "2748:2:5"
																		},
																		"nativeSrc": "2748:14:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2748:14:5"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "2725:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "2725:2:5"
																},
																"nativeSrc": "2725:38:5",
																"nodeType": "YulFunctionCall",
																"src": "2725:38:5"
															},
															"nativeSrc": "2722:218:5",
															"nodeType": "YulIf",
															"src": "2722:218:5"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "2509:437:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "2544:4:5",
														"nodeType": "YulTypedName",
														"src": "2544:4:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "2553:6:5",
														"nodeType": "YulTypedName",
														"src": "2553:6:5",
														"type": ""
													}
												],
												"src": "2509:437:5"
											},
											{
												"body": {
													"nativeSrc": "2999:231:5",
													"nodeType": "YulBlock",
													"src": "2999:231:5",
													"statements": [
														{
															"nativeSrc": "3009:16:5",
															"nodeType": "YulAssignment",
															"src": "3009:16:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3020:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "3020:1:5"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "3023:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "3023:1:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3016:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3016:3:5"
																},
																"nativeSrc": "3016:9:5",
																"nodeType": "YulFunctionCall",
																"src": "3016:9:5"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "3009:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3009:3:5"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3056:168:5",
																"nodeType": "YulBlock",
																"src": "3056:168:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3077:1:5",
																					"nodeType": "YulLiteral",
																					"src": "3077:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3080:77:5",
																					"nodeType": "YulLiteral",
																					"src": "3080:77:5",
																					"type": "",
																					"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3070:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "3070:6:5"
																			},
																			"nativeSrc": "3070:88:5",
																			"nodeType": "YulFunctionCall",
																			"src": "3070:88:5"
																		},
																		"nativeSrc": "3070:88:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "3070:88:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3178:1:5",
																					"nodeType": "YulLiteral",
																					"src": "3178:1:5",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3181:4:5",
																					"nodeType": "YulLiteral",
																					"src": "3181:4:5",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3171:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "3171:6:5"
																			},
																			"nativeSrc": "3171:15:5",
																			"nodeType": "YulFunctionCall",
																			"src": "3171:15:5"
																		},
																		"nativeSrc": "3171:15:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "3171:15:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3206:1:5",
																					"nodeType": "YulLiteral",
																					"src": "3206:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3209:4:5",
																					"nodeType": "YulLiteral",
																					"src": "3209:4:5",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3199:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "3199:6:5"
																			},
																			"nativeSrc": "3199:15:5",
																			"nodeType": "YulFunctionCall",
																			"src": "3199:15:5"
																		},
																		"nativeSrc": "3199:15:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "3199:15:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3040:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "3040:1:5"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "3043:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "3043:3:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3037:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "3037:2:5"
																},
																"nativeSrc": "3037:10:5",
																"nodeType": "YulFunctionCall",
																"src": "3037:10:5"
															},
															"nativeSrc": "3034:190:5",
															"nodeType": "YulIf",
															"src": "3034:190:5"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "2951:279:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "2982:1:5",
														"nodeType": "YulTypedName",
														"src": "2982:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "2985:1:5",
														"nodeType": "YulTypedName",
														"src": "2985:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "2991:3:5",
														"nodeType": "YulTypedName",
														"src": "2991:3:5",
														"type": ""
													}
												],
												"src": "2951:279:5"
											},
											{
												"body": {
													"nativeSrc": "3409:227:5",
													"nodeType": "YulBlock",
													"src": "3409:227:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3426:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "3426:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3437:2:5",
																		"nodeType": "YulLiteral",
																		"src": "3437:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3419:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3419:6:5"
																},
																"nativeSrc": "3419:21:5",
																"nodeType": "YulFunctionCall",
																"src": "3419:21:5"
															},
															"nativeSrc": "3419:21:5",
															"nodeType": "YulExpressionStatement",
															"src": "3419:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3460:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3460:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3471:2:5",
																				"nodeType": "YulLiteral",
																				"src": "3471:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3456:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3456:3:5"
																		},
																		"nativeSrc": "3456:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3456:18:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3476:2:5",
																		"nodeType": "YulLiteral",
																		"src": "3476:2:5",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3449:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3449:6:5"
																},
																"nativeSrc": "3449:30:5",
																"nodeType": "YulFunctionCall",
																"src": "3449:30:5"
															},
															"nativeSrc": "3449:30:5",
															"nodeType": "YulExpressionStatement",
															"src": "3449:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3499:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3499:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3510:2:5",
																				"nodeType": "YulLiteral",
																				"src": "3510:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3495:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3495:3:5"
																		},
																		"nativeSrc": "3495:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3495:18:5"
																	},
																	{
																		"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77",
																		"kind": "string",
																		"nativeSrc": "3515:34:5",
																		"nodeType": "YulLiteral",
																		"src": "3515:34:5",
																		"type": "",
																		"value": "ERC20: decreased allowance below"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3488:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3488:6:5"
																},
																"nativeSrc": "3488:62:5",
																"nodeType": "YulFunctionCall",
																"src": "3488:62:5"
															},
															"nativeSrc": "3488:62:5",
															"nodeType": "YulExpressionStatement",
															"src": "3488:62:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3570:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3570:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3581:2:5",
																				"nodeType": "YulLiteral",
																				"src": "3581:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3566:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3566:3:5"
																		},
																		"nativeSrc": "3566:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3566:18:5"
																	},
																	{
																		"hexValue": "207a65726f",
																		"kind": "string",
																		"nativeSrc": "3586:7:5",
																		"nodeType": "YulLiteral",
																		"src": "3586:7:5",
																		"type": "",
																		"value": " zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3559:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3559:6:5"
																},
																"nativeSrc": "3559:35:5",
																"nodeType": "YulFunctionCall",
																"src": "3559:35:5"
															},
															"nativeSrc": "3559:35:5",
															"nodeType": "YulExpressionStatement",
															"src": "3559:35:5"
														},
														{
															"nativeSrc": "3603:27:5",
															"nodeType": "YulAssignment",
															"src": "3603:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3615:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "3615:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3626:3:5",
																		"nodeType": "YulLiteral",
																		"src": "3626:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3611:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3611:3:5"
																},
																"nativeSrc": "3611:19:5",
																"nodeType": "YulFunctionCall",
																"src": "3611:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3603:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "3603:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3235:401:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3386:9:5",
														"nodeType": "YulTypedName",
														"src": "3386:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3400:4:5",
														"nodeType": "YulTypedName",
														"src": "3400:4:5",
														"type": ""
													}
												],
												"src": "3235:401:5"
											},
											{
												"body": {
													"nativeSrc": "3815:226:5",
													"nodeType": "YulBlock",
													"src": "3815:226:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3832:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "3832:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3843:2:5",
																		"nodeType": "YulLiteral",
																		"src": "3843:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3825:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3825:6:5"
																},
																"nativeSrc": "3825:21:5",
																"nodeType": "YulFunctionCall",
																"src": "3825:21:5"
															},
															"nativeSrc": "3825:21:5",
															"nodeType": "YulExpressionStatement",
															"src": "3825:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3866:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3866:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3877:2:5",
																				"nodeType": "YulLiteral",
																				"src": "3877:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3862:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3862:3:5"
																		},
																		"nativeSrc": "3862:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3862:18:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3882:2:5",
																		"nodeType": "YulLiteral",
																		"src": "3882:2:5",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3855:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3855:6:5"
																},
																"nativeSrc": "3855:30:5",
																"nodeType": "YulFunctionCall",
																"src": "3855:30:5"
															},
															"nativeSrc": "3855:30:5",
															"nodeType": "YulExpressionStatement",
															"src": "3855:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3905:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3905:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3916:2:5",
																				"nodeType": "YulLiteral",
																				"src": "3916:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3901:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3901:3:5"
																		},
																		"nativeSrc": "3901:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3901:18:5"
																	},
																	{
																		"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
																		"kind": "string",
																		"nativeSrc": "3921:34:5",
																		"nodeType": "YulLiteral",
																		"src": "3921:34:5",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3894:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3894:6:5"
																},
																"nativeSrc": "3894:62:5",
																"nodeType": "YulFunctionCall",
																"src": "3894:62:5"
															},
															"nativeSrc": "3894:62:5",
															"nodeType": "YulExpressionStatement",
															"src": "3894:62:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3976:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3976:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3987:2:5",
																				"nodeType": "YulLiteral",
																				"src": "3987:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3972:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3972:3:5"
																		},
																		"nativeSrc": "3972:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3972:18:5"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nativeSrc": "3992:6:5",
																		"nodeType": "YulLiteral",
																		"src": "3992:6:5",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3965:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3965:6:5"
																},
																"nativeSrc": "3965:34:5",
																"nodeType": "YulFunctionCall",
																"src": "3965:34:5"
															},
															"nativeSrc": "3965:34:5",
															"nodeType": "YulExpressionStatement",
															"src": "3965:34:5"
														},
														{
															"nativeSrc": "4008:27:5",
															"nodeType": "YulAssignment",
															"src": "4008:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4020:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "4020:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4031:3:5",
																		"nodeType": "YulLiteral",
																		"src": "4031:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4016:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4016:3:5"
																},
																"nativeSrc": "4016:19:5",
																"nodeType": "YulFunctionCall",
																"src": "4016:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4008:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "4008:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3641:400:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3792:9:5",
														"nodeType": "YulTypedName",
														"src": "3792:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3806:4:5",
														"nodeType": "YulTypedName",
														"src": "3806:4:5",
														"type": ""
													}
												],
												"src": "3641:400:5"
											},
											{
												"body": {
													"nativeSrc": "4220:224:5",
													"nodeType": "YulBlock",
													"src": "4220:224:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4237:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "4237:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4248:2:5",
																		"nodeType": "YulLiteral",
																		"src": "4248:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4230:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4230:6:5"
																},
																"nativeSrc": "4230:21:5",
																"nodeType": "YulFunctionCall",
																"src": "4230:21:5"
															},
															"nativeSrc": "4230:21:5",
															"nodeType": "YulExpressionStatement",
															"src": "4230:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4271:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "4271:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4282:2:5",
																				"nodeType": "YulLiteral",
																				"src": "4282:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4267:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4267:3:5"
																		},
																		"nativeSrc": "4267:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4267:18:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4287:2:5",
																		"nodeType": "YulLiteral",
																		"src": "4287:2:5",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4260:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4260:6:5"
																},
																"nativeSrc": "4260:30:5",
																"nodeType": "YulFunctionCall",
																"src": "4260:30:5"
															},
															"nativeSrc": "4260:30:5",
															"nodeType": "YulExpressionStatement",
															"src": "4260:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4310:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "4310:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4321:2:5",
																				"nodeType": "YulLiteral",
																				"src": "4321:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4306:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4306:3:5"
																		},
																		"nativeSrc": "4306:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4306:18:5"
																	},
																	{
																		"hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
																		"kind": "string",
																		"nativeSrc": "4326:34:5",
																		"nodeType": "YulLiteral",
																		"src": "4326:34:5",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4299:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4299:6:5"
																},
																"nativeSrc": "4299:62:5",
																"nodeType": "YulFunctionCall",
																"src": "4299:62:5"
															},
															"nativeSrc": "4299:62:5",
															"nodeType": "YulExpressionStatement",
															"src": "4299:62:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4381:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "4381:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4392:2:5",
																				"nodeType": "YulLiteral",
																				"src": "4392:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4377:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4377:3:5"
																		},
																		"nativeSrc": "4377:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4377:18:5"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nativeSrc": "4397:4:5",
																		"nodeType": "YulLiteral",
																		"src": "4397:4:5",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4370:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4370:6:5"
																},
																"nativeSrc": "4370:32:5",
																"nodeType": "YulFunctionCall",
																"src": "4370:32:5"
															},
															"nativeSrc": "4370:32:5",
															"nodeType": "YulExpressionStatement",
															"src": "4370:32:5"
														},
														{
															"nativeSrc": "4411:27:5",
															"nodeType": "YulAssignment",
															"src": "4411:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4423:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "4423:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4434:3:5",
																		"nodeType": "YulLiteral",
																		"src": "4434:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4419:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4419:3:5"
																},
																"nativeSrc": "4419:19:5",
																"nodeType": "YulFunctionCall",
																"src": "4419:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4411:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "4411:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4046:398:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4197:9:5",
														"nodeType": "YulTypedName",
														"src": "4197:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4211:4:5",
														"nodeType": "YulTypedName",
														"src": "4211:4:5",
														"type": ""
													}
												],
												"src": "4046:398:5"
											},
											{
												"body": {
													"nativeSrc": "4623:179:5",
													"nodeType": "YulBlock",
													"src": "4623:179:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4640:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "4640:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4651:2:5",
																		"nodeType": "YulLiteral",
																		"src": "4651:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4633:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4633:6:5"
																},
																"nativeSrc": "4633:21:5",
																"nodeType": "YulFunctionCall",
																"src": "4633:21:5"
															},
															"nativeSrc": "4633:21:5",
															"nodeType": "YulExpressionStatement",
															"src": "4633:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4674:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "4674:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4685:2:5",
																				"nodeType": "YulLiteral",
																				"src": "4685:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4670:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4670:3:5"
																		},
																		"nativeSrc": "4670:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4670:18:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4690:2:5",
																		"nodeType": "YulLiteral",
																		"src": "4690:2:5",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4663:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4663:6:5"
																},
																"nativeSrc": "4663:30:5",
																"nodeType": "YulFunctionCall",
																"src": "4663:30:5"
															},
															"nativeSrc": "4663:30:5",
															"nodeType": "YulExpressionStatement",
															"src": "4663:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4713:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "4713:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4724:2:5",
																				"nodeType": "YulLiteral",
																				"src": "4724:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4709:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4709:3:5"
																		},
																		"nativeSrc": "4709:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4709:18:5"
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"kind": "string",
																		"nativeSrc": "4729:31:5",
																		"nodeType": "YulLiteral",
																		"src": "4729:31:5",
																		"type": "",
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4702:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4702:6:5"
																},
																"nativeSrc": "4702:59:5",
																"nodeType": "YulFunctionCall",
																"src": "4702:59:5"
															},
															"nativeSrc": "4702:59:5",
															"nodeType": "YulExpressionStatement",
															"src": "4702:59:5"
														},
														{
															"nativeSrc": "4770:26:5",
															"nodeType": "YulAssignment",
															"src": "4770:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4782:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "4782:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4793:2:5",
																		"nodeType": "YulLiteral",
																		"src": "4793:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4778:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4778:3:5"
																},
																"nativeSrc": "4778:18:5",
																"nodeType": "YulFunctionCall",
																"src": "4778:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4770:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "4770:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4449:353:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4600:9:5",
														"nodeType": "YulTypedName",
														"src": "4600:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4614:4:5",
														"nodeType": "YulTypedName",
														"src": "4614:4:5",
														"type": ""
													}
												],
												"src": "4449:353:5"
											},
											{
												"body": {
													"nativeSrc": "4981:227:5",
													"nodeType": "YulBlock",
													"src": "4981:227:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4998:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "4998:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5009:2:5",
																		"nodeType": "YulLiteral",
																		"src": "5009:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4991:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4991:6:5"
																},
																"nativeSrc": "4991:21:5",
																"nodeType": "YulFunctionCall",
																"src": "4991:21:5"
															},
															"nativeSrc": "4991:21:5",
															"nodeType": "YulExpressionStatement",
															"src": "4991:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5032:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "5032:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5043:2:5",
																				"nodeType": "YulLiteral",
																				"src": "5043:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5028:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5028:3:5"
																		},
																		"nativeSrc": "5028:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5028:18:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5048:2:5",
																		"nodeType": "YulLiteral",
																		"src": "5048:2:5",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5021:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5021:6:5"
																},
																"nativeSrc": "5021:30:5",
																"nodeType": "YulFunctionCall",
																"src": "5021:30:5"
															},
															"nativeSrc": "5021:30:5",
															"nodeType": "YulExpressionStatement",
															"src": "5021:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5071:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "5071:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5082:2:5",
																				"nodeType": "YulLiteral",
																				"src": "5082:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5067:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5067:3:5"
																		},
																		"nativeSrc": "5067:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5067:18:5"
																	},
																	{
																		"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nativeSrc": "5087:34:5",
																		"nodeType": "YulLiteral",
																		"src": "5087:34:5",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5060:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5060:6:5"
																},
																"nativeSrc": "5060:62:5",
																"nodeType": "YulFunctionCall",
																"src": "5060:62:5"
															},
															"nativeSrc": "5060:62:5",
															"nodeType": "YulExpressionStatement",
															"src": "5060:62:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5142:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "5142:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5153:2:5",
																				"nodeType": "YulLiteral",
																				"src": "5153:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5138:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5138:3:5"
																		},
																		"nativeSrc": "5138:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5138:18:5"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nativeSrc": "5158:7:5",
																		"nodeType": "YulLiteral",
																		"src": "5158:7:5",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5131:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5131:6:5"
																},
																"nativeSrc": "5131:35:5",
																"nodeType": "YulFunctionCall",
																"src": "5131:35:5"
															},
															"nativeSrc": "5131:35:5",
															"nodeType": "YulExpressionStatement",
															"src": "5131:35:5"
														},
														{
															"nativeSrc": "5175:27:5",
															"nodeType": "YulAssignment",
															"src": "5175:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5187:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "5187:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5198:3:5",
																		"nodeType": "YulLiteral",
																		"src": "5198:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5183:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5183:3:5"
																},
																"nativeSrc": "5183:19:5",
																"nodeType": "YulFunctionCall",
																"src": "5183:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5175:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "5175:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4807:401:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4958:9:5",
														"nodeType": "YulTypedName",
														"src": "4958:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4972:4:5",
														"nodeType": "YulTypedName",
														"src": "4972:4:5",
														"type": ""
													}
												],
												"src": "4807:401:5"
											},
											{
												"body": {
													"nativeSrc": "5387:225:5",
													"nodeType": "YulBlock",
													"src": "5387:225:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5404:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "5404:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5415:2:5",
																		"nodeType": "YulLiteral",
																		"src": "5415:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5397:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5397:6:5"
																},
																"nativeSrc": "5397:21:5",
																"nodeType": "YulFunctionCall",
																"src": "5397:21:5"
															},
															"nativeSrc": "5397:21:5",
															"nodeType": "YulExpressionStatement",
															"src": "5397:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5438:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "5438:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5449:2:5",
																				"nodeType": "YulLiteral",
																				"src": "5449:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5434:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5434:3:5"
																		},
																		"nativeSrc": "5434:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5434:18:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5454:2:5",
																		"nodeType": "YulLiteral",
																		"src": "5454:2:5",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5427:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5427:6:5"
																},
																"nativeSrc": "5427:30:5",
																"nodeType": "YulFunctionCall",
																"src": "5427:30:5"
															},
															"nativeSrc": "5427:30:5",
															"nodeType": "YulExpressionStatement",
															"src": "5427:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5477:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "5477:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5488:2:5",
																				"nodeType": "YulLiteral",
																				"src": "5488:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5473:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5473:3:5"
																		},
																		"nativeSrc": "5473:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5473:18:5"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nativeSrc": "5493:34:5",
																		"nodeType": "YulLiteral",
																		"src": "5493:34:5",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5466:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5466:6:5"
																},
																"nativeSrc": "5466:62:5",
																"nodeType": "YulFunctionCall",
																"src": "5466:62:5"
															},
															"nativeSrc": "5466:62:5",
															"nodeType": "YulExpressionStatement",
															"src": "5466:62:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5548:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "5548:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5559:2:5",
																				"nodeType": "YulLiteral",
																				"src": "5559:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5544:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5544:3:5"
																		},
																		"nativeSrc": "5544:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5544:18:5"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nativeSrc": "5564:5:5",
																		"nodeType": "YulLiteral",
																		"src": "5564:5:5",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5537:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5537:6:5"
																},
																"nativeSrc": "5537:33:5",
																"nodeType": "YulFunctionCall",
																"src": "5537:33:5"
															},
															"nativeSrc": "5537:33:5",
															"nodeType": "YulExpressionStatement",
															"src": "5537:33:5"
														},
														{
															"nativeSrc": "5579:27:5",
															"nodeType": "YulAssignment",
															"src": "5579:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5591:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "5591:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5602:3:5",
																		"nodeType": "YulLiteral",
																		"src": "5602:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5587:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5587:3:5"
																},
																"nativeSrc": "5587:19:5",
																"nodeType": "YulFunctionCall",
																"src": "5587:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5579:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "5579:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5213:399:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5364:9:5",
														"nodeType": "YulTypedName",
														"src": "5364:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5378:4:5",
														"nodeType": "YulTypedName",
														"src": "5378:4:5",
														"type": ""
													}
												],
												"src": "5213:399:5"
											},
											{
												"body": {
													"nativeSrc": "5791:228:5",
													"nodeType": "YulBlock",
													"src": "5791:228:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5808:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "5808:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5819:2:5",
																		"nodeType": "YulLiteral",
																		"src": "5819:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5801:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5801:6:5"
																},
																"nativeSrc": "5801:21:5",
																"nodeType": "YulFunctionCall",
																"src": "5801:21:5"
															},
															"nativeSrc": "5801:21:5",
															"nodeType": "YulExpressionStatement",
															"src": "5801:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5842:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "5842:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5853:2:5",
																				"nodeType": "YulLiteral",
																				"src": "5853:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5838:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5838:3:5"
																		},
																		"nativeSrc": "5838:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5838:18:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5858:2:5",
																		"nodeType": "YulLiteral",
																		"src": "5858:2:5",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5831:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5831:6:5"
																},
																"nativeSrc": "5831:30:5",
																"nodeType": "YulFunctionCall",
																"src": "5831:30:5"
															},
															"nativeSrc": "5831:30:5",
															"nodeType": "YulExpressionStatement",
															"src": "5831:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5881:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "5881:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5892:2:5",
																				"nodeType": "YulLiteral",
																				"src": "5892:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5877:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5877:3:5"
																		},
																		"nativeSrc": "5877:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5877:18:5"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
																		"kind": "string",
																		"nativeSrc": "5897:34:5",
																		"nodeType": "YulLiteral",
																		"src": "5897:34:5",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5870:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5870:6:5"
																},
																"nativeSrc": "5870:62:5",
																"nodeType": "YulFunctionCall",
																"src": "5870:62:5"
															},
															"nativeSrc": "5870:62:5",
															"nodeType": "YulExpressionStatement",
															"src": "5870:62:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5952:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "5952:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5963:2:5",
																				"nodeType": "YulLiteral",
																				"src": "5963:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5948:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5948:3:5"
																		},
																		"nativeSrc": "5948:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5948:18:5"
																	},
																	{
																		"hexValue": "616c616e6365",
																		"kind": "string",
																		"nativeSrc": "5968:8:5",
																		"nodeType": "YulLiteral",
																		"src": "5968:8:5",
																		"type": "",
																		"value": "alance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5941:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5941:6:5"
																},
																"nativeSrc": "5941:36:5",
																"nodeType": "YulFunctionCall",
																"src": "5941:36:5"
															},
															"nativeSrc": "5941:36:5",
															"nodeType": "YulExpressionStatement",
															"src": "5941:36:5"
														},
														{
															"nativeSrc": "5986:27:5",
															"nodeType": "YulAssignment",
															"src": "5986:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5998:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "5998:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6009:3:5",
																		"nodeType": "YulLiteral",
																		"src": "6009:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5994:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5994:3:5"
																},
																"nativeSrc": "5994:19:5",
																"nodeType": "YulFunctionCall",
																"src": "5994:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5986:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "5986:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5617:402:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5768:9:5",
														"nodeType": "YulTypedName",
														"src": "5768:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5782:4:5",
														"nodeType": "YulTypedName",
														"src": "5782:4:5",
														"type": ""
													}
												],
												"src": "5617:402:5"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), 32)))\n        }\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := 0\n        value := calldataload(add(headStart, 32))\n        value1 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let value := 0\n        value := calldataload(add(headStart, 64))\n        value2 := value\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20: insufficient allowance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n}",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100c95760003560e01c80633950935111610081578063a457c2d71161005b578063a457c2d714610194578063a9059cbb146101a7578063dd62ed3e146101ba57600080fd5b8063395093511461014357806370a082311461015657806395d89b411461018c57600080fd5b806318160ddd116100b257806318160ddd1461010f57806323b872dd14610121578063313ce5671461013457600080fd5b806306fdde03146100ce578063095ea7b3146100ec575b600080fd5b6100d6610200565b6040516100e3919061094c565b60405180910390f35b6100ff6100fa3660046109e1565b610292565b60405190151581526020016100e3565b6002545b6040519081526020016100e3565b6100ff61012f366004610a0b565b6102ac565b604051601281526020016100e3565b6100ff6101513660046109e1565b6102d0565b610113610164366004610a48565b73ffffffffffffffffffffffffffffffffffffffff1660009081526020819052604090205490565b6100d661031c565b6100ff6101a23660046109e1565b61032b565b6100ff6101b53660046109e1565b610401565b6101136101c8366004610a6a565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260016020908152604080832093909416825291909152205490565b60606003805461020f90610a9d565b80601f016020809104026020016040519081016040528092919081815260200182805461023b90610a9d565b80156102885780601f1061025d57610100808354040283529160200191610288565b820191906000526020600020905b81548152906001019060200180831161026b57829003601f168201915b5050505050905090565b6000336102a081858561040f565b60019150505b92915050565b6000336102ba8582856105c2565b6102c5858585610699565b506001949350505050565b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff871684529091528120549091906102a09082908690610317908790610af0565b61040f565b60606004805461020f90610a9d565b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff87168452909152812054909190838110156103f4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f00000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b6102c5828686840361040f565b6000336102a0818585610699565b73ffffffffffffffffffffffffffffffffffffffff83166104b1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f726573730000000000000000000000000000000000000000000000000000000060648201526084016103eb565b73ffffffffffffffffffffffffffffffffffffffff8216610554576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f737300000000000000000000000000000000000000000000000000000000000060648201526084016103eb565b73ffffffffffffffffffffffffffffffffffffffff83811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b73ffffffffffffffffffffffffffffffffffffffff8381166000908152600160209081526040808320938616835292905220547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146106935781811015610686576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016103eb565b610693848484840361040f565b50505050565b73ffffffffffffffffffffffffffffffffffffffff831661073c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f647265737300000000000000000000000000000000000000000000000000000060648201526084016103eb565b73ffffffffffffffffffffffffffffffffffffffff82166107df576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f657373000000000000000000000000000000000000000000000000000000000060648201526084016103eb565b73ffffffffffffffffffffffffffffffffffffffff831660009081526020819052604090205481811015610895576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e6365000000000000000000000000000000000000000000000000000060648201526084016103eb565b73ffffffffffffffffffffffffffffffffffffffff8085166000908152602081905260408082208585039055918516815290812080548492906108d9908490610af0565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161093f91815260200190565b60405180910390a3610693565b602081526000825180602084015260005b8181101561097a576020818601810151604086840101520161095d565b5060006040828501015260407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011684010191505092915050565b803573ffffffffffffffffffffffffffffffffffffffff811681146109dc57600080fd5b919050565b600080604083850312156109f457600080fd5b6109fd836109b8565b946020939093013593505050565b600080600060608486031215610a2057600080fd5b610a29846109b8565b9250610a37602085016109b8565b929592945050506040919091013590565b600060208284031215610a5a57600080fd5b610a63826109b8565b9392505050565b60008060408385031215610a7d57600080fd5b610a86836109b8565b9150610a94602084016109b8565b90509250929050565b600181811c90821680610ab157607f821691505b602082108103610aea577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b808201808211156102a6577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fdfea2646970667358221220aa3b9267ed20783115df50bfd1de91a30918741df1dd59094868d15e41f4992764736f6c637828302e382e32382d6e696768746c792e323032342e31302e322b636f6d6d69742e32353665393532380059",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xC9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x81 JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x194 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1A7 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x1BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x39509351 EQ PUSH2 0x143 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x156 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x18C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0xB2 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x10F JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x121 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x134 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xCE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xEC JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD6 PUSH2 0x200 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE3 SWAP2 SWAP1 PUSH2 0x94C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xFF PUSH2 0xFA CALLDATASIZE PUSH1 0x4 PUSH2 0x9E1 JUMP JUMPDEST PUSH2 0x292 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE3 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE3 JUMP JUMPDEST PUSH2 0xFF PUSH2 0x12F CALLDATASIZE PUSH1 0x4 PUSH2 0xA0B JUMP JUMPDEST PUSH2 0x2AC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE3 JUMP JUMPDEST PUSH2 0xFF PUSH2 0x151 CALLDATASIZE PUSH1 0x4 PUSH2 0x9E1 JUMP JUMPDEST PUSH2 0x2D0 JUMP JUMPDEST PUSH2 0x113 PUSH2 0x164 CALLDATASIZE PUSH1 0x4 PUSH2 0xA48 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xD6 PUSH2 0x31C JUMP JUMPDEST PUSH2 0xFF PUSH2 0x1A2 CALLDATASIZE PUSH1 0x4 PUSH2 0x9E1 JUMP JUMPDEST PUSH2 0x32B JUMP JUMPDEST PUSH2 0xFF PUSH2 0x1B5 CALLDATASIZE PUSH1 0x4 PUSH2 0x9E1 JUMP JUMPDEST PUSH2 0x401 JUMP JUMPDEST PUSH2 0x113 PUSH2 0x1C8 CALLDATASIZE PUSH1 0x4 PUSH2 0xA6A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x20F SWAP1 PUSH2 0xA9D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x23B SWAP1 PUSH2 0xA9D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x288 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x25D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x288 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x26B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x2A0 DUP2 DUP6 DUP6 PUSH2 0x40F JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x2BA DUP6 DUP3 DUP6 PUSH2 0x5C2 JUMP JUMPDEST PUSH2 0x2C5 DUP6 DUP6 DUP6 PUSH2 0x699 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x2A0 SWAP1 DUP3 SWAP1 DUP7 SWAP1 PUSH2 0x317 SWAP1 DUP8 SWAP1 PUSH2 0xAF0 JUMP JUMPDEST PUSH2 0x40F JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x20F SWAP1 PUSH2 0xA9D JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 DUP4 DUP2 LT ISZERO PUSH2 0x3F4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2C5 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x40F JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x2A0 DUP2 DUP6 DUP6 PUSH2 0x699 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH2 0x4B1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3EB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH2 0x554 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3EB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x693 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x686 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3EB JUMP JUMPDEST PUSH2 0x693 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x40F JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH2 0x73C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3EB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH2 0x7DF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3EB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x895 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3EB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x8D9 SWAP1 DUP5 SWAP1 PUSH2 0xAF0 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x93F SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x693 JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x97A JUMPI PUSH1 0x20 DUP2 DUP7 ADD DUP2 ADD MLOAD PUSH1 0x40 DUP7 DUP5 ADD ADD MSTORE ADD PUSH2 0x95D JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x9DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x9F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9FD DUP4 PUSH2 0x9B8 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xA20 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA29 DUP5 PUSH2 0x9B8 JUMP JUMPDEST SWAP3 POP PUSH2 0xA37 PUSH1 0x20 DUP6 ADD PUSH2 0x9B8 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA5A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA63 DUP3 PUSH2 0x9B8 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xA7D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA86 DUP4 PUSH2 0x9B8 JUMP JUMPDEST SWAP2 POP PUSH2 0xA94 PUSH1 0x20 DUP5 ADD PUSH2 0x9B8 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xAB1 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xAEA JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x2A6 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAA EXTCODESIZE SWAP3 PUSH8 0xED20783115DF50BF 0xD1 0xDE SWAP2 LOG3 MULMOD XOR PUSH21 0x1DF1DD59094868D15E41F4992764736F6C63782830 0x2E CODESIZE 0x2E ORIGIN CODESIZE 0x2D PUSH15 0x696768746C792E323032342E31302E ORIGIN 0x2B PUSH4 0x6F6D6D69 PUSH21 0x2E3235366539353238005900000000000000000000 ",
							"sourceMap": "2676:11214:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3429:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5706:197;;;;;;:::i;:::-;;:::i;:::-;;;1276:14:5;;1269:22;1251:41;;1239:2;1224:18;5706:197:1;1111:187:5;4517:106:1;4604:12;;4517:106;;;1449:25:5;;;1437:2;1422:18;4517:106:1;1303:177:5;6465:286:1;;;;;;:::i;:::-;;:::i;4366:91::-;;;4448:2;2006:36:5;;1994:2;1979:18;4366:91:1;1864:184:5;7146:234:1;;;;;;:::i;:::-;;:::i;4681:125::-;;;;;;:::i;:::-;4781:18;;4755:7;4781:18;;;;;;;;;;;;4681:125;3640:102;;;:::i;7867:427::-;;;;;;:::i;:::-;;:::i;5002:189::-;;;;;;:::i;:::-;;:::i;5249:149::-;;;;;;:::i;:::-;5364:18;;;;5338:7;5364:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;5249:149;3429:98;3483:13;3515:5;3508:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3429:98;:::o;5706:197::-;5789:4;1992:10:4;5843:32:1;1992:10:4;5859:7:1;5868:6;5843:8;:32::i;:::-;5892:4;5885:11;;;5706:197;;;;;:::o;6465:286::-;6592:4;1992:10:4;6648:38:1;6664:4;1992:10:4;6679:6:1;6648:15;:38::i;:::-;6696:27;6706:4;6712:2;6716:6;6696:9;:27::i;:::-;-1:-1:-1;6740:4:1;;6465:286;-1:-1:-1;;;;6465:286:1:o;7146:234::-;1992:10:4;7234:4:1;5364:18;;;:11;:18;;;;;;;;;:27;;;;;;;;;;7234:4;;1992:10:4;7288:64:1;;1992:10:4;;5364:27:1;;7313:38;;7341:10;;7313:38;:::i;:::-;7288:8;:64::i;3640:102::-;3696:13;3728:7;3721:14;;;;;:::i;7867:427::-;1992:10:4;7960:4:1;5364:18;;;:11;:18;;;;;;;;;:27;;;;;;;;;;7960:4;;1992:10:4;8104:15:1;8084:16;:35;;8076:85;;;;;;;3437:2:5;8076:85:1;;;3419:21:5;3476:2;3456:18;;;3449:30;3515:34;3495:18;;;3488:62;3586:7;3566:18;;;3559:35;3611:19;;8076:85:1;;;;;;;;;8195:60;8204:5;8211:7;8239:15;8220:16;:34;8195:8;:60::i;5002:189::-;5081:4;1992:10:4;5135:28:1;1992:10:4;5152:2:1;5156:6;5135:9;:28::i;11383:370::-;11514:19;;;11506:68;;;;;;;3843:2:5;11506:68:1;;;3825:21:5;3882:2;3862:18;;;3855:30;3921:34;3901:18;;;3894:62;3992:6;3972:18;;;3965:34;4016:19;;11506:68:1;3641:400:5;11506:68:1;11592:21;;;11584:68;;;;;;;4248:2:5;11584:68:1;;;4230:21:5;4287:2;4267:18;;;4260:30;4326:34;4306:18;;;4299:62;4397:4;4377:18;;;4370:32;4419:19;;11584:68:1;4046:398:5;11584:68:1;11663:18;;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;11714:32;;1449:25:5;;;11714:32:1;;1422:18:5;11714:32:1;;;;;;;11383:370;;;:::o;12034:441::-;5364:18;;;;12164:24;5364:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;12250:17;12230:37;;12226:243;;12311:6;12291:16;:26;;12283:68;;;;;;;4651:2:5;12283:68:1;;;4633:21:5;4690:2;4670:18;;;4663:30;4729:31;4709:18;;;4702:59;4778:18;;12283:68:1;4449:353:5;12283:68:1;12393:51;12402:5;12409:7;12437:6;12418:16;:25;12393:8;:51::i;:::-;12154:321;12034:441;;;:::o;8748:651::-;8874:18;;;8866:68;;;;;;;5009:2:5;8866:68:1;;;4991:21:5;5048:2;5028:18;;;5021:30;5087:34;5067:18;;;5060:62;5158:7;5138:18;;;5131:35;5183:19;;8866:68:1;4807:401:5;8866:68:1;8952:16;;;8944:64;;;;;;;5415:2:5;8944:64:1;;;5397:21:5;5454:2;5434:18;;;5427:30;5493:34;5473:18;;;5466:62;5564:5;5544:18;;;5537:33;5587:19;;8944:64:1;5213:399:5;8944:64:1;9090:15;;;9068:19;9090:15;;;;;;;;;;;9123:21;;;;9115:72;;;;;;;5819:2:5;9115:72:1;;;5801:21:5;5858:2;5838:18;;;5831:30;5897:34;5877:18;;;5870:62;5968:8;5948:18;;;5941:36;5994:19;;9115:72:1;5617:402:5;9115:72:1;9221:15;;;;:9;:15;;;;;;;;;;;9239:20;;;9221:38;;9279:13;;;;;;;;:23;;9253:6;;9221:9;9279:23;;9253:6;;9279:23;:::i;:::-;;;;;;;;9333:2;9318:26;;9327:4;9318:26;;;9337:6;9318:26;;;;1449:25:5;;1437:2;1422:18;;1303:177;9318:26:1;;;;;;;;9355:37;13059:121;14:586:5;163:2;152:9;145:21;126:4;195:6;189:13;238:6;233:2;222:9;218:18;211:34;263:1;273:140;287:6;284:1;281:13;273:140;;;398:2;382:14;;;378:23;;372:30;367:2;348:17;;;344:26;337:66;302:10;273:140;;;277:3;462:1;457:2;448:6;437:9;433:22;429:31;422:42;591:2;521:66;516:2;508:6;504:15;500:88;489:9;485:104;481:113;473:121;;;14:586;;;;:::o;605:196::-;673:20;;733:42;722:54;;712:65;;702:93;;791:1;788;781:12;702:93;605:196;;;:::o;806:300::-;874:6;882;935:2;923:9;914:7;910:23;906:32;903:52;;;951:1;948;941:12;903:52;974:29;993:9;974:29;:::i;:::-;964:39;1072:2;1057:18;;;;1044:32;;-1:-1:-1;;;806:300:5:o;1485:374::-;1562:6;1570;1578;1631:2;1619:9;1610:7;1606:23;1602:32;1599:52;;;1647:1;1644;1637:12;1599:52;1670:29;1689:9;1670:29;:::i;:::-;1660:39;;1718:38;1752:2;1741:9;1737:18;1718:38;:::i;:::-;1485:374;;1708:48;;-1:-1:-1;;;1825:2:5;1810:18;;;;1797:32;;1485:374::o;2053:186::-;2112:6;2165:2;2153:9;2144:7;2140:23;2136:32;2133:52;;;2181:1;2178;2171:12;2133:52;2204:29;2223:9;2204:29;:::i;:::-;2194:39;2053:186;-1:-1:-1;;;2053:186:5:o;2244:260::-;2312:6;2320;2373:2;2361:9;2352:7;2348:23;2344:32;2341:52;;;2389:1;2386;2379:12;2341:52;2412:29;2431:9;2412:29;:::i;:::-;2402:39;;2460:38;2494:2;2483:9;2479:18;2460:38;:::i;:::-;2450:48;;2244:260;;;;;:::o;2509:437::-;2588:1;2584:12;;;;2631;;;2652:61;;2706:4;2698:6;2694:17;2684:27;;2652:61;2759:2;2751:6;2748:14;2728:18;2725:38;2722:218;;2796:77;2793:1;2786:88;2897:4;2894:1;2887:15;2925:4;2922:1;2915:15;2722:218;;2509:437;;;:::o;2951:279::-;3016:9;;;3037:10;;;3034:190;;;3080:77;3077:1;3070:88;3181:4;3178:1;3171:15;3209:4;3206:1;3199:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "590000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "22503",
								"balanceOf(address)": "1261",
								"decimals()": "244",
								"decreaseAllowance(address,uint256)": "23462",
								"increaseAllowance(address,uint256)": "infinite",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "1004",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_afterTokenTransfer(address,address,uint256)": "infinite",
								"_approve(address,address,uint256)": "infinite",
								"_beforeTokenTransfer(address,address,uint256)": "infinite",
								"_burn(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_spendAllowance(address,address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 2676,
									"end": 13890,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 2676,
									"end": 13890,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 2676,
									"end": 13890,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 3251,
									"end": 3364,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 3251,
									"end": 3364,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3251,
									"end": 3364,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 3251,
									"end": 3364,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 3251,
									"end": 3364,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 3251,
									"end": 3364,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3251,
									"end": 3364,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3251,
									"end": 3364,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 3251,
									"end": 3364,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 3251,
									"end": 3364,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3251,
									"end": 3364,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3251,
									"end": 3364,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 3251,
									"end": 3364,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 3251,
									"end": 3364,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 3251,
									"end": 3364,
									"name": "CODESIZE",
									"source": 1
								},
								{
									"begin": 3251,
									"end": 3364,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 3251,
									"end": 3364,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3251,
									"end": 3364,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 3251,
									"end": 3364,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3251,
									"end": 3364,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 3251,
									"end": 3364,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3251,
									"end": 3364,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3251,
									"end": 3364,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 3251,
									"end": 3364,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3251,
									"end": 3364,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3251,
									"end": 3364,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 3251,
									"end": 3364,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 3251,
									"end": 3364,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3251,
									"end": 3364,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 3251,
									"end": 3364,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3251,
									"end": 3364,
									"name": "tag",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 3251,
									"end": 3364,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3317,
									"end": 3322,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 3317,
									"end": 3330,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 3325,
									"end": 3330,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3317,
									"end": 3322,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3317,
									"end": 3330,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 3317,
									"end": 3330,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3317,
									"end": 3330,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 3317,
									"end": 3330,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3340,
									"end": 3347,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 3340,
									"end": 3357,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 3350,
									"end": 3357,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3340,
									"end": 3347,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3340,
									"end": 3357,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 3340,
									"end": 3357,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3340,
									"end": 3357,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 3340,
									"end": 3357,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3340,
									"end": 3357,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3251,
									"end": 3364,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3251,
									"end": 3364,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2676,
									"end": 13890,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 2676,
									"end": 13890,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 5,
									"value": "10"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 5,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 5,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 146,
									"end": 980,
									"name": "tag",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 146,
									"end": 980,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 200,
									"end": 205,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 253,
									"end": 256,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 246,
									"end": 250,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 238,
									"end": 244,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 234,
									"end": 251,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 230,
									"end": 257,
									"name": "SLT",
									"source": 5
								},
								{
									"begin": 220,
									"end": 275,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "19"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 271,
									"end": 272,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 268,
									"end": 269,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 261,
									"end": 273,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 220,
									"end": 275,
									"name": "tag",
									"source": 5,
									"value": "19"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 298,
									"end": 311,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 298,
									"end": 311,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 323,
									"end": 353,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 323,
									"end": 353,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 320,
									"end": 376,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 320,
									"end": 376,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "21"
								},
								{
									"begin": 320,
									"end": 376,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 356,
									"end": 374,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "21"
								},
								{
									"begin": 356,
									"end": 374,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "10"
								},
								{
									"begin": 356,
									"end": 374,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 356,
									"end": 374,
									"name": "tag",
									"source": 5,
									"value": "21"
								},
								{
									"begin": 356,
									"end": 374,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 405,
									"end": 407,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 399,
									"end": 408,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 497,
									"end": 499,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 459,
									"end": 476,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 459,
									"end": 476,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 455,
									"end": 486,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 455,
									"end": 486,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 455,
									"end": 486,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 488,
									"end": 490,
									"name": "PUSH",
									"source": 5,
									"value": "3F"
								},
								{
									"begin": 451,
									"end": 491,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 447,
									"end": 501,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 435,
									"end": 502,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 435,
									"end": 502,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 517,
									"end": 551,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 517,
									"end": 551,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 553,
									"end": 575,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 553,
									"end": 575,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 553,
									"end": 575,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 514,
									"end": 576,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 511,
									"end": 599,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 511,
									"end": 599,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "23"
								},
								{
									"begin": 511,
									"end": 599,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 579,
									"end": 597,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "23"
								},
								{
									"begin": 579,
									"end": 597,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "10"
								},
								{
									"begin": 579,
									"end": 597,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 579,
									"end": 597,
									"name": "tag",
									"source": 5,
									"value": "23"
								},
								{
									"begin": 579,
									"end": 597,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 615,
									"end": 617,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 608,
									"end": 630,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 639,
									"end": 661,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 639,
									"end": 661,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 639,
									"end": 661,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 680,
									"end": 699,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 680,
									"end": 699,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 680,
									"end": 699,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 701,
									"end": 705,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 676,
									"end": 706,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 673,
									"end": 712,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "LT",
									"source": -1
								},
								{
									"begin": 670,
									"end": 729,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 670,
									"end": 729,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 670,
									"end": 729,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 725,
									"end": 726,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 722,
									"end": 723,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 715,
									"end": 727,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 670,
									"end": 729,
									"name": "tag",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 670,
									"end": 729,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 747,
									"end": 748,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 757,
									"end": 900,
									"name": "tag",
									"source": 5,
									"value": "25"
								},
								{
									"begin": 757,
									"end": 900,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 771,
									"end": 777,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 768,
									"end": 769,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 765,
									"end": 778,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 757,
									"end": 900,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 757,
									"end": 900,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "27"
								},
								{
									"begin": 757,
									"end": 900,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 883,
									"end": 887,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 867,
									"end": 881,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 867,
									"end": 881,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 867,
									"end": 881,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 863,
									"end": 888,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 863,
									"end": 888,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 857,
									"end": 889,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 834,
									"end": 848,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 834,
									"end": 848,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 834,
									"end": 848,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 830,
									"end": 855,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 830,
									"end": 855,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 823,
									"end": 890,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 786,
									"end": 798,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 757,
									"end": 900,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "25"
								},
								{
									"begin": 757,
									"end": 900,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 757,
									"end": 900,
									"name": "tag",
									"source": 5,
									"value": "27"
								},
								{
									"begin": 757,
									"end": 900,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 948,
									"end": 949,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 920,
									"end": 939,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 920,
									"end": 939,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 920,
									"end": 939,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 941,
									"end": 945,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 916,
									"end": 946,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 909,
									"end": 950,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 909,
									"end": 950,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 909,
									"end": 950,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 909,
									"end": 950,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 924,
									"end": 930,
									"name": "SWAP4",
									"source": 5
								},
								{
									"begin": 146,
									"end": 980,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 146,
									"end": 980,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 985,
									"end": 1542,
									"name": "tag",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 985,
									"end": 1542,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1084,
									"end": 1090,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1092,
									"end": 1098,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1145,
									"end": 1147,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1133,
									"end": 1142,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1124,
									"end": 1131,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 1120,
									"end": 1143,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 1116,
									"end": 1148,
									"name": "SLT",
									"source": 5
								},
								{
									"begin": 1113,
									"end": 1165,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1113,
									"end": 1165,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "29"
								},
								{
									"begin": 1113,
									"end": 1165,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1161,
									"end": 1162,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1158,
									"end": 1159,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1151,
									"end": 1163,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1113,
									"end": 1165,
									"name": "tag",
									"source": 5,
									"value": "29"
								},
								{
									"begin": 1113,
									"end": 1165,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1188,
									"end": 1204,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1188,
									"end": 1204,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1216,
									"end": 1246,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1216,
									"end": 1246,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 1213,
									"end": 1263,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1213,
									"end": 1263,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "30"
								},
								{
									"begin": 1213,
									"end": 1263,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1259,
									"end": 1260,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1256,
									"end": 1257,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1249,
									"end": 1261,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1213,
									"end": 1263,
									"name": "tag",
									"source": 5,
									"value": "30"
								},
								{
									"begin": 1213,
									"end": 1263,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1282,
									"end": 1343,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "31"
								},
								{
									"begin": 1335,
									"end": 1342,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 1326,
									"end": 1332,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1315,
									"end": 1324,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 1311,
									"end": 1333,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1282,
									"end": 1343,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 1282,
									"end": 1343,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1282,
									"end": 1343,
									"name": "tag",
									"source": 5,
									"value": "31"
								},
								{
									"begin": 1282,
									"end": 1343,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1389,
									"end": 1391,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1374,
									"end": 1392,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 1374,
									"end": 1392,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1368,
									"end": 1393,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1272,
									"end": 1343,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1272,
									"end": 1343,
									"name": "SWAP4",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1368,
									"end": 1393,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1405,
									"end": 1437,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1405,
									"end": 1437,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 1402,
									"end": 1454,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1402,
									"end": 1454,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "32"
								},
								{
									"begin": 1402,
									"end": 1454,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1450,
									"end": 1451,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1447,
									"end": 1448,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1440,
									"end": 1452,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1402,
									"end": 1454,
									"name": "tag",
									"source": 5,
									"value": "32"
								},
								{
									"begin": 1402,
									"end": 1454,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1473,
									"end": 1536,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "33"
								},
								{
									"begin": 1528,
									"end": 1535,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 1517,
									"end": 1525,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1506,
									"end": 1515,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 1502,
									"end": 1526,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1473,
									"end": 1536,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 1473,
									"end": 1536,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1473,
									"end": 1536,
									"name": "tag",
									"source": 5,
									"value": "33"
								},
								{
									"begin": 1473,
									"end": 1536,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1463,
									"end": 1536,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1463,
									"end": 1536,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1463,
									"end": 1536,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 985,
									"end": 1542,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 985,
									"end": 1542,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 985,
									"end": 1542,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 985,
									"end": 1542,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 985,
									"end": 1542,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 985,
									"end": 1542,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1547,
									"end": 1927,
									"name": "tag",
									"source": 5,
									"value": "12"
								},
								{
									"begin": 1547,
									"end": 1927,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1626,
									"end": 1627,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1622,
									"end": 1634,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1622,
									"end": 1634,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1622,
									"end": 1634,
									"name": "SHR",
									"source": 5
								},
								{
									"begin": 1622,
									"end": 1634,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1669,
									"end": 1681,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1669,
									"end": 1681,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1669,
									"end": 1681,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1690,
									"end": 1751,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "35"
								},
								{
									"begin": 1690,
									"end": 1751,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1744,
									"end": 1748,
									"name": "PUSH",
									"source": 5,
									"value": "7F"
								},
								{
									"begin": 1736,
									"end": 1742,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1732,
									"end": 1749,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1722,
									"end": 1749,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1722,
									"end": 1749,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1690,
									"end": 1751,
									"name": "tag",
									"source": 5,
									"value": "35"
								},
								{
									"begin": 1690,
									"end": 1751,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1797,
									"end": 1799,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1789,
									"end": 1795,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1786,
									"end": 1800,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 1766,
									"end": 1784,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1763,
									"end": 1801,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 1760,
									"end": 1921,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "36"
								},
								{
									"begin": 1760,
									"end": 1921,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1843,
									"end": 1853,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B71"
								},
								{
									"begin": 1838,
									"end": 1841,
									"name": "PUSH",
									"source": 5,
									"value": "E0"
								},
								{
									"begin": 1834,
									"end": 1854,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 1831,
									"end": 1832,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1824,
									"end": 1855,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1878,
									"end": 1882,
									"name": "PUSH",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 1875,
									"end": 1876,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 1868,
									"end": 1883,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1906,
									"end": 1910,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 1903,
									"end": 1904,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1896,
									"end": 1911,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1760,
									"end": 1921,
									"name": "tag",
									"source": 5,
									"value": "36"
								},
								{
									"begin": 1760,
									"end": 1921,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1760,
									"end": 1921,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1547,
									"end": 1927,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1547,
									"end": 1927,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1547,
									"end": 1927,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1547,
									"end": 1927,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2058,
									"end": 2576,
									"name": "tag",
									"source": 5,
									"value": "14"
								},
								{
									"begin": 2058,
									"end": 2576,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2160,
									"end": 2162,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 2155,
									"end": 2158,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2152,
									"end": 2163,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 2149,
									"end": 2570,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 2149,
									"end": 2570,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "39"
								},
								{
									"begin": 2149,
									"end": 2570,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 2196,
									"end": 2201,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 2193,
									"end": 2194,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2186,
									"end": 2202,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 2240,
									"end": 2244,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 2237,
									"end": 2238,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2227,
									"end": 2245,
									"name": "KECCAK256",
									"source": 5
								},
								{
									"begin": 2310,
									"end": 2312,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 2298,
									"end": 2308,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 2294,
									"end": 2313,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2291,
									"end": 2292,
									"name": "PUSH",
									"source": 5,
									"value": "5"
								},
								{
									"begin": 2287,
									"end": 2314,
									"name": "SHR",
									"source": 5
								},
								{
									"begin": 2281,
									"end": 2285,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2277,
									"end": 2315,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2346,
									"end": 2350,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 2334,
									"end": 2344,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 2331,
									"end": 2351,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 2328,
									"end": 2375,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 2328,
									"end": 2375,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 2328,
									"end": 2375,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2369,
									"end": 2373,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 2328,
									"end": 2375,
									"name": "tag",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 2328,
									"end": 2375,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2424,
									"end": 2426,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 2419,
									"end": 2422,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 2415,
									"end": 2427,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2412,
									"end": 2413,
									"name": "PUSH",
									"source": 5,
									"value": "5"
								},
								{
									"begin": 2408,
									"end": 2428,
									"name": "SHR",
									"source": 5
								},
								{
									"begin": 2402,
									"end": 2406,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2398,
									"end": 2429,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2388,
									"end": 2429,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 2388,
									"end": 2429,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2479,
									"end": 2560,
									"name": "tag",
									"source": 5,
									"value": "41"
								},
								{
									"begin": 2479,
									"end": 2560,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2497,
									"end": 2499,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2490,
									"end": 2495,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2487,
									"end": 2500,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 2479,
									"end": 2560,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 2479,
									"end": 2560,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "43"
								},
								{
									"begin": 2479,
									"end": 2560,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 2556,
									"end": 2557,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2542,
									"end": 2558,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2542,
									"end": 2558,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 2523,
									"end": 2524,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 2512,
									"end": 2525,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2479,
									"end": 2560,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "41"
								},
								{
									"begin": 2479,
									"end": 2560,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2479,
									"end": 2560,
									"name": "tag",
									"source": 5,
									"value": "43"
								},
								{
									"begin": 2479,
									"end": 2560,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2483,
									"end": 2486,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2483,
									"end": 2486,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2149,
									"end": 2570,
									"name": "tag",
									"source": 5,
									"value": "39"
								},
								{
									"begin": 2149,
									"end": 2570,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2058,
									"end": 2576,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2058,
									"end": 2576,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2058,
									"end": 2576,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2058,
									"end": 2576,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2752,
									"end": 4051,
									"name": "tag",
									"source": 5,
									"value": "7"
								},
								{
									"begin": 2752,
									"end": 4051,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2872,
									"end": 2882,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2872,
									"end": 2882,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2894,
									"end": 2924,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2894,
									"end": 2924,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 2891,
									"end": 2947,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 2891,
									"end": 2947,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "47"
								},
								{
									"begin": 2891,
									"end": 2947,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 2927,
									"end": 2945,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "47"
								},
								{
									"begin": 2927,
									"end": 2945,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "10"
								},
								{
									"begin": 2927,
									"end": 2945,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2927,
									"end": 2945,
									"name": "tag",
									"source": 5,
									"value": "47"
								},
								{
									"begin": 2927,
									"end": 2945,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2956,
									"end": 3053,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "48"
								},
								{
									"begin": 3046,
									"end": 3052,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 3006,
									"end": 3044,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "49"
								},
								{
									"begin": 3038,
									"end": 3042,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 3032,
									"end": 3043,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 3006,
									"end": 3044,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "12"
								},
								{
									"begin": 3006,
									"end": 3044,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 3006,
									"end": 3044,
									"name": "tag",
									"source": 5,
									"value": "49"
								},
								{
									"begin": 3006,
									"end": 3044,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3000,
									"end": 3004,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 2956,
									"end": 3053,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "14"
								},
								{
									"begin": 2956,
									"end": 3053,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2956,
									"end": 3053,
									"name": "tag",
									"source": 5,
									"value": "48"
								},
								{
									"begin": 2956,
									"end": 3053,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3102,
									"end": 3106,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 3133,
									"end": 3135,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 3122,
									"end": 3136,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 3122,
									"end": 3136,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 3150,
									"end": 3151,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 3145,
									"end": 3794,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 3145,
									"end": 3794,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 3145,
									"end": 3794,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "51"
								},
								{
									"begin": 3145,
									"end": 3794,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 3838,
									"end": 3839,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 3855,
									"end": 3861,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 3852,
									"end": 3941,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 3852,
									"end": 3941,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "52"
								},
								{
									"begin": 3852,
									"end": 3941,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3907,
									"end": 3926,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 3907,
									"end": 3926,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 3907,
									"end": 3926,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 3901,
									"end": 3927,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 3852,
									"end": 3941,
									"name": "tag",
									"source": 5,
									"value": "52"
								},
								{
									"begin": 3852,
									"end": 3941,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2709,
									"end": 2710,
									"name": "PUSH",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 2705,
									"end": 2716,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 2705,
									"end": 2716,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2705,
									"end": 2716,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 2701,
									"end": 2725,
									"name": "SHR",
									"source": 5
								},
								{
									"begin": 2697,
									"end": 2726,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 2687,
									"end": 2727,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 2733,
									"end": 2734,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 2729,
									"end": 2740,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 2729,
									"end": 2740,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2729,
									"end": 2740,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 2684,
									"end": 2741,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 3954,
									"end": 4035,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 3954,
									"end": 4035,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 3115,
									"end": 4045,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "43"
								},
								{
									"begin": 3115,
									"end": 4045,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 3145,
									"end": 3794,
									"name": "tag",
									"source": 5,
									"value": "51"
								},
								{
									"begin": 3145,
									"end": 3794,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2005,
									"end": 2006,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1998,
									"end": 2012,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 1998,
									"end": 2012,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1998,
									"end": 2012,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 2042,
									"end": 2046,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 2029,
									"end": 2047,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2029,
									"end": 2047,
									"name": "KECCAK256",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3181,
									"end": 3201,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 3181,
									"end": 3201,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 3181,
									"end": 3201,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 3299,
									"end": 3521,
									"name": "tag",
									"source": 5,
									"value": "55"
								},
								{
									"begin": 3299,
									"end": 3521,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3313,
									"end": 3320,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 3310,
									"end": 3311,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 3307,
									"end": 3321,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 3299,
									"end": 3521,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 3299,
									"end": 3521,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "57"
								},
								{
									"begin": 3299,
									"end": 3521,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 3395,
									"end": 3414,
									"name": "DUP8",
									"source": 5
								},
								{
									"begin": 3395,
									"end": 3414,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 3395,
									"end": 3414,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 3389,
									"end": 3415,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 3374,
									"end": 3416,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 3374,
									"end": 3416,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 3502,
									"end": 3506,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 3487,
									"end": 3507,
									"name": "SWAP5",
									"source": 5
								},
								{
									"begin": 3487,
									"end": 3507,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 3487,
									"end": 3507,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 3487,
									"end": 3507,
									"name": "SWAP5",
									"source": 5
								},
								{
									"begin": 3455,
									"end": 3456,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 3443,
									"end": 3457,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 3443,
									"end": 3457,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 3443,
									"end": 3457,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 3443,
									"end": 3457,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 3329,
									"end": 3341,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 3299,
									"end": 3521,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "55"
								},
								{
									"begin": 3299,
									"end": 3521,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 3299,
									"end": 3521,
									"name": "tag",
									"source": 5,
									"value": "57"
								},
								{
									"begin": 3299,
									"end": 3521,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3303,
									"end": 3306,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3549,
									"end": 3555,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 3540,
									"end": 3547,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 3537,
									"end": 3556,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 3534,
									"end": 3735,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 3534,
									"end": 3735,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "58"
								},
								{
									"begin": 3534,
									"end": 3735,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 3610,
									"end": 3629,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 3610,
									"end": 3629,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 3610,
									"end": 3629,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 3604,
									"end": 3630,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3693,
									"end": 3694,
									"name": "PUSH",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 3689,
									"end": 3703,
									"name": "DUP8",
									"source": 5
								},
								{
									"begin": 3689,
									"end": 3703,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 3689,
									"end": 3703,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 3705,
									"end": 3708,
									"name": "PUSH",
									"source": 5,
									"value": "F8"
								},
								{
									"begin": 3685,
									"end": 3709,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 3681,
									"end": 3718,
									"name": "SHR",
									"source": 5
								},
								{
									"begin": 3677,
									"end": 3719,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 3662,
									"end": 3720,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 3647,
									"end": 3721,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 3647,
									"end": 3721,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 3534,
									"end": 3735,
									"name": "tag",
									"source": 5,
									"value": "58"
								},
								{
									"begin": 3534,
									"end": 3735,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3781,
									"end": 3782,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 3765,
									"end": 3779,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 3765,
									"end": 3779,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 3765,
									"end": 3779,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 3761,
									"end": 3783,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 3748,
									"end": 3784,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 3748,
									"end": 3784,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2752,
									"end": 4051,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2752,
									"end": 4051,
									"name": "tag",
									"source": 5,
									"value": "16"
								},
								{
									"begin": 2752,
									"end": 4051,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2676,
									"end": 13890,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2676,
									"end": 13890,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2676,
									"end": 13890,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2676,
									"end": 13890,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2676,
									"end": 13890,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 2676,
									"end": 13890,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2676,
									"end": 13890,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220aa3b9267ed20783115df50bfd1de91a30918741df1dd59094868d15e41f4992764736f6c637828302e382e32382d6e696768746c792e323032342e31302e322b636f6d6d69742e32353665393532380059",
									".code": [
										{
											"begin": 2676,
											"end": 13890,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "PUSH",
											"source": 1,
											"value": "39509351"
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "PUSH",
											"source": 1,
											"value": "A457C2D7"
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "PUSH",
											"source": 1,
											"value": "A457C2D7"
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "PUSH",
											"source": 1,
											"value": "A9059CBB"
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "PUSH",
											"source": 1,
											"value": "DD62ED3E"
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "PUSH",
											"source": 1,
											"value": "39509351"
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "PUSH",
											"source": 1,
											"value": "70A08231"
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "PUSH",
											"source": 1,
											"value": "95D89B41"
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "PUSH",
											"source": 1,
											"value": "18160DDD"
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "PUSH",
											"source": 1,
											"value": "18160DDD"
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "PUSH",
											"source": 1,
											"value": "23B872DD"
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "PUSH",
											"source": 1,
											"value": "313CE567"
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "PUSH",
											"source": 1,
											"value": "6FDDE03"
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "PUSH",
											"source": 1,
											"value": "95EA7B3"
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3429,
											"end": 3527,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 3429,
											"end": 3527,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3429,
											"end": 3527,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 3429,
											"end": 3527,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 3429,
											"end": 3527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3429,
											"end": 3527,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 3429,
											"end": 3527,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3429,
											"end": 3527,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3429,
											"end": 3527,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3429,
											"end": 3527,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 3429,
											"end": 3527,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3429,
											"end": 3527,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3429,
											"end": 3527,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3429,
											"end": 3527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3429,
											"end": 3527,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 3429,
											"end": 3527,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3429,
											"end": 3527,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3429,
											"end": 3527,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3429,
											"end": 3527,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3429,
											"end": 3527,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3429,
											"end": 3527,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3429,
											"end": 3527,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3429,
											"end": 3527,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 5706,
											"end": 5903,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5706,
											"end": 5903,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5706,
											"end": 5903,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 5706,
											"end": 5903,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 5706,
											"end": 5903,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5706,
											"end": 5903,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5706,
											"end": 5903,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 5706,
											"end": 5903,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5706,
											"end": 5903,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 5706,
											"end": 5903,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5706,
											"end": 5903,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5706,
											"end": 5903,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5706,
											"end": 5903,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 5706,
											"end": 5903,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5706,
											"end": 5903,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5706,
											"end": 5903,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1290,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1276,
											"end": 1290,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1269,
											"end": 1291,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1251,
											"end": 1292,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1251,
											"end": 1292,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1239,
											"end": 1241,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1224,
											"end": 1242,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5706,
											"end": 5903,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 1111,
											"end": 1298,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4517,
											"end": 4623,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 4517,
											"end": 4623,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4604,
											"end": 4616,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 4604,
											"end": 4616,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4517,
											"end": 4623,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 4517,
											"end": 4623,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4517,
											"end": 4623,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4517,
											"end": 4623,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1449,
											"end": 1474,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1449,
											"end": 1474,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1449,
											"end": 1474,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1437,
											"end": 1439,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1422,
											"end": 1440,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4517,
											"end": 4623,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 1303,
											"end": 1480,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6465,
											"end": 6751,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 6465,
											"end": 6751,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6465,
											"end": 6751,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 6465,
											"end": 6751,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 6465,
											"end": 6751,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 6465,
											"end": 6751,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6465,
											"end": 6751,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 6465,
											"end": 6751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6465,
											"end": 6751,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 6465,
											"end": 6751,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6465,
											"end": 6751,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 6465,
											"end": 6751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4366,
											"end": 4457,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 4366,
											"end": 4457,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4366,
											"end": 4457,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4366,
											"end": 4457,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4448,
											"end": 4450,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 2006,
											"end": 2042,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2006,
											"end": 2042,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1994,
											"end": 1996,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1979,
											"end": 1997,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4366,
											"end": 4457,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 1864,
											"end": 2048,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7146,
											"end": 7380,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 7146,
											"end": 7380,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7146,
											"end": 7380,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 7146,
											"end": 7380,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 7146,
											"end": 7380,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 7146,
											"end": 7380,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7146,
											"end": 7380,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 7146,
											"end": 7380,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7146,
											"end": 7380,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 7146,
											"end": 7380,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7146,
											"end": 7380,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 7146,
											"end": 7380,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4681,
											"end": 4806,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 4681,
											"end": 4806,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4681,
											"end": 4806,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 4681,
											"end": 4806,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 4681,
											"end": 4806,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4681,
											"end": 4806,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4681,
											"end": 4806,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 4681,
											"end": 4806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4681,
											"end": 4806,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 4681,
											"end": 4806,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4781,
											"end": 4799,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4781,
											"end": 4799,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4755,
											"end": 4762,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4781,
											"end": 4799,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4781,
											"end": 4799,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4781,
											"end": 4799,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4781,
											"end": 4799,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4781,
											"end": 4799,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4781,
											"end": 4799,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4781,
											"end": 4799,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4781,
											"end": 4799,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4781,
											"end": 4799,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4781,
											"end": 4799,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4781,
											"end": 4799,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4781,
											"end": 4799,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4681,
											"end": 4806,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3640,
											"end": 3742,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 3640,
											"end": 3742,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3640,
											"end": 3742,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 3640,
											"end": 3742,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 3640,
											"end": 3742,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7867,
											"end": 8294,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 7867,
											"end": 8294,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7867,
											"end": 8294,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 7867,
											"end": 8294,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 7867,
											"end": 8294,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 7867,
											"end": 8294,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7867,
											"end": 8294,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 7867,
											"end": 8294,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7867,
											"end": 8294,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 7867,
											"end": 8294,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7867,
											"end": 8294,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 7867,
											"end": 8294,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5002,
											"end": 5191,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 5002,
											"end": 5191,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5002,
											"end": 5191,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 5002,
											"end": 5191,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 5002,
											"end": 5191,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5002,
											"end": 5191,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5002,
											"end": 5191,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 5002,
											"end": 5191,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5002,
											"end": 5191,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 5002,
											"end": 5191,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5002,
											"end": 5191,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 5002,
											"end": 5191,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5249,
											"end": 5398,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 5249,
											"end": 5398,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5249,
											"end": 5398,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 5249,
											"end": 5398,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 5249,
											"end": 5398,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5249,
											"end": 5398,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5249,
											"end": 5398,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 5249,
											"end": 5398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5249,
											"end": 5398,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 5249,
											"end": 5398,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5382,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5364,
											"end": 5382,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5382,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5382,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5338,
											"end": 5345,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5364,
											"end": 5382,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5382,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5382,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5375,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5364,
											"end": 5382,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5364,
											"end": 5382,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5382,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5382,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5382,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5364,
											"end": 5382,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5382,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5382,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5391,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5391,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5391,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5391,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5391,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5391,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5391,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5391,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5391,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5391,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5391,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5391,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5391,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5249,
											"end": 5398,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3429,
											"end": 3527,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 3429,
											"end": 3527,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3483,
											"end": 3496,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3515,
											"end": 3520,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 3508,
											"end": 3520,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 3508,
											"end": 3520,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3429,
											"end": 3527,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3429,
											"end": 3527,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5706,
											"end": 5903,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5706,
											"end": 5903,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5789,
											"end": 5793,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1992,
											"end": 2002,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 5843,
											"end": 5875,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 1992,
											"end": 2002,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5859,
											"end": 5866,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5868,
											"end": 5874,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5843,
											"end": 5851,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 5843,
											"end": 5875,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5843,
											"end": 5875,
											"name": "tag",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 5843,
											"end": 5875,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5892,
											"end": 5896,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5885,
											"end": 5896,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5885,
											"end": 5896,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5885,
											"end": 5896,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5706,
											"end": 5903,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 5706,
											"end": 5903,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5706,
											"end": 5903,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5706,
											"end": 5903,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5706,
											"end": 5903,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5706,
											"end": 5903,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5706,
											"end": 5903,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6465,
											"end": 6751,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 6465,
											"end": 6751,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6592,
											"end": 6596,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1992,
											"end": 2002,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 6648,
											"end": 6686,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 6664,
											"end": 6668,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1992,
											"end": 2002,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6679,
											"end": 6685,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6648,
											"end": 6663,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 6648,
											"end": 6686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6648,
											"end": 6686,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 6648,
											"end": 6686,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6696,
											"end": 6723,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 6706,
											"end": 6710,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6712,
											"end": 6714,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6716,
											"end": 6722,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6696,
											"end": 6705,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 6696,
											"end": 6723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6696,
											"end": 6723,
											"name": "tag",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 6696,
											"end": 6723,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6740,
											"end": 6744,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6740,
											"end": 6744,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 6465,
											"end": 6751,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6465,
											"end": 6751,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7146,
											"end": 7380,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 7146,
											"end": 7380,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1992,
											"end": 2002,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 7234,
											"end": 7238,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5364,
											"end": 5382,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5382,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5382,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5375,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5364,
											"end": 5382,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5364,
											"end": 5382,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5382,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5382,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5382,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5364,
											"end": 5382,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5382,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5382,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5382,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5364,
											"end": 5391,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5391,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5391,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5391,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5391,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5391,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5391,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5391,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5391,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5391,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7234,
											"end": 7238,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7234,
											"end": 7238,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1992,
											"end": 2002,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7288,
											"end": 7352,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 7288,
											"end": 7352,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1992,
											"end": 2002,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1992,
											"end": 2002,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5364,
											"end": 5391,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5391,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7313,
											"end": 7351,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 7313,
											"end": 7351,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7341,
											"end": 7351,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7341,
											"end": 7351,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7313,
											"end": 7351,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 7313,
											"end": 7351,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7313,
											"end": 7351,
											"name": "tag",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 7313,
											"end": 7351,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7288,
											"end": 7296,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 7288,
											"end": 7352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3640,
											"end": 3742,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 3640,
											"end": 3742,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3696,
											"end": 3709,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3728,
											"end": 3735,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 3721,
											"end": 3735,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7867,
											"end": 8294,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 7867,
											"end": 8294,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1992,
											"end": 2002,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 7960,
											"end": 7964,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5364,
											"end": 5382,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5382,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5382,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5375,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5364,
											"end": 5382,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5364,
											"end": 5382,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5382,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5382,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5382,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5364,
											"end": 5382,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5382,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5382,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5382,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5364,
											"end": 5391,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5391,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5391,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5391,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5391,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5391,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5391,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5391,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5391,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5391,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7960,
											"end": 7964,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7960,
											"end": 7964,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1992,
											"end": 2002,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8104,
											"end": 8119,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8084,
											"end": 8100,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8084,
											"end": 8119,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 8084,
											"end": 8119,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8076,
											"end": 8161,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 8076,
											"end": 8161,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8076,
											"end": 8161,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8076,
											"end": 8161,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8076,
											"end": 8161,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8076,
											"end": 8161,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8076,
											"end": 8161,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3437,
											"end": 3439,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8076,
											"end": 8161,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 8076,
											"end": 8161,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8076,
											"end": 8161,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3419,
											"end": 3440,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3476,
											"end": 3478,
											"name": "PUSH",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 3456,
											"end": 3474,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 3456,
											"end": 3474,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3456,
											"end": 3474,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3449,
											"end": 3479,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3515,
											"end": 3549,
											"name": "PUSH",
											"source": 5,
											"value": "45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
										},
										{
											"begin": 3495,
											"end": 3513,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 3495,
											"end": 3513,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3495,
											"end": 3513,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3488,
											"end": 3550,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3586,
											"end": 3593,
											"name": "PUSH",
											"source": 5,
											"value": "207A65726F000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3566,
											"end": 3584,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 3566,
											"end": 3584,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3566,
											"end": 3584,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3559,
											"end": 3594,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3611,
											"end": 3630,
											"name": "PUSH",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 3611,
											"end": 3630,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8076,
											"end": 8161,
											"name": "tag",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 8076,
											"end": 8161,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8076,
											"end": 8161,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8076,
											"end": 8161,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8076,
											"end": 8161,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8076,
											"end": 8161,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8076,
											"end": 8161,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8076,
											"end": 8161,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8076,
											"end": 8161,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 8076,
											"end": 8161,
											"name": "tag",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 8076,
											"end": 8161,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8195,
											"end": 8255,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 8204,
											"end": 8209,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8211,
											"end": 8218,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 8239,
											"end": 8254,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 8220,
											"end": 8236,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8220,
											"end": 8254,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8195,
											"end": 8203,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 8195,
											"end": 8255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5002,
											"end": 5191,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 5002,
											"end": 5191,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5081,
											"end": 5085,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1992,
											"end": 2002,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 5135,
											"end": 5163,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 1992,
											"end": 2002,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5152,
											"end": 5154,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5156,
											"end": 5162,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5135,
											"end": 5144,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 5135,
											"end": 5163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11383,
											"end": 11753,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 11383,
											"end": 11753,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11514,
											"end": 11533,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11514,
											"end": 11533,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11514,
											"end": 11533,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11506,
											"end": 11574,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 11506,
											"end": 11574,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11506,
											"end": 11574,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11506,
											"end": 11574,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11506,
											"end": 11574,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11506,
											"end": 11574,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11506,
											"end": 11574,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3843,
											"end": 3845,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 11506,
											"end": 11574,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 11506,
											"end": 11574,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11506,
											"end": 11574,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3825,
											"end": 3846,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3882,
											"end": 3884,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 3862,
											"end": 3880,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3862,
											"end": 3880,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3862,
											"end": 3880,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3855,
											"end": 3885,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3921,
											"end": 3955,
											"name": "PUSH",
											"source": 5,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 3901,
											"end": 3919,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 3901,
											"end": 3919,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3901,
											"end": 3919,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3894,
											"end": 3956,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3992,
											"end": 3998,
											"name": "PUSH",
											"source": 5,
											"value": "7265737300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3972,
											"end": 3990,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 3972,
											"end": 3990,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3972,
											"end": 3990,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3965,
											"end": 3999,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4016,
											"end": 4035,
											"name": "PUSH",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 4016,
											"end": 4035,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11506,
											"end": 11574,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 3641,
											"end": 4041,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11506,
											"end": 11574,
											"name": "tag",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 11506,
											"end": 11574,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11592,
											"end": 11613,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11592,
											"end": 11613,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11592,
											"end": 11613,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11584,
											"end": 11652,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 11584,
											"end": 11652,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11584,
											"end": 11652,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11584,
											"end": 11652,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11584,
											"end": 11652,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11584,
											"end": 11652,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11584,
											"end": 11652,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4248,
											"end": 4250,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 11584,
											"end": 11652,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 11584,
											"end": 11652,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11584,
											"end": 11652,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4230,
											"end": 4251,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4287,
											"end": 4289,
											"name": "PUSH",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 4267,
											"end": 4285,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 4267,
											"end": 4285,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4267,
											"end": 4285,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4260,
											"end": 4290,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4326,
											"end": 4360,
											"name": "PUSH",
											"source": 5,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 4306,
											"end": 4324,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 4306,
											"end": 4324,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4306,
											"end": 4324,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4299,
											"end": 4361,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4397,
											"end": 4401,
											"name": "PUSH",
											"source": 5,
											"value": "7373000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4377,
											"end": 4395,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 4377,
											"end": 4395,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4377,
											"end": 4395,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4370,
											"end": 4402,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4419,
											"end": 4438,
											"name": "PUSH",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 4419,
											"end": 4438,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11584,
											"end": 11652,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 4046,
											"end": 4444,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11584,
											"end": 11652,
											"name": "tag",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 11584,
											"end": 11652,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11663,
											"end": 11681,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11663,
											"end": 11681,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11663,
											"end": 11681,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11663,
											"end": 11681,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11663,
											"end": 11681,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11663,
											"end": 11681,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11663,
											"end": 11681,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11663,
											"end": 11681,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11663,
											"end": 11674,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 11663,
											"end": 11681,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11663,
											"end": 11681,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11663,
											"end": 11681,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11663,
											"end": 11681,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11663,
											"end": 11681,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11663,
											"end": 11681,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11663,
											"end": 11681,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11663,
											"end": 11681,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 11663,
											"end": 11690,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 11663,
											"end": 11690,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 11663,
											"end": 11690,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11663,
											"end": 11690,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11663,
											"end": 11690,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11663,
											"end": 11690,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11663,
											"end": 11690,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 11663,
											"end": 11690,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11663,
											"end": 11690,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11663,
											"end": 11690,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11663,
											"end": 11690,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11663,
											"end": 11690,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11663,
											"end": 11690,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 11663,
											"end": 11699,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 11663,
											"end": 11699,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11663,
											"end": 11699,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 11714,
											"end": 11746,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11714,
											"end": 11746,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1449,
											"end": 1474,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1449,
											"end": 1474,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1449,
											"end": 1474,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 11714,
											"end": 11746,
											"name": "PUSH",
											"source": 1,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 11714,
											"end": 11746,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1422,
											"end": 1440,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11714,
											"end": 11746,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11714,
											"end": 11746,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11714,
											"end": 11746,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11714,
											"end": 11746,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11714,
											"end": 11746,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11714,
											"end": 11746,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11714,
											"end": 11746,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 11383,
											"end": 11753,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11383,
											"end": 11753,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11383,
											"end": 11753,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11383,
											"end": 11753,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12034,
											"end": 12475,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 12034,
											"end": 12475,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5382,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5364,
											"end": 5382,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5382,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5382,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12164,
											"end": 12188,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5364,
											"end": 5382,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5382,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5382,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5375,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5364,
											"end": 5382,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5364,
											"end": 5382,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5382,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5382,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5382,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5364,
											"end": 5382,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5382,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5382,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5391,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5391,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5391,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5391,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5391,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5391,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5391,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5391,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5391,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5391,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 12250,
											"end": 12267,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12230,
											"end": 12267,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12230,
											"end": 12267,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 12226,
											"end": 12469,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 12226,
											"end": 12469,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12311,
											"end": 12317,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12291,
											"end": 12307,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12291,
											"end": 12317,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 12291,
											"end": 12317,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 12283,
											"end": 12351,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 12283,
											"end": 12351,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12283,
											"end": 12351,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12283,
											"end": 12351,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 12283,
											"end": 12351,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12283,
											"end": 12351,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12283,
											"end": 12351,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4651,
											"end": 4653,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 12283,
											"end": 12351,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 12283,
											"end": 12351,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12283,
											"end": 12351,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4633,
											"end": 4654,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4690,
											"end": 4692,
											"name": "PUSH",
											"source": 5,
											"value": "1D"
										},
										{
											"begin": 4670,
											"end": 4688,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 4670,
											"end": 4688,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4670,
											"end": 4688,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4663,
											"end": 4693,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4729,
											"end": 4760,
											"name": "PUSH",
											"source": 5,
											"value": "45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000"
										},
										{
											"begin": 4709,
											"end": 4727,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 4709,
											"end": 4727,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4709,
											"end": 4727,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4702,
											"end": 4761,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4778,
											"end": 4796,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 4778,
											"end": 4796,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12283,
											"end": 12351,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 4449,
											"end": 4802,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12283,
											"end": 12351,
											"name": "tag",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 12283,
											"end": 12351,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12393,
											"end": 12444,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 12402,
											"end": 12407,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 12409,
											"end": 12416,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 12437,
											"end": 12443,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 12418,
											"end": 12434,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 12418,
											"end": 12443,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 12393,
											"end": 12401,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 12393,
											"end": 12444,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12393,
											"end": 12444,
											"name": "tag",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 12393,
											"end": 12444,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12154,
											"end": 12475,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12034,
											"end": 12475,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12034,
											"end": 12475,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12034,
											"end": 12475,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12034,
											"end": 12475,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8748,
											"end": 9399,
											"name": "tag",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 8748,
											"end": 9399,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8874,
											"end": 8892,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8874,
											"end": 8892,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8874,
											"end": 8892,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8866,
											"end": 8934,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 8866,
											"end": 8934,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8866,
											"end": 8934,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8866,
											"end": 8934,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8866,
											"end": 8934,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8866,
											"end": 8934,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8866,
											"end": 8934,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5009,
											"end": 5011,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8866,
											"end": 8934,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 8866,
											"end": 8934,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8866,
											"end": 8934,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4991,
											"end": 5012,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5048,
											"end": 5050,
											"name": "PUSH",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 5028,
											"end": 5046,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 5028,
											"end": 5046,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5028,
											"end": 5046,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5021,
											"end": 5051,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5087,
											"end": 5121,
											"name": "PUSH",
											"source": 5,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 5067,
											"end": 5085,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 5067,
											"end": 5085,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5067,
											"end": 5085,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5060,
											"end": 5122,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5158,
											"end": 5165,
											"name": "PUSH",
											"source": 5,
											"value": "6472657373000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5138,
											"end": 5156,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 5138,
											"end": 5156,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5138,
											"end": 5156,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5131,
											"end": 5166,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5183,
											"end": 5202,
											"name": "PUSH",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 5183,
											"end": 5202,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8866,
											"end": 8934,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 4807,
											"end": 5208,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8866,
											"end": 8934,
											"name": "tag",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 8866,
											"end": 8934,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8952,
											"end": 8968,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8952,
											"end": 8968,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8952,
											"end": 8968,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8944,
											"end": 9008,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 8944,
											"end": 9008,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8944,
											"end": 9008,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8944,
											"end": 9008,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8944,
											"end": 9008,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8944,
											"end": 9008,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8944,
											"end": 9008,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5415,
											"end": 5417,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8944,
											"end": 9008,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 8944,
											"end": 9008,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8944,
											"end": 9008,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5397,
											"end": 5418,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5454,
											"end": 5456,
											"name": "PUSH",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 5434,
											"end": 5452,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 5434,
											"end": 5452,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5434,
											"end": 5452,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5427,
											"end": 5457,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5493,
											"end": 5527,
											"name": "PUSH",
											"source": 5,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 5473,
											"end": 5491,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 5473,
											"end": 5491,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5473,
											"end": 5491,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5466,
											"end": 5528,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5564,
											"end": 5569,
											"name": "PUSH",
											"source": 5,
											"value": "6573730000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5544,
											"end": 5562,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 5544,
											"end": 5562,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5544,
											"end": 5562,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5537,
											"end": 5570,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5587,
											"end": 5606,
											"name": "PUSH",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 5587,
											"end": 5606,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8944,
											"end": 9008,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 5213,
											"end": 5612,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8944,
											"end": 9008,
											"name": "tag",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 8944,
											"end": 9008,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9090,
											"end": 9105,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9090,
											"end": 9105,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9090,
											"end": 9105,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9068,
											"end": 9087,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9090,
											"end": 9105,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9090,
											"end": 9105,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9090,
											"end": 9105,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9090,
											"end": 9105,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9090,
											"end": 9105,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9090,
											"end": 9105,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9090,
											"end": 9105,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9090,
											"end": 9105,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9090,
											"end": 9105,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9090,
											"end": 9105,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 9090,
											"end": 9105,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 9123,
											"end": 9144,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9123,
											"end": 9144,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9123,
											"end": 9144,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 9123,
											"end": 9144,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 9115,
											"end": 9187,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 9115,
											"end": 9187,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9115,
											"end": 9187,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9115,
											"end": 9187,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9115,
											"end": 9187,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9115,
											"end": 9187,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9115,
											"end": 9187,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5819,
											"end": 5821,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9115,
											"end": 9187,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9115,
											"end": 9187,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9115,
											"end": 9187,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5801,
											"end": 5822,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5858,
											"end": 5860,
											"name": "PUSH",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 5838,
											"end": 5856,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 5838,
											"end": 5856,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5838,
											"end": 5856,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5831,
											"end": 5861,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5897,
											"end": 5931,
											"name": "PUSH",
											"source": 5,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732062"
										},
										{
											"begin": 5877,
											"end": 5895,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 5877,
											"end": 5895,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5877,
											"end": 5895,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5870,
											"end": 5932,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5968,
											"end": 5976,
											"name": "PUSH",
											"source": 5,
											"value": "616C616E63650000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5948,
											"end": 5966,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 5948,
											"end": 5966,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5948,
											"end": 5966,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5941,
											"end": 5977,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5994,
											"end": 6013,
											"name": "PUSH",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 5994,
											"end": 6013,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9115,
											"end": 9187,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 5617,
											"end": 6019,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9115,
											"end": 9187,
											"name": "tag",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 9115,
											"end": 9187,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9221,
											"end": 9236,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9221,
											"end": 9236,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9221,
											"end": 9236,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9221,
											"end": 9236,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9221,
											"end": 9230,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9221,
											"end": 9236,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9221,
											"end": 9236,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9221,
											"end": 9236,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9221,
											"end": 9236,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9221,
											"end": 9236,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9221,
											"end": 9236,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9221,
											"end": 9236,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9221,
											"end": 9236,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9221,
											"end": 9236,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9221,
											"end": 9236,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9221,
											"end": 9236,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 9239,
											"end": 9259,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9239,
											"end": 9259,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9239,
											"end": 9259,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9221,
											"end": 9259,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9221,
											"end": 9259,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 9279,
											"end": 9292,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9279,
											"end": 9292,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9279,
											"end": 9292,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9279,
											"end": 9292,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9279,
											"end": 9292,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9279,
											"end": 9292,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9279,
											"end": 9292,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9279,
											"end": 9292,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 9279,
											"end": 9302,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9279,
											"end": 9302,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 9253,
											"end": 9259,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9253,
											"end": 9259,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9221,
											"end": 9230,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9279,
											"end": 9302,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 9279,
											"end": 9302,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9253,
											"end": 9259,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9253,
											"end": 9259,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9279,
											"end": 9302,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 9279,
											"end": 9302,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9279,
											"end": 9302,
											"name": "tag",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 9279,
											"end": 9302,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9279,
											"end": 9302,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9279,
											"end": 9302,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9279,
											"end": 9302,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9279,
											"end": 9302,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9279,
											"end": 9302,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9279,
											"end": 9302,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 9279,
											"end": 9302,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9333,
											"end": 9335,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9318,
											"end": 9344,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9318,
											"end": 9344,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9327,
											"end": 9331,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9318,
											"end": 9344,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9318,
											"end": 9344,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9318,
											"end": 9344,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 9337,
											"end": 9343,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9318,
											"end": 9344,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9318,
											"end": 9344,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9318,
											"end": 9344,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 9318,
											"end": 9344,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1449,
											"end": 1474,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1449,
											"end": 1474,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1437,
											"end": 1439,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1422,
											"end": 1440,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1422,
											"end": 1440,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1303,
											"end": 1480,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9318,
											"end": 9344,
											"name": "tag",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 9318,
											"end": 9344,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9318,
											"end": 9344,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9318,
											"end": 9344,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9318,
											"end": 9344,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9318,
											"end": 9344,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9318,
											"end": 9344,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9318,
											"end": 9344,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9318,
											"end": 9344,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 9355,
											"end": 9392,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 13059,
											"end": 13180,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 600,
											"name": "tag",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 14,
											"end": 600,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 163,
											"end": 165,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 152,
											"end": 161,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 145,
											"end": 166,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 195,
											"end": 201,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 189,
											"end": 202,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 238,
											"end": 244,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 233,
											"end": 235,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 222,
											"end": 231,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 218,
											"end": 236,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 211,
											"end": 245,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 263,
											"end": 264,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 273,
											"end": 413,
											"name": "tag",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 273,
											"end": 413,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 287,
											"end": 293,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 284,
											"end": 285,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 281,
											"end": 294,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 273,
											"end": 413,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 273,
											"end": 413,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 273,
											"end": 413,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 398,
											"end": 400,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 382,
											"end": 396,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 382,
											"end": 396,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 382,
											"end": 396,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 378,
											"end": 401,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 378,
											"end": 401,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 372,
											"end": 402,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 367,
											"end": 369,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 348,
											"end": 365,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 348,
											"end": 365,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 348,
											"end": 365,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 344,
											"end": 370,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 337,
											"end": 403,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 302,
											"end": 312,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 273,
											"end": 413,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 273,
											"end": 413,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 273,
											"end": 413,
											"name": "tag",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 273,
											"end": 413,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 277,
											"end": 280,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 462,
											"end": 463,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 457,
											"end": 459,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 448,
											"end": 454,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 437,
											"end": 446,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 433,
											"end": 455,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 429,
											"end": 460,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 422,
											"end": 464,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 591,
											"end": 593,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 521,
											"end": 587,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0"
										},
										{
											"begin": 516,
											"end": 518,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 508,
											"end": 514,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 504,
											"end": 519,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 500,
											"end": 588,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 489,
											"end": 498,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 485,
											"end": 589,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 481,
											"end": 594,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 473,
											"end": 594,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 473,
											"end": 594,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 473,
											"end": 594,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14,
											"end": 600,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 14,
											"end": 600,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 14,
											"end": 600,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14,
											"end": 600,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14,
											"end": 600,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 605,
											"end": 801,
											"name": "tag",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 605,
											"end": 801,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 673,
											"end": 693,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 673,
											"end": 693,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 733,
											"end": 775,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 722,
											"end": 776,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 722,
											"end": 776,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 712,
											"end": 777,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 712,
											"end": 777,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 702,
											"end": 795,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 702,
											"end": 795,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 791,
											"end": 792,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 788,
											"end": 789,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 781,
											"end": 793,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 702,
											"end": 795,
											"name": "tag",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 702,
											"end": 795,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 605,
											"end": 801,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 605,
											"end": 801,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 605,
											"end": 801,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 605,
											"end": 801,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 806,
											"end": 1106,
											"name": "tag",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 806,
											"end": 1106,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 874,
											"end": 880,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 882,
											"end": 888,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 935,
											"end": 937,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 923,
											"end": 932,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 914,
											"end": 921,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 910,
											"end": 933,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 906,
											"end": 938,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 903,
											"end": 955,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 903,
											"end": 955,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 903,
											"end": 955,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 951,
											"end": 952,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 948,
											"end": 949,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 941,
											"end": 953,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 903,
											"end": 955,
											"name": "tag",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 903,
											"end": 955,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 974,
											"end": 1003,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 993,
											"end": 1002,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 974,
											"end": 1003,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 974,
											"end": 1003,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 974,
											"end": 1003,
											"name": "tag",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 974,
											"end": 1003,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 964,
											"end": 1003,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 1072,
											"end": 1074,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1057,
											"end": 1075,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1057,
											"end": 1075,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1057,
											"end": 1075,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1057,
											"end": 1075,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1044,
											"end": 1076,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 1044,
											"end": 1076,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 806,
											"end": 1106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1485,
											"end": 1859,
											"name": "tag",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 1485,
											"end": 1859,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1562,
											"end": 1568,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1570,
											"end": 1576,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1578,
											"end": 1584,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1631,
											"end": 1633,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 1619,
											"end": 1628,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1610,
											"end": 1617,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1606,
											"end": 1629,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1602,
											"end": 1634,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1599,
											"end": 1651,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1599,
											"end": 1651,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 1599,
											"end": 1651,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1647,
											"end": 1648,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1644,
											"end": 1645,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1637,
											"end": 1649,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1599,
											"end": 1651,
											"name": "tag",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 1599,
											"end": 1651,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1670,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 1689,
											"end": 1698,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1670,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 1670,
											"end": 1699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1670,
											"end": 1699,
											"name": "tag",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 1670,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1660,
											"end": 1699,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1660,
											"end": 1699,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1718,
											"end": 1756,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 1752,
											"end": 1754,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1741,
											"end": 1750,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1737,
											"end": 1755,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1718,
											"end": 1756,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 1718,
											"end": 1756,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1718,
											"end": 1756,
											"name": "tag",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 1718,
											"end": 1756,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1485,
											"end": 1859,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1485,
											"end": 1859,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 1708,
											"end": 1756,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1708,
											"end": 1756,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1825,
											"end": 1827,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1810,
											"end": 1828,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1810,
											"end": 1828,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1810,
											"end": 1828,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1810,
											"end": 1828,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1797,
											"end": 1829,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 1797,
											"end": 1829,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1485,
											"end": 1859,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2239,
											"name": "tag",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 2053,
											"end": 2239,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2112,
											"end": 2118,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2165,
											"end": 2167,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2153,
											"end": 2162,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2144,
											"end": 2151,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2140,
											"end": 2163,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2136,
											"end": 2168,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 2133,
											"end": 2185,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2133,
											"end": 2185,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 2133,
											"end": 2185,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2181,
											"end": 2182,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2178,
											"end": 2179,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2171,
											"end": 2183,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2133,
											"end": 2185,
											"name": "tag",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 2133,
											"end": 2185,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2204,
											"end": 2233,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 2223,
											"end": 2232,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2204,
											"end": 2233,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 2204,
											"end": 2233,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2204,
											"end": 2233,
											"name": "tag",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 2204,
											"end": 2233,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2194,
											"end": 2233,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2239,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2053,
											"end": 2239,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2244,
											"end": 2504,
											"name": "tag",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 2244,
											"end": 2504,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2312,
											"end": 2318,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2320,
											"end": 2326,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2373,
											"end": 2375,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2361,
											"end": 2370,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2352,
											"end": 2359,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2348,
											"end": 2371,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2344,
											"end": 2376,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 2341,
											"end": 2393,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2341,
											"end": 2393,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 2341,
											"end": 2393,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2389,
											"end": 2390,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2386,
											"end": 2387,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2379,
											"end": 2391,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2341,
											"end": 2393,
											"name": "tag",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 2341,
											"end": 2393,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2412,
											"end": 2441,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 2431,
											"end": 2440,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2412,
											"end": 2441,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 2412,
											"end": 2441,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2412,
											"end": 2441,
											"name": "tag",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 2412,
											"end": 2441,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2402,
											"end": 2441,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2402,
											"end": 2441,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2460,
											"end": 2498,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 2494,
											"end": 2496,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2483,
											"end": 2492,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2479,
											"end": 2497,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2460,
											"end": 2498,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 2460,
											"end": 2498,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2460,
											"end": 2498,
											"name": "tag",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 2460,
											"end": 2498,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2450,
											"end": 2498,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2450,
											"end": 2498,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2244,
											"end": 2504,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2244,
											"end": 2504,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2244,
											"end": 2504,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2244,
											"end": 2504,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2244,
											"end": 2504,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2244,
											"end": 2504,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2509,
											"end": 2946,
											"name": "tag",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 2509,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2588,
											"end": 2589,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2584,
											"end": 2596,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2584,
											"end": 2596,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2584,
											"end": 2596,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 2584,
											"end": 2596,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2631,
											"end": 2643,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2631,
											"end": 2643,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2631,
											"end": 2643,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2652,
											"end": 2713,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 2652,
											"end": 2713,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2706,
											"end": 2710,
											"name": "PUSH",
											"source": 5,
											"value": "7F"
										},
										{
											"begin": 2698,
											"end": 2704,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2694,
											"end": 2711,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2684,
											"end": 2711,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2684,
											"end": 2711,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2652,
											"end": 2713,
											"name": "tag",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 2652,
											"end": 2713,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2759,
											"end": 2761,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2751,
											"end": 2757,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2748,
											"end": 2762,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 2728,
											"end": 2746,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2725,
											"end": 2763,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2722,
											"end": 2940,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 2722,
											"end": 2940,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2796,
											"end": 2873,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2793,
											"end": 2794,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2786,
											"end": 2874,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2897,
											"end": 2901,
											"name": "PUSH",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 2894,
											"end": 2895,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2887,
											"end": 2902,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2925,
											"end": 2929,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 2922,
											"end": 2923,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2915,
											"end": 2930,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2722,
											"end": 2940,
											"name": "tag",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 2722,
											"end": 2940,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2722,
											"end": 2940,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2509,
											"end": 2946,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2509,
											"end": 2946,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2509,
											"end": 2946,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2509,
											"end": 2946,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2951,
											"end": 3230,
											"name": "tag",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 2951,
											"end": 3230,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3016,
											"end": 3025,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3016,
											"end": 3025,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3016,
											"end": 3025,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3037,
											"end": 3047,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3037,
											"end": 3047,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3037,
											"end": 3047,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 3034,
											"end": 3224,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3034,
											"end": 3224,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 3034,
											"end": 3224,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3080,
											"end": 3157,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3077,
											"end": 3078,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3070,
											"end": 3158,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3181,
											"end": 3185,
											"name": "PUSH",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 3178,
											"end": 3179,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3171,
											"end": 3186,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3209,
											"end": 3213,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 3206,
											"end": 3207,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3199,
											"end": 3214,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"simple-token(copy)(copy)/simple-token.sol",
								"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"simple-token/@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"simple-token/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"simple-token/@openzeppelin/contracts/utils/Context.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28-nightly.2024.10.2+commit.256e9528\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":5000000},\"remappings\":[]},\"sources\":{\"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xd313527bf68e0ee9c175a30d7e8cd5fd7def33e6e8e496468f9df112c2c76514\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c341254272e3693e1c255983dede9908224d58b42b573ffdf3a6bcd646553bec\",\"dweb:/ipfs/QmbE7JTjZCvazLeVYJPjY2FKs6b27YGMkYKaSTsNBPbdBk\"]},\"simple-token/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc61f8ffb10277281595872a49be00f4c58f55080c5a2ed9c2eb57a99a4c43d86\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://686de33d3059962bf83f3480b635402d68369297837b98733ecb7f6603e00dcd\",\"dweb:/ipfs/QmbdGx98jVXUSxwzbLpV3cQRzS7Pxbm4esxYP8kvtPfEc8\"]},\"simple-token/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x2016abf3d4656313ca73fc34f567844028899002129a23941fb59e05f79520c7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://109c16cd3ad0c3ff47c9d4f094d63072d45d34c6e40bb24936441ba7b2724d70\",\"dweb:/ipfs/QmYwbc5Kno1zWwDWVppDNgFgJeUavSF8H3zaHXr2hyahJs\"]},\"simple-token/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x9fbdf4b7a61bf731d34121173466348ea5448932facf54b0ffa3cbcb171e7f40\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f9efc8dd1bf3d406de0485d3eb249263c8d87b7c74f6eef13d0fb0889808792e\",\"dweb:/ipfs/QmaonHVxmrnDSkBQayhNS2A6XeX32pG8fHVEPLQZYwTh8U\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 43,
								"contract": "simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 49,
								"contract": "simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 51,
								"contract": "simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 53,
								"contract": "simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 55,
								"contract": "simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"simple-token/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28-nightly.2024.10.2+commit.256e9528\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"simple-token/@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":5000000},\"remappings\":[]},\"sources\":{\"simple-token/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc61f8ffb10277281595872a49be00f4c58f55080c5a2ed9c2eb57a99a4c43d86\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://686de33d3059962bf83f3480b635402d68369297837b98733ecb7f6603e00dcd\",\"dweb:/ipfs/QmbdGx98jVXUSxwzbLpV3cQRzS7Pxbm4esxYP8kvtPfEc8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"simple-token/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28-nightly.2024.10.2+commit.256e9528\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"simple-token/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":5000000},\"remappings\":[]},\"sources\":{\"simple-token/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc61f8ffb10277281595872a49be00f4c58f55080c5a2ed9c2eb57a99a4c43d86\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://686de33d3059962bf83f3480b635402d68369297837b98733ecb7f6603e00dcd\",\"dweb:/ipfs/QmbdGx98jVXUSxwzbLpV3cQRzS7Pxbm4esxYP8kvtPfEc8\"]},\"simple-token/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x2016abf3d4656313ca73fc34f567844028899002129a23941fb59e05f79520c7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://109c16cd3ad0c3ff47c9d4f094d63072d45d34c6e40bb24936441ba7b2724d70\",\"dweb:/ipfs/QmYwbc5Kno1zWwDWVppDNgFgJeUavSF8H3zaHXr2hyahJs\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"simple-token/@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28-nightly.2024.10.2+commit.256e9528\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"simple-token/@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":5000000},\"remappings\":[]},\"sources\":{\"simple-token/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x9fbdf4b7a61bf731d34121173466348ea5448932facf54b0ffa3cbcb171e7f40\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f9efc8dd1bf3d406de0485d3eb249263c8d87b7c74f6eef13d0fb0889808792e\",\"dweb:/ipfs/QmaonHVxmrnDSkBQayhNS2A6XeX32pG8fHVEPLQZYwTh8U\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "3805",
				"formattedMessage": "Warning: This is a pre-release compiler version, please do not use it in production.\n\n",
				"message": "This is a pre-release compiler version, please do not use it in production.",
				"severity": "warning",
				"type": "Warning"
			}
		],
		"sources": {
			"simple-token(copy)(copy)/simple-token.sol": {
				"ast": {
					"absolutePath": "simple-token(copy)(copy)/simple-token.sol",
					"exportedSymbols": {
						"Context": [
							738
						],
						"ERC20": [
							613
						],
						"FixedToken": [
							27
						],
						"IERC20": [
							691
						],
						"IERC20Metadata": [
							716
						]
					},
					"id": 28,
					"license": "UNLICENSED",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".10"
							],
							"nodeType": "PragmaDirective",
							"src": "1313:24:0"
						},
						{
							"absolutePath": "simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 28,
							"sourceUnit": 614,
							"src": "1339:68:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "ERC20",
										"nameLocations": [
											"1923:5:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 613,
										"src": "1923:5:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "1923:5:0"
								}
							],
							"canonicalName": "FixedToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "1409:489:0",
								"text": " @title Simple Token\n @author Breakthrough Labs Inc.\n @notice Token, ERC20, Fixed Supply\n @custom:version 1.0.7\n @custom:address 4\n @custom:default-precision 18\n @custom:simple-description Simple Token. A fixed supply is minted on deployment, and\n new tokens can never be created.\n @dev ERC20 token with the following features:\n  - Premint your total supply.\n  - No minting function. This allows users to comfortably know the future supply of the token."
							},
							"fullyImplemented": true,
							"id": 27,
							"linearizedBaseContracts": [
								27,
								613,
								716,
								691,
								738
							],
							"name": "FixedToken",
							"nameLocation": "1909:10:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 25,
										"nodeType": "Block",
										"src": "2187:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 20,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2203:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 21,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2207:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2203:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 22,
															"name": "totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 12,
															"src": "2215:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 19,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 430,
														"src": "2197:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 23,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2197:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 24,
												"nodeType": "ExpressionStatement",
												"src": "2197:30:0"
											}
										]
									},
									"documentation": {
										"id": 6,
										"nodeType": "StructuredDocumentation",
										"src": "1935:114:0",
										"text": " @param name Token Name\n @param symbol Token Symbol\n @param totalSupply Token Supply"
									},
									"id": 26,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 15,
													"name": "name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "2173:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												{
													"id": 16,
													"name": "symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 10,
													"src": "2179:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												}
											],
											"id": 17,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 14,
												"name": "ERC20",
												"nameLocations": [
													"2167:5:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 613,
												"src": "2167:5:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2167:19:0"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "2089:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "2075:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 7,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2075:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 10,
												"mutability": "mutable",
												"name": "symbol",
												"nameLocation": "2117:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "2103:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 9,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2103:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 12,
												"mutability": "mutable",
												"name": "totalSupply",
												"nameLocation": "2141:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "2133:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 11,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2133:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2065:93:0"
									},
									"returnParameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2187:0:0"
									},
									"scope": 27,
									"src": "2054:180:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 28,
							"src": "1900:336:0",
							"usedErrors": [],
							"usedEvents": [
								625,
								634
							]
						}
					],
					"src": "1313:925:0"
				},
				"id": 0
			},
			"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							738
						],
						"ERC20": [
							613
						],
						"IERC20": [
							691
						],
						"IERC20Metadata": [
							716
						]
					},
					"id": 614,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 29,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "1378:23:1"
						},
						{
							"absolutePath": "simple-token/@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 30,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 614,
							"sourceUnit": 692,
							"src": "1403:22:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "simple-token/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 31,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 614,
							"sourceUnit": 717,
							"src": "1426:41:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "simple-token/@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 32,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 614,
							"sourceUnit": 739,
							"src": "1468:33:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 34,
										"name": "Context",
										"nameLocations": [
											"2694:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 738,
										"src": "2694:7:1"
									},
									"id": 35,
									"nodeType": "InheritanceSpecifier",
									"src": "2694:7:1"
								},
								{
									"baseName": {
										"id": 36,
										"name": "IERC20",
										"nameLocations": [
											"2703:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 691,
										"src": "2703:6:1"
									},
									"id": 37,
									"nodeType": "InheritanceSpecifier",
									"src": "2703:6:1"
								},
								{
									"baseName": {
										"id": 38,
										"name": "IERC20Metadata",
										"nameLocations": [
											"2711:14:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 716,
										"src": "2711:14:1"
									},
									"id": 39,
									"nodeType": "InheritanceSpecifier",
									"src": "2711:14:1"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 33,
								"nodeType": "StructuredDocumentation",
								"src": "1503:1172:1",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."
							},
							"fullyImplemented": true,
							"id": 613,
							"linearizedBaseContracts": [
								613,
								716,
								691,
								738
							],
							"name": "ERC20",
							"nameLocation": "2685:5:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 43,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "2768:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 613,
									"src": "2732:45:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 42,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 40,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2740:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2732:27:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 41,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "2751:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 49,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "2840:11:1",
									"nodeType": "VariableDeclaration",
									"scope": 613,
									"src": "2784:67:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 48,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 44,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2792:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2784:47:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 47,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 45,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2811:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "2803:27:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 46,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2822:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 51,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "2874:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 613,
									"src": "2858:28:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 50,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2858:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 53,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "2908:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 613,
									"src": "2893:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 52,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "2893:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 55,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "2934:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 613,
									"src": "2919:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 54,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "2919:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 71,
										"nodeType": "Block",
										"src": "3307:57:1",
										"statements": [
											{
												"expression": {
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 63,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 53,
														"src": "3317:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 64,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 58,
														"src": "3325:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "3317:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 66,
												"nodeType": "ExpressionStatement",
												"src": "3317:13:1"
											},
											{
												"expression": {
													"id": 69,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 67,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 55,
														"src": "3340:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 68,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 60,
														"src": "3350:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "3340:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 70,
												"nodeType": "ExpressionStatement",
												"src": "3340:17:1"
											}
										]
									},
									"documentation": {
										"id": 56,
										"nodeType": "StructuredDocumentation",
										"src": "2948:298:1",
										"text": " @dev Sets the values for {name} and {symbol}.\n The default value of {decimals} is 18. To select a different value for\n {decimals} you should overload it.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 72,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 61,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 58,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "3277:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "3263:19:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 57,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3263:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 60,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "3298:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "3284:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 59,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3284:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3262:44:1"
									},
									"returnParameters": {
										"id": 62,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3307:0:1"
									},
									"scope": 613,
									"src": "3251:113:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										703
									],
									"body": {
										"id": 81,
										"nodeType": "Block",
										"src": "3498:29:1",
										"statements": [
											{
												"expression": {
													"id": 79,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 53,
													"src": "3515:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 78,
												"id": 80,
												"nodeType": "Return",
												"src": "3508:12:1"
											}
										]
									},
									"documentation": {
										"id": 73,
										"nodeType": "StructuredDocumentation",
										"src": "3370:54:1",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 82,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "3438:4:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 75,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3465:8:1"
									},
									"parameters": {
										"id": 74,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3442:2:1"
									},
									"returnParameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 77,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 82,
												"src": "3483:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 76,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3483:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3482:15:1"
									},
									"scope": 613,
									"src": "3429:98:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										709
									],
									"body": {
										"id": 91,
										"nodeType": "Block",
										"src": "3711:31:1",
										"statements": [
											{
												"expression": {
													"id": 89,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 55,
													"src": "3728:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 88,
												"id": 90,
												"nodeType": "Return",
												"src": "3721:14:1"
											}
										]
									},
									"documentation": {
										"id": 83,
										"nodeType": "StructuredDocumentation",
										"src": "3533:102:1",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 92,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "3649:6:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 85,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3678:8:1"
									},
									"parameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3655:2:1"
									},
									"returnParameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 87,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 92,
												"src": "3696:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 86,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3696:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3695:15:1"
									},
									"scope": 613,
									"src": "3640:102:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										715
									],
									"body": {
										"id": 101,
										"nodeType": "Block",
										"src": "4431:26:1",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 99,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4448:2:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 98,
												"id": 100,
												"nodeType": "Return",
												"src": "4441:9:1"
											}
										]
									},
									"documentation": {
										"id": 93,
										"nodeType": "StructuredDocumentation",
										"src": "3748:613:1",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless this function is\n overridden;\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 102,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "4375:8:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 95,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4406:8:1"
									},
									"parameters": {
										"id": 94,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4383:2:1"
									},
									"returnParameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 102,
												"src": "4424:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 96,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "4424:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4423:7:1"
									},
									"scope": 613,
									"src": "4366:91:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										640
									],
									"body": {
										"id": 111,
										"nodeType": "Block",
										"src": "4587:36:1",
										"statements": [
											{
												"expression": {
													"id": 109,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 51,
													"src": "4604:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 108,
												"id": 110,
												"nodeType": "Return",
												"src": "4597:19:1"
											}
										]
									},
									"documentation": {
										"id": 103,
										"nodeType": "StructuredDocumentation",
										"src": "4463:49:1",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 112,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "4526:11:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 105,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4560:8:1"
									},
									"parameters": {
										"id": 104,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4537:2:1"
									},
									"returnParameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "4578:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 106,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4578:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4577:9:1"
									},
									"scope": 613,
									"src": "4517:106:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										648
									],
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "4764:42:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 121,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 43,
														"src": "4781:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 123,
													"indexExpression": {
														"id": 122,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 115,
														"src": "4791:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4781:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 120,
												"id": 124,
												"nodeType": "Return",
												"src": "4774:25:1"
											}
										]
									},
									"documentation": {
										"id": 113,
										"nodeType": "StructuredDocumentation",
										"src": "4629:47:1",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "4690:9:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 117,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4737:8:1"
									},
									"parameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 115,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4708:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "4700:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 114,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4700:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4699:17:1"
									},
									"returnParameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 119,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "4755:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 118,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4755:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4754:9:1"
									},
									"scope": 613,
									"src": "4681:125:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										658
									],
									"body": {
										"id": 150,
										"nodeType": "Block",
										"src": "5087:104:1",
										"statements": [
											{
												"assignments": [
													138
												],
												"declarations": [
													{
														"constant": false,
														"id": 138,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "5105:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 150,
														"src": "5097:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 137,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5097:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 141,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 139,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 728,
														"src": "5113:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 140,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5113:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5097:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 143,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 138,
															"src": "5145:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 144,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "5152:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 145,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 131,
															"src": "5156:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 142,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 374,
														"src": "5135:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 146,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5135:28:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 147,
												"nodeType": "ExpressionStatement",
												"src": "5135:28:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 148,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5180:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 136,
												"id": 149,
												"nodeType": "Return",
												"src": "5173:11:1"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "4812:185:1",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
									},
									"functionSelector": "a9059cbb",
									"id": 151,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "5011:8:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 133,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5063:8:1"
									},
									"parameters": {
										"id": 132,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5028:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 151,
												"src": "5020:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5020:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5040:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 151,
												"src": "5032:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5032:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5019:28:1"
									},
									"returnParameters": {
										"id": 136,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 151,
												"src": "5081:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 134,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5081:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5080:6:1"
									},
									"scope": 613,
									"src": "5002:189:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										668
									],
									"body": {
										"id": 168,
										"nodeType": "Block",
										"src": "5347:51:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 162,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 49,
															"src": "5364:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 164,
														"indexExpression": {
															"id": 163,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 154,
															"src": "5376:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "5364:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 166,
													"indexExpression": {
														"id": 165,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 156,
														"src": "5383:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5364:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 161,
												"id": 167,
												"nodeType": "Return",
												"src": "5357:34:1"
											}
										]
									},
									"documentation": {
										"id": 152,
										"nodeType": "StructuredDocumentation",
										"src": "5197:47:1",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 169,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "5258:9:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 158,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5320:8:1"
									},
									"parameters": {
										"id": 157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 154,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5276:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "5268:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 153,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5268:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 156,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5291:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "5283:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 155,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5283:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5267:32:1"
									},
									"returnParameters": {
										"id": 161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 160,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "5338:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 159,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5338:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5337:9:1"
									},
									"scope": 613,
									"src": "5249:149:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										678
									],
									"body": {
										"id": 193,
										"nodeType": "Block",
										"src": "5795:108:1",
										"statements": [
											{
												"assignments": [
													181
												],
												"declarations": [
													{
														"constant": false,
														"id": 181,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "5813:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 193,
														"src": "5805:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 180,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5805:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 184,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 182,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 728,
														"src": "5821:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 183,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5821:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5805:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 186,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 181,
															"src": "5852:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 187,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 172,
															"src": "5859:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 188,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 174,
															"src": "5868:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 185,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 547,
														"src": "5843:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5843:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 190,
												"nodeType": "ExpressionStatement",
												"src": "5843:32:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 191,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5892:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 179,
												"id": 192,
												"nodeType": "Return",
												"src": "5885:11:1"
											}
										]
									},
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "5404:297:1",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 194,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "5715:7:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 176,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5771:8:1"
									},
									"parameters": {
										"id": 175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5731:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 194,
												"src": "5723:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5723:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5748:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 194,
												"src": "5740:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5740:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5722:33:1"
									},
									"returnParameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 194,
												"src": "5789:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 177,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5789:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5788:6:1"
									},
									"scope": 613,
									"src": "5706:197:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										690
									],
									"body": {
										"id": 226,
										"nodeType": "Block",
										"src": "6598:153:1",
										"statements": [
											{
												"assignments": [
													208
												],
												"declarations": [
													{
														"constant": false,
														"id": 208,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "6616:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 226,
														"src": "6608:15:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 207,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6608:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 211,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 209,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 728,
														"src": "6626:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 210,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6626:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6608:30:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 213,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 197,
															"src": "6664:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 214,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 208,
															"src": "6670:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 215,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 201,
															"src": "6679:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 212,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 590,
														"src": "6648:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 216,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6648:38:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 217,
												"nodeType": "ExpressionStatement",
												"src": "6648:38:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 219,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 197,
															"src": "6706:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 220,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 199,
															"src": "6712:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 221,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 201,
															"src": "6716:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 218,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 374,
														"src": "6696:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 222,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6696:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 223,
												"nodeType": "ExpressionStatement",
												"src": "6696:27:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 224,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6740:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 206,
												"id": 225,
												"nodeType": "Return",
												"src": "6733:11:1"
											}
										]
									},
									"documentation": {
										"id": 195,
										"nodeType": "StructuredDocumentation",
										"src": "5909:551:1",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`.\n - the caller must have allowance for ``from``'s tokens of at least\n `amount`."
									},
									"functionSelector": "23b872dd",
									"id": 227,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "6474:12:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 203,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "6574:8:1"
									},
									"parameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6504:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "6496:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6496:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6526:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "6518:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 198,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6518:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6546:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "6538:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 200,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6538:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6486:72:1"
									},
									"returnParameters": {
										"id": 206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "6592:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 204,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6592:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6591:6:1"
									},
									"scope": 613,
									"src": "6465:286:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 255,
										"nodeType": "Block",
										"src": "7240:140:1",
										"statements": [
											{
												"assignments": [
													238
												],
												"declarations": [
													{
														"constant": false,
														"id": 238,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "7258:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 255,
														"src": "7250:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 237,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "7250:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 241,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 239,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 728,
														"src": "7266:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 240,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7266:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7250:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 243,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 238,
															"src": "7297:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 244,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 230,
															"src": "7304:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 250,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 246,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 238,
																		"src": "7323:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 247,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 230,
																		"src": "7330:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 245,
																	"name": "allowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "7313:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address,address) view returns (uint256)"
																	}
																},
																"id": 248,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7313:25:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 249,
																"name": "addedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 232,
																"src": "7341:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7313:38:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 242,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 547,
														"src": "7288:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 251,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7288:64:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 252,
												"nodeType": "ExpressionStatement",
												"src": "7288:64:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 253,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "7369:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 236,
												"id": 254,
												"nodeType": "Return",
												"src": "7362:11:1"
											}
										]
									},
									"documentation": {
										"id": 228,
										"nodeType": "StructuredDocumentation",
										"src": "6757:384:1",
										"text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "39509351",
									"id": 256,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nameLocation": "7155:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 233,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "7181:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "7173:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 229,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7173:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 232,
												"mutability": "mutable",
												"name": "addedValue",
												"nameLocation": "7198:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "7190:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 231,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7190:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7172:37:1"
									},
									"returnParameters": {
										"id": 236,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 235,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "7234:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 234,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7234:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7233:6:1"
									},
									"scope": 613,
									"src": "7146:234:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 296,
										"nodeType": "Block",
										"src": "7966:328:1",
										"statements": [
											{
												"assignments": [
													267
												],
												"declarations": [
													{
														"constant": false,
														"id": 267,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "7984:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 296,
														"src": "7976:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 266,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "7976:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 270,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 268,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 728,
														"src": "7992:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 269,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7992:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7976:28:1"
											},
											{
												"assignments": [
													272
												],
												"declarations": [
													{
														"constant": false,
														"id": 272,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "8022:16:1",
														"nodeType": "VariableDeclaration",
														"scope": 296,
														"src": "8014:24:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 271,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8014:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 277,
												"initialValue": {
													"arguments": [
														{
															"id": 274,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 267,
															"src": "8051:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 275,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 259,
															"src": "8058:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 273,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 169,
														"src": "8041:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8041:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8014:52:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 281,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 279,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 272,
																"src": "8084:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 280,
																"name": "subtractedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 261,
																"src": "8104:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8084:35:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
															"id": 282,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8121:39:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															},
															"value": "ERC20: decreased allowance below zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															}
														],
														"id": 278,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8076:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 283,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8076:85:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 284,
												"nodeType": "ExpressionStatement",
												"src": "8076:85:1"
											},
											{
												"id": 293,
												"nodeType": "UncheckedBlock",
												"src": "8171:95:1",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 286,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 267,
																	"src": "8204:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 287,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 259,
																	"src": "8211:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 290,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 288,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 272,
																		"src": "8220:16:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 289,
																		"name": "subtractedValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 261,
																		"src": "8239:15:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8220:34:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 285,
																"name": "_approve",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 547,
																"src": "8195:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (address,address,uint256)"
																}
															},
															"id": 291,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8195:60:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 292,
														"nodeType": "ExpressionStatement",
														"src": "8195:60:1"
													}
												]
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 294,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8283:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 265,
												"id": 295,
												"nodeType": "Return",
												"src": "8276:11:1"
											}
										]
									},
									"documentation": {
										"id": 257,
										"nodeType": "StructuredDocumentation",
										"src": "7386:476:1",
										"text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
									},
									"functionSelector": "a457c2d7",
									"id": 297,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nameLocation": "7876:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "7902:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "7894:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 258,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7894:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nameLocation": "7919:15:1",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "7911:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 260,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7911:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7893:42:1"
									},
									"returnParameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "7960:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 263,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7960:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7959:6:1"
									},
									"scope": 613,
									"src": "7867:427:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 373,
										"nodeType": "Block",
										"src": "8856:543:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 313,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 308,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 300,
																"src": "8874:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 311,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8890:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 310,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8882:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 309,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8882:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 312,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8882:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8874:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 314,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8894:39:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															},
															"value": "ERC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															}
														],
														"id": 307,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8866:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 315,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8866:68:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 316,
												"nodeType": "ExpressionStatement",
												"src": "8866:68:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 323,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 318,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 302,
																"src": "8952:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 321,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8966:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 320,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8958:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 319,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8958:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 322,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8958:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8952:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 324,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8970:37:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 317,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8944:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 325,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8944:64:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 326,
												"nodeType": "ExpressionStatement",
												"src": "8944:64:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 328,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 300,
															"src": "9040:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 329,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 302,
															"src": "9046:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 330,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 304,
															"src": "9050:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 327,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 601,
														"src": "9019:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 331,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9019:38:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 332,
												"nodeType": "ExpressionStatement",
												"src": "9019:38:1"
											},
											{
												"assignments": [
													334
												],
												"declarations": [
													{
														"constant": false,
														"id": 334,
														"mutability": "mutable",
														"name": "fromBalance",
														"nameLocation": "9076:11:1",
														"nodeType": "VariableDeclaration",
														"scope": 373,
														"src": "9068:19:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 333,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9068:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 338,
												"initialValue": {
													"baseExpression": {
														"id": 335,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 43,
														"src": "9090:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 337,
													"indexExpression": {
														"id": 336,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 300,
														"src": "9100:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9090:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9068:37:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 342,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 340,
																"name": "fromBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 334,
																"src": "9123:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 341,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 304,
																"src": "9138:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9123:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
															"id": 343,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9146:40:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															},
															"value": "ERC20: transfer amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															}
														],
														"id": 339,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9115:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 344,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9115:72:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 345,
												"nodeType": "ExpressionStatement",
												"src": "9115:72:1"
											},
											{
												"id": 354,
												"nodeType": "UncheckedBlock",
												"src": "9197:73:1",
												"statements": [
													{
														"expression": {
															"id": 352,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 346,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 43,
																	"src": "9221:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 348,
																"indexExpression": {
																	"id": 347,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 300,
																	"src": "9231:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "9221:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 351,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 349,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 334,
																	"src": "9239:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 350,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 304,
																	"src": "9253:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9239:20:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9221:38:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 353,
														"nodeType": "ExpressionStatement",
														"src": "9221:38:1"
													}
												]
											},
											{
												"expression": {
													"id": 359,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 355,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 43,
															"src": "9279:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 357,
														"indexExpression": {
															"id": 356,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 302,
															"src": "9289:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9279:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 358,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 304,
														"src": "9296:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9279:23:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 360,
												"nodeType": "ExpressionStatement",
												"src": "9279:23:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 362,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 300,
															"src": "9327:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 363,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 302,
															"src": "9333:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 364,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 304,
															"src": "9337:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 361,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 625,
														"src": "9318:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 365,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9318:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 366,
												"nodeType": "EmitStatement",
												"src": "9313:31:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 368,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 300,
															"src": "9375:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 369,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 302,
															"src": "9381:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 370,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 304,
															"src": "9385:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 367,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 612,
														"src": "9355:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 371,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9355:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 372,
												"nodeType": "ExpressionStatement",
												"src": "9355:37:1"
											}
										]
									},
									"documentation": {
										"id": 298,
										"nodeType": "StructuredDocumentation",
										"src": "8300:443:1",
										"text": " @dev Moves `amount` of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`."
									},
									"id": 374,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "8757:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 305,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 300,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "8784:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 374,
												"src": "8776:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 299,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8776:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 302,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8806:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 374,
												"src": "8798:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 301,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8798:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 304,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8826:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 374,
												"src": "8818:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 303,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8818:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8766:72:1"
									},
									"returnParameters": {
										"id": 306,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8856:0:1"
									},
									"scope": 613,
									"src": "8748:651:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 429,
										"nodeType": "Block",
										"src": "9740:324:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 388,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 383,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 377,
																"src": "9758:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 386,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9777:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 385,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9769:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 384,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9769:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 387,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9769:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9758:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 389,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9781:33:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															},
															"value": "ERC20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															}
														],
														"id": 382,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9750:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 390,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9750:65:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 391,
												"nodeType": "ExpressionStatement",
												"src": "9750:65:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 395,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9855:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 394,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9847:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 393,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9847:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 396,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9847:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 397,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 377,
															"src": "9859:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 398,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 379,
															"src": "9868:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 392,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 601,
														"src": "9826:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 399,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9826:49:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 400,
												"nodeType": "ExpressionStatement",
												"src": "9826:49:1"
											},
											{
												"expression": {
													"id": 403,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 401,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 51,
														"src": "9886:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 402,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 379,
														"src": "9902:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9886:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 404,
												"nodeType": "ExpressionStatement",
												"src": "9886:22:1"
											},
											{
												"expression": {
													"id": 409,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 405,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 43,
															"src": "9918:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 407,
														"indexExpression": {
															"id": 406,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 377,
															"src": "9928:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9918:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 408,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 379,
														"src": "9940:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9918:28:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 410,
												"nodeType": "ExpressionStatement",
												"src": "9918:28:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 414,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9978:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 413,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9970:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 412,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9970:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 415,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9970:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 416,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 377,
															"src": "9982:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 417,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 379,
															"src": "9991:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 411,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 625,
														"src": "9961:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 418,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9961:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 419,
												"nodeType": "EmitStatement",
												"src": "9956:42:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 423,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10037:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 422,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10029:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 421,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10029:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 424,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10029:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 425,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 377,
															"src": "10041:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 426,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 379,
															"src": "10050:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 420,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 612,
														"src": "10009:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 427,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10009:48:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 428,
												"nodeType": "ExpressionStatement",
												"src": "10009:48:1"
											}
										]
									},
									"documentation": {
										"id": 375,
										"nodeType": "StructuredDocumentation",
										"src": "9405:265:1",
										"text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."
									},
									"id": 430,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "9684:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 380,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 377,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "9698:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 430,
												"src": "9690:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 376,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9690:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 379,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "9715:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 430,
												"src": "9707:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 378,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9707:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9689:33:1"
									},
									"returnParameters": {
										"id": 381,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9740:0:1"
									},
									"scope": 613,
									"src": "9675:389:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 501,
										"nodeType": "Block",
										"src": "10449:511:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 444,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 439,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 433,
																"src": "10467:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 442,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10486:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 441,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10478:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 440,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10478:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 443,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10478:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10467:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 445,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10490:35:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															},
															"value": "ERC20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															}
														],
														"id": 438,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10459:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 446,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10459:67:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 447,
												"nodeType": "ExpressionStatement",
												"src": "10459:67:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 449,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 433,
															"src": "10558:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 452,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10575:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 451,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10567:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 450,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10567:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 453,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10567:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 454,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 435,
															"src": "10579:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 448,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 601,
														"src": "10537:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10537:49:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 456,
												"nodeType": "ExpressionStatement",
												"src": "10537:49:1"
											},
											{
												"assignments": [
													458
												],
												"declarations": [
													{
														"constant": false,
														"id": 458,
														"mutability": "mutable",
														"name": "accountBalance",
														"nameLocation": "10605:14:1",
														"nodeType": "VariableDeclaration",
														"scope": 501,
														"src": "10597:22:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 457,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10597:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 462,
												"initialValue": {
													"baseExpression": {
														"id": 459,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 43,
														"src": "10622:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 461,
													"indexExpression": {
														"id": 460,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 433,
														"src": "10632:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "10622:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10597:43:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 466,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 464,
																"name": "accountBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 458,
																"src": "10658:14:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 465,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 435,
																"src": "10676:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10658:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
															"id": 467,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10684:36:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															},
															"value": "ERC20: burn amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															}
														],
														"id": 463,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10650:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 468,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10650:71:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 469,
												"nodeType": "ExpressionStatement",
												"src": "10650:71:1"
											},
											{
												"id": 478,
												"nodeType": "UncheckedBlock",
												"src": "10731:79:1",
												"statements": [
													{
														"expression": {
															"id": 476,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 470,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 43,
																	"src": "10755:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 472,
																"indexExpression": {
																	"id": 471,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 433,
																	"src": "10765:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "10755:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 475,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 473,
																	"name": "accountBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 458,
																	"src": "10776:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 474,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 435,
																	"src": "10793:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10776:23:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10755:44:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 477,
														"nodeType": "ExpressionStatement",
														"src": "10755:44:1"
													}
												]
											},
											{
												"expression": {
													"id": 481,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 479,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 51,
														"src": "10819:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 480,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 435,
														"src": "10835:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10819:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 482,
												"nodeType": "ExpressionStatement",
												"src": "10819:22:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 484,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 433,
															"src": "10866:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 487,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10883:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 486,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10875:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 485,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10875:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 488,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10875:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 489,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 435,
															"src": "10887:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 483,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 625,
														"src": "10857:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 490,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10857:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 491,
												"nodeType": "EmitStatement",
												"src": "10852:42:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 493,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 433,
															"src": "10925:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 496,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10942:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 495,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10934:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 494,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10934:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 497,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10934:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 498,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 435,
															"src": "10946:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 492,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 612,
														"src": "10905:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 499,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10905:48:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 500,
												"nodeType": "ExpressionStatement",
												"src": "10905:48:1"
											}
										]
									},
									"documentation": {
										"id": 431,
										"nodeType": "StructuredDocumentation",
										"src": "10070:309:1",
										"text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
									},
									"id": 502,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "10393:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 436,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 433,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "10407:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 502,
												"src": "10399:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 432,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10399:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 435,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10424:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 502,
												"src": "10416:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 434,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10416:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10398:33:1"
									},
									"returnParameters": {
										"id": 437,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10449:0:1"
									},
									"scope": 613,
									"src": "10384:576:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 546,
										"nodeType": "Block",
										"src": "11496:257:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 518,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 513,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 505,
																"src": "11514:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 516,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11531:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 515,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11523:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 514,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "11523:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 517,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11523:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "11514:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 519,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11535:38:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															},
															"value": "ERC20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															}
														],
														"id": 512,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11506:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 520,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11506:68:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 521,
												"nodeType": "ExpressionStatement",
												"src": "11506:68:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 528,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 523,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 507,
																"src": "11592:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 526,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11611:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 525,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11603:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 524,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "11603:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 527,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11603:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "11592:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 529,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11615:36:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															},
															"value": "ERC20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															}
														],
														"id": 522,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11584:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 530,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11584:68:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 531,
												"nodeType": "ExpressionStatement",
												"src": "11584:68:1"
											},
											{
												"expression": {
													"id": 538,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 532,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 49,
																"src": "11663:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 535,
															"indexExpression": {
																"id": 533,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 505,
																"src": "11675:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "11663:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 536,
														"indexExpression": {
															"id": 534,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 507,
															"src": "11682:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11663:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 537,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 509,
														"src": "11693:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11663:36:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 539,
												"nodeType": "ExpressionStatement",
												"src": "11663:36:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 541,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 505,
															"src": "11723:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 542,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 507,
															"src": "11730:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 543,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 509,
															"src": "11739:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 540,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 634,
														"src": "11714:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11714:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 545,
												"nodeType": "EmitStatement",
												"src": "11709:37:1"
											}
										]
									},
									"documentation": {
										"id": 503,
										"nodeType": "StructuredDocumentation",
										"src": "10966:412:1",
										"text": " @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
									},
									"id": 547,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "11392:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 510,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 505,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "11418:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 547,
												"src": "11410:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 504,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11410:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 507,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "11441:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 547,
												"src": "11433:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 506,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11433:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 509,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "11466:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 547,
												"src": "11458:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 508,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11458:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11400:78:1"
									},
									"returnParameters": {
										"id": 511,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11496:0:1"
									},
									"scope": 613,
									"src": "11383:370:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 589,
										"nodeType": "Block",
										"src": "12154:321:1",
										"statements": [
											{
												"assignments": [
													558
												],
												"declarations": [
													{
														"constant": false,
														"id": 558,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "12172:16:1",
														"nodeType": "VariableDeclaration",
														"scope": 589,
														"src": "12164:24:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 557,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12164:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 563,
												"initialValue": {
													"arguments": [
														{
															"id": 560,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 550,
															"src": "12201:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 561,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 552,
															"src": "12208:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 559,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 169,
														"src": "12191:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 562,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12191:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12164:52:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 570,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 564,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 558,
														"src": "12230:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 567,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "12255:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 566,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "12255:7:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 565,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "12250:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 568,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12250:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 569,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "12264:3:1",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "12250:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12230:37:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 588,
												"nodeType": "IfStatement",
												"src": "12226:243:1",
												"trueBody": {
													"id": 587,
													"nodeType": "Block",
													"src": "12269:200:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 574,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 572,
																			"name": "currentAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 558,
																			"src": "12291:16:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 573,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 554,
																			"src": "12311:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "12291:26:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"id": 575,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12319:31:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																			"typeString": "literal_string \"ERC20: insufficient allowance\""
																		},
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																			"typeString": "literal_string \"ERC20: insufficient allowance\""
																		}
																	],
																	"id": 571,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "12283:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 576,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12283:68:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 577,
															"nodeType": "ExpressionStatement",
															"src": "12283:68:1"
														},
														{
															"id": 586,
															"nodeType": "UncheckedBlock",
															"src": "12365:94:1",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 579,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 550,
																				"src": "12402:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 580,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 552,
																				"src": "12409:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 583,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 581,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 558,
																					"src": "12418:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 582,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 554,
																					"src": "12437:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12418:25:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 578,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 547,
																			"src": "12393:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																				"typeString": "function (address,address,uint256)"
																			}
																		},
																		"id": 584,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12393:51:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 585,
																	"nodeType": "ExpressionStatement",
																	"src": "12393:51:1"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 548,
										"nodeType": "StructuredDocumentation",
										"src": "11759:270:1",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n Does not update the allowance amount in case of infinite allowance.\n Revert if not enough allowance is available.\n Might emit an {Approval} event."
									},
									"id": 590,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "12043:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 555,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 550,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "12076:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 590,
												"src": "12068:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 549,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12068:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 552,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "12099:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 590,
												"src": "12091:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 551,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12091:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 554,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "12124:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 590,
												"src": "12116:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 553,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12116:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12058:78:1"
									},
									"returnParameters": {
										"id": 556,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12154:0:1"
									},
									"scope": 613,
									"src": "12034:441:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 600,
										"nodeType": "Block",
										"src": "13178:2:1",
										"statements": []
									},
									"documentation": {
										"id": 591,
										"nodeType": "StructuredDocumentation",
										"src": "12481:573:1",
										"text": " @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 601,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "13068:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 598,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 593,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13106:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 601,
												"src": "13098:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 592,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13098:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 595,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13128:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 601,
												"src": "13120:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 594,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13120:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 597,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "13148:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 601,
												"src": "13140:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 596,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13140:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13088:72:1"
									},
									"returnParameters": {
										"id": 599,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13178:0:1"
									},
									"scope": 613,
									"src": "13059:121:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 611,
										"nodeType": "Block",
										"src": "13886:2:1",
										"statements": []
									},
									"documentation": {
										"id": 602,
										"nodeType": "StructuredDocumentation",
										"src": "13186:577:1",
										"text": " @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 612,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfer",
									"nameLocation": "13777:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 609,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 604,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13814:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 612,
												"src": "13806:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 603,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13806:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 606,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13836:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 612,
												"src": "13828:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 605,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13828:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 608,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "13856:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 612,
												"src": "13848:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 607,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13848:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13796:72:1"
									},
									"returnParameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13886:0:1"
									},
									"scope": 613,
									"src": "13768:120:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 614,
							"src": "2676:11214:1",
							"usedErrors": [],
							"usedEvents": [
								625,
								634
							]
						}
					],
					"src": "1378:12513:1"
				},
				"id": 1
			},
			"simple-token/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "simple-token/@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							691
						]
					},
					"id": 692,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 615,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "1379:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 616,
								"nodeType": "StructuredDocumentation",
								"src": "1404:70:2",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 691,
							"linearizedBaseContracts": [
								691
							],
							"name": "IERC20",
							"nameLocation": "1485:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 617,
										"nodeType": "StructuredDocumentation",
										"src": "1498:158:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 625,
									"name": "Transfer",
									"nameLocation": "1667:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 624,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 619,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1692:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 625,
												"src": "1676:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 618,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1676:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 621,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1714:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 625,
												"src": "1698:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 620,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1698:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 623,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1726:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 625,
												"src": "1718:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 622,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1718:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1675:57:2"
									},
									"src": "1661:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 626,
										"nodeType": "StructuredDocumentation",
										"src": "1739:148:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 634,
									"name": "Approval",
									"nameLocation": "1898:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 633,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 628,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1923:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 634,
												"src": "1907:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 627,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1907:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 630,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1946:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 634,
												"src": "1930:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 629,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1930:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 632,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1963:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 634,
												"src": "1955:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 631,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1955:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1906:63:2"
									},
									"src": "1892:78:2"
								},
								{
									"documentation": {
										"id": 635,
										"nodeType": "StructuredDocumentation",
										"src": "1976:66:2",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 640,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2056:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 636,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2067:2:2"
									},
									"returnParameters": {
										"id": 639,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 638,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "2093:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 637,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2093:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2092:9:2"
									},
									"scope": 691,
									"src": "2047:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 641,
										"nodeType": "StructuredDocumentation",
										"src": "2108:72:2",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 648,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "2194:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 644,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 643,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2212:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 648,
												"src": "2204:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 642,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2204:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2203:17:2"
									},
									"returnParameters": {
										"id": 647,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 646,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 648,
												"src": "2244:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 645,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2244:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2243:9:2"
									},
									"scope": 691,
									"src": "2185:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 649,
										"nodeType": "StructuredDocumentation",
										"src": "2259:202:2",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 658,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "2475:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 654,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 651,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2492:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 658,
												"src": "2484:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 650,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2484:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 653,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2504:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 658,
												"src": "2496:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 652,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2496:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2483:28:2"
									},
									"returnParameters": {
										"id": 657,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 656,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 658,
												"src": "2530:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 655,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2530:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2529:6:2"
									},
									"scope": 691,
									"src": "2466:70:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 659,
										"nodeType": "StructuredDocumentation",
										"src": "2542:264:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 668,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "2820:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 664,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 661,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2838:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 668,
												"src": "2830:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 660,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2830:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 663,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2853:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 668,
												"src": "2845:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 662,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2845:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2829:32:2"
									},
									"returnParameters": {
										"id": 667,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 666,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 668,
												"src": "2885:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 665,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2885:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2884:9:2"
									},
									"scope": 691,
									"src": "2811:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 669,
										"nodeType": "StructuredDocumentation",
										"src": "2900:642:2",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 678,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3556:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 674,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 671,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3572:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 678,
												"src": "3564:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 670,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3564:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 673,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3589:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 678,
												"src": "3581:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 672,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3581:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3563:33:2"
									},
									"returnParameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 678,
												"src": "3615:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 675,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3615:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3614:6:2"
									},
									"scope": 691,
									"src": "3547:74:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 679,
										"nodeType": "StructuredDocumentation",
										"src": "3627:287:2",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 690,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3928:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 686,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3958:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "3950:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 680,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3950:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 683,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3980:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "3972:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 682,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3972:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 685,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4000:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "3992:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 684,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3992:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3940:72:2"
									},
									"returnParameters": {
										"id": 689,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 688,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "4031:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 687,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4031:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4030:6:2"
									},
									"scope": 691,
									"src": "3919:118:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 692,
							"src": "1475:2564:2",
							"usedErrors": [],
							"usedEvents": [
								625,
								634
							]
						}
					],
					"src": "1379:2661:2"
				},
				"id": 2
			},
			"simple-token/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "simple-token/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							691
						],
						"IERC20Metadata": [
							716
						]
					},
					"id": 717,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 693,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "1383:23:3"
						},
						{
							"absolutePath": "simple-token/@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 694,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 717,
							"sourceUnit": 692,
							"src": "1408:23:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 696,
										"name": "IERC20",
										"nameLocations": [
											"1578:6:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 691,
										"src": "1578:6:3"
									},
									"id": 697,
									"nodeType": "InheritanceSpecifier",
									"src": "1578:6:3"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 695,
								"nodeType": "StructuredDocumentation",
								"src": "1433:116:3",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"
							},
							"fullyImplemented": false,
							"id": 716,
							"linearizedBaseContracts": [
								716,
								691
							],
							"name": "IERC20Metadata",
							"nameLocation": "1560:14:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 698,
										"nodeType": "StructuredDocumentation",
										"src": "1591:54:3",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 703,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1659:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 699,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1663:2:3"
									},
									"returnParameters": {
										"id": 702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 701,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 703,
												"src": "1689:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 700,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1689:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1688:15:3"
									},
									"scope": 716,
									"src": "1650:54:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 704,
										"nodeType": "StructuredDocumentation",
										"src": "1710:56:3",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 709,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1780:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 705,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1786:2:3"
									},
									"returnParameters": {
										"id": 708,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 707,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 709,
												"src": "1812:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 706,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1812:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1811:15:3"
									},
									"scope": 716,
									"src": "1771:56:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 710,
										"nodeType": "StructuredDocumentation",
										"src": "1833:65:3",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 715,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "1912:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 711,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1920:2:3"
									},
									"returnParameters": {
										"id": 714,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 713,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 715,
												"src": "1946:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 712,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1946:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1945:7:3"
									},
									"scope": 716,
									"src": "1903:50:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 717,
							"src": "1550:405:3",
							"usedErrors": [],
							"usedEvents": [
								625,
								634
							]
						}
					],
					"src": "1383:573:3"
				},
				"id": 3
			},
			"simple-token/@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "simple-token/@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							738
						]
					},
					"id": 739,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 718,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "1359:23:4"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 719,
								"nodeType": "StructuredDocumentation",
								"src": "1384:496:4",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 738,
							"linearizedBaseContracts": [
								738
							],
							"name": "Context",
							"nameLocation": "1899:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 727,
										"nodeType": "Block",
										"src": "1975:34:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 724,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1992:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 725,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1996:6:4",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "1992:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 723,
												"id": 726,
												"nodeType": "Return",
												"src": "1985:17:4"
											}
										]
									},
									"id": 728,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "1922:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 720,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1932:2:4"
									},
									"returnParameters": {
										"id": 723,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 722,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "1966:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 721,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1966:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1965:9:4"
									},
									"scope": 738,
									"src": "1913:96:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 736,
										"nodeType": "Block",
										"src": "2082:32:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 733,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "2099:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 734,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2103:4:4",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "2099:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 732,
												"id": 735,
												"nodeType": "Return",
												"src": "2092:15:4"
											}
										]
									},
									"id": 737,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "2024:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 729,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2032:2:4"
									},
									"returnParameters": {
										"id": 732,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 731,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 737,
												"src": "2066:14:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 730,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2066:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2065:16:4"
									},
									"scope": 738,
									"src": "2015:99:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 739,
							"src": "1881:235:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "1359:758:4"
				},
				"id": 4
			}
		}
	}
}